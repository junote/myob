{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"wiki # aes linux # fw # hw # cpp # cmake python # tools # [[git_prj]] win # quick_Key fpga #","title":"Home"},{"location":"#wiki","text":"aes","title":"wiki"},{"location":"#linux","text":"","title":"linux"},{"location":"#fw","text":"","title":"fw"},{"location":"#hw","text":"","title":"hw"},{"location":"#cpp","text":"cmake","title":"cpp"},{"location":"#python","text":"","title":"python"},{"location":"#tools","text":"[[git_prj]]","title":"tools"},{"location":"#win","text":"quick_Key","title":"win"},{"location":"#fpga","text":"","title":"fpga"},{"location":"book/efficient_at_linux_command_line/","text":"","title":"Efficient at linux command line"},{"location":"book/%E5%9F%BA%E4%BA%8EYANG%E7%9A%84%E5%8F%AF%E7%BC%96%E7%A8%8B%E7%BD%91%E7%BB%9C/","text":"YANG\uff08Yet Another Next Generation\uff09\u6570\u636e\u5efa\u6a21\u8bed\u8a00\u529f\u80fd\u5f3a\u5927\uff0c\u652f\u6301\u5b9a\u4e49\u5217\u8868\u3001\u5b57\u5178\u751a\u81f3\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8fd8\u652f\u6301\u7ea6\u675f\u3001\u679a\u4e3e\u3001\u5f15\u7528\u5bfc\u5165\u3001\u7248\u672c\u7ba1\u7406\u3001\u547d\u540d\u7a7a\u95f4\u7b49\u3002YANG\u6a21\u578b\u7528\u7ed3\u6784\u5316\u8bed\u8a00\u63cf\u8ff0\u4e86\u7f51\u7edc\u4e16\u754c\uff0c\u5728\u65b0\u7684\u7f51\u7ba1\u534f\u8bae\uff08NETCONF\u3001RESTCONF\u3001gRPC\u3001gNMI\u7b49\uff09\u7684\u57fa\u7840\u4e0a\u5b9a\u4e49\u4e86\u6570\u636e\u7ed3\u6784\u3002 CLI # CLI\u662f\u4e00\u4e2a\u7528\u4e8e\u914d\u7f6e\u548c\u76d1\u63a7\u7f51\u5143\u7684\u63a5\u53e3\uff0c\u4e13\u4e3a\u7528\u6237\u8bbe\u8ba1\uff0c\u53ef\u4ee5\u901a\u8fc7\u989d\u5916\u7684\u7a7a\u683c\u6216\u6dfb\u52a0\u7684\u9017\u53f7\uff0c\u751a\u81f3\u7528\u5b50\u83dc\u5355\u6ee1\u8db3\u5176\u9700\u6c42\u3002 \u5728\u5de5\u5177\u65b9\u9762\uff0c\u6709\u5927\u91cf\u7684\u5e93\u548c\u5de5\u5177\u4e0eCLI\u4ea4\u4e92\u3002\u9664\u4e86Expect\u4e4b\u5916\uff0c\u8fd8\u5b58\u5728\u8bf8\u5982Python\u4e2d\u7684Paramiko\u3001Ansible, Puppet, Chef SNMP # \u7b80\u5355\u7f51\u7edc\u7ba1\u7406\u534f\u8bae\uff08SNMP\uff09\u662fIETF\u6307\u5b9a\u7684\u534f\u8bae\u3002 MIB\u662f\u9a7b\u7559\u5728SNMP\u4ee3\u7406\u865a\u62df\u4fe1\u606f\u5b58\u50a8\u4e2d\u7684\u7ba1\u7406\u5bf9\u8c61\u7684\u96c6\u5408\u3002\u5728\u7279\u5b9a\u7684MIB\u6a21\u5757\u4e2d\u5b9a\u4e49\u4e86\u76f8\u5173\u7ba1\u7406\u5bf9\u8c61\u7684\u96c6\u5408\u3002 \u2018 SNMP\u89c4\u8303\u80cc\u540e\u7684\u601d\u60f3\u662f\u5f00\u53d1\u4e00\u4e2a\u7528\u4e8e\u914d\u7f6e\u548c\u76d1\u89c6\u8bbe\u5907\u4e0e\u7f51\u7edc\u7684\u901a\u7528\u534f\u8bae\uff0c\u6709\u6548\u5730\u6db5\u76d6FCAP\u7684\u591a\u4e2a\u65b9\u9762\uff0c\u800c\u5bf9\u5b89\u5168\u6027\u201cS\u201d\u5219\u5206\u5f00\u5bf9\u5f85\u3002 NetFlow\u548cIPFIX # \u9009\u62e9\u4e00\u4e2a\u534f\u8bae\uff0c\u901a\u8fc7\u8be5\u534f\u8bae\u53ef\u5c06IP\u6d41\u4fe1\u606f\u4ece\u2018\u5bfc\u51fa\u5668\u2019\u53ca\u65f6\u4f20\u8f93\u5230\u4e00\u4e2a\u6216\u591a\u4e2a\u6536\u96c6\u7ad9\uff0c\u5e76\u5b9a\u4e49\u4f7f\u7528\u8be5\u534f\u8bae\u7684\u67b6\u6784\u3002\u534f\u8bae\u5fc5\u987b\u5728IETF\u6279\u51c6\u7684\u62e5\u585e\u611f\u77e5\u4f20\u8f93\u534f\u8bae\uff08\u4f8b\u5982TCP\u6216SCTP\uff09\u4e0a\u8fd0\u884c\u3002 IPFIX\u5e7f\u6cdb\u90e8\u7f72\u5728\u6d41\u91cf\u76d1\u63a7\u9886\u57df\uff0c\u7528\u4e8e\u5bb9\u91cf\u89c4\u5212\u3001\u5b89\u5168\u76d1\u63a7\u3001\u5e94\u7528\u53d1\u73b0\u6216\u4ec5\u7528\u4e8e\u57fa\u4e8e\u6d41\u91cf\u7684\u8ba1\u8d39\u3002NetFlow\u8ba1\u91cf\u6d41\u7a0b\u5177\u6709\u7075\u6d3b\u6027\uff0c\u80fd\u591f\u9009\u62e9\u4efb\u4f55IPFIX\u4fe1\u606f\u5143\u7d20\u4f5c\u4e3akey\u5b57\u6bb5\u6216non-key\u5b57\u6bb5\uff0c\u4ece\u800c\u521b\u5efa\u591a\u4e2a\u7528\u4e8e\u90e8\u7f72IPFIX\u7684\u4f7f\u7528\u6848\u4f8b\u3002 syslog # syslog\u662f20\u4e16\u7eaa80\u5e74\u4ee3\u5f00\u53d1\u7684\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u751f\u6210\u65e5\u5fd7\uff0c\u4f7f\u8f6f\u4ef6\u5b50\u7cfb\u7edf\u80fd\u591f\u672c\u5730\u6216\u8fdc\u7a0b\u62a5\u544a\u548c\u4fdd\u5b58\u91cd\u8981\u7684\u9519\u8bef\u6d88\u606f","title":"\u57fa\u4e8eYANG\u7684\u53ef\u7f16\u7a0b\u7f51\u7edc"},{"location":"book/%E5%9F%BA%E4%BA%8EYANG%E7%9A%84%E5%8F%AF%E7%BC%96%E7%A8%8B%E7%BD%91%E7%BB%9C/#cli","text":"CLI\u662f\u4e00\u4e2a\u7528\u4e8e\u914d\u7f6e\u548c\u76d1\u63a7\u7f51\u5143\u7684\u63a5\u53e3\uff0c\u4e13\u4e3a\u7528\u6237\u8bbe\u8ba1\uff0c\u53ef\u4ee5\u901a\u8fc7\u989d\u5916\u7684\u7a7a\u683c\u6216\u6dfb\u52a0\u7684\u9017\u53f7\uff0c\u751a\u81f3\u7528\u5b50\u83dc\u5355\u6ee1\u8db3\u5176\u9700\u6c42\u3002 \u5728\u5de5\u5177\u65b9\u9762\uff0c\u6709\u5927\u91cf\u7684\u5e93\u548c\u5de5\u5177\u4e0eCLI\u4ea4\u4e92\u3002\u9664\u4e86Expect\u4e4b\u5916\uff0c\u8fd8\u5b58\u5728\u8bf8\u5982Python\u4e2d\u7684Paramiko\u3001Ansible, Puppet, Chef","title":"CLI"},{"location":"book/%E5%9F%BA%E4%BA%8EYANG%E7%9A%84%E5%8F%AF%E7%BC%96%E7%A8%8B%E7%BD%91%E7%BB%9C/#snmp","text":"\u7b80\u5355\u7f51\u7edc\u7ba1\u7406\u534f\u8bae\uff08SNMP\uff09\u662fIETF\u6307\u5b9a\u7684\u534f\u8bae\u3002 MIB\u662f\u9a7b\u7559\u5728SNMP\u4ee3\u7406\u865a\u62df\u4fe1\u606f\u5b58\u50a8\u4e2d\u7684\u7ba1\u7406\u5bf9\u8c61\u7684\u96c6\u5408\u3002\u5728\u7279\u5b9a\u7684MIB\u6a21\u5757\u4e2d\u5b9a\u4e49\u4e86\u76f8\u5173\u7ba1\u7406\u5bf9\u8c61\u7684\u96c6\u5408\u3002 \u2018 SNMP\u89c4\u8303\u80cc\u540e\u7684\u601d\u60f3\u662f\u5f00\u53d1\u4e00\u4e2a\u7528\u4e8e\u914d\u7f6e\u548c\u76d1\u89c6\u8bbe\u5907\u4e0e\u7f51\u7edc\u7684\u901a\u7528\u534f\u8bae\uff0c\u6709\u6548\u5730\u6db5\u76d6FCAP\u7684\u591a\u4e2a\u65b9\u9762\uff0c\u800c\u5bf9\u5b89\u5168\u6027\u201cS\u201d\u5219\u5206\u5f00\u5bf9\u5f85\u3002","title":"SNMP"},{"location":"book/%E5%9F%BA%E4%BA%8EYANG%E7%9A%84%E5%8F%AF%E7%BC%96%E7%A8%8B%E7%BD%91%E7%BB%9C/#netflow\u548cipfix","text":"\u9009\u62e9\u4e00\u4e2a\u534f\u8bae\uff0c\u901a\u8fc7\u8be5\u534f\u8bae\u53ef\u5c06IP\u6d41\u4fe1\u606f\u4ece\u2018\u5bfc\u51fa\u5668\u2019\u53ca\u65f6\u4f20\u8f93\u5230\u4e00\u4e2a\u6216\u591a\u4e2a\u6536\u96c6\u7ad9\uff0c\u5e76\u5b9a\u4e49\u4f7f\u7528\u8be5\u534f\u8bae\u7684\u67b6\u6784\u3002\u534f\u8bae\u5fc5\u987b\u5728IETF\u6279\u51c6\u7684\u62e5\u585e\u611f\u77e5\u4f20\u8f93\u534f\u8bae\uff08\u4f8b\u5982TCP\u6216SCTP\uff09\u4e0a\u8fd0\u884c\u3002 IPFIX\u5e7f\u6cdb\u90e8\u7f72\u5728\u6d41\u91cf\u76d1\u63a7\u9886\u57df\uff0c\u7528\u4e8e\u5bb9\u91cf\u89c4\u5212\u3001\u5b89\u5168\u76d1\u63a7\u3001\u5e94\u7528\u53d1\u73b0\u6216\u4ec5\u7528\u4e8e\u57fa\u4e8e\u6d41\u91cf\u7684\u8ba1\u8d39\u3002NetFlow\u8ba1\u91cf\u6d41\u7a0b\u5177\u6709\u7075\u6d3b\u6027\uff0c\u80fd\u591f\u9009\u62e9\u4efb\u4f55IPFIX\u4fe1\u606f\u5143\u7d20\u4f5c\u4e3akey\u5b57\u6bb5\u6216non-key\u5b57\u6bb5\uff0c\u4ece\u800c\u521b\u5efa\u591a\u4e2a\u7528\u4e8e\u90e8\u7f72IPFIX\u7684\u4f7f\u7528\u6848\u4f8b\u3002","title":"NetFlow\u548cIPFIX"},{"location":"book/%E5%9F%BA%E4%BA%8EYANG%E7%9A%84%E5%8F%AF%E7%BC%96%E7%A8%8B%E7%BD%91%E7%BB%9C/#syslog","text":"syslog\u662f20\u4e16\u7eaa80\u5e74\u4ee3\u5f00\u53d1\u7684\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u751f\u6210\u65e5\u5fd7\uff0c\u4f7f\u8f6f\u4ef6\u5b50\u7cfb\u7edf\u80fd\u591f\u672c\u5730\u6216\u8fdc\u7a0b\u62a5\u544a\u548c\u4fdd\u5b58\u91cd\u8981\u7684\u9519\u8bef\u6d88\u606f","title":"syslog"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/","text":"int # char # \u2751 char\uff1a\u9ed8\u8ba4\u7c7b\u578b\uff0c\u603b\u662f1\u4e2a\u5b57\u8282\u3002\u53ef\u80fd\u662f\u4e5f\u53ef\u80fd\u4e0d\u662f\u6709\u7b26\u53f7\u7684\uff08\u4f8b\u5982\uff1aASCII\uff09\u200b\u3002 \u2751 char16_t\uff1a\u7528\u4e8e2\u5b57\u8282\u7684\u5b57\u7b26\u96c6\uff08\u4f8b\u5982\uff1aUTF-16\uff09\u200b\u3002 \u2751 char32_t\uff1a\u7528\u4e8e4\u5b57\u8282\u7684\u5b57\u7b26\u96c6\uff08\u4f8b\u5982\uff1aUTF-32\uff09\u200b\u3002 \u2751 signed char\uff1a\u4e0echar\u76f8\u540c\uff0c\u4f46\u4fdd\u8bc1\u662f\u6709\u7b26\u53f7\u7684\u3002 \u2751 unsigned char\uff1a\u4e0echar\u76f8\u540c\uff0c\u4f46\u4fdd\u8bc1\u662f\u65e0\u7b26\u53f7\u7684\u3002 \u2751 wchar_t\uff1a\u8db3\u591f\u5927\u4ee5\u5305\u542b\u5b9e\u73b0\u5e73\u53f0\u5730\u533a\u73af\u5883\u8bed\u8a00\u8bbe\u7f6e\u4e2d\u7684\u6700\u5927\u5b57\u7b26\uff08\u4f8b\u5982\uff1aUnicode\uff09\u200b\u3002 byte # \u5b83\u5b9a\u4e49\u5728 \u5934\u6587\u4ef6\u4e2d\u3002std::byte\u7c7b\u578b\u5141\u8bb8\u6309\u4f4d\u8fdb\u884c\u903b\u8f91\u8fd0\u7b97\u3002 size_t # \u5728 \u5934\u6587\u4ef6\u4e2d,\u5728\u5b9e\u8df5\u4e2d\uff0c\u5b83\u901a\u5e38\u4e0e64\u4f4d\u67b6\u6784\u7cfb\u7edf\u7684unsigned long long\u76f8\u540c\u3002 \u4e00\u5143\u8fd0\u7b97\u7b26sizeof\u63a5\u53d7\u4e00\u4e2a\u7c7b\u578b\u5e76\u8fd4\u56de\u8be5\u7c7b\u578b\u7684\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u200b\u3002sizeof\u8fd0\u7b97\u7b26\u603b\u662f\u8fd4\u56de\u4e00\u4e2asize_t\u5bf9\u8c61 void # void\u7c7b\u578b\u8868\u793a\u4e00\u4e2a\u7a7a\u7684\u503c\u96c6\u5408\u3002\u56e0\u4e3avoid\u5bf9\u8c61\u4e0d\u80fd\u62e5\u6709\u503c\uff0c\u6240\u4ee5C++\u4e0d\u5141\u8bb8\u4f7f\u7528void\u5bf9\u8c61\u3002\u6211\u4eec\u53ea\u5728\u7279\u6b8a\u60c5\u51b5\u4e0b\u4f7f\u7528void\uff0c\u6bd4\u5982\u7528\u4f5c\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\u7684\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b type_traits # attribute # paremeter_template # function pointer # lambada # lambda\u8868\u8fbe\u5f0f\u6709\u4e94\u4e2a\u7ec4\u4ef6\uff1a \u2751 \u6355\u83b7\u5217\u8868(captures)\uff1a\u51fd\u6570\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\uff08\u5373\u5c40\u90e8\u5e94\u7528\u7684\u53c2\u6570\uff09\u200b\u3002 \u2751 \u53c2\u6570(parameters)\uff1a\u8c03\u7528\u51fd\u6570\u5bf9\u8c61\u6240\u9700\u7684\u53c2\u6570\u3002 \u2751 \u8868\u8fbe\u5f0f\u4f53(body)\uff1a\u51fd\u6570\u5bf9\u8c61\u7684\u4ee3\u7801\u3002 \u2751 \u4fee\u9970\u7b26(modifiers)\uff1aconstexpr\u3001mutable\u3001noexcept\u548c[\u200b[noreturn]\u200b]\u7b49\u5143\u7d20\u3002 \u2751 \u8fd4\u56de\u7c7b\u578b(return-type)\uff1a\u51fd\u6570\u5bf9\u8c61\u8fd4\u56de\u7684\u7c7b\u578b\u3002 std::fuction # \u5934\u6587\u4ef6\u4e2d\u7684std::function\u7c7b\u6a21\u677f\u662f\u53ef\u8c03\u7528\u5bf9\u8c61\u7684\u591a\u6001\u5305\u88c5\u5668 catch # \u6700\u7b80\u5355\u7684\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\u4e4b\u4e00\u662fPhil Nash\u7684Catch\uff0c\u5b83\u53ef\u4ecehttps://github.com/catchorg/Catch2/\u83b7\u5f97\u3002\u56e0\u4e3aCatch\u662f\u4e00\u4e2a\u53ea\u6709\u5934\u6587\u4ef6\u7684\u5e93 gtest # boost test # gmock # HippoMocks # \u4e00\u4e2a\u53ea\u6709\u5934\u6587\u4ef6\u7684\u6a21\u62df\u5e93 GitHub( https://github.com/dascandy/hippomocks/ ) FakeIt\u548cTrompeloeil # FakeIt\uff08\u7531EranPe\u2019er\u63d0\u4f9b\uff0c\u53ef\u5728https://github.com/eranpeer/FakeIt/\u83b7\u5f97 Trompeloeil\uff08\u7531Bj\u00f6rn Fahller\u63d0\u4f9b\uff0c\u53ef\u5728https://github.com/rollbear/trompeloeil/\u83b7\u5f97 FakeIt\u7c7b\u4f3c\u4e8eHippoMocks\uff0c\u5e76\u4e14\u5b83\u662f\u4e00\u4e2a\u53ea\u5305\u542b\u5934\u6587\u4ef6\u7684\u5e93\u3002\u5b83\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u5728\u6784\u5efa\u671f\u671b\u65f6\u9075\u5faa\u9ed8\u8ba4\u8bb0\u5f55\u6a21\u5f0f\u3002FakeIt\u4e0d\u4f1a\u9884\u5148\u6307\u5b9a\u671f\u671b\u503c\uff0c\u800c\u662f\u5728\u6d4b\u8bd5\u7ed3\u675f \u65f6\u9a8c\u8bc1\u6a21\u62df\u5bf9\u8c61\u7684\u65b9\u6cd5\u662f\u5426\u88ab\u6b63\u786e\u8c03\u7528\u3002 Trompeloeil\uff08\u6765\u81ea\u6cd5\u8bedtrompe-l\u2019\u0153il\uff0c\u610f\u4e3a\u201c\u6b3a\u9a97\u773c\u775b\u201d\u200b\uff09\u53ef\u4ee5\u88ab\u89c6\u4e3aGoogle Mock\u7684\u73b0\u4ee3\u66ff\u4ee3\u54c1 uniq_ptr # shared_ptr # \u6211\u4eec\u4e3a\u6307\u5411\u7c7b\u578b\u6307\u5b9a\u4e00\u4e2a\u6a21\u677f\u53c2\u6570int\u2776\u3002\u5728\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e2d\uff0c\u5206\u914d\u5e76\u521d\u59cb\u5316\u4e00\u4e2aint\u5bf9\u8c61\u2777\u3002\u63a5\u7740\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u5220\u9664\u5668\u2778\u3002\u4f5c\u4e3a\u7b2c\u4e09\u4e2a\u53c2\u6570\uff0c\u6211\u4eec\u4f20\u5165\u4e00\u4e2astd::allocator\u2779\u3002 weak_ptr # \u5f31\u6307\u9488\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u667a\u80fd\u6307\u9488\uff0c\u5b83\u5bf9\u6240\u5f15\u7528\u7684\u5bf9\u8c61\u7684\u6240\u6709\u6743\u3002\u5f31\u6307\u9488\u5141\u8bb8\u8ddf\u8e2a\u5bf9\u8c61\u5e76\u4ec5\u5728\u88ab\u8ddf\u8e2a\u5bf9\u8c61\u4ecd\u7136\u5b58\u5728\u65f6\u5c06\u5f31\u6307\u9488\u8f6c\u6362\u4e3a\u5171\u4eab\u6307\u9488\u3002 \u5f31\u6307\u9488\u901a\u8fc7\u8c03\u7528\u5b83\u4eec\u7684lock\u65b9\u6cd5\u6765\u83b7\u5f97\u5176\u8ddf\u8e2a\u5bf9\u8c61\u7684\u4e34\u65f6\u6240\u6709\u6743\u3002lock\u65b9\u6cd5\u603b\u662f\u521b\u5efa\u4e00\u4e2a\u5171\u4eab\u6307\u9488 optional # optional\u662f\u4e00\u4e2a\u7c7b\u6a21\u677f\uff0c\u5b83\u5305\u542b\u4e00\u4e2a\u53ef\u80fd\u5b58\u5728\u4e5f\u53ef\u80fd\u4e0d\u5b58\u5728\u7684\u503c\u3002 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86std::optional\uff0c pair # pair\u662f\u4e00\u4e2a\u7c7b\u6a21\u677f\uff0c\u4e00\u4e2apair\u5bf9\u8c61\u4e2d\u53ef\u5305\u542b\u4e24\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u3002\u5bf9\u8c61\u662f\u6709\u5e8f\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6210\u5458first\u548csecond\u8bbf\u95ee\u5b83\u4eec stdlib\u7684 \u5934\u6587\u4ef6\u4e2d\u6709std::pair tuple # tuple\uff08\u5143\u7ec4\uff09\u662f\u4e00\u4e2a\u7c7b\u6a21\u677f\uff0c\u5305\u542b\u4efb\u610f\u6570\u91cf\u7684\u4e0d\u540c\u7c7b\u578b\u5143\u7d20,\u9700\u8981\u6211\u4eec\u4f7f\u7528\u975e\u6210\u5458\u51fd\u6570\u6a21\u677fget\u6765\u63d0\u53d6\u5143\u7d20\u3002 stdlib\u7684 \u5934\u6587\u4ef6\u4e2d\u6709std::tuple\u548cstd::get\uff0c any # any\u662f\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u5355\u4e2a\u503c\u7684\u7c7b\u3002\u5b83\u4e0d\u662f\u7c7b\u6a21\u677f\u3002\u8981\u5c06any\u8f6c\u6362\u4e3a\u5177\u4f53\u7c7b\u578b\uff0c\u8bf7\u4f7f\u7528any\u5f3a\u5236\u8f6c\u6362(cast)\uff0c\u5b83\u662f\u4e00\u4e2a\u975e\u6210\u5458\u51fd\u6570\u6a21\u677f\u3002\u4efb\u4f55\u5f3a\u5236\u8f6c\u6362 stdlib\u7684 \u5934\u6587\u4ef6\u4e2d\u6709std::any variant # variant\uff08\u53d8\u4f53\uff09\u662f\u5b58\u50a8\u5355\u4e2a\u503c\u7684\u7c7b\u6a21\u677f\uff0c\u503c\u7684\u7c7b\u578b\u4ec5\u9650\u4e8e\u4f5c\u4e3a\u6a21\u677f\u53c2\u6570\u63d0\u4f9b\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u5217\u8868\u3002 variant\u8981\u6c42\u663e\u5f0f\u679a\u4e3e\u5c06\u8981\u5b58\u50a8\u7684\u6240\u6709\u7c7b\u578b\u3002 stdlib\u7684 \u5934\u6587\u4ef6\u4e2d\u6709std::variant chrono # stdlib Chrono\u5e93\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86\u5404\u79cd\u65f6\u949f Chrono\u5e93\u4e2d\u63d0\u4f9b\u4e86\u4e09\u4e2a\u65f6\u949f\uff1b\u6bcf\u4e2a\u90fd\u63d0\u4f9b\u4e0d\u540c\u7684\u4fdd\u8bc1\uff0c\u5e76\u4e14\u90fd\u4f4d\u4e8estd::chrono\u547d\u540d\u7a7a\u95f4\u4e2d\uff1a \u2751 std::chrono::system_clock\u662f\u7cfb\u7edf\u8303\u56f4\u7684\u5b9e\u65f6\u65f6\u949f\u3002\u5b83\u6709\u65f6\u4e5f\u79f0\u4e3a\u6302\u949f(wall clock)\uff0c\u5373\u81ea\u7279\u5b9a\u5b9e\u73b0\u5f00\u59cb\u65e5\u671f\u4ee5\u6765\u7ecf\u8fc7\u7684\u5b9e\u65f6\u65f6\u95f4\u3002\u5927\u591a\u6570\u5b9e\u73b0\u90fd\u5c06Unix\u7684\u5f00\u59cb\u65e5\u671f\u6307\u5b9a\u4e3a1970\u5e741\u67081\u65e5\u5348\u591c\u3002 \u2751 std::chrono::steady_clock\u4fdd\u8bc1\u5b83\u7684\u503c\u6c38\u8fdc\u4e0d\u4f1a\u51cf\u5c11\u3002\u8fd9\u4f3c\u4e4e\u5f88\u8352\u8c2c\uff0c\u4f46\u65f6\u95f4\u6d4b\u91cf\u6bd4\u770b\u8d77\u6765\u7684\u66f4\u590d\u6742\u3002\u4f8b\u5982\uff0c\u7cfb\u7edf\u53ef\u80fd\u4e0d\u5f97\u4e0d\u5e94\u5bf9\u95f0\u79d2\u6216\u4e0d\u51c6\u786e\u7684\u65f6\u949f\u3002 \u2751 std::chrono::high_resolution_clock\u5177\u6709\u6700\u77ed\u7684\u53ef\u7528tick\u5468\u671f\uff1atick\u662f\u65f6\u949f\u53ef\u4ee5\u6d4b\u91cf\u7684\u6700\u5c0f\u539f\u5b50\u6539\u53d8\u3002 Chrono\u4f7f\u7528std::chrono::time_point\u7c7b\u578b\u5bf9\u65f6\u95f4\u70b9\u8fdb\u884c\u7f16\u7801\u3002 std::chrono::duration\u8868\u793a\u4e24\u4e2atime_point\u5bf9\u8c61\u4e4b\u95f4\u7684\u65f6\u95f4\u3002 std::literals::chrono_literals\u547d\u540d\u7a7a\u95f4\uff0c\u56e0\u6b64\u53ef\u4ee5\u8bbf\u95ee\u6301\u7eed\u65f6\u95f4\u5b57\u9762\u91cf std::chrono::duration_cast\u4ee5\u5c06\u6301\u7eed\u65f6\u95f4\u4ece\u4e00\u79cd\u5355\u4f4d\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u5355\u4f4d stdlib\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86\u5e76\u53d1\u539f\u8bed\uff0c\u5176\u4e2d\u5305\u542b\u975e\u6210\u5458\u51fd\u6570std::this_thread::sleep_for Numerics # stdlib\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86std::complex\u7c7b\u6a21\u677f\u3002 stdlib\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86\u7c7b\u6a21\u677fstd::numeric_limits stdlib \u5934\u6587\u4ef6\u4e2d\u7684std::ratio\u662f\u4e00\u4e2a\u7c7b\u6a21\u677f\uff0c\u4f7f\u7528\u5b83\u80fd\u591f\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u6709\u7406\u6570\u8ba1\u7b97 array # array \u7c7b\u6a21\u677f\u63a5\u53d7\u4e24\u4e2a\u6a21\u677f\u53c2\u6570\uff1a\u2751 \u5305\u542b\u7684\u7c7b\u578bT\u3002\u2751 \u6570\u7ec4S\u7684\u56fa\u5b9a\u5927\u5c0f\u3002 \u2751 operator[\u200b]\u3002\u2751 at\u3002\u2751 get\u3002 vector # STL\u7684 \u5934\u6587\u4ef6\u4e2d\u7684std::vector\u662f\u4e00\u4e2a\u987a\u5e8f\u5bb9\u5668\uff0c\u53ef\u4ee5\u4fdd\u5b58\u52a8\u6001\u5927\u5c0f\u7684\u3001\u8fde\u7eed\u7684\u4e00\u7cfb\u5217\u5143\u7d20\u3002 deque # \u53cc\u7aef\u961f\u5217\uff08deque\uff0c\u8bfb\u4f5c\u201cdeck\u201d\u200b\uff09\u662f\u4e00\u4e2a\u987a\u5e8f\u5bb9\u5668\uff0c\u5177\u6709\u4ece\u524d\u540e\u5feb\u901f\u63d2\u5165\u548c\u5220\u9664\u7684\u64cd\u4f5c STL\u5b9e\u73b0\u7684std::deque\u53ef\u4ece \u5934\u6587\u4ef6\u4e2d\u83b7\u5f97\u3002 \u53cc\u7aef\u961f\u5217\u7684\u5185\u5b58\u901a\u5e38\u662f\u5206\u6563\u7684\uff0c\u5c31\u50cf\u5411\u91cf\u548c\u5217\u8868(list)\u7684\u6df7\u5408\u4f53 list # \u5217\u8868(list)\u662f\u4e00\u4e2a\u987a\u5e8f\u5bb9\u5668\uff0c\u5b83\u53ef\u5728\u4efb\u610f\u4f4d\u7f6e\u5feb\u901f\u63d2\u5165\u5143\u7d20\u6216\u5220\u9664\u5143\u7d20\uff0c\u4f46\u65e0\u6cd5\u968f\u673a\u8bbf\u95ee\u5143\u7d20\u3002STL\u5b9e\u73b0std::list\u53ef\u4ece \u5934\u6587\u4ef6\u4e2d\u83b7\u5f97\u3002 STL\u8fd8\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2astd::forward_list\uff0c\u5b83\u662f\u4e00\u4e2a\u5355\u5411\u94fe\u8868\uff0c\u53ea\u5141\u8bb8\u5728\u4e00\u4e2a\u65b9\u5411\u4e0a\u8fdb\u884c\u8fed\u4ee3 stack # \u6700\u540e\u88ab\u538b\u5165\u6808\u7684\u5143\u7d20\u662f\u7b2c\u4e00\u4e2a\u88ab\u5f39\u51fa\u7684\u5143\u7d20\u3002 STL\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86std::stack queue # STL\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86std::queue \u961f\u5217\u662f\u5148\u8fdb\u5148\u51fa\u7684\u3002\u5f53\u5c06\u4e00\u4e2a\u5143\u7d20\u63a8\u5165\u961f\u5217\u65f6\uff0c\u5176\u5b9e\u662f\u5c06\u5143\u7d20\u63d2\u5165\u961f\u5217\u7684\u672b\u7aef\u3002\u5f53\u4ece\u961f\u5217\u4e2d\u5f39\u51fa\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u5176\u5b9e\u662f\u5c06\u5143\u7d20\u4ece\u961f\u5217\u7684\u5f00\u5934\u79fb\u9664 heap # \u4f18\u5148\u7ea7\u961f\u5217(priority queue)\u4e5f\u79f0\u4e3a\u5806(heap)\uff0c\u662f\u4e00\u79cd\u652f\u6301push\u548cpop\u64cd\u4f5c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u6839\u636e\u7528\u6237\u6307\u5b9a\u7684\u6bd4\u8f83\u5668\u5bf9\u8c61\u4fdd\u6301\u5143\u7d20\u6709\u5e8f.priority_queue\u6839\u636e\u6bd4\u8f83\u5668\u6bd4\u8f83\u7ed3\u679c\u51b3\u5b9a\u5f39\u51fa\u5143\u7d20\u3002 STL\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86std::priority_queue bitset # bitset\uff08\u4f4d\u96c6\uff09\u662f\u4e00\u79cd\u5b58\u50a8\u56fa\u5b9a\u5927\u5c0f\u7684\u4f4d(bit)\u5e8f\u5217\u7684\u6570\u636e\u7ed3\u6784\u3002\u6211\u4eec\u53ef\u4ee5\u64cd\u7eb5\u6bcf\u4e00\u4f4d\u3002 STL\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86std::bitset\u3002 set # STL\u7684 \u5934\u6587\u4ef6\u4e2d\u53ef\u7528\u7684std::set\u662f\u4e00\u4e2a\u5173\u8054\u5bb9\u5668\uff0c\u8fd9\u79cd\u5bb9\u5668\u5305\u542b\u79f0\u4e3a\u952e(key)\u7684\u5df2\u6392\u5e8f\u7684\u552f\u4e00\u5143\u7d20\u3002 multiset # STL\u7684 \u5934\u6587\u4ef6\u4e2d\u53ef\u7528\u7684std::multiset\u662f\u4e00\u4e2a\u5173\u8054\u5bb9\u5668\uff0c\u8fd9\u79cd\u5bb9\u5668\u5305\u542b\u5df2\u6392\u5e8f\u7684\u975e\u552f\u4e00\u952e\u3002multiset\u652f\u6301\u4e0e\u666e\u901a\u96c6\u5408\u76f8\u540c\u7684\u64cd\u4f5c\uff0c multiset\u7684count\u65b9\u6cd5\u53ef\u4ee5\u544a\u8bc9\u6211\u4eec\u6709\u591a\u5c11\u5143\u7d20\u4e0e\u7ed9\u5b9a\u952e\u5339\u914d\u3002 equal_range\u53ef\u4ee5\u8fd4\u56de\u5305\u542b\u591a\u4e2a\u5143\u7d20\u7684\u534a\u5f00\u534a\u95ed\u533a\u95f4 unordered_set # \u5934\u6587\u4ef6\u4e2d\u53ef\u7528\u7684std::unordered_set\u4e5f\u662f\u4e00\u4e2a\u5173\u8054\u5bb9\u5668\uff0c\u8fd9\u79cd\u5bb9\u5668\u5305\u542b\u672a\u6392\u5e8f\u7684\u552f\u4e00\u952e, unordered_set\u901a\u5e38\u5b9e\u73b0\u4e3a\u54c8\u5e0c\u8868 STL\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86\u54c8\u5e0c\u5668\u7c7b\u6a21\u677fstd::hash \uff0c\u5176\u4e2d\u5305\u542b\u57fa\u672c\u7c7b\u578b\u3001\u679a\u4e3e\u7c7b\u578b\u3001\u6307\u9488\u7c7b\u578b\u3001optional\u3001variant\u3001\u667a\u80fd\u6307\u9488\u7b49\u7684\u7279\u5316\u3002 unordered_multiset # unordered_multiset\u652f\u6301\u4e0eunordered_set\u76f8\u540c\u7684\u6784\u9020\u51fd\u6570\u548c\u64cd\u4f5c\uff0c\u4f46\u5b83\u4f1a\u5b58\u50a8\u5197\u4f59\u5143\u7d20\u3002 map # \u7c7b\u6a21\u677fmap \u63a5\u53d7\u56db\u4e2a\u6a21\u677f\u53c2\u6570\u3002\u7b2c\u4e00\u4e2a\u662f\u952e\u7c7b\u578bKey\uff0c\u7b2c\u4e8c\u4e2a\u662f\u503c\u7c7b\u578bValue\uff0c\u7b2c\u4e09\u4e2a\u662f\u6bd4\u8f83\u5668\u7c7b\u578b\uff08\u9ed8\u8ba4\u4e3astd::less\uff09\u200b\uff0c\u7b2c\u56db\u4e2a\u662f\u5206\u914d\u5668\u7c7b\u578b\uff08\u9ed8\u8ba4\u4e3astd::allocator \uff09\u200b\u3002 multimap # multimap\u4e0d\u652f\u6301map\u652f\u6301\u7684\u5173\u8054\u6570\u7ec4\u529f\u80fd\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u652f\u6301operator[\u200b]\u548cat\u3002\u4e0emultiset\u4e00\u6837\uff0cmultimap\u4e3b\u8981\u901a\u8fc7equal_range\u65b9\u6cd5\u63d0\u4f9b\u5143\u7d20\u8bbf\u95ee\u529f\u80fd unordered_map # std::unordered_map\u548cstd::unordered_multimap\u90fd\u5728STL\u7684 \u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u3002\u8fd9\u4e9b\u5173\u8054\u5bb9\u5668\u901a\u5e38\u50cf\u5bf9\u5e94\u7684\u96c6\u5408\u4e00\u6837\u4f7f\u7528\u7ea2\u9ed1\u6811\u3002\u5b83\u4eec\u4e5f\u9700\u8981\u54c8\u5e0c\u51fd\u6570\u548c\u76f8\u7b49\u51fd\u6570\uff0c\u5e76\u4e14\u652f\u6301\u6876\u63a5\u53e3\u3002 unordered_multimap # initializer_list # STL\u7684 \u5934\u6587\u4ef6\u4e2d\u7684std::initializer_list\u5bb9\u5668\u6765\u5b9e\u73b0 \u8fed\u4ee3\u5668 # std::advance\u8f85\u52a9\u51fd\u6570\u5141\u8bb8\u6309\u6240\u9700\u7684\u6570\u91cf\u9012\u589e\u6216\u9012\u51cf\u3002 std::next\u548cstd::prev\u8fd9\u4e24\u4e2a\u8fed\u4ee3\u5668\u8f85\u52a9\u51fd\u6570\u662f\u8ba1\u7b97\u4ece\u7ed9\u5b9a\u8fed\u4ee3\u5668\u51fa\u53d1\u7684\u504f\u79fb\u91cf\u7684\u51fd\u6570\u6a21\u677f\u3002 std::distance\u8fed\u4ee3\u5668\u8f85\u52a9\u51fd\u6570\u53ef\u4ee5\u8ba1\u7b97\u4e24\u4e2a\u8f93\u5165\u8fed\u4ee3\u5668itr1\u548citr2\u4e4b\u95f4\u7684\u8ddd\u79bb std::iter_swap\u8fed\u4ee3\u5668\u8f85\u52a9\u51fd\u6570\u5141\u8bb8\u4ea4\u6362\u4e24\u4e2a\u524d\u5411\u8fed\u4ee3\u5668itr1\u548citr2\u6240\u6307\u5411\u7684\u503c string # \u2751 char\u7684std::string\u7528\u4e8eASCII\u4e4b\u7c7b\u7684\u5b57\u7b26\u96c6\u3002 \u2751 wchar_t\u7684std::wstring\u8db3\u591f\u5927\uff0c\u53ef\u4ee5\u5305\u542b\u5b9e\u73b0\u8bed\u8a00\u73af\u5883\u7684\u6700\u5927\u5b57\u7b26\u3002 \u2751 char16_t\u7684std::u16string\u7528\u4e8eUTF-16\u4e4b\u7c7b\u7684\u5b57\u7b26\u96c6\u3002 \u2751 char32_t\u7684std::u32string\u7528\u4e8eUTF-32\u4e4b\u7c7b\u7684\u5b57\u7b26\u96c6\u3002 string_view # \u5b57\u7b26\u4e32\u89c6\u56fe(string view)\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5b83\u8868\u793a\u4e00\u4e2a\u6052\u5b9a\u7684\u3001\u8fde\u7eed\u7684\u5b57\u7b26\u5e8f\u5217\u3002 \u867d\u7136string_view\u4e5f\u652f\u6301\u590d\u5236\u6784\u9020\u548c\u590d\u5236\u8d4b\u503c\uff0c\u4f46\u5b83\u4e0d\u652f\u6301\u79fb\u52a8\u6784\u9020\u548c\u79fb\u52a8\u8d4b\u503c\u3002 \u6b63\u5219\u8868\u8fbe\u5f0f(regular expression # STL\u7684 \u5934\u6587\u4ef6\u4e2d\u7684std::basic_regex\u7c7b\u6a21\u677f\u8868\u793a\u4ece\u6a21\u5f0f\u6784\u9020\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 stream # filesystem # path # std::filesystem::path\u662f\u6587\u4ef6\u7cfb\u7edf\u5e93\u4e2d\u7528\u4e8e\u6784\u9020\u8def\u5f84\u7684\u7c7b\uff0c\u5305\u542b\u5728 \u5934\u6587\u4ef6 algorithm # \u975e\u4fee\u6539\u5e8f\u5217\u64cd\u4f5c # all_of\u7b97\u6cd5\u786e\u5b9a\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u662f\u5426\u7b26\u5408\u7528\u6237\u6307\u5b9a\u7684\u6807\u51c6 any_of\u7b97\u6cd5\u786e\u5b9a\u5e8f\u5217\u4e2d\u662f\u5426\u6709\u5143\u7d20\u7b26\u5408\u7528\u6237\u6307\u5b9a\u7684\u6807\u51c6\u3002 none_of\u7b97\u6cd5\u786e\u5b9a\u5e8f\u5217\u4e2d\u662f\u5426\u6ca1\u6709\u5143\u7d20\u7b26\u5408\u7528\u6237\u6307\u5b9a\u7684\u6807\u51c6\u3002 for_each\u7b97\u6cd5\u5c06\u7528\u6237\u5b9a\u4e49\u7684\u51fd\u6570\u5e94\u7528\u4e8e\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u3002 for_each_n\u7b97\u6cd5\u5c06\u7528\u6237\u5b9a\u4e49\u7684\u51fd\u6570\u5e94\u7528\u4e8e\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u3002 find\u3001find_if\u548cfind_if_not\u7b97\u6cd5\u5728\u5e8f\u5217\u4e2d\u5bfb\u627e\u4e0e\u7528\u6237\u5b9a\u4e49\u7684\u6807\u51c6\u76f8\u5339\u914d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002 find_end\u7b97\u6cd5\u67e5\u627e\u5b50\u5e8f\u5217\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 find_first_of\u7b97\u6cd5\u5bfb\u627e\u5e8f\u52171\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7b49\u4e8e\u5e8f\u52172\u4e2d\u7684\u67d0\u4e2a\u5143\u7d20\u7684\u5143\u7d20\u3002 adjacent_find\u7b97\u6cd5\u5bfb\u627e\u5e8f\u5217\u4e2d\u7684\u7b2c\u4e00\u5bf9\u76f8\u90bb\u91cd\u590d\u5143\u7d20. count\u7b97\u6cd5\u5bf9\u5e8f\u5217\u4e2d\u5339\u914d\u67d0\u4e9b\u7528\u6237\u5b9a\u4e49\u7684\u6807\u51c6\u7684\u5143\u7d20\u8fdb\u884c\u8ba1\u6570\u3002 mismatch\u7b97\u6cd5\u5728\u4e24\u4e2a\u5e8f\u5217\u4e2d\u5bfb\u627e\u7b2c\u4e00\u4e2a\u4e0d\u5339\u914d\u7684\u5b50\u5e8f\u5217\u3002 equal\u7b97\u6cd5\u786e\u5b9a\u4e24\u4e2a\u5e8f\u5217\u662f\u5426\u76f8\u7b49\u3002 is_permutation\u7b97\u6cd5\u786e\u5b9a\u4e24\u4e2a\u5e8f\u5217\u662f\u5426\u4e92\u4e3a\u6392\u5217\uff0c\u6392\u5217\u610f\u5473\u7740\u5b83\u4eec\u5305\u542b\u76f8\u540c\u7684\u5143\u7d20\u4f46\u53ef\u80fd\u987a\u5e8f\u4e0d\u540c\u3002 search\u7b97\u6cd5\u53ef\u4ee5\u5b9a\u4f4d\u5b50\u5e8f\u5217\u3002\u8be5\u7b97\u6cd5\u5728\u5e8f\u52171\u4e2d\u5b9a\u4f4d\u5e8f\u52172\u3002 search_n\u7b97\u6cd5\u5b9a\u4f4d\u5305\u542b\u76f8\u540c\u8fde\u7eed\u503c\u7684\u5b50\u5e8f\u5217\u3002\u8be5\u7b97\u6cd5\u5728\u5e8f\u5217\u4e2d\u641c\u7d22count\u4e2a\u8fde\u7eed\u503c\u5e76\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u7b2c\u4e00\u4e2a\u503c\u7684\u8fed\u4ee3\u5668 \u53ef\u53d8\u5e8f\u5217\u64cd\u4f5c # copy\u7b97\u6cd5\u5c06\u4e00\u4e2a\u5e8f\u5217\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u5e8f\u5217\u3002 copy_n\u7b97\u6cd5\u5c06\u4e00\u4e2a\u5e8f\u5217\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u5e8f\u5217\u3002\u8be5\u7b97\u6cd5\u5c06\u76ee\u6807\u5e8f\u5217\u590d\u5236\u5230result\u4e2d\u5e76\u8fd4\u56de\u63a5\u6536\u5e8f\u5217\u7684\u7ed3\u675f\u8fed\u4ee3\u5668\u3002 copy_backward\u7b97\u6cd5\u5c06\u4e00\u4e2a\u5e8f\u5217\u53cd\u5411\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u5e8f\u5217\u4e2d\u3002 move\u7b97\u6cd5\u5c06\u4e00\u4e2a\u5e8f\u5217\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u5e8f\u5217\u4e2d\u3002 move_backward\u7b97\u6cd5\u5c06\u4e00\u4e2a\u5e8f\u5217\u53cd\u5411\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u5e8f\u5217\u4e2d\u3002 swap_ranges\u7b97\u6cd5\u5c06\u5143\u7d20\u4ece\u4e00\u4e2a\u5e8f\u5217\u4ea4\u6362\u5230\u53e6\u4e00\u4e2a\u5e8f\u5217\u3002 transform\u7b97\u6cd5\u4fee\u6539\u4e00\u4e2a\u5e8f\u5217\u7684\u5143\u7d20\u5e76\u5c06\u5b83\u4eec\u5199\u5165\u53e6\u4e00\u4e2a\u5e8f\u5217\u3002 replace\u7b97\u6cd5\u7528\u4e00\u4e9b\u65b0\u7684\u5143\u7d20\u66ff\u6362\u5e8f\u5217\u4e2d\u7684\u67d0\u4e9b\u5143\u7d20\u3002 fill\u7b97\u6cd5\u7528\u4e00\u4e9b\u503c\u586b\u5145\u5e8f\u5217\u3002 generate\u7b97\u6cd5\u901a\u8fc7\u8c03\u7528\u51fd\u6570\u5bf9\u8c61\u6765\u586b\u5145\u5e8f\u5217\u3002 remove\u7b97\u6cd5\u4ece\u4e00\u4e2a\u5e8f\u5217\u4e2d\u5220\u9664\u67d0\u4e9b\u5143\u7d20\u3002 unique\u7b97\u6cd5\u4ece\u5e8f\u5217\u4e2d\u53bb\u9664\u591a\u4f59\u7684\u5143\u7d20\u3002 reverse\u7b97\u6cd5\u662f\u5c06\u5e8f\u5217\u7684\u987a\u5e8f\u98a0\u5012\u8fc7\u6765 sample\uff08\u91c7\u6837\uff09\u7b97\u6cd5\u4ea7\u751f\u968f\u673a\u7684\u3001\u7a33\u5b9a\u7684\u5b50\u5e8f\u5217\u3002 shuffle\u7b97\u6cd5\u4ea7\u751f\u968f\u673a\u6392\u5217\u3002 \u6392\u5e8f # sort\uff08\u6392\u5e8f\uff09\u7b97\u6cd5\u5bf9\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f stable_sort\u7b97\u6cd5\u5bf9\u5e8f\u5217\u8fdb\u884c\u7a33\u5b9a\u7684\u6392\u5e8f\u3002 partial_sort\u7b97\u6cd5\u5c06\u5e8f\u5217\u5206\u4e3a\u4e24\u7ec4\u3002 is_sorted\u7b97\u6cd5\u5224\u65ad\u5e8f\u5217\u662f\u5426\u6709\u5e8f\u3002 nth_element\u7b97\u6cd5\u5c06\u5e8f\u5217\u4e2d\u7684\u7279\u5b9a\u5143\u7d20\u653e\u5165\u5176\u6b63\u786e\u7684\u6392\u5e8f\u4f4d\u7f6e\u3002 \u641c\u7d22 # lower_bound\u7b97\u6cd5\u5728\u5df2\u6392\u5e8f\u7684\u5e8f\u5217\u4e2d\u67e5\u627e\u4f7f\u5176\u5206\u533a\u7684\u5143\u7d20\u3002 upper_bound\u7b97\u6cd5\u5728\u6709\u5e8f\u5e8f\u5217\u4e2d\u67e5\u627e\u4f7f\u5176\u5206\u533a\u7684\u5143\u7d20\u3002 equal_range\u7b97\u6cd5\u5728\u6709\u5e8f\u5e8f\u5217\u4e2d\u67e5\u627e\u7279\u5b9a\u5143\u7d20\u7684\u533a\u95f4\u3002 binary_search\u7b97\u6cd5\u5728\u6709\u5e8f\u5e8f\u5217\u4e2d\u67e5\u627e\u7279\u5b9a\u5143\u7d20\u3002 partition # \u4e00\u4e2a\u5206\u533a\u7684\u5e8f\u5217\u5305\u542b\u4e24\u4e2a\u8fde\u7eed\u7684\u3001\u4e0d\u540c\u7684\u5143\u7d20\u7ec4\u3002\u8fd9\u4e9b\u7ec4\u7684\u5143\u7d20\u4e0d\u91cd\u5408\uff0c\u7b2c\u4e8c\u4e2a\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u88ab\u79f0\u4e3a\u5206\u533a\u70b9 is_partitioned\u7b97\u6cd5\u786e\u5b9a\u5e8f\u5217\u662f\u5426\u5df2\u5206\u533a\u3002 \u4e00\u4e2a\u5206\u533a\u7684\u5e8f\u5217\u5305\u542b\u4e24\u4e2a\u8fde\u7eed\u7684\u3001\u4e0d\u540c\u7684\u5143\u7d20\u7ec4\u3002\u8fd9\u4e9b\u7ec4\u7684\u5143\u7d20\u4e0d\u91cd\u5408\uff0c\u7b2c\u4e8c\u4e2a\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u88ab\u79f0\u4e3a\u5206\u533a\u70b9 partition_copy\u7b97\u6cd5\u5bf9\u5e8f\u5217\u8fdb\u884c\u5206\u533a\u3002\u8be5\u7b97\u6cd5\u901a\u8fc7\u5bf9\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884cpred\u8bc4\u4f30\u6765\u5212\u5206\u76ee\u6807\u5e8f\u5217\u3002 stable_partition\u7b97\u6cd5\u5bf9\u5e8f\u5217\u8fdb\u884c\u7a33\u5b9a\u5206\u533a\u3002 merge # \u5408\u5e76\u7b97\u6cd5\u53ef\u4ee5\u5408\u5e76\u4e24\u4e2a\u6392\u5e8f\u7684\u76ee\u6807\u5e8f\u5217\uff0c\u4f7f\u5f97\u8f93\u51fa\u5e8f\u5217\u5305\u542b\u4e24\u4e2a\u76ee\u6807\u5e8f\u5217\u7684\u526f\u672c\u5e76\u4e14\u4e5f\u662f\u6709\u5e8f\u7684\u3002 merge\u7b97\u6cd5\u5408\u5e76\u4e24\u4e2a\u6392\u5e8f\u7684\u5e8f\u5217\u3002\u8be5\u7b97\u6cd5\u5c06\u4e24\u4e2a\u76ee\u6807\u5e8f\u5217\u590d\u5236\u5230\u4e00\u4e2a\u8f93\u51fa\u5e8f\u5217\u4e2d\u3002 \u6781\u503c # min\u6216max\u7b97\u6cd5\u53ef\u4ee5\u786e\u5b9a\u5e8f\u5217\u7684\u6781\u503c\u3002 min_element\u6216max_element\u7b97\u6cd5\u786e\u5b9a\u5e8f\u5217\u7684\u6781\u503c\u3002 clamp\u7b97\u6cd5\u5bf9\u4e00\u4e2a\u503c\u8fdb\u884c\u9650\u5b9a\u3002\u8be5\u7b97\u6cd5\u4f7f\u7528operator\u6216comp\u6765\u786e\u5b9aobj\u662f\u5426\u5728\u4ecelow\u5230high\u7684\u8303\u56f4\u5185\u3002 \u6570\u503c\u8fd0\u7b97 # \u2751 plus \u5b9e\u73b0\u4e86\u52a0\u6cd5x+y\u3002 \u2751 minus \u5b9e\u73b0\u4e86\u51cf\u6cd5x-y\u3002 \u2751 multiplies \u5b9e\u73b0\u4e86\u4e58\u6cd5x*y\u3002 \u2751 divides \u5b9e\u73b0\u4e86\u9664\u6cd5x/y\u3002 \u2751 modulus \u5b9e\u73b0\u4e86\u6a21\u8fd0\u7b97x%y\u3002 iota\u7b97\u6cd5\u7528\u589e\u91cf\u503c\u586b\u5145\u5e8f\u5217\u3002\u8be5\u7b97\u6cd5\u5c06\u4ecestart\u5f00\u59cb\u7684\u589e\u91cf\u503c\u8d4b\u503c\u7ed9\u76ee\u6807\u5e8f\u5217\u3002 accumulate\u7b97\u6cd5\u6298\u53e0\u5e8f\u5217,\u8be5\u7b97\u6cd5\u5c06op\u5e94\u7528\u4e8estart\u548c\u76ee\u6807\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\u5b83\u83b7\u53d6\u7ed3\u679c\u548c\u76ee\u6807\u5e8f\u5217\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u518d\u6b21\u5e94\u7528op\uff0c\u4e0d\u65ad\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8fdb\u884c\uff0c\u76f4\u5230\u5b83\u8bbf\u95ee\u4e86\u76ee\u6807\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u3002 reduce\u7b97\u6cd5\u4e5f\u6298\u53e0\u5e8f\u5217 inner_product\u7b97\u6cd5\u8ba1\u7b97\u4e24\u4e2a\u5e8f\u5217\u7684\u5185\u79ef\u3002 adjacent_difference\u7b97\u6cd5\u751f\u6210\u90bb\u5dee\uff08\u5373\u76f8\u90bb\u5143\u7d20\u7684\u5dee\uff09\u200b\u3002 partial_sum\u7b97\u6cd5\u751f\u6210\u90e8\u5206\u5143\u7d20\u7684\u548c\u3002 thread # async # \u4e92\u65a5\u9501(mutex)\u662f\u4e00\u79cd\u9632\u6b62\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u8d44\u6e90\u7684\u673a\u5236 \u5934\u6587\u4ef6\u516c\u5f00\u4e86\u51e0\u4e2a\u4e92\u65a5\u9501\u9009\u9879\uff1a \u2751 std::mutex\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u4e92\u65a5\u9501\u3002 \u2751 std::timed_mutex\u63d0\u4f9b\u4e86\u5e26\u6709\u8d85\u65f6\u673a\u5236\u7684\u4e92\u65a5\u9501\u3002 \u2751 std::recursive_mutex\u63d0\u4f9b\u4e86\u4e92\u65a5\u9501\uff0c\u5141\u8bb8\u540c\u4e00\u7ebf\u7a0b\u8fdb\u884c\u9012\u5f52\u9501\u5b9a\u3002 \u2751 std::recursive_timed_mutex\u63d0\u4f9b\u4e86\u4e92\u65a5\u9501\uff0c\u5141\u8bb8\u540c\u4e00\u7ebf\u7a0b\u8fdb\u884c\u9012\u5f52\u9501\u5b9a\u5e76\u6709\u8d85\u65f6\u673a\u5236\u3002 \u5934\u6587\u4ef6\u63d0\u4f9b\u4e86\u4e24\u4e2a\u989d\u5916\u7684\u9009\u9879\uff1a \u2751 std::shared_mutex\u63d0\u4f9b\u4e86\u5171\u4eab\u4e92\u65a5\u9501\uff0c\u8fd9\u610f\u5473\u7740\u51e0\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u540c\u65f6\u62e5\u6709\u8be5\u4e92\u65a5\u9501\u3002 \u2751 std::shared_timed_mutex\u63d0\u4f9b\u4e86\u5171\u4eab\u4e92\u65a5\u9501\uff0c\u5e76\u5b9e\u73b0\u4e86\u6709\u8d85\u65f6\u673a\u5236\u7684\u9501\u5b9a\u3002 \u2751 std::lock_guard\u662f\u4e00\u4e2a\u4e0d\u53ef\u590d\u5236\u3001\u4e0d\u53ef\u79fb\u52a8\u7684RAII\u5305\u88c5\u5668\uff0c\u5b83\u5728\u6784\u9020\u51fd\u6570\u4e2d\u63a5\u53d7\u4e00\u4e2a\u4e92\u65a5\u9501\u5bf9\u8c61\uff0c\u5728\u90a3\u91cc\u8c03\u7528lock\u3002\u7136\u540e\u5728\u6790\u6784\u51fd\u6570\u4e2d\u8c03\u7528unlock\u3002 \u2751 std::scoped_lock\u662f\u4e00\u4e2a\u907f\u514d\u6b7b\u9501\u7684RAII\u5305\u88c5\u5668\uff0c\u7528\u4e8e\u591a\u4e2a\u4e92\u65a5\u9501\u3002 \u2751 std::unique_lock\u5b9e\u73b0\u4e86\u4e00\u4e2a\u53ef\u79fb\u52a8\u7684\u4e92\u65a5\u9501\u6240\u6709\u6743\u5305\u88c5\u5668\u3002 \u2751 std::shared_lock\u5b9e\u73b0\u4e86\u4e00\u4e2a\u53ef\u79fb\u52a8\u7684\u5171\u4eab\u4e92\u65a5\u9501\u6240\u6709\u6743\u5305\u88c5\u5668\u3002 \u4f7f\u7528 \u5934\u6587\u4ef6\u4e2d\u7684std::atomic\u7c7b\u6a21\u677f\uff0c \u6761\u4ef6\u53d8\u91cf(condition variable)\u662f\u4e00\u4e2a\u540c\u6b65\u539f\u8bed\uff0c\u5b83\u53ef\u4ee5\u963b\u585e\u591a\u4e2a\u7ebf\u7a0b\uff0c\u76f4\u5230\u6536\u5230\u901a\u77e5\u3002\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u901a\u77e5\u8be5\u6761\u4ef6\u53d8\u91cf\u3002\u5728\u6536\u5230\u901a\u77e5\u4e4b\u540e\uff0c\u6761\u4ef6\u53d8\u91cf\u53ef\u4ee5\u89e3\u9664\u5bf9\u591a\u4e2a\u7ebf\u7a0b\u7684\u9501\u5b9a\uff0c\u4ece\u800c\u4f7f\u5b83\u4eec\u7ee7\u7eed\u6267\u884c\u3002 std::this_thread::yield\u51fd\u6570\u4e0d\u63a5\u53d7\u4efb\u4f55\u53c2\u6570\uff0c\u8fd4\u56devoid\u3002yield\u7684\u5177\u4f53\u884c\u4e3a\u53d6\u51b3\u4e8e\u73af\u5883\uff0c\u4f46\u4e00\u822c\u6765\u8bf4\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63d0\u793a\uff0c\u5373\u64cd\u4f5c\u7cfb\u7edf\u5e94\u8be5\u7ed9\u5176\u4ed6\u7ebf\u7a0b\u4e00\u4e2a\u8fd0\u884c\u7684\u673a\u4f1a\u3002 std::this_thread::get_id\u51fd\u6570\u4e0d\u63a5\u53d7\u4efb\u4f55\u53c2\u6570\uff0c\u8fd4\u56de\u4e00\u4e2as t d::t h r e a d::i d\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u5b83\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7ebf\u7a0b\uff0c std::this_thread::sleep_for\u51fd\u6570\u63a5\u53d7\u4e00\u4e2astd::chrono::duration\u53c2\u6570\uff0c\u963b\u6b62\u5f53\u524d\u7ebf\u7a0b\u7684\u6267\u884c\uff0c\u81f3\u5c11\u76f4\u5230\u6307\u5b9a\u7684duration\u8fc7\u53bb\uff0c\u7136\u540e\u8fd4\u56devoid\u3002 std::this_thread::sleep_until\u63a5\u53d7\u4e00\u4e2astd::chrono::time_point\u5e76\u8fd4\u56devoid\u3002\u5b83\u5b8c\u5168\u7c7b\u4f3c\u4e8esleep_for\uff0c\u53ea\u662f\u5b83\u81f3\u5c11\u8981\u963b\u585e\u7ebf\u7a0b\u5230\u6307\u5b9a\u7684time_point\u3002 asio # Asynchronous IO system # \u4f7f\u7528 \u5934\u6587\u4ef6\u4e2d\u7684std::system\u51fd\u6570\u542f\u52a8\u4e00\u4e2a\u5355\u72ec\u7684\u8fdb\u7a0b\uff0c\u8be5\u51fd\u6570\u63a5\u53d7\u4e0e\u8981\u6267\u884c\u7684\u547d\u4ee4\u76f8\u5bf9\u5e94\u7684C\u98ce\u683c\u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56de\u4e0e\u547d\u4ee4\u7684\u8fd4\u56de\u7801\u76f8\u5bf9\u5e94\u7684int\u3002 cstdlib>\u5934\u6587\u4ef6\u5305\u542bstd::getenv\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u4e0e\u60f3\u8981\u67e5\u627e\u7684\u73af\u5883\u53d8\u91cf\u540d\u79f0\u76f8\u5bf9\u5e94\u7684C\u98ce\u683c\u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u76f8\u5e94\u53d8\u91cf\u5185\u5bb9\u7684C\u98ce\u683c\u5b57\u7b26\u4e32\u3002 \u2751 SIGTERM\u4ee3\u8868\u7ec8\u6b62\u8bf7\u6c42\u3002 \u2751 SIGSEGV\u4ee3\u8868\u65e0\u6548\u7684\u5185\u5b58\u8bbf\u95ee\u3002 \u2751 SIGINT\u4ee3\u8868\u5916\u90e8\u4e2d\u65ad\uff0c\u5982\u952e\u76d8\u4e2d\u65ad\u3002 \u2751 SIGILL\u4ee3\u8868\u65e0\u6548\u7684\u7a0b\u5e8f\u955c\u50cf\u3002 \u2751 SIGABRT\u4ee3\u8868\u5f02\u5e38\u7684\u7ec8\u6b62\u6761\u4ef6\uff0c\u4f8b\u5982std::abort\u3002 \u2751 SIGFPE\u4ee3\u8868\u6d6e\u70b9\u9519\u8bef\uff0c\u4f8b\u5982\u9664\u4ee5\u96f6\u3002","title":"\u73b0\u4ee3C++"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#int","text":"","title":"int"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#char","text":"\u2751 char\uff1a\u9ed8\u8ba4\u7c7b\u578b\uff0c\u603b\u662f1\u4e2a\u5b57\u8282\u3002\u53ef\u80fd\u662f\u4e5f\u53ef\u80fd\u4e0d\u662f\u6709\u7b26\u53f7\u7684\uff08\u4f8b\u5982\uff1aASCII\uff09\u200b\u3002 \u2751 char16_t\uff1a\u7528\u4e8e2\u5b57\u8282\u7684\u5b57\u7b26\u96c6\uff08\u4f8b\u5982\uff1aUTF-16\uff09\u200b\u3002 \u2751 char32_t\uff1a\u7528\u4e8e4\u5b57\u8282\u7684\u5b57\u7b26\u96c6\uff08\u4f8b\u5982\uff1aUTF-32\uff09\u200b\u3002 \u2751 signed char\uff1a\u4e0echar\u76f8\u540c\uff0c\u4f46\u4fdd\u8bc1\u662f\u6709\u7b26\u53f7\u7684\u3002 \u2751 unsigned char\uff1a\u4e0echar\u76f8\u540c\uff0c\u4f46\u4fdd\u8bc1\u662f\u65e0\u7b26\u53f7\u7684\u3002 \u2751 wchar_t\uff1a\u8db3\u591f\u5927\u4ee5\u5305\u542b\u5b9e\u73b0\u5e73\u53f0\u5730\u533a\u73af\u5883\u8bed\u8a00\u8bbe\u7f6e\u4e2d\u7684\u6700\u5927\u5b57\u7b26\uff08\u4f8b\u5982\uff1aUnicode\uff09\u200b\u3002","title":"char"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#byte","text":"\u5b83\u5b9a\u4e49\u5728 \u5934\u6587\u4ef6\u4e2d\u3002std::byte\u7c7b\u578b\u5141\u8bb8\u6309\u4f4d\u8fdb\u884c\u903b\u8f91\u8fd0\u7b97\u3002","title":"byte"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#size_t","text":"\u5728 \u5934\u6587\u4ef6\u4e2d,\u5728\u5b9e\u8df5\u4e2d\uff0c\u5b83\u901a\u5e38\u4e0e64\u4f4d\u67b6\u6784\u7cfb\u7edf\u7684unsigned long long\u76f8\u540c\u3002 \u4e00\u5143\u8fd0\u7b97\u7b26sizeof\u63a5\u53d7\u4e00\u4e2a\u7c7b\u578b\u5e76\u8fd4\u56de\u8be5\u7c7b\u578b\u7684\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u200b\u3002sizeof\u8fd0\u7b97\u7b26\u603b\u662f\u8fd4\u56de\u4e00\u4e2asize_t\u5bf9\u8c61","title":"size_t"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#void","text":"void\u7c7b\u578b\u8868\u793a\u4e00\u4e2a\u7a7a\u7684\u503c\u96c6\u5408\u3002\u56e0\u4e3avoid\u5bf9\u8c61\u4e0d\u80fd\u62e5\u6709\u503c\uff0c\u6240\u4ee5C++\u4e0d\u5141\u8bb8\u4f7f\u7528void\u5bf9\u8c61\u3002\u6211\u4eec\u53ea\u5728\u7279\u6b8a\u60c5\u51b5\u4e0b\u4f7f\u7528void\uff0c\u6bd4\u5982\u7528\u4f5c\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\u7684\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b","title":"void"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#type_traits","text":"","title":"type_traits"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#attribute","text":"","title":"attribute"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#paremeter_template","text":"","title":"paremeter_template"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#function-pointer","text":"","title":"function pointer"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#lambada","text":"lambda\u8868\u8fbe\u5f0f\u6709\u4e94\u4e2a\u7ec4\u4ef6\uff1a \u2751 \u6355\u83b7\u5217\u8868(captures)\uff1a\u51fd\u6570\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\uff08\u5373\u5c40\u90e8\u5e94\u7528\u7684\u53c2\u6570\uff09\u200b\u3002 \u2751 \u53c2\u6570(parameters)\uff1a\u8c03\u7528\u51fd\u6570\u5bf9\u8c61\u6240\u9700\u7684\u53c2\u6570\u3002 \u2751 \u8868\u8fbe\u5f0f\u4f53(body)\uff1a\u51fd\u6570\u5bf9\u8c61\u7684\u4ee3\u7801\u3002 \u2751 \u4fee\u9970\u7b26(modifiers)\uff1aconstexpr\u3001mutable\u3001noexcept\u548c[\u200b[noreturn]\u200b]\u7b49\u5143\u7d20\u3002 \u2751 \u8fd4\u56de\u7c7b\u578b(return-type)\uff1a\u51fd\u6570\u5bf9\u8c61\u8fd4\u56de\u7684\u7c7b\u578b\u3002","title":"lambada"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#stdfuction","text":"\u5934\u6587\u4ef6\u4e2d\u7684std::function\u7c7b\u6a21\u677f\u662f\u53ef\u8c03\u7528\u5bf9\u8c61\u7684\u591a\u6001\u5305\u88c5\u5668","title":"std::fuction"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#catch","text":"\u6700\u7b80\u5355\u7684\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\u4e4b\u4e00\u662fPhil Nash\u7684Catch\uff0c\u5b83\u53ef\u4ecehttps://github.com/catchorg/Catch2/\u83b7\u5f97\u3002\u56e0\u4e3aCatch\u662f\u4e00\u4e2a\u53ea\u6709\u5934\u6587\u4ef6\u7684\u5e93","title":"catch"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#gtest","text":"","title":"gtest"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#boost-test","text":"","title":"boost test"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#gmock","text":"","title":"gmock"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#hippomocks","text":"\u4e00\u4e2a\u53ea\u6709\u5934\u6587\u4ef6\u7684\u6a21\u62df\u5e93 GitHub( https://github.com/dascandy/hippomocks/ )","title":"HippoMocks"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#fakeit\u548ctrompeloeil","text":"FakeIt\uff08\u7531EranPe\u2019er\u63d0\u4f9b\uff0c\u53ef\u5728https://github.com/eranpeer/FakeIt/\u83b7\u5f97 Trompeloeil\uff08\u7531Bj\u00f6rn Fahller\u63d0\u4f9b\uff0c\u53ef\u5728https://github.com/rollbear/trompeloeil/\u83b7\u5f97 FakeIt\u7c7b\u4f3c\u4e8eHippoMocks\uff0c\u5e76\u4e14\u5b83\u662f\u4e00\u4e2a\u53ea\u5305\u542b\u5934\u6587\u4ef6\u7684\u5e93\u3002\u5b83\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u5728\u6784\u5efa\u671f\u671b\u65f6\u9075\u5faa\u9ed8\u8ba4\u8bb0\u5f55\u6a21\u5f0f\u3002FakeIt\u4e0d\u4f1a\u9884\u5148\u6307\u5b9a\u671f\u671b\u503c\uff0c\u800c\u662f\u5728\u6d4b\u8bd5\u7ed3\u675f \u65f6\u9a8c\u8bc1\u6a21\u62df\u5bf9\u8c61\u7684\u65b9\u6cd5\u662f\u5426\u88ab\u6b63\u786e\u8c03\u7528\u3002 Trompeloeil\uff08\u6765\u81ea\u6cd5\u8bedtrompe-l\u2019\u0153il\uff0c\u610f\u4e3a\u201c\u6b3a\u9a97\u773c\u775b\u201d\u200b\uff09\u53ef\u4ee5\u88ab\u89c6\u4e3aGoogle Mock\u7684\u73b0\u4ee3\u66ff\u4ee3\u54c1","title":"FakeIt\u548cTrompeloeil"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#uniq_ptr","text":"","title":"uniq_ptr"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#shared_ptr","text":"\u6211\u4eec\u4e3a\u6307\u5411\u7c7b\u578b\u6307\u5b9a\u4e00\u4e2a\u6a21\u677f\u53c2\u6570int\u2776\u3002\u5728\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e2d\uff0c\u5206\u914d\u5e76\u521d\u59cb\u5316\u4e00\u4e2aint\u5bf9\u8c61\u2777\u3002\u63a5\u7740\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u5220\u9664\u5668\u2778\u3002\u4f5c\u4e3a\u7b2c\u4e09\u4e2a\u53c2\u6570\uff0c\u6211\u4eec\u4f20\u5165\u4e00\u4e2astd::allocator\u2779\u3002","title":"shared_ptr"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#weak_ptr","text":"\u5f31\u6307\u9488\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u667a\u80fd\u6307\u9488\uff0c\u5b83\u5bf9\u6240\u5f15\u7528\u7684\u5bf9\u8c61\u7684\u6240\u6709\u6743\u3002\u5f31\u6307\u9488\u5141\u8bb8\u8ddf\u8e2a\u5bf9\u8c61\u5e76\u4ec5\u5728\u88ab\u8ddf\u8e2a\u5bf9\u8c61\u4ecd\u7136\u5b58\u5728\u65f6\u5c06\u5f31\u6307\u9488\u8f6c\u6362\u4e3a\u5171\u4eab\u6307\u9488\u3002 \u5f31\u6307\u9488\u901a\u8fc7\u8c03\u7528\u5b83\u4eec\u7684lock\u65b9\u6cd5\u6765\u83b7\u5f97\u5176\u8ddf\u8e2a\u5bf9\u8c61\u7684\u4e34\u65f6\u6240\u6709\u6743\u3002lock\u65b9\u6cd5\u603b\u662f\u521b\u5efa\u4e00\u4e2a\u5171\u4eab\u6307\u9488","title":"weak_ptr"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#optional","text":"optional\u662f\u4e00\u4e2a\u7c7b\u6a21\u677f\uff0c\u5b83\u5305\u542b\u4e00\u4e2a\u53ef\u80fd\u5b58\u5728\u4e5f\u53ef\u80fd\u4e0d\u5b58\u5728\u7684\u503c\u3002 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86std::optional\uff0c","title":"optional"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#pair","text":"pair\u662f\u4e00\u4e2a\u7c7b\u6a21\u677f\uff0c\u4e00\u4e2apair\u5bf9\u8c61\u4e2d\u53ef\u5305\u542b\u4e24\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u3002\u5bf9\u8c61\u662f\u6709\u5e8f\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6210\u5458first\u548csecond\u8bbf\u95ee\u5b83\u4eec stdlib\u7684 \u5934\u6587\u4ef6\u4e2d\u6709std::pair","title":"pair"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#tuple","text":"tuple\uff08\u5143\u7ec4\uff09\u662f\u4e00\u4e2a\u7c7b\u6a21\u677f\uff0c\u5305\u542b\u4efb\u610f\u6570\u91cf\u7684\u4e0d\u540c\u7c7b\u578b\u5143\u7d20,\u9700\u8981\u6211\u4eec\u4f7f\u7528\u975e\u6210\u5458\u51fd\u6570\u6a21\u677fget\u6765\u63d0\u53d6\u5143\u7d20\u3002 stdlib\u7684 \u5934\u6587\u4ef6\u4e2d\u6709std::tuple\u548cstd::get\uff0c","title":"tuple"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#any","text":"any\u662f\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u5355\u4e2a\u503c\u7684\u7c7b\u3002\u5b83\u4e0d\u662f\u7c7b\u6a21\u677f\u3002\u8981\u5c06any\u8f6c\u6362\u4e3a\u5177\u4f53\u7c7b\u578b\uff0c\u8bf7\u4f7f\u7528any\u5f3a\u5236\u8f6c\u6362(cast)\uff0c\u5b83\u662f\u4e00\u4e2a\u975e\u6210\u5458\u51fd\u6570\u6a21\u677f\u3002\u4efb\u4f55\u5f3a\u5236\u8f6c\u6362 stdlib\u7684 \u5934\u6587\u4ef6\u4e2d\u6709std::any","title":"any"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#variant","text":"variant\uff08\u53d8\u4f53\uff09\u662f\u5b58\u50a8\u5355\u4e2a\u503c\u7684\u7c7b\u6a21\u677f\uff0c\u503c\u7684\u7c7b\u578b\u4ec5\u9650\u4e8e\u4f5c\u4e3a\u6a21\u677f\u53c2\u6570\u63d0\u4f9b\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u5217\u8868\u3002 variant\u8981\u6c42\u663e\u5f0f\u679a\u4e3e\u5c06\u8981\u5b58\u50a8\u7684\u6240\u6709\u7c7b\u578b\u3002 stdlib\u7684 \u5934\u6587\u4ef6\u4e2d\u6709std::variant","title":"variant"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#chrono","text":"stdlib Chrono\u5e93\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86\u5404\u79cd\u65f6\u949f Chrono\u5e93\u4e2d\u63d0\u4f9b\u4e86\u4e09\u4e2a\u65f6\u949f\uff1b\u6bcf\u4e2a\u90fd\u63d0\u4f9b\u4e0d\u540c\u7684\u4fdd\u8bc1\uff0c\u5e76\u4e14\u90fd\u4f4d\u4e8estd::chrono\u547d\u540d\u7a7a\u95f4\u4e2d\uff1a \u2751 std::chrono::system_clock\u662f\u7cfb\u7edf\u8303\u56f4\u7684\u5b9e\u65f6\u65f6\u949f\u3002\u5b83\u6709\u65f6\u4e5f\u79f0\u4e3a\u6302\u949f(wall clock)\uff0c\u5373\u81ea\u7279\u5b9a\u5b9e\u73b0\u5f00\u59cb\u65e5\u671f\u4ee5\u6765\u7ecf\u8fc7\u7684\u5b9e\u65f6\u65f6\u95f4\u3002\u5927\u591a\u6570\u5b9e\u73b0\u90fd\u5c06Unix\u7684\u5f00\u59cb\u65e5\u671f\u6307\u5b9a\u4e3a1970\u5e741\u67081\u65e5\u5348\u591c\u3002 \u2751 std::chrono::steady_clock\u4fdd\u8bc1\u5b83\u7684\u503c\u6c38\u8fdc\u4e0d\u4f1a\u51cf\u5c11\u3002\u8fd9\u4f3c\u4e4e\u5f88\u8352\u8c2c\uff0c\u4f46\u65f6\u95f4\u6d4b\u91cf\u6bd4\u770b\u8d77\u6765\u7684\u66f4\u590d\u6742\u3002\u4f8b\u5982\uff0c\u7cfb\u7edf\u53ef\u80fd\u4e0d\u5f97\u4e0d\u5e94\u5bf9\u95f0\u79d2\u6216\u4e0d\u51c6\u786e\u7684\u65f6\u949f\u3002 \u2751 std::chrono::high_resolution_clock\u5177\u6709\u6700\u77ed\u7684\u53ef\u7528tick\u5468\u671f\uff1atick\u662f\u65f6\u949f\u53ef\u4ee5\u6d4b\u91cf\u7684\u6700\u5c0f\u539f\u5b50\u6539\u53d8\u3002 Chrono\u4f7f\u7528std::chrono::time_point\u7c7b\u578b\u5bf9\u65f6\u95f4\u70b9\u8fdb\u884c\u7f16\u7801\u3002 std::chrono::duration\u8868\u793a\u4e24\u4e2atime_point\u5bf9\u8c61\u4e4b\u95f4\u7684\u65f6\u95f4\u3002 std::literals::chrono_literals\u547d\u540d\u7a7a\u95f4\uff0c\u56e0\u6b64\u53ef\u4ee5\u8bbf\u95ee\u6301\u7eed\u65f6\u95f4\u5b57\u9762\u91cf std::chrono::duration_cast\u4ee5\u5c06\u6301\u7eed\u65f6\u95f4\u4ece\u4e00\u79cd\u5355\u4f4d\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u5355\u4f4d stdlib\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86\u5e76\u53d1\u539f\u8bed\uff0c\u5176\u4e2d\u5305\u542b\u975e\u6210\u5458\u51fd\u6570std::this_thread::sleep_for","title":"chrono"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#numerics","text":"stdlib\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86std::complex\u7c7b\u6a21\u677f\u3002 stdlib\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86\u7c7b\u6a21\u677fstd::numeric_limits stdlib \u5934\u6587\u4ef6\u4e2d\u7684std::ratio\u662f\u4e00\u4e2a\u7c7b\u6a21\u677f\uff0c\u4f7f\u7528\u5b83\u80fd\u591f\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u6709\u7406\u6570\u8ba1\u7b97","title":"Numerics"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#array","text":"array \u7c7b\u6a21\u677f\u63a5\u53d7\u4e24\u4e2a\u6a21\u677f\u53c2\u6570\uff1a\u2751 \u5305\u542b\u7684\u7c7b\u578bT\u3002\u2751 \u6570\u7ec4S\u7684\u56fa\u5b9a\u5927\u5c0f\u3002 \u2751 operator[\u200b]\u3002\u2751 at\u3002\u2751 get\u3002","title":"array"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#vector","text":"STL\u7684 \u5934\u6587\u4ef6\u4e2d\u7684std::vector\u662f\u4e00\u4e2a\u987a\u5e8f\u5bb9\u5668\uff0c\u53ef\u4ee5\u4fdd\u5b58\u52a8\u6001\u5927\u5c0f\u7684\u3001\u8fde\u7eed\u7684\u4e00\u7cfb\u5217\u5143\u7d20\u3002","title":"vector"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#deque","text":"\u53cc\u7aef\u961f\u5217\uff08deque\uff0c\u8bfb\u4f5c\u201cdeck\u201d\u200b\uff09\u662f\u4e00\u4e2a\u987a\u5e8f\u5bb9\u5668\uff0c\u5177\u6709\u4ece\u524d\u540e\u5feb\u901f\u63d2\u5165\u548c\u5220\u9664\u7684\u64cd\u4f5c STL\u5b9e\u73b0\u7684std::deque\u53ef\u4ece \u5934\u6587\u4ef6\u4e2d\u83b7\u5f97\u3002 \u53cc\u7aef\u961f\u5217\u7684\u5185\u5b58\u901a\u5e38\u662f\u5206\u6563\u7684\uff0c\u5c31\u50cf\u5411\u91cf\u548c\u5217\u8868(list)\u7684\u6df7\u5408\u4f53","title":"deque"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#list","text":"\u5217\u8868(list)\u662f\u4e00\u4e2a\u987a\u5e8f\u5bb9\u5668\uff0c\u5b83\u53ef\u5728\u4efb\u610f\u4f4d\u7f6e\u5feb\u901f\u63d2\u5165\u5143\u7d20\u6216\u5220\u9664\u5143\u7d20\uff0c\u4f46\u65e0\u6cd5\u968f\u673a\u8bbf\u95ee\u5143\u7d20\u3002STL\u5b9e\u73b0std::list\u53ef\u4ece \u5934\u6587\u4ef6\u4e2d\u83b7\u5f97\u3002 STL\u8fd8\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2astd::forward_list\uff0c\u5b83\u662f\u4e00\u4e2a\u5355\u5411\u94fe\u8868\uff0c\u53ea\u5141\u8bb8\u5728\u4e00\u4e2a\u65b9\u5411\u4e0a\u8fdb\u884c\u8fed\u4ee3","title":"list"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#stack","text":"\u6700\u540e\u88ab\u538b\u5165\u6808\u7684\u5143\u7d20\u662f\u7b2c\u4e00\u4e2a\u88ab\u5f39\u51fa\u7684\u5143\u7d20\u3002 STL\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86std::stack","title":"stack"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#queue","text":"STL\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86std::queue \u961f\u5217\u662f\u5148\u8fdb\u5148\u51fa\u7684\u3002\u5f53\u5c06\u4e00\u4e2a\u5143\u7d20\u63a8\u5165\u961f\u5217\u65f6\uff0c\u5176\u5b9e\u662f\u5c06\u5143\u7d20\u63d2\u5165\u961f\u5217\u7684\u672b\u7aef\u3002\u5f53\u4ece\u961f\u5217\u4e2d\u5f39\u51fa\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u5176\u5b9e\u662f\u5c06\u5143\u7d20\u4ece\u961f\u5217\u7684\u5f00\u5934\u79fb\u9664","title":"queue"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#heap","text":"\u4f18\u5148\u7ea7\u961f\u5217(priority queue)\u4e5f\u79f0\u4e3a\u5806(heap)\uff0c\u662f\u4e00\u79cd\u652f\u6301push\u548cpop\u64cd\u4f5c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u6839\u636e\u7528\u6237\u6307\u5b9a\u7684\u6bd4\u8f83\u5668\u5bf9\u8c61\u4fdd\u6301\u5143\u7d20\u6709\u5e8f.priority_queue\u6839\u636e\u6bd4\u8f83\u5668\u6bd4\u8f83\u7ed3\u679c\u51b3\u5b9a\u5f39\u51fa\u5143\u7d20\u3002 STL\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86std::priority_queue","title":"heap"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#bitset","text":"bitset\uff08\u4f4d\u96c6\uff09\u662f\u4e00\u79cd\u5b58\u50a8\u56fa\u5b9a\u5927\u5c0f\u7684\u4f4d(bit)\u5e8f\u5217\u7684\u6570\u636e\u7ed3\u6784\u3002\u6211\u4eec\u53ef\u4ee5\u64cd\u7eb5\u6bcf\u4e00\u4f4d\u3002 STL\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86std::bitset\u3002","title":"bitset"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#set","text":"STL\u7684 \u5934\u6587\u4ef6\u4e2d\u53ef\u7528\u7684std::set\u662f\u4e00\u4e2a\u5173\u8054\u5bb9\u5668\uff0c\u8fd9\u79cd\u5bb9\u5668\u5305\u542b\u79f0\u4e3a\u952e(key)\u7684\u5df2\u6392\u5e8f\u7684\u552f\u4e00\u5143\u7d20\u3002","title":"set"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#multiset","text":"STL\u7684 \u5934\u6587\u4ef6\u4e2d\u53ef\u7528\u7684std::multiset\u662f\u4e00\u4e2a\u5173\u8054\u5bb9\u5668\uff0c\u8fd9\u79cd\u5bb9\u5668\u5305\u542b\u5df2\u6392\u5e8f\u7684\u975e\u552f\u4e00\u952e\u3002multiset\u652f\u6301\u4e0e\u666e\u901a\u96c6\u5408\u76f8\u540c\u7684\u64cd\u4f5c\uff0c multiset\u7684count\u65b9\u6cd5\u53ef\u4ee5\u544a\u8bc9\u6211\u4eec\u6709\u591a\u5c11\u5143\u7d20\u4e0e\u7ed9\u5b9a\u952e\u5339\u914d\u3002 equal_range\u53ef\u4ee5\u8fd4\u56de\u5305\u542b\u591a\u4e2a\u5143\u7d20\u7684\u534a\u5f00\u534a\u95ed\u533a\u95f4","title":"multiset"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#unordered_set","text":"\u5934\u6587\u4ef6\u4e2d\u53ef\u7528\u7684std::unordered_set\u4e5f\u662f\u4e00\u4e2a\u5173\u8054\u5bb9\u5668\uff0c\u8fd9\u79cd\u5bb9\u5668\u5305\u542b\u672a\u6392\u5e8f\u7684\u552f\u4e00\u952e, unordered_set\u901a\u5e38\u5b9e\u73b0\u4e3a\u54c8\u5e0c\u8868 STL\u5728 \u5934\u6587\u4ef6\u4e2d\u63d0\u4f9b\u4e86\u54c8\u5e0c\u5668\u7c7b\u6a21\u677fstd::hash \uff0c\u5176\u4e2d\u5305\u542b\u57fa\u672c\u7c7b\u578b\u3001\u679a\u4e3e\u7c7b\u578b\u3001\u6307\u9488\u7c7b\u578b\u3001optional\u3001variant\u3001\u667a\u80fd\u6307\u9488\u7b49\u7684\u7279\u5316\u3002","title":"unordered_set"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#unordered_multiset","text":"unordered_multiset\u652f\u6301\u4e0eunordered_set\u76f8\u540c\u7684\u6784\u9020\u51fd\u6570\u548c\u64cd\u4f5c\uff0c\u4f46\u5b83\u4f1a\u5b58\u50a8\u5197\u4f59\u5143\u7d20\u3002","title":"unordered_multiset"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#map","text":"\u7c7b\u6a21\u677fmap \u63a5\u53d7\u56db\u4e2a\u6a21\u677f\u53c2\u6570\u3002\u7b2c\u4e00\u4e2a\u662f\u952e\u7c7b\u578bKey\uff0c\u7b2c\u4e8c\u4e2a\u662f\u503c\u7c7b\u578bValue\uff0c\u7b2c\u4e09\u4e2a\u662f\u6bd4\u8f83\u5668\u7c7b\u578b\uff08\u9ed8\u8ba4\u4e3astd::less\uff09\u200b\uff0c\u7b2c\u56db\u4e2a\u662f\u5206\u914d\u5668\u7c7b\u578b\uff08\u9ed8\u8ba4\u4e3astd::allocator \uff09\u200b\u3002","title":"map"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#multimap","text":"multimap\u4e0d\u652f\u6301map\u652f\u6301\u7684\u5173\u8054\u6570\u7ec4\u529f\u80fd\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u652f\u6301operator[\u200b]\u548cat\u3002\u4e0emultiset\u4e00\u6837\uff0cmultimap\u4e3b\u8981\u901a\u8fc7equal_range\u65b9\u6cd5\u63d0\u4f9b\u5143\u7d20\u8bbf\u95ee\u529f\u80fd","title":"multimap"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#unordered_map","text":"std::unordered_map\u548cstd::unordered_multimap\u90fd\u5728STL\u7684 \u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u3002\u8fd9\u4e9b\u5173\u8054\u5bb9\u5668\u901a\u5e38\u50cf\u5bf9\u5e94\u7684\u96c6\u5408\u4e00\u6837\u4f7f\u7528\u7ea2\u9ed1\u6811\u3002\u5b83\u4eec\u4e5f\u9700\u8981\u54c8\u5e0c\u51fd\u6570\u548c\u76f8\u7b49\u51fd\u6570\uff0c\u5e76\u4e14\u652f\u6301\u6876\u63a5\u53e3\u3002","title":"unordered_map"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#unordered_multimap","text":"","title":"unordered_multimap"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#initializer_list","text":"STL\u7684 \u5934\u6587\u4ef6\u4e2d\u7684std::initializer_list\u5bb9\u5668\u6765\u5b9e\u73b0","title":"initializer_list"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#\u8fed\u4ee3\u5668","text":"std::advance\u8f85\u52a9\u51fd\u6570\u5141\u8bb8\u6309\u6240\u9700\u7684\u6570\u91cf\u9012\u589e\u6216\u9012\u51cf\u3002 std::next\u548cstd::prev\u8fd9\u4e24\u4e2a\u8fed\u4ee3\u5668\u8f85\u52a9\u51fd\u6570\u662f\u8ba1\u7b97\u4ece\u7ed9\u5b9a\u8fed\u4ee3\u5668\u51fa\u53d1\u7684\u504f\u79fb\u91cf\u7684\u51fd\u6570\u6a21\u677f\u3002 std::distance\u8fed\u4ee3\u5668\u8f85\u52a9\u51fd\u6570\u53ef\u4ee5\u8ba1\u7b97\u4e24\u4e2a\u8f93\u5165\u8fed\u4ee3\u5668itr1\u548citr2\u4e4b\u95f4\u7684\u8ddd\u79bb std::iter_swap\u8fed\u4ee3\u5668\u8f85\u52a9\u51fd\u6570\u5141\u8bb8\u4ea4\u6362\u4e24\u4e2a\u524d\u5411\u8fed\u4ee3\u5668itr1\u548citr2\u6240\u6307\u5411\u7684\u503c","title":"\u8fed\u4ee3\u5668"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#string","text":"\u2751 char\u7684std::string\u7528\u4e8eASCII\u4e4b\u7c7b\u7684\u5b57\u7b26\u96c6\u3002 \u2751 wchar_t\u7684std::wstring\u8db3\u591f\u5927\uff0c\u53ef\u4ee5\u5305\u542b\u5b9e\u73b0\u8bed\u8a00\u73af\u5883\u7684\u6700\u5927\u5b57\u7b26\u3002 \u2751 char16_t\u7684std::u16string\u7528\u4e8eUTF-16\u4e4b\u7c7b\u7684\u5b57\u7b26\u96c6\u3002 \u2751 char32_t\u7684std::u32string\u7528\u4e8eUTF-32\u4e4b\u7c7b\u7684\u5b57\u7b26\u96c6\u3002","title":"string"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#string_view","text":"\u5b57\u7b26\u4e32\u89c6\u56fe(string view)\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5b83\u8868\u793a\u4e00\u4e2a\u6052\u5b9a\u7684\u3001\u8fde\u7eed\u7684\u5b57\u7b26\u5e8f\u5217\u3002 \u867d\u7136string_view\u4e5f\u652f\u6301\u590d\u5236\u6784\u9020\u548c\u590d\u5236\u8d4b\u503c\uff0c\u4f46\u5b83\u4e0d\u652f\u6301\u79fb\u52a8\u6784\u9020\u548c\u79fb\u52a8\u8d4b\u503c\u3002","title":"string_view"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#\u6b63\u5219\u8868\u8fbe\u5f0fregular-expression","text":"STL\u7684 \u5934\u6587\u4ef6\u4e2d\u7684std::basic_regex\u7c7b\u6a21\u677f\u8868\u793a\u4ece\u6a21\u5f0f\u6784\u9020\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002","title":"\u6b63\u5219\u8868\u8fbe\u5f0f(regular expression"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#stream","text":"","title":"stream"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#filesystem","text":"","title":"filesystem"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#path","text":"std::filesystem::path\u662f\u6587\u4ef6\u7cfb\u7edf\u5e93\u4e2d\u7528\u4e8e\u6784\u9020\u8def\u5f84\u7684\u7c7b\uff0c\u5305\u542b\u5728 \u5934\u6587\u4ef6","title":"path"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#algorithm","text":"","title":"algorithm"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#\u975e\u4fee\u6539\u5e8f\u5217\u64cd\u4f5c","text":"all_of\u7b97\u6cd5\u786e\u5b9a\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u662f\u5426\u7b26\u5408\u7528\u6237\u6307\u5b9a\u7684\u6807\u51c6 any_of\u7b97\u6cd5\u786e\u5b9a\u5e8f\u5217\u4e2d\u662f\u5426\u6709\u5143\u7d20\u7b26\u5408\u7528\u6237\u6307\u5b9a\u7684\u6807\u51c6\u3002 none_of\u7b97\u6cd5\u786e\u5b9a\u5e8f\u5217\u4e2d\u662f\u5426\u6ca1\u6709\u5143\u7d20\u7b26\u5408\u7528\u6237\u6307\u5b9a\u7684\u6807\u51c6\u3002 for_each\u7b97\u6cd5\u5c06\u7528\u6237\u5b9a\u4e49\u7684\u51fd\u6570\u5e94\u7528\u4e8e\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u3002 for_each_n\u7b97\u6cd5\u5c06\u7528\u6237\u5b9a\u4e49\u7684\u51fd\u6570\u5e94\u7528\u4e8e\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u3002 find\u3001find_if\u548cfind_if_not\u7b97\u6cd5\u5728\u5e8f\u5217\u4e2d\u5bfb\u627e\u4e0e\u7528\u6237\u5b9a\u4e49\u7684\u6807\u51c6\u76f8\u5339\u914d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002 find_end\u7b97\u6cd5\u67e5\u627e\u5b50\u5e8f\u5217\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 find_first_of\u7b97\u6cd5\u5bfb\u627e\u5e8f\u52171\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7b49\u4e8e\u5e8f\u52172\u4e2d\u7684\u67d0\u4e2a\u5143\u7d20\u7684\u5143\u7d20\u3002 adjacent_find\u7b97\u6cd5\u5bfb\u627e\u5e8f\u5217\u4e2d\u7684\u7b2c\u4e00\u5bf9\u76f8\u90bb\u91cd\u590d\u5143\u7d20. count\u7b97\u6cd5\u5bf9\u5e8f\u5217\u4e2d\u5339\u914d\u67d0\u4e9b\u7528\u6237\u5b9a\u4e49\u7684\u6807\u51c6\u7684\u5143\u7d20\u8fdb\u884c\u8ba1\u6570\u3002 mismatch\u7b97\u6cd5\u5728\u4e24\u4e2a\u5e8f\u5217\u4e2d\u5bfb\u627e\u7b2c\u4e00\u4e2a\u4e0d\u5339\u914d\u7684\u5b50\u5e8f\u5217\u3002 equal\u7b97\u6cd5\u786e\u5b9a\u4e24\u4e2a\u5e8f\u5217\u662f\u5426\u76f8\u7b49\u3002 is_permutation\u7b97\u6cd5\u786e\u5b9a\u4e24\u4e2a\u5e8f\u5217\u662f\u5426\u4e92\u4e3a\u6392\u5217\uff0c\u6392\u5217\u610f\u5473\u7740\u5b83\u4eec\u5305\u542b\u76f8\u540c\u7684\u5143\u7d20\u4f46\u53ef\u80fd\u987a\u5e8f\u4e0d\u540c\u3002 search\u7b97\u6cd5\u53ef\u4ee5\u5b9a\u4f4d\u5b50\u5e8f\u5217\u3002\u8be5\u7b97\u6cd5\u5728\u5e8f\u52171\u4e2d\u5b9a\u4f4d\u5e8f\u52172\u3002 search_n\u7b97\u6cd5\u5b9a\u4f4d\u5305\u542b\u76f8\u540c\u8fde\u7eed\u503c\u7684\u5b50\u5e8f\u5217\u3002\u8be5\u7b97\u6cd5\u5728\u5e8f\u5217\u4e2d\u641c\u7d22count\u4e2a\u8fde\u7eed\u503c\u5e76\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u7b2c\u4e00\u4e2a\u503c\u7684\u8fed\u4ee3\u5668","title":"\u975e\u4fee\u6539\u5e8f\u5217\u64cd\u4f5c"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#\u53ef\u53d8\u5e8f\u5217\u64cd\u4f5c","text":"copy\u7b97\u6cd5\u5c06\u4e00\u4e2a\u5e8f\u5217\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u5e8f\u5217\u3002 copy_n\u7b97\u6cd5\u5c06\u4e00\u4e2a\u5e8f\u5217\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u5e8f\u5217\u3002\u8be5\u7b97\u6cd5\u5c06\u76ee\u6807\u5e8f\u5217\u590d\u5236\u5230result\u4e2d\u5e76\u8fd4\u56de\u63a5\u6536\u5e8f\u5217\u7684\u7ed3\u675f\u8fed\u4ee3\u5668\u3002 copy_backward\u7b97\u6cd5\u5c06\u4e00\u4e2a\u5e8f\u5217\u53cd\u5411\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u5e8f\u5217\u4e2d\u3002 move\u7b97\u6cd5\u5c06\u4e00\u4e2a\u5e8f\u5217\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u5e8f\u5217\u4e2d\u3002 move_backward\u7b97\u6cd5\u5c06\u4e00\u4e2a\u5e8f\u5217\u53cd\u5411\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u5e8f\u5217\u4e2d\u3002 swap_ranges\u7b97\u6cd5\u5c06\u5143\u7d20\u4ece\u4e00\u4e2a\u5e8f\u5217\u4ea4\u6362\u5230\u53e6\u4e00\u4e2a\u5e8f\u5217\u3002 transform\u7b97\u6cd5\u4fee\u6539\u4e00\u4e2a\u5e8f\u5217\u7684\u5143\u7d20\u5e76\u5c06\u5b83\u4eec\u5199\u5165\u53e6\u4e00\u4e2a\u5e8f\u5217\u3002 replace\u7b97\u6cd5\u7528\u4e00\u4e9b\u65b0\u7684\u5143\u7d20\u66ff\u6362\u5e8f\u5217\u4e2d\u7684\u67d0\u4e9b\u5143\u7d20\u3002 fill\u7b97\u6cd5\u7528\u4e00\u4e9b\u503c\u586b\u5145\u5e8f\u5217\u3002 generate\u7b97\u6cd5\u901a\u8fc7\u8c03\u7528\u51fd\u6570\u5bf9\u8c61\u6765\u586b\u5145\u5e8f\u5217\u3002 remove\u7b97\u6cd5\u4ece\u4e00\u4e2a\u5e8f\u5217\u4e2d\u5220\u9664\u67d0\u4e9b\u5143\u7d20\u3002 unique\u7b97\u6cd5\u4ece\u5e8f\u5217\u4e2d\u53bb\u9664\u591a\u4f59\u7684\u5143\u7d20\u3002 reverse\u7b97\u6cd5\u662f\u5c06\u5e8f\u5217\u7684\u987a\u5e8f\u98a0\u5012\u8fc7\u6765 sample\uff08\u91c7\u6837\uff09\u7b97\u6cd5\u4ea7\u751f\u968f\u673a\u7684\u3001\u7a33\u5b9a\u7684\u5b50\u5e8f\u5217\u3002 shuffle\u7b97\u6cd5\u4ea7\u751f\u968f\u673a\u6392\u5217\u3002","title":"\u53ef\u53d8\u5e8f\u5217\u64cd\u4f5c"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#\u6392\u5e8f","text":"sort\uff08\u6392\u5e8f\uff09\u7b97\u6cd5\u5bf9\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f stable_sort\u7b97\u6cd5\u5bf9\u5e8f\u5217\u8fdb\u884c\u7a33\u5b9a\u7684\u6392\u5e8f\u3002 partial_sort\u7b97\u6cd5\u5c06\u5e8f\u5217\u5206\u4e3a\u4e24\u7ec4\u3002 is_sorted\u7b97\u6cd5\u5224\u65ad\u5e8f\u5217\u662f\u5426\u6709\u5e8f\u3002 nth_element\u7b97\u6cd5\u5c06\u5e8f\u5217\u4e2d\u7684\u7279\u5b9a\u5143\u7d20\u653e\u5165\u5176\u6b63\u786e\u7684\u6392\u5e8f\u4f4d\u7f6e\u3002","title":"\u6392\u5e8f"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#\u641c\u7d22","text":"lower_bound\u7b97\u6cd5\u5728\u5df2\u6392\u5e8f\u7684\u5e8f\u5217\u4e2d\u67e5\u627e\u4f7f\u5176\u5206\u533a\u7684\u5143\u7d20\u3002 upper_bound\u7b97\u6cd5\u5728\u6709\u5e8f\u5e8f\u5217\u4e2d\u67e5\u627e\u4f7f\u5176\u5206\u533a\u7684\u5143\u7d20\u3002 equal_range\u7b97\u6cd5\u5728\u6709\u5e8f\u5e8f\u5217\u4e2d\u67e5\u627e\u7279\u5b9a\u5143\u7d20\u7684\u533a\u95f4\u3002 binary_search\u7b97\u6cd5\u5728\u6709\u5e8f\u5e8f\u5217\u4e2d\u67e5\u627e\u7279\u5b9a\u5143\u7d20\u3002","title":"\u641c\u7d22"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#partition","text":"\u4e00\u4e2a\u5206\u533a\u7684\u5e8f\u5217\u5305\u542b\u4e24\u4e2a\u8fde\u7eed\u7684\u3001\u4e0d\u540c\u7684\u5143\u7d20\u7ec4\u3002\u8fd9\u4e9b\u7ec4\u7684\u5143\u7d20\u4e0d\u91cd\u5408\uff0c\u7b2c\u4e8c\u4e2a\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u88ab\u79f0\u4e3a\u5206\u533a\u70b9 is_partitioned\u7b97\u6cd5\u786e\u5b9a\u5e8f\u5217\u662f\u5426\u5df2\u5206\u533a\u3002 \u4e00\u4e2a\u5206\u533a\u7684\u5e8f\u5217\u5305\u542b\u4e24\u4e2a\u8fde\u7eed\u7684\u3001\u4e0d\u540c\u7684\u5143\u7d20\u7ec4\u3002\u8fd9\u4e9b\u7ec4\u7684\u5143\u7d20\u4e0d\u91cd\u5408\uff0c\u7b2c\u4e8c\u4e2a\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u88ab\u79f0\u4e3a\u5206\u533a\u70b9 partition_copy\u7b97\u6cd5\u5bf9\u5e8f\u5217\u8fdb\u884c\u5206\u533a\u3002\u8be5\u7b97\u6cd5\u901a\u8fc7\u5bf9\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884cpred\u8bc4\u4f30\u6765\u5212\u5206\u76ee\u6807\u5e8f\u5217\u3002 stable_partition\u7b97\u6cd5\u5bf9\u5e8f\u5217\u8fdb\u884c\u7a33\u5b9a\u5206\u533a\u3002","title":"partition"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#merge","text":"\u5408\u5e76\u7b97\u6cd5\u53ef\u4ee5\u5408\u5e76\u4e24\u4e2a\u6392\u5e8f\u7684\u76ee\u6807\u5e8f\u5217\uff0c\u4f7f\u5f97\u8f93\u51fa\u5e8f\u5217\u5305\u542b\u4e24\u4e2a\u76ee\u6807\u5e8f\u5217\u7684\u526f\u672c\u5e76\u4e14\u4e5f\u662f\u6709\u5e8f\u7684\u3002 merge\u7b97\u6cd5\u5408\u5e76\u4e24\u4e2a\u6392\u5e8f\u7684\u5e8f\u5217\u3002\u8be5\u7b97\u6cd5\u5c06\u4e24\u4e2a\u76ee\u6807\u5e8f\u5217\u590d\u5236\u5230\u4e00\u4e2a\u8f93\u51fa\u5e8f\u5217\u4e2d\u3002","title":"merge"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#\u6781\u503c","text":"min\u6216max\u7b97\u6cd5\u53ef\u4ee5\u786e\u5b9a\u5e8f\u5217\u7684\u6781\u503c\u3002 min_element\u6216max_element\u7b97\u6cd5\u786e\u5b9a\u5e8f\u5217\u7684\u6781\u503c\u3002 clamp\u7b97\u6cd5\u5bf9\u4e00\u4e2a\u503c\u8fdb\u884c\u9650\u5b9a\u3002\u8be5\u7b97\u6cd5\u4f7f\u7528operator\u6216comp\u6765\u786e\u5b9aobj\u662f\u5426\u5728\u4ecelow\u5230high\u7684\u8303\u56f4\u5185\u3002","title":"\u6781\u503c"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#\u6570\u503c\u8fd0\u7b97","text":"\u2751 plus \u5b9e\u73b0\u4e86\u52a0\u6cd5x+y\u3002 \u2751 minus \u5b9e\u73b0\u4e86\u51cf\u6cd5x-y\u3002 \u2751 multiplies \u5b9e\u73b0\u4e86\u4e58\u6cd5x*y\u3002 \u2751 divides \u5b9e\u73b0\u4e86\u9664\u6cd5x/y\u3002 \u2751 modulus \u5b9e\u73b0\u4e86\u6a21\u8fd0\u7b97x%y\u3002 iota\u7b97\u6cd5\u7528\u589e\u91cf\u503c\u586b\u5145\u5e8f\u5217\u3002\u8be5\u7b97\u6cd5\u5c06\u4ecestart\u5f00\u59cb\u7684\u589e\u91cf\u503c\u8d4b\u503c\u7ed9\u76ee\u6807\u5e8f\u5217\u3002 accumulate\u7b97\u6cd5\u6298\u53e0\u5e8f\u5217,\u8be5\u7b97\u6cd5\u5c06op\u5e94\u7528\u4e8estart\u548c\u76ee\u6807\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\u5b83\u83b7\u53d6\u7ed3\u679c\u548c\u76ee\u6807\u5e8f\u5217\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u518d\u6b21\u5e94\u7528op\uff0c\u4e0d\u65ad\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8fdb\u884c\uff0c\u76f4\u5230\u5b83\u8bbf\u95ee\u4e86\u76ee\u6807\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u3002 reduce\u7b97\u6cd5\u4e5f\u6298\u53e0\u5e8f\u5217 inner_product\u7b97\u6cd5\u8ba1\u7b97\u4e24\u4e2a\u5e8f\u5217\u7684\u5185\u79ef\u3002 adjacent_difference\u7b97\u6cd5\u751f\u6210\u90bb\u5dee\uff08\u5373\u76f8\u90bb\u5143\u7d20\u7684\u5dee\uff09\u200b\u3002 partial_sum\u7b97\u6cd5\u751f\u6210\u90e8\u5206\u5143\u7d20\u7684\u548c\u3002","title":"\u6570\u503c\u8fd0\u7b97"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#thread","text":"","title":"thread"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#async","text":"\u4e92\u65a5\u9501(mutex)\u662f\u4e00\u79cd\u9632\u6b62\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u8d44\u6e90\u7684\u673a\u5236 \u5934\u6587\u4ef6\u516c\u5f00\u4e86\u51e0\u4e2a\u4e92\u65a5\u9501\u9009\u9879\uff1a \u2751 std::mutex\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u4e92\u65a5\u9501\u3002 \u2751 std::timed_mutex\u63d0\u4f9b\u4e86\u5e26\u6709\u8d85\u65f6\u673a\u5236\u7684\u4e92\u65a5\u9501\u3002 \u2751 std::recursive_mutex\u63d0\u4f9b\u4e86\u4e92\u65a5\u9501\uff0c\u5141\u8bb8\u540c\u4e00\u7ebf\u7a0b\u8fdb\u884c\u9012\u5f52\u9501\u5b9a\u3002 \u2751 std::recursive_timed_mutex\u63d0\u4f9b\u4e86\u4e92\u65a5\u9501\uff0c\u5141\u8bb8\u540c\u4e00\u7ebf\u7a0b\u8fdb\u884c\u9012\u5f52\u9501\u5b9a\u5e76\u6709\u8d85\u65f6\u673a\u5236\u3002 \u5934\u6587\u4ef6\u63d0\u4f9b\u4e86\u4e24\u4e2a\u989d\u5916\u7684\u9009\u9879\uff1a \u2751 std::shared_mutex\u63d0\u4f9b\u4e86\u5171\u4eab\u4e92\u65a5\u9501\uff0c\u8fd9\u610f\u5473\u7740\u51e0\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u540c\u65f6\u62e5\u6709\u8be5\u4e92\u65a5\u9501\u3002 \u2751 std::shared_timed_mutex\u63d0\u4f9b\u4e86\u5171\u4eab\u4e92\u65a5\u9501\uff0c\u5e76\u5b9e\u73b0\u4e86\u6709\u8d85\u65f6\u673a\u5236\u7684\u9501\u5b9a\u3002 \u2751 std::lock_guard\u662f\u4e00\u4e2a\u4e0d\u53ef\u590d\u5236\u3001\u4e0d\u53ef\u79fb\u52a8\u7684RAII\u5305\u88c5\u5668\uff0c\u5b83\u5728\u6784\u9020\u51fd\u6570\u4e2d\u63a5\u53d7\u4e00\u4e2a\u4e92\u65a5\u9501\u5bf9\u8c61\uff0c\u5728\u90a3\u91cc\u8c03\u7528lock\u3002\u7136\u540e\u5728\u6790\u6784\u51fd\u6570\u4e2d\u8c03\u7528unlock\u3002 \u2751 std::scoped_lock\u662f\u4e00\u4e2a\u907f\u514d\u6b7b\u9501\u7684RAII\u5305\u88c5\u5668\uff0c\u7528\u4e8e\u591a\u4e2a\u4e92\u65a5\u9501\u3002 \u2751 std::unique_lock\u5b9e\u73b0\u4e86\u4e00\u4e2a\u53ef\u79fb\u52a8\u7684\u4e92\u65a5\u9501\u6240\u6709\u6743\u5305\u88c5\u5668\u3002 \u2751 std::shared_lock\u5b9e\u73b0\u4e86\u4e00\u4e2a\u53ef\u79fb\u52a8\u7684\u5171\u4eab\u4e92\u65a5\u9501\u6240\u6709\u6743\u5305\u88c5\u5668\u3002 \u4f7f\u7528 \u5934\u6587\u4ef6\u4e2d\u7684std::atomic\u7c7b\u6a21\u677f\uff0c \u6761\u4ef6\u53d8\u91cf(condition variable)\u662f\u4e00\u4e2a\u540c\u6b65\u539f\u8bed\uff0c\u5b83\u53ef\u4ee5\u963b\u585e\u591a\u4e2a\u7ebf\u7a0b\uff0c\u76f4\u5230\u6536\u5230\u901a\u77e5\u3002\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u901a\u77e5\u8be5\u6761\u4ef6\u53d8\u91cf\u3002\u5728\u6536\u5230\u901a\u77e5\u4e4b\u540e\uff0c\u6761\u4ef6\u53d8\u91cf\u53ef\u4ee5\u89e3\u9664\u5bf9\u591a\u4e2a\u7ebf\u7a0b\u7684\u9501\u5b9a\uff0c\u4ece\u800c\u4f7f\u5b83\u4eec\u7ee7\u7eed\u6267\u884c\u3002 std::this_thread::yield\u51fd\u6570\u4e0d\u63a5\u53d7\u4efb\u4f55\u53c2\u6570\uff0c\u8fd4\u56devoid\u3002yield\u7684\u5177\u4f53\u884c\u4e3a\u53d6\u51b3\u4e8e\u73af\u5883\uff0c\u4f46\u4e00\u822c\u6765\u8bf4\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63d0\u793a\uff0c\u5373\u64cd\u4f5c\u7cfb\u7edf\u5e94\u8be5\u7ed9\u5176\u4ed6\u7ebf\u7a0b\u4e00\u4e2a\u8fd0\u884c\u7684\u673a\u4f1a\u3002 std::this_thread::get_id\u51fd\u6570\u4e0d\u63a5\u53d7\u4efb\u4f55\u53c2\u6570\uff0c\u8fd4\u56de\u4e00\u4e2as t d::t h r e a d::i d\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u5b83\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7ebf\u7a0b\uff0c std::this_thread::sleep_for\u51fd\u6570\u63a5\u53d7\u4e00\u4e2astd::chrono::duration\u53c2\u6570\uff0c\u963b\u6b62\u5f53\u524d\u7ebf\u7a0b\u7684\u6267\u884c\uff0c\u81f3\u5c11\u76f4\u5230\u6307\u5b9a\u7684duration\u8fc7\u53bb\uff0c\u7136\u540e\u8fd4\u56devoid\u3002 std::this_thread::sleep_until\u63a5\u53d7\u4e00\u4e2astd::chrono::time_point\u5e76\u8fd4\u56devoid\u3002\u5b83\u5b8c\u5168\u7c7b\u4f3c\u4e8esleep_for\uff0c\u53ea\u662f\u5b83\u81f3\u5c11\u8981\u963b\u585e\u7ebf\u7a0b\u5230\u6307\u5b9a\u7684time_point\u3002","title":"async"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#asio","text":"Asynchronous IO","title":"asio"},{"location":"book/%E7%8E%B0%E4%BB%A3C%2B%2B/#system","text":"\u4f7f\u7528 \u5934\u6587\u4ef6\u4e2d\u7684std::system\u51fd\u6570\u542f\u52a8\u4e00\u4e2a\u5355\u72ec\u7684\u8fdb\u7a0b\uff0c\u8be5\u51fd\u6570\u63a5\u53d7\u4e0e\u8981\u6267\u884c\u7684\u547d\u4ee4\u76f8\u5bf9\u5e94\u7684C\u98ce\u683c\u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56de\u4e0e\u547d\u4ee4\u7684\u8fd4\u56de\u7801\u76f8\u5bf9\u5e94\u7684int\u3002 cstdlib>\u5934\u6587\u4ef6\u5305\u542bstd::getenv\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u4e0e\u60f3\u8981\u67e5\u627e\u7684\u73af\u5883\u53d8\u91cf\u540d\u79f0\u76f8\u5bf9\u5e94\u7684C\u98ce\u683c\u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u76f8\u5e94\u53d8\u91cf\u5185\u5bb9\u7684C\u98ce\u683c\u5b57\u7b26\u4e32\u3002 \u2751 SIGTERM\u4ee3\u8868\u7ec8\u6b62\u8bf7\u6c42\u3002 \u2751 SIGSEGV\u4ee3\u8868\u65e0\u6548\u7684\u5185\u5b58\u8bbf\u95ee\u3002 \u2751 SIGINT\u4ee3\u8868\u5916\u90e8\u4e2d\u65ad\uff0c\u5982\u952e\u76d8\u4e2d\u65ad\u3002 \u2751 SIGILL\u4ee3\u8868\u65e0\u6548\u7684\u7a0b\u5e8f\u955c\u50cf\u3002 \u2751 SIGABRT\u4ee3\u8868\u5f02\u5e38\u7684\u7ec8\u6b62\u6761\u4ef6\uff0c\u4f8b\u5982std::abort\u3002 \u2751 SIGFPE\u4ee3\u8868\u6d6e\u70b9\u9519\u8bef\uff0c\u4f8b\u5982\u9664\u4ee5\u96f6\u3002","title":"system"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/","text":"RAII # RAII\u4e0d\u4ec5\u4ec5\u7528\u4e8e\u7ba1\u7406\u5185\u5b58\uff0c\u4f60\u8fd8\u53ef\u4ee5\u4f7f \u7528\u5b83\u8f7b\u677e\u5730\u5904\u7406\u8d44\u6e90\u7684\u6240\u6709\u6743\uff0c\u4f8b\u5982\u9501\u3001\u6587\u4ef6\u53e5\u67c4\u3001\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u4ee5\u53ca\u5728RAII\u5305\u88c5\u5668\u8d85\u51fa\u4f5c\u7528\u57df\u540e\u5e94\u8be5\u91ca\u653e\u7684\u5176\u4ed6\u5bf9\u8c61\u3002 struct Resource; / / C API Resource* acquireResource () ; void releaseResource (Resource *resource) ; / / C++ API using ResourceRaii = std: : unique_ptr<Resource, decltype (&releaseResource)>; ResourceRaii acquireResourceRaii () ; C++\u5bb9\u5668\u63a5\u53e3 # array # wraps over fixed size static array. vector # Automatically resizable dynamic array. deque # **D**ouble **E**nded *QUE*ue list # Implementation of Doubly Linked List data structure. forward_list # Singly Linked List data structure. set # Collection of unique elements sorted on the basis of their values map # Collection of key-value pairs sorted on the basis of the keys where no two pairs have same keys. multiset # Collection of elements sorted on the basis of their values but allows multiple copies of values. multimap # Collection of key-value pairs sorted on the basis of the keys where multiple pairs can have same keys. unordered_set # Collection of unique elements hashed by their values. unordered_map # Collection of key-value pairs that are hashed by their keys where no two pairs have same keys. unordered_multiset # Collection of elements hashed by their values and allows multiple copies of values. unordered_multimap # Collection of key-value pairs that are hashed by their keys where multiple pairs can have same keys. stack # Adapts a container to provide stack (LIFO) data structure. queue # Adapts a container to provide queue (FIFO) data structure priority_queue # Adapts a container to provide heap data structure. \u63a5\u53e3\u4e2d\u4f7f\u7528\u6307\u9488 # void A(Resource*) void B(Resource&) void C(std::unique_ptr<Resource>) void A(std::unique_ptr<Resource>&) void A(std::shared_ptr<Resource>) void A(std::shared_ptr<Resource>&) - A\u548cB\u5e94\u8be5\u7559\u7ed9\u7b80\u5355\u7684\u53c2\u6570\u4f20\u9012\uff0c\u5982\u679c\u4e0d\u5bf9\u6240\u4f20\u9012\u5bf9\u8c61\u7684\u6240\u6709\u6743\u505a\u4efb\u4f55\u5904\u7406\uff0c\u5219\u4e0d\u5e94\u8be5\u4f7f\u7528\u5b83\u4eec - \u5982\u679c\u60f3\u64cd\u4f5c\u6307\u9488\u672c\u8eab\uff0c\u90a3\u4e48\u5728\u8fdb\u884c\u53c2\u6570\u4f20\u9012\u65f6\u5e94\u8be5\u53ea\u4f7f\u7528\u667a\u80fd\u6307\u9488\uff0c - A\u5e94\u8be5\u53ea\u7528\u4e8e\u4e00\u4e2a\u5355\u4e00\u7684\u8d44\u6e90\uff0c\u5982\u679c\u4f60\u77e5\u9053\u8981\u4f20\u9012\u7684\u5bf9\u8c61\u4e0d\u4e3a\u7a7a(null)\uff0c\u90a3\u4e48\u6700\u597d\u901a\u8fc7\u5f15\u7528\uff08\u4f8b\u5982const\u5f15\u7528\uff09\u6765\u4f20\u9012\u5b83 - C\u51fd\u6570\u6309\u503c\u4f20\u9012unique_ptr\u3002\u8fd9\u610f\u5473\u7740\u5b83\u662f\u4e00\u4e2a\u8d44\u6e90\u63a5\u6536\u5668\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u4f1a\u6d88\u8017\u5e76\u91ca\u653e\u8be5\u8d44\u6e90\u3002 - \u53ea\u6709\u5f53\u4f60\u60f3\u4f20\u5165\u5305\u542b\u4e00\u4e2a\u8d44\u6e90\u7684unique_ptr\uff0c\u5e76\u5728\u8be5unique_ptr\u4e2d\u63a5\u6536\u53e6\u4e00\u4e2a\u8d44\u6e90\u5e76\u4f20\u51fa\u65f6\uff0c\u624d\u5e94\u8be5\u4f7f\u7528D\u51fd\u6570\u3002 - E\u51fd\u6570\u7528\u4e8e\u4e0e\u88ab\u8c03\u7528\u8005\u5171\u4eab\u8d44\u6e90\u6240\u6709\u6743 - F\u51fd\u6570\u4e0eD\u51fd\u6570\u7c7b\u4f3c\uff0c\u4ec5\u5728\u8981\u64cd\u4f5cshared_ptr\u5b9e\u4f8b\u5e76\u901a\u8fc7\u6b64\u53c2\u6570\u4f20\u5165/\u4f20\u51fa\u53d8\u66f4\u65f6\u4f7f\u7528 \u4f7f\u7528\u5185\u8054\u547d\u540d\u7a7a\u95f4 # #ifdef NDEBUG inline namespace release { #else inline namespace debug { #endif struct EasilyDebuggable { / / ... #ifndef NDEBUG / / fields helping with debugging #endif } ; } // end namespace \u4ee3\u7801\u4f7f\u7528\u4e86\u5185\u8054\u547d\u540d\u7a7a\u95f4\uff0c\u6240\u4ee5\u5f53\u4f60\u58f0\u660e\u8be5\u7c7b\u7684\u5bf9\u8c61\u65f6\uff0c\u7528\u6237\u4e0d\u4f1a\u770b\u5230\u4e24\u79cd\u6784\u5efa\u7c7b\u578b\u4e4b\u95f4\u7684\u5dee\u5f02\uff1a\u5185\u8054\u547d\u540d\u7a7a\u95f4\u7684\u6240\u6709\u58f0\u660e\u5728\u6240\u5728\u7684\u4f5c\u7528\u57df\u4e2d\u5747\u53ef\u89c1 std::optional # \u53ef\u9009\u51fd\u6570\u53c2\u6570 void calculate(std:optional<int> param); \u53ef\u9009\u51fd\u6570\u8fd4\u56de\u503c std::optional<int> try_parse(std::string_veiw maybe_num); \u53ef\u9009\u7c7b\u6210\u5458 struct UserProfile{ std::string name; std::optional<std::string> address}; \u58f0\u660e\u5f0f\u7f16\u7801\u98ce\u683c # auto temperatures = std :: vector < double > { -3 ., 2 ., 0 ., 8 ., - 10 ., - 7. }; for ( std :: size_t i = 0 ; i < temperatures . size () - 1 ; ++ i ) { for ( std :: size_t j = i + 1 ; j < temperatures . size () ; ++ j ) { if ( std :: abs ( temperatures [ i ] - temperatures [ j ] ) > 5 ) return std :: optional { i } ; } return std :: nullopt ; using namespace std :: ranges ; auto is_even = [] ( auto x ) { return x % 2 == 0 ; } ; auto to_string = [] ( auto x ) { return std :: to_string ( x ); }; auto my_range = views :: iota ( 1 ) | views :: filter ( is_even ) | views :: take ( 2 ) | views :: reverse | views :: transform ( to_string ) ; std :: cout << std :: accumulate ( begin ( my_range ), end ( my_range ), \"\" s ) << '\\n' ;","title":"\u73b0\u4ee3cpp\u8f6f\u4ef6\u67b6\u6784"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#raii","text":"RAII\u4e0d\u4ec5\u4ec5\u7528\u4e8e\u7ba1\u7406\u5185\u5b58\uff0c\u4f60\u8fd8\u53ef\u4ee5\u4f7f \u7528\u5b83\u8f7b\u677e\u5730\u5904\u7406\u8d44\u6e90\u7684\u6240\u6709\u6743\uff0c\u4f8b\u5982\u9501\u3001\u6587\u4ef6\u53e5\u67c4\u3001\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u4ee5\u53ca\u5728RAII\u5305\u88c5\u5668\u8d85\u51fa\u4f5c\u7528\u57df\u540e\u5e94\u8be5\u91ca\u653e\u7684\u5176\u4ed6\u5bf9\u8c61\u3002 struct Resource; / / C API Resource* acquireResource () ; void releaseResource (Resource *resource) ; / / C++ API using ResourceRaii = std: : unique_ptr<Resource, decltype (&releaseResource)>; ResourceRaii acquireResourceRaii () ;","title":"RAII"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#c\u5bb9\u5668\u63a5\u53e3","text":"","title":"C++\u5bb9\u5668\u63a5\u53e3"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#array","text":"wraps over fixed size static array.","title":"array"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#vector","text":"Automatically resizable dynamic array.","title":"vector"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#deque","text":"**D**ouble **E**nded *QUE*ue","title":"deque"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#list","text":"Implementation of Doubly Linked List data structure.","title":"list"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#forward_list","text":"Singly Linked List data structure.","title":"forward_list"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#set","text":"Collection of unique elements sorted on the basis of their values","title":"set"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#map","text":"Collection of key-value pairs sorted on the basis of the keys where no two pairs have same keys.","title":"map"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#multiset","text":"Collection of elements sorted on the basis of their values but allows multiple copies of values.","title":"multiset"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#multimap","text":"Collection of key-value pairs sorted on the basis of the keys where multiple pairs can have same keys.","title":"multimap"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#unordered_set","text":"Collection of unique elements hashed by their values.","title":"unordered_set"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#unordered_map","text":"Collection of key-value pairs that are hashed by their keys where no two pairs have same keys.","title":"unordered_map"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#unordered_multiset","text":"Collection of elements hashed by their values and allows multiple copies of values.","title":"unordered_multiset"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#unordered_multimap","text":"Collection of key-value pairs that are hashed by their keys where multiple pairs can have same keys.","title":"unordered_multimap"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#stack","text":"Adapts a container to provide stack (LIFO) data structure.","title":"stack"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#queue","text":"Adapts a container to provide queue (FIFO) data structure","title":"queue"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#priority_queue","text":"Adapts a container to provide heap data structure.","title":"priority_queue"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#\u63a5\u53e3\u4e2d\u4f7f\u7528\u6307\u9488","text":"void A(Resource*) void B(Resource&) void C(std::unique_ptr<Resource>) void A(std::unique_ptr<Resource>&) void A(std::shared_ptr<Resource>) void A(std::shared_ptr<Resource>&) - A\u548cB\u5e94\u8be5\u7559\u7ed9\u7b80\u5355\u7684\u53c2\u6570\u4f20\u9012\uff0c\u5982\u679c\u4e0d\u5bf9\u6240\u4f20\u9012\u5bf9\u8c61\u7684\u6240\u6709\u6743\u505a\u4efb\u4f55\u5904\u7406\uff0c\u5219\u4e0d\u5e94\u8be5\u4f7f\u7528\u5b83\u4eec - \u5982\u679c\u60f3\u64cd\u4f5c\u6307\u9488\u672c\u8eab\uff0c\u90a3\u4e48\u5728\u8fdb\u884c\u53c2\u6570\u4f20\u9012\u65f6\u5e94\u8be5\u53ea\u4f7f\u7528\u667a\u80fd\u6307\u9488\uff0c - A\u5e94\u8be5\u53ea\u7528\u4e8e\u4e00\u4e2a\u5355\u4e00\u7684\u8d44\u6e90\uff0c\u5982\u679c\u4f60\u77e5\u9053\u8981\u4f20\u9012\u7684\u5bf9\u8c61\u4e0d\u4e3a\u7a7a(null)\uff0c\u90a3\u4e48\u6700\u597d\u901a\u8fc7\u5f15\u7528\uff08\u4f8b\u5982const\u5f15\u7528\uff09\u6765\u4f20\u9012\u5b83 - C\u51fd\u6570\u6309\u503c\u4f20\u9012unique_ptr\u3002\u8fd9\u610f\u5473\u7740\u5b83\u662f\u4e00\u4e2a\u8d44\u6e90\u63a5\u6536\u5668\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u4f1a\u6d88\u8017\u5e76\u91ca\u653e\u8be5\u8d44\u6e90\u3002 - \u53ea\u6709\u5f53\u4f60\u60f3\u4f20\u5165\u5305\u542b\u4e00\u4e2a\u8d44\u6e90\u7684unique_ptr\uff0c\u5e76\u5728\u8be5unique_ptr\u4e2d\u63a5\u6536\u53e6\u4e00\u4e2a\u8d44\u6e90\u5e76\u4f20\u51fa\u65f6\uff0c\u624d\u5e94\u8be5\u4f7f\u7528D\u51fd\u6570\u3002 - E\u51fd\u6570\u7528\u4e8e\u4e0e\u88ab\u8c03\u7528\u8005\u5171\u4eab\u8d44\u6e90\u6240\u6709\u6743 - F\u51fd\u6570\u4e0eD\u51fd\u6570\u7c7b\u4f3c\uff0c\u4ec5\u5728\u8981\u64cd\u4f5cshared_ptr\u5b9e\u4f8b\u5e76\u901a\u8fc7\u6b64\u53c2\u6570\u4f20\u5165/\u4f20\u51fa\u53d8\u66f4\u65f6\u4f7f\u7528","title":"\u63a5\u53e3\u4e2d\u4f7f\u7528\u6307\u9488"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#\u4f7f\u7528\u5185\u8054\u547d\u540d\u7a7a\u95f4","text":"#ifdef NDEBUG inline namespace release { #else inline namespace debug { #endif struct EasilyDebuggable { / / ... #ifndef NDEBUG / / fields helping with debugging #endif } ; } // end namespace \u4ee3\u7801\u4f7f\u7528\u4e86\u5185\u8054\u547d\u540d\u7a7a\u95f4\uff0c\u6240\u4ee5\u5f53\u4f60\u58f0\u660e\u8be5\u7c7b\u7684\u5bf9\u8c61\u65f6\uff0c\u7528\u6237\u4e0d\u4f1a\u770b\u5230\u4e24\u79cd\u6784\u5efa\u7c7b\u578b\u4e4b\u95f4\u7684\u5dee\u5f02\uff1a\u5185\u8054\u547d\u540d\u7a7a\u95f4\u7684\u6240\u6709\u58f0\u660e\u5728\u6240\u5728\u7684\u4f5c\u7528\u57df\u4e2d\u5747\u53ef\u89c1","title":"\u4f7f\u7528\u5185\u8054\u547d\u540d\u7a7a\u95f4"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#stdoptional","text":"\u53ef\u9009\u51fd\u6570\u53c2\u6570 void calculate(std:optional<int> param); \u53ef\u9009\u51fd\u6570\u8fd4\u56de\u503c std::optional<int> try_parse(std::string_veiw maybe_num); \u53ef\u9009\u7c7b\u6210\u5458 struct UserProfile{ std::string name; std::optional<std::string> address};","title":"std::optional"},{"location":"book/%E7%8E%B0%E4%BB%A3cpp%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/#\u58f0\u660e\u5f0f\u7f16\u7801\u98ce\u683c","text":"auto temperatures = std :: vector < double > { -3 ., 2 ., 0 ., 8 ., - 10 ., - 7. }; for ( std :: size_t i = 0 ; i < temperatures . size () - 1 ; ++ i ) { for ( std :: size_t j = i + 1 ; j < temperatures . size () ; ++ j ) { if ( std :: abs ( temperatures [ i ] - temperatures [ j ] ) > 5 ) return std :: optional { i } ; } return std :: nullopt ; using namespace std :: ranges ; auto is_even = [] ( auto x ) { return x % 2 == 0 ; } ; auto to_string = [] ( auto x ) { return std :: to_string ( x ); }; auto my_range = views :: iota ( 1 ) | views :: filter ( is_even ) | views :: take ( 2 ) | views :: reverse | views :: transform ( to_string ) ; std :: cout << std :: accumulate ( begin ( my_range ), end ( my_range ), \"\" s ) << '\\n' ;","title":"\u58f0\u660e\u5f0f\u7f16\u7801\u98ce\u683c"},{"location":"cpp/array_float/","text":"//\u8f6c\u6362float\u6570\u636e\u5230\u5b57\u8282\u6570\u7ec4 unsigned char i; float floatVariable; unsigned char charArray[4]; (unsigned char) *pdata = ((unsigned char)*)&floatVariable; //\u628afloat\u7c7b\u578b\u7684\u6307\u9488\u5f3a\u5236\u8f6c\u6362\u4e3aunsigned char\u578b for(i=0;i<4;i++) { charArray[i] = *pdata++;//\u628a\u76f8\u5e94\u5730\u5740\u4e2d\u7684\u6570\u636e\u4fdd\u5b58\u5230unsigned char\u6570\u7ec4\u4e2d } //\u8f6c\u6362\u5b57\u8282\u6570\u7ec4\u5230float\u6570\u636e float floatVariable; unsigned char i; void *pf; pf = &floatVariable; (unsigned char) * px = charArray; for(i=0;i<4;i++) { *(((unsigned char)*)pf+i)=*(px+i); }","title":"Array float"},{"location":"cpp/bazel/","text":"install # sudo apt install apt-transport-https curl gnupg curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor >bazel-archive-keyring.gpg sudo mv bazel-archive-keyring.gpg /usr/share/keyrings echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/bazel-archive-keyring.gpg] https://storage.googleapis.com/bazel-apt stable jdk1.8\" | sudo tee /etc/apt/sources.list.d/bazel.list sudo apt update && sudo apt install bazel rules # Bazel \u6559\u7a0b\uff1a\u6784\u5efa C++ \u9879\u76ee \u67e5\u770b cpp-tutorial/stage1/main \u76ee\u5f55\u4e2d\u7684 BUILD \u6587\u4ef6\uff1a cc_binary( name = \"hello-world\", srcs = [\"hello-world.cc\"], ) \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c hello-world \u76ee\u6807\u4f1a\u5b9e\u4f8b\u5316 Bazel \u7684\u5185\u7f6e [cc_binary rule](https://bazel.build/versions/6.4.0/reference/be/c-cpp?hl=zh-cn#cc_binary) \u3002\u8be5\u89c4\u5219\u544a\u8bc9 Bazel\uff0c\u4ece hello-world.cc \u4e2a\u6e90\u6587\u4ef6\uff0c\u65e0\u4f9d\u8d56\u9879\u3002 cc_library( name = \"hello-greet\", srcs = [\"hello-greet.cc\"], hdrs = [\"hello-greet.h\"], ) cc_binary( name = \"hello-world\", srcs = [\"hello-world.cc\"], deps = [ \":hello-greet\", \"//lib:hello-time\", ], ) \u4e3b\u8f6f\u4ef6\u5305\u4e2d\u7684 hello-world \u76ee\u6807\u4f9d\u8d56\u4e8e hello-time \u76ee\u6807 \u5728 lib \u8f6f\u4ef6\u5305\u4e2d\uff08\u56e0\u6b64\u662f\u76ee\u6807\u6807\u7b7e //lib:hello-time \uff09- Bazel \u77e5\u9053 \u901a\u8fc7 deps \u5c5e\u6027\u5b9e\u73b0\u8fd9\u4e00\u76ee\u7684\u3002\u60a8\u53ef\u4ee5\u5728\u4f9d\u8d56\u9879\u56fe\u4e2d\u770b\u5230\u8fd9\u4e00\u70b9\uff1a \u4e3a\u786e\u4fdd\u6784\u5efa\u6210\u529f\uff0c\u8bf7\u5728 lib/BUILD \u4e2d\u521b\u5efa //lib:hello-time \u76ee\u6807 \u4f7f\u7528 visibility \u5c5e\u6027\u5bf9 main/BUILD \u4e2d\u7684\u76ee\u6807\u660e\u786e\u53ef\u89c1\u3002 \u8fd9\u662f\u56e0\u4e3a\uff0c\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u540c\u4e00\u4e2a BUILD \u6587\u4ef6\u3002Bazel \u4f7f\u7528\u76ee\u6807\u53ef\u89c1\u6027\u6765\u9632\u6b62\u5e93\u4e2d\u5305\u542b\u7684\u5b9e\u73b0\u7ec6\u8282\u6cc4\u9732\u5230\u516c\u5171 API \u4e2d\u7b49\u95ee\u9898\u3002","title":"Bazel"},{"location":"cpp/bazel/#install","text":"sudo apt install apt-transport-https curl gnupg curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor >bazel-archive-keyring.gpg sudo mv bazel-archive-keyring.gpg /usr/share/keyrings echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/bazel-archive-keyring.gpg] https://storage.googleapis.com/bazel-apt stable jdk1.8\" | sudo tee /etc/apt/sources.list.d/bazel.list sudo apt update && sudo apt install bazel","title":"install"},{"location":"cpp/bazel/#rules","text":"Bazel \u6559\u7a0b\uff1a\u6784\u5efa C++ \u9879\u76ee \u67e5\u770b cpp-tutorial/stage1/main \u76ee\u5f55\u4e2d\u7684 BUILD \u6587\u4ef6\uff1a cc_binary( name = \"hello-world\", srcs = [\"hello-world.cc\"], ) \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c hello-world \u76ee\u6807\u4f1a\u5b9e\u4f8b\u5316 Bazel \u7684\u5185\u7f6e [cc_binary rule](https://bazel.build/versions/6.4.0/reference/be/c-cpp?hl=zh-cn#cc_binary) \u3002\u8be5\u89c4\u5219\u544a\u8bc9 Bazel\uff0c\u4ece hello-world.cc \u4e2a\u6e90\u6587\u4ef6\uff0c\u65e0\u4f9d\u8d56\u9879\u3002 cc_library( name = \"hello-greet\", srcs = [\"hello-greet.cc\"], hdrs = [\"hello-greet.h\"], ) cc_binary( name = \"hello-world\", srcs = [\"hello-world.cc\"], deps = [ \":hello-greet\", \"//lib:hello-time\", ], ) \u4e3b\u8f6f\u4ef6\u5305\u4e2d\u7684 hello-world \u76ee\u6807\u4f9d\u8d56\u4e8e hello-time \u76ee\u6807 \u5728 lib \u8f6f\u4ef6\u5305\u4e2d\uff08\u56e0\u6b64\u662f\u76ee\u6807\u6807\u7b7e //lib:hello-time \uff09- Bazel \u77e5\u9053 \u901a\u8fc7 deps \u5c5e\u6027\u5b9e\u73b0\u8fd9\u4e00\u76ee\u7684\u3002\u60a8\u53ef\u4ee5\u5728\u4f9d\u8d56\u9879\u56fe\u4e2d\u770b\u5230\u8fd9\u4e00\u70b9\uff1a \u4e3a\u786e\u4fdd\u6784\u5efa\u6210\u529f\uff0c\u8bf7\u5728 lib/BUILD \u4e2d\u521b\u5efa //lib:hello-time \u76ee\u6807 \u4f7f\u7528 visibility \u5c5e\u6027\u5bf9 main/BUILD \u4e2d\u7684\u76ee\u6807\u660e\u786e\u53ef\u89c1\u3002 \u8fd9\u662f\u56e0\u4e3a\uff0c\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u540c\u4e00\u4e2a BUILD \u6587\u4ef6\u3002Bazel \u4f7f\u7528\u76ee\u6807\u53ef\u89c1\u6027\u6765\u9632\u6b62\u5e93\u4e2d\u5305\u542b\u7684\u5b9e\u73b0\u7ec6\u8282\u6cc4\u9732\u5230\u516c\u5171 API \u4e2d\u7b49\u95ee\u9898\u3002","title":"rules"},{"location":"cpp/c_misc/","text":"printf_flush # #include <stdio.h> #include <unistd.h> // For sleep function int main() { int i; for (i = 0; i <= 100; i++) { printf(\"\\rProgress: %d%%\", i); fflush(stdout); // Ensure the output is printed immediately sleep(1); // Sleep for 1 second } printf(\"\\n\"); // Move to the next line after the loop return 0; }","title":"C misc"},{"location":"cpp/c_misc/#printf_flush","text":"#include <stdio.h> #include <unistd.h> // For sleep function int main() { int i; for (i = 0; i <= 100; i++) { printf(\"\\rProgress: %d%%\", i); fflush(stdout); // Ensure the output is printed immediately sleep(1); // Sleep for 1 second } printf(\"\\n\"); // Move to the next line after the loop return 0; }","title":"printf_flush"},{"location":"cpp/cmake/","text":"cmake_build # cmake -B builddir cmake --build builddir cmake --build builddir --target clean ccache # ccache -C 1. \u6784\u5efa\u76ee\u5f55\u76f8\u5173\u53d8\u91cf # \u53d8\u91cf\u540d \u8bf4\u660e CMAKE_BINARY_DIR \u6784\u5efa\u76ee\u5f55\u7684\u6839\u76ee\u5f55\uff08\u5373\u8fd0\u884c cmake \u547d\u4ee4\u7684\u76ee\u5f55\uff09\u3002 CMAKE_CURRENT_BINARY_DIR \u5f53\u524d\u5904\u7406\u7684 CMakeLists.txt \u6587\u4ef6\u5bf9\u5e94\u7684\u6784\u5efa\u76ee\u5f55\u3002 CMAKE_SOURCE_DIR \u6e90\u4ee3\u7801\u76ee\u5f55\u7684\u6839\u76ee\u5f55\uff08\u5373\u9876\u5c42 CMakeLists.txt \u6240\u5728\u7684\u76ee\u5f55\uff09\u3002 CMAKE_CURRENT_SOURCE_DIR \u5f53\u524d\u5904\u7406\u7684 CMakeLists.txt \u6587\u4ef6\u5bf9\u5e94\u7684\u6e90\u4ee3\u7801\u76ee\u5f55\u3002 CMAKE_INSTALL_PREFIX \u5b89\u88c5\u76ee\u5f55\u7684\u6839\u76ee\u5f55\uff08\u9ed8\u8ba4\u503c\uff1a /usr/local \u6216 C:/Program Files \uff09\u3002 2. \u5e38\u7528\u516c\u7528\u53d8\u91cf # \u53d8\u91cf\u540d \u8bf4\u660e CMAKE_BUILD_TYPE \u6784\u5efa\u7c7b\u578b\uff08\u5982 Debug \u3001 Release \u3001 RelWithDebInfo \u3001 MinSizeRel \uff09\u3002 CMAKE_CXX_COMPILER C++ \u7f16\u8bd1\u5668\u7684\u8def\u5f84\u3002 CMAKE_C_COMPILER C \u7f16\u8bd1\u5668\u7684\u8def\u5f84\u3002 CMAKE_CXX_FLAGS C++ \u7f16\u8bd1\u5668\u7684\u5168\u5c40\u7f16\u8bd1\u9009\u9879\u3002 CMAKE_C_FLAGS C \u7f16\u8bd1\u5668\u7684\u5168\u5c40\u7f16\u8bd1\u9009\u9879\u3002 CMAKE_EXECUTABLE_SUFFIX \u53ef\u6267\u884c\u6587\u4ef6\u7684\u540e\u7f00\uff08\u5982 .exe \u5728 Windows \u4e0a\uff09\u3002 CMAKE_LIBRARY_SUFFIX \u5e93\u6587\u4ef6\u7684\u540e\u7f00\uff08\u5982 .so \u5728 Linux \u4e0a\uff0c .dylib \u5728 macOS \u4e0a\uff0c .dll \u5728 Windows \u4e0a\uff09\u3002 CMAKE_MODULE_PATH \u67e5\u627e CMake \u6a21\u5757\u7684\u8def\u5f84\u5217\u8868\u3002 CMAKE_PREFIX_PATH \u67e5\u627e\u4f9d\u8d56\u5e93\u7684\u8def\u5f84\u5217\u8868\u3002 CMAKE_RUNTIME_OUTPUT_DIRECTORY \u53ef\u6267\u884c\u6587\u4ef6\u7684\u8f93\u51fa\u76ee\u5f55\u3002 CMAKE_LIBRARY_OUTPUT_DIRECTORY \u5e93\u6587\u4ef6\u7684\u8f93\u51fa\u76ee\u5f55\u3002 CMAKE_ARCHIVE_OUTPUT_DIRECTORY \u9759\u6001\u5e93\u6587\u4ef6\u7684\u8f93\u51fa\u76ee\u5f55\u3002 CMAKE_INCLUDE_PATH \u67e5\u627e\u5934\u6587\u4ef6\u7684\u8def\u5f84\u5217\u8868\u3002 CMAKE_LIBRARY_PATH \u67e5\u627e\u5e93\u6587\u4ef6\u7684\u8def\u5f84\u5217\u8868\u3002","title":"Cmake"},{"location":"cpp/cmake/#cmake_build","text":"cmake -B builddir cmake --build builddir cmake --build builddir --target clean","title":"cmake_build"},{"location":"cpp/cmake/#ccache","text":"ccache -C","title":"ccache"},{"location":"cpp/cmake/#1-\u6784\u5efa\u76ee\u5f55\u76f8\u5173\u53d8\u91cf","text":"\u53d8\u91cf\u540d \u8bf4\u660e CMAKE_BINARY_DIR \u6784\u5efa\u76ee\u5f55\u7684\u6839\u76ee\u5f55\uff08\u5373\u8fd0\u884c cmake \u547d\u4ee4\u7684\u76ee\u5f55\uff09\u3002 CMAKE_CURRENT_BINARY_DIR \u5f53\u524d\u5904\u7406\u7684 CMakeLists.txt \u6587\u4ef6\u5bf9\u5e94\u7684\u6784\u5efa\u76ee\u5f55\u3002 CMAKE_SOURCE_DIR \u6e90\u4ee3\u7801\u76ee\u5f55\u7684\u6839\u76ee\u5f55\uff08\u5373\u9876\u5c42 CMakeLists.txt \u6240\u5728\u7684\u76ee\u5f55\uff09\u3002 CMAKE_CURRENT_SOURCE_DIR \u5f53\u524d\u5904\u7406\u7684 CMakeLists.txt \u6587\u4ef6\u5bf9\u5e94\u7684\u6e90\u4ee3\u7801\u76ee\u5f55\u3002 CMAKE_INSTALL_PREFIX \u5b89\u88c5\u76ee\u5f55\u7684\u6839\u76ee\u5f55\uff08\u9ed8\u8ba4\u503c\uff1a /usr/local \u6216 C:/Program Files \uff09\u3002","title":"1. \u6784\u5efa\u76ee\u5f55\u76f8\u5173\u53d8\u91cf"},{"location":"cpp/cmake/#2-\u5e38\u7528\u516c\u7528\u53d8\u91cf","text":"\u53d8\u91cf\u540d \u8bf4\u660e CMAKE_BUILD_TYPE \u6784\u5efa\u7c7b\u578b\uff08\u5982 Debug \u3001 Release \u3001 RelWithDebInfo \u3001 MinSizeRel \uff09\u3002 CMAKE_CXX_COMPILER C++ \u7f16\u8bd1\u5668\u7684\u8def\u5f84\u3002 CMAKE_C_COMPILER C \u7f16\u8bd1\u5668\u7684\u8def\u5f84\u3002 CMAKE_CXX_FLAGS C++ \u7f16\u8bd1\u5668\u7684\u5168\u5c40\u7f16\u8bd1\u9009\u9879\u3002 CMAKE_C_FLAGS C \u7f16\u8bd1\u5668\u7684\u5168\u5c40\u7f16\u8bd1\u9009\u9879\u3002 CMAKE_EXECUTABLE_SUFFIX \u53ef\u6267\u884c\u6587\u4ef6\u7684\u540e\u7f00\uff08\u5982 .exe \u5728 Windows \u4e0a\uff09\u3002 CMAKE_LIBRARY_SUFFIX \u5e93\u6587\u4ef6\u7684\u540e\u7f00\uff08\u5982 .so \u5728 Linux \u4e0a\uff0c .dylib \u5728 macOS \u4e0a\uff0c .dll \u5728 Windows \u4e0a\uff09\u3002 CMAKE_MODULE_PATH \u67e5\u627e CMake \u6a21\u5757\u7684\u8def\u5f84\u5217\u8868\u3002 CMAKE_PREFIX_PATH \u67e5\u627e\u4f9d\u8d56\u5e93\u7684\u8def\u5f84\u5217\u8868\u3002 CMAKE_RUNTIME_OUTPUT_DIRECTORY \u53ef\u6267\u884c\u6587\u4ef6\u7684\u8f93\u51fa\u76ee\u5f55\u3002 CMAKE_LIBRARY_OUTPUT_DIRECTORY \u5e93\u6587\u4ef6\u7684\u8f93\u51fa\u76ee\u5f55\u3002 CMAKE_ARCHIVE_OUTPUT_DIRECTORY \u9759\u6001\u5e93\u6587\u4ef6\u7684\u8f93\u51fa\u76ee\u5f55\u3002 CMAKE_INCLUDE_PATH \u67e5\u627e\u5934\u6587\u4ef6\u7684\u8def\u5f84\u5217\u8868\u3002 CMAKE_LIBRARY_PATH \u67e5\u627e\u5e93\u6587\u4ef6\u7684\u8def\u5f84\u5217\u8868\u3002","title":"2. \u5e38\u7528\u516c\u7528\u53d8\u91cf"},{"location":"cpp/cpp_container/","text":"","title":"Cpp container"},{"location":"cpp/gdb/","text":"\u7528gdb\u8c03\u8bd5\u591a\u8fdb\u7a0b\u7a0b\u5e8f # \u5982\u679c\u4e00\u4e2a\u8fdb\u7a0b\u901a\u8fc7fork\u7cfb\u7edf\u8c03\u7528\u521b\u5efa\u4e86\u5b50\u8fdb\u7a0b\uff0cgdb\u4f1a\u7ee7\u7eed\u8c03\u8bd5\u539f\u6765\u7684\u8fdb\u7a0b\uff0c\u5b50\u8fdb\u7a0b\u5219\u6b63\u5e38\u8fd0\u884c\u3002\u90a3\u4e48\u8be5\u5982\u4f55\u8c03\u8bd5\u5b50\u8fdb\u7a0b\u5462 \u5355\u72ec\u8c03\u8bd5\u5b50\u8fdb\u7a0b # \u53ef\u4ee5\u5148\u8fd0\u884c\u670d\u52a1\u5668\uff0c\u7136\u540e\u627e\u5230\u76ee\u6807\u5b50\u8fdb\u7a0b\u7684PID\uff0c\u518d\u5c06\u5176\u9644\u52a0\uff08attach\uff09\u5230gdb\u8c03\u8bd5\u5668\u4e0a\uff0c $./cgisrv 127.0.0.1 12345 $ps-ef|grep cgisrv shuang 4183 4182 0 12:25 pts/4 00:00:00./cgisrv 127.0.0.1 12345 $gdb (gdb)attach 4183/*\u5c06\u5b50\u8fdb\u7a0b4183\u9644\u52a0\u5230gdb\u8c03\u8bd5\u5668*/ gdb\u8c03\u8bd5\u5668\u7684\u9009\u9879follow-fork-mode\u5141\u8bb8\u6211\u4eec\u9009\u62e9\u7a0b\u5e8f\u5728\u6267\u884cfork\u7cfb\u7edf\u8c03\u7528\u540e\u662f\u7ee7\u7eed\u8c03\u8bd5\u7236\u8fdb\u7a0b\u8fd8\u662f\u8c03\u8bd5\u5b50\u8fdb\u7a0b\u3002 (gdb)set follow-fork-mode mode (gdb)b processpool.h:264 Breakpoint 1 at 0x8049787:file processpool.h,line 264. (gdb)r 127.0.0.1 12345 \u7528gdb\u8c03\u8bd5\u591a\u7ebf\u7a0b\u7a0b\u5e8f # \u2751info threads\uff0c\u663e\u793a\u5f53\u524d\u53ef\u8c03\u8bd5\u7684\u6240\u6709\u7ebf\u7a0b\u3002gdb\u4f1a\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5206\u914d\u4e00\u4e2aID\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2aID\u6765\u64cd\u4f5c\u5bf9\u5e94\u7684\u7ebf\u7a0b\u3002ID\u524d\u9762\u6709\u201c*\u201d\u53f7\u7684\u7ebf\u7a0b\u662f\u5f53\u524d\u88ab\u8c03\u8bd5\u7684\u7ebf\u7a0b\u3002 \u2751thread ID\uff0c\u8c03\u8bd5\u76ee\u6807ID\u6307\u5b9a\u7684\u7ebf\u7a0b\u3002 \u2751set scheduler-locking[off|on|step]\u3002\u8c03\u8bd5\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u65f6\uff0c\u9ed8\u8ba4\u9664\u4e86\u88ab\u8c03\u8bd5\u7684\u7ebf\u7a0b\u5728\u6267\u884c\u5916\uff0c\u5176\u4ed6\u7ebf\u7a0b\u4e5f\u5728\u7ee7\u7eed\u6267\u884c\uff0c\u4f46\u6709\u7684\u65f6\u5019\u6211\u4eec\u5e0c\u671b\u53ea\u8ba9\u88ab\u8c03\u8bd5\u7684\u7ebf\u7a0b\u8fd0\u884c\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u547d\u4ee4\u6765\u5b9e\u73b0\u3002\u8be5\u547d\u4ee4\u8bbe\u7f6escheduler-locking\u7684\u503c\uff1aoff\u8868\u793a\u4e0d\u9501\u5b9a\u4efb\u4f55\u7ebf\u7a0b\uff0c\u5373\u6240\u6709\u7ebf\u7a0b\u90fd\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\uff0c\u8fd9\u662f\u9ed8\u8ba4\u503c\uff1bon\u8868\u793a\u53ea\u6709\u5f53\u524d\u88ab\u8c03\u8bd5\u7684\u7ebf\u7a0b\u4f1a\u7ee7\u7eed\u6267\u884c\uff1bstep\u8868\u793a\u5728\u5355\u6b65\u6267\u884c\u7684\u65f6\u5019\uff0c\u53ea\u6709\u5f53\u524d\u7ebf\u7a0b\u4f1a\u6267\u884c\u3002 args # - args\uff1a gdb --args prog argslist breaks # - break - **break** [_Function Name_] class:fun - **break** [_File Name_]:[_Line Number_] - **break** [_Line Number_]** - break* [_Address_] - **break** [_..._] if [_Condition_] - **break** [_..._] thread [_Thread-id_]","title":"Gdb"},{"location":"cpp/gdb/#\u7528gdb\u8c03\u8bd5\u591a\u8fdb\u7a0b\u7a0b\u5e8f","text":"\u5982\u679c\u4e00\u4e2a\u8fdb\u7a0b\u901a\u8fc7fork\u7cfb\u7edf\u8c03\u7528\u521b\u5efa\u4e86\u5b50\u8fdb\u7a0b\uff0cgdb\u4f1a\u7ee7\u7eed\u8c03\u8bd5\u539f\u6765\u7684\u8fdb\u7a0b\uff0c\u5b50\u8fdb\u7a0b\u5219\u6b63\u5e38\u8fd0\u884c\u3002\u90a3\u4e48\u8be5\u5982\u4f55\u8c03\u8bd5\u5b50\u8fdb\u7a0b\u5462","title":"\u7528gdb\u8c03\u8bd5\u591a\u8fdb\u7a0b\u7a0b\u5e8f"},{"location":"cpp/gdb/#\u5355\u72ec\u8c03\u8bd5\u5b50\u8fdb\u7a0b","text":"\u53ef\u4ee5\u5148\u8fd0\u884c\u670d\u52a1\u5668\uff0c\u7136\u540e\u627e\u5230\u76ee\u6807\u5b50\u8fdb\u7a0b\u7684PID\uff0c\u518d\u5c06\u5176\u9644\u52a0\uff08attach\uff09\u5230gdb\u8c03\u8bd5\u5668\u4e0a\uff0c $./cgisrv 127.0.0.1 12345 $ps-ef|grep cgisrv shuang 4183 4182 0 12:25 pts/4 00:00:00./cgisrv 127.0.0.1 12345 $gdb (gdb)attach 4183/*\u5c06\u5b50\u8fdb\u7a0b4183\u9644\u52a0\u5230gdb\u8c03\u8bd5\u5668*/ gdb\u8c03\u8bd5\u5668\u7684\u9009\u9879follow-fork-mode\u5141\u8bb8\u6211\u4eec\u9009\u62e9\u7a0b\u5e8f\u5728\u6267\u884cfork\u7cfb\u7edf\u8c03\u7528\u540e\u662f\u7ee7\u7eed\u8c03\u8bd5\u7236\u8fdb\u7a0b\u8fd8\u662f\u8c03\u8bd5\u5b50\u8fdb\u7a0b\u3002 (gdb)set follow-fork-mode mode (gdb)b processpool.h:264 Breakpoint 1 at 0x8049787:file processpool.h,line 264. (gdb)r 127.0.0.1 12345","title":"\u5355\u72ec\u8c03\u8bd5\u5b50\u8fdb\u7a0b"},{"location":"cpp/gdb/#\u7528gdb\u8c03\u8bd5\u591a\u7ebf\u7a0b\u7a0b\u5e8f","text":"\u2751info threads\uff0c\u663e\u793a\u5f53\u524d\u53ef\u8c03\u8bd5\u7684\u6240\u6709\u7ebf\u7a0b\u3002gdb\u4f1a\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5206\u914d\u4e00\u4e2aID\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2aID\u6765\u64cd\u4f5c\u5bf9\u5e94\u7684\u7ebf\u7a0b\u3002ID\u524d\u9762\u6709\u201c*\u201d\u53f7\u7684\u7ebf\u7a0b\u662f\u5f53\u524d\u88ab\u8c03\u8bd5\u7684\u7ebf\u7a0b\u3002 \u2751thread ID\uff0c\u8c03\u8bd5\u76ee\u6807ID\u6307\u5b9a\u7684\u7ebf\u7a0b\u3002 \u2751set scheduler-locking[off|on|step]\u3002\u8c03\u8bd5\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u65f6\uff0c\u9ed8\u8ba4\u9664\u4e86\u88ab\u8c03\u8bd5\u7684\u7ebf\u7a0b\u5728\u6267\u884c\u5916\uff0c\u5176\u4ed6\u7ebf\u7a0b\u4e5f\u5728\u7ee7\u7eed\u6267\u884c\uff0c\u4f46\u6709\u7684\u65f6\u5019\u6211\u4eec\u5e0c\u671b\u53ea\u8ba9\u88ab\u8c03\u8bd5\u7684\u7ebf\u7a0b\u8fd0\u884c\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u547d\u4ee4\u6765\u5b9e\u73b0\u3002\u8be5\u547d\u4ee4\u8bbe\u7f6escheduler-locking\u7684\u503c\uff1aoff\u8868\u793a\u4e0d\u9501\u5b9a\u4efb\u4f55\u7ebf\u7a0b\uff0c\u5373\u6240\u6709\u7ebf\u7a0b\u90fd\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\uff0c\u8fd9\u662f\u9ed8\u8ba4\u503c\uff1bon\u8868\u793a\u53ea\u6709\u5f53\u524d\u88ab\u8c03\u8bd5\u7684\u7ebf\u7a0b\u4f1a\u7ee7\u7eed\u6267\u884c\uff1bstep\u8868\u793a\u5728\u5355\u6b65\u6267\u884c\u7684\u65f6\u5019\uff0c\u53ea\u6709\u5f53\u524d\u7ebf\u7a0b\u4f1a\u6267\u884c\u3002","title":"\u7528gdb\u8c03\u8bd5\u591a\u7ebf\u7a0b\u7a0b\u5e8f"},{"location":"cpp/gdb/#args","text":"- args\uff1a gdb --args prog argslist","title":"args"},{"location":"cpp/gdb/#breaks","text":"- break - **break** [_Function Name_] class:fun - **break** [_File Name_]:[_Line Number_] - **break** [_Line Number_]** - break* [_Address_] - **break** [_..._] if [_Condition_] - **break** [_..._] thread [_Thread-id_]","title":"breaks"},{"location":"cpp/grpc/","text":"example # sudo apt-get install libgrpc-dev libgrpc++-dev libprotobuf-dev protobuf-compiler apt-get install libprotobuf-dev protobuf-compiler git clone --recurse-submodules -b v1.64.0 --depth 1 --shallow-submodules https://github.com/grpc/grpc RUN apt update && apt install -y build-essential autoconf libtool pkg-config git cmake libc-ares-dev libre2-dev libssl-dev zlib1g-dev curl RUN git clone --recurse-submodules -b v1.39.0-pre1 https://github.com/grpc/grpc && \\ cd /grpc/third_party/abseil-cpp && \\ cmake . && \\ make -j64 install && \\ cd /grpc && mkdir build && cd build && \\ cmake -DgRPC_INSTALL=ON -DgRPC_BUILD_TESTS=OFF .. && \\ make -j64 install && \\ ldconfig RUN cd / && \\ git clone https://github.com/faaxm/exmpl-cmake-grpc.git && \\ cd exmpl-cmake-grpc && \\ mkdir build && cd build && \\ cmake .. && \\ make -j64 vcpkg # vcpkg install grpc vcpkg install protobuf advra/grpc-vcpkg-boilerplate-example: This is a simple helloworld example that shows how to setup, configure and compile using vcpkg manager. (github.com) jc : \u5199\u4e00\u4e2agrpc\u7684\u57fa\u672cproto\u6587\u4ef6\uff0c\u5e76\u751f\u6210\u4e00\u4e2acpp\u7684\u6d4b\u8bd5\u7a0b\u5e8f # ds : # 1. \u7f16\u5199\u57fa\u672c\u7684 ` \u6587\u4ef6 # \u9996\u5148\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 proto \u6587\u4ef6\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a Greeter \u670d\u52a1\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a SayHello` \u65b9\u6cd5\u3002 // helloworld.proto syntax = \"proto3\" ; package helloworld ; // The greeting service definition. service Greeter { // Sends a greeting rpc SayHello ( HelloRequest ) returns ( HelloReply ) {} } // The request message containing the user's name. message HelloRequest { string name = 1 ; } // The response message containing the greetings message HelloReply { string message = 1 ; } 2. \u751f\u6210 C++ \u4ee3\u7801 # \u4f7f\u7528 oc \u7f16\u8bd1\u5668\u751f\u6210 C++ \u4ee3\u7801\u3002\u5047\u8bbe\u4f60\u5df2\u7ecf\u5b89\u88c5\u4e86 protoc \u548c grpc` \u63d2\u4ef6\u3002 protoc --cpp_out = . --grpc_out = . --plugin = protoc-gen-grpc = ` which grpc_cpp_plugin ` helloworld.proto \u8fd9\u5c06\u751f\u6210\u4ee5\u4e0b\u6587\u4ef6\uff1a oworld.pb.h \u548c helloworld.pb.cc`\uff1a\u7528\u4e8e\u5904\u7406\u6d88\u606f\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002 oworld.grpc.pb.h \u548c helloworld.grpc.pb.cc`\uff1a\u7528\u4e8e\u5904\u7406 gRPC \u670d\u52a1\u7684\u5b9a\u4e49\u3002 3. \u7f16\u5199 C++ \u6d4b\u8bd5\u7a0b\u5e8f # \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684 C++ \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u6765\u6d4b\u8bd5\u8fd9\u4e2a Greeter` \u670d\u52a1\u3002 \u670d\u52a1\u5668\u7aef\u4ee3\u7801 (.cc`) # #include <iostream> #include <memory> #include <string> #include <grpcpp/grpcpp.h> #include \"helloworld.grpc.pb.h\" using grpc :: Server ; using grpc :: ServerBuilder ; using grpc :: ServerContext ; using grpc :: Status ; using helloworld :: HelloRequest ; using helloworld :: HelloReply ; using helloworld :: Greeter ; // Logic and data behind the server's behavior. class GreeterServiceImpl final : public Greeter :: Service { Status SayHello ( ServerContext * context , const HelloRequest * request , HelloReply * reply ) override { std :: string prefix ( \"Hello \" ); reply -> set_message ( prefix + request -> name ()); return Status :: OK ; } }; void RunServer () { std :: string server_address ( \"0.0.0.0:50051\" ); GreeterServiceImpl service ; ServerBuilder builder ; // Listen on the given address without any authentication mechanism. builder . AddListeningPort ( server_address , grpc :: InsecureServerCredentials ()); // Register \"service\" as the instance through which we'll communicate with // clients. In this case it corresponds to an *synchronous* service. builder . RegisterService ( & service ); // Finally assemble the server. std :: unique_ptr < Server > server ( builder . BuildAndStart ()); std :: cout << \"Server listening on \" << server_address << std :: endl ; // Wait for the server to shutdown. Note that some other thread must be // responsible for shutting down the server for this call to ever return. server -> Wait (); } int main ( int argc , char ** argv ) { RunServer (); return 0 ; } \u5ba2\u6237\u7aef\u4ee3\u7801 (.cc`) # #include <iostream> #include <memory> #include <string> #include <grpcpp/grpcpp.h> #include \"helloworld.grpc.pb.h\" using grpc :: Channel ; using grpc :: ClientContext ; using grpc :: Status ; using helloworld :: HelloRequest ; using helloworld :: HelloReply ; using helloworld :: Greeter ; class GreeterClient { public : GreeterClient ( std :: shared_ptr < Channel > channel ) : stub_ ( Greeter :: NewStub ( channel )) {} // Assembles the client's payload, sends it and presents the response back // from the server. std :: string SayHello ( const std :: string & user ) { // Data we are sending to the server. HelloRequest request ; request . set_name ( user ); // Container for the data we expect from the server. HelloReply reply ; // Context for the client. It could be used to convey extra information to // the server and/or tweak certain RPC behaviors. ClientContext context ; // The actual RPC. Status status = stub_ -> SayHello ( & context , request , & reply ); // Act upon its status. if ( status . ok ()) { return reply . message (); } else { std :: cout << status . error_code () << \": \" << status . error_message () << std :: endl ; return \"RPC failed\" ; } } private : std :: unique_ptr < Greeter :: Stub > stub_ ; }; int main ( int argc , char ** argv ) { // Instantiate the client. It requires a channel, out of which the actual RPCs // are created. This channel models a connection to an endpoint specified by // the argument \"--target=\" which is the only expected argument. std :: string target_str ( \"localhost:50051\" ); GreeterClient greeter ( grpc :: CreateChannel ( target_str , grpc :: InsecureChannelCredentials ())); std :: string user ( \"world\" ); std :: string reply = greeter . SayHello ( user ); std :: cout << \"Greeter received: \" << reply << std :: endl ; return 0 ; } 4. \u7f16\u8bd1\u548c\u8fd0\u884c # \u7f16\u8bd1\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef # g++ -std = c++11 -o server server.cc helloworld.pb.cc helloworld.grpc.pb.cc -lgrpc++ -lprotobuf -lpthread g++ -std = c++11 -o client client.cc helloworld.pb.cc helloworld.grpc.pb.cc -lgrpc++ -lprotobuf -lpthread \u8fd0\u884c\u670d\u52a1\u5668 # ./server \u8fd0\u884c\u5ba2\u6237\u7aef # ./client 5. \u9884\u671f\u8f93\u51fa # \u670d\u52a1\u5668\u8f93\u51fa\uff1a Server listening on 0.0.0.0:50051 \u5ba2\u6237\u7aef\u8f93\u51fa\uff1a Greeter received: Hello world \u603b\u7ed3 # \u901a\u8fc7\u4ee5\u4e0a\u6b65\u9aa4\uff0c\u4f60\u5df2\u7ecf\u6210\u529f\u521b\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684 gRPC \u670d\u52a1\uff0c\u5e76\u4f7f\u7528 C++ \u7f16\u5199\u4e86\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u6765\u6d4b\u8bd5\u8fd9\u4e2a\u670d\u52a1\u3002\u4f60\u53ef\u4ee5\u6839\u636e\u9700\u8981\u6269\u5c55\u8fd9\u4e2a\u793a\u4f8b\uff0c\u6dfb\u52a0\u66f4\u591a\u7684\u670d\u52a1\u548c\u529f\u80fd\u3002 client server hell`hell`prot proto","title":"Grpc"},{"location":"cpp/grpc/#example","text":"sudo apt-get install libgrpc-dev libgrpc++-dev libprotobuf-dev protobuf-compiler apt-get install libprotobuf-dev protobuf-compiler git clone --recurse-submodules -b v1.64.0 --depth 1 --shallow-submodules https://github.com/grpc/grpc RUN apt update && apt install -y build-essential autoconf libtool pkg-config git cmake libc-ares-dev libre2-dev libssl-dev zlib1g-dev curl RUN git clone --recurse-submodules -b v1.39.0-pre1 https://github.com/grpc/grpc && \\ cd /grpc/third_party/abseil-cpp && \\ cmake . && \\ make -j64 install && \\ cd /grpc && mkdir build && cd build && \\ cmake -DgRPC_INSTALL=ON -DgRPC_BUILD_TESTS=OFF .. && \\ make -j64 install && \\ ldconfig RUN cd / && \\ git clone https://github.com/faaxm/exmpl-cmake-grpc.git && \\ cd exmpl-cmake-grpc && \\ mkdir build && cd build && \\ cmake .. && \\ make -j64","title":"example"},{"location":"cpp/grpc/#vcpkg","text":"vcpkg install grpc vcpkg install protobuf advra/grpc-vcpkg-boilerplate-example: This is a simple helloworld example that shows how to setup, configure and compile using vcpkg manager. (github.com)","title":"vcpkg"},{"location":"cpp/grpc/#jc--\u5199\u4e00\u4e2agrpc\u7684\u57fa\u672cproto\u6587\u4ef6\u5e76\u751f\u6210\u4e00\u4e2acpp\u7684\u6d4b\u8bd5\u7a0b\u5e8f","text":"","title":"jc : \u5199\u4e00\u4e2agrpc\u7684\u57fa\u672cproto\u6587\u4ef6\uff0c\u5e76\u751f\u6210\u4e00\u4e2acpp\u7684\u6d4b\u8bd5\u7a0b\u5e8f"},{"location":"cpp/grpc/#ds-","text":"","title":"ds :"},{"location":"cpp/grpc/#1-\u7f16\u5199\u57fa\u672c\u7684--\u6587\u4ef6","text":"\u9996\u5148\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 proto \u6587\u4ef6\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a Greeter \u670d\u52a1\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a SayHello` \u65b9\u6cd5\u3002 // helloworld.proto syntax = \"proto3\" ; package helloworld ; // The greeting service definition. service Greeter { // Sends a greeting rpc SayHello ( HelloRequest ) returns ( HelloReply ) {} } // The request message containing the user's name. message HelloRequest { string name = 1 ; } // The response message containing the greetings message HelloReply { string message = 1 ; }","title":"1. \u7f16\u5199\u57fa\u672c\u7684 ` \u6587\u4ef6"},{"location":"cpp/grpc/#2-\u751f\u6210-c-\u4ee3\u7801","text":"\u4f7f\u7528 oc \u7f16\u8bd1\u5668\u751f\u6210 C++ \u4ee3\u7801\u3002\u5047\u8bbe\u4f60\u5df2\u7ecf\u5b89\u88c5\u4e86 protoc \u548c grpc` \u63d2\u4ef6\u3002 protoc --cpp_out = . --grpc_out = . --plugin = protoc-gen-grpc = ` which grpc_cpp_plugin ` helloworld.proto \u8fd9\u5c06\u751f\u6210\u4ee5\u4e0b\u6587\u4ef6\uff1a oworld.pb.h \u548c helloworld.pb.cc`\uff1a\u7528\u4e8e\u5904\u7406\u6d88\u606f\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002 oworld.grpc.pb.h \u548c helloworld.grpc.pb.cc`\uff1a\u7528\u4e8e\u5904\u7406 gRPC \u670d\u52a1\u7684\u5b9a\u4e49\u3002","title":"2. \u751f\u6210 C++ \u4ee3\u7801"},{"location":"cpp/grpc/#3-\u7f16\u5199-c-\u6d4b\u8bd5\u7a0b\u5e8f","text":"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684 C++ \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u6765\u6d4b\u8bd5\u8fd9\u4e2a Greeter` \u670d\u52a1\u3002","title":"3. \u7f16\u5199 C++ \u6d4b\u8bd5\u7a0b\u5e8f"},{"location":"cpp/grpc/#\u670d\u52a1\u5668\u7aef\u4ee3\u7801-cc","text":"#include <iostream> #include <memory> #include <string> #include <grpcpp/grpcpp.h> #include \"helloworld.grpc.pb.h\" using grpc :: Server ; using grpc :: ServerBuilder ; using grpc :: ServerContext ; using grpc :: Status ; using helloworld :: HelloRequest ; using helloworld :: HelloReply ; using helloworld :: Greeter ; // Logic and data behind the server's behavior. class GreeterServiceImpl final : public Greeter :: Service { Status SayHello ( ServerContext * context , const HelloRequest * request , HelloReply * reply ) override { std :: string prefix ( \"Hello \" ); reply -> set_message ( prefix + request -> name ()); return Status :: OK ; } }; void RunServer () { std :: string server_address ( \"0.0.0.0:50051\" ); GreeterServiceImpl service ; ServerBuilder builder ; // Listen on the given address without any authentication mechanism. builder . AddListeningPort ( server_address , grpc :: InsecureServerCredentials ()); // Register \"service\" as the instance through which we'll communicate with // clients. In this case it corresponds to an *synchronous* service. builder . RegisterService ( & service ); // Finally assemble the server. std :: unique_ptr < Server > server ( builder . BuildAndStart ()); std :: cout << \"Server listening on \" << server_address << std :: endl ; // Wait for the server to shutdown. Note that some other thread must be // responsible for shutting down the server for this call to ever return. server -> Wait (); } int main ( int argc , char ** argv ) { RunServer (); return 0 ; }","title":"\u670d\u52a1\u5668\u7aef\u4ee3\u7801 (.cc`)"},{"location":"cpp/grpc/#\u5ba2\u6237\u7aef\u4ee3\u7801-cc","text":"#include <iostream> #include <memory> #include <string> #include <grpcpp/grpcpp.h> #include \"helloworld.grpc.pb.h\" using grpc :: Channel ; using grpc :: ClientContext ; using grpc :: Status ; using helloworld :: HelloRequest ; using helloworld :: HelloReply ; using helloworld :: Greeter ; class GreeterClient { public : GreeterClient ( std :: shared_ptr < Channel > channel ) : stub_ ( Greeter :: NewStub ( channel )) {} // Assembles the client's payload, sends it and presents the response back // from the server. std :: string SayHello ( const std :: string & user ) { // Data we are sending to the server. HelloRequest request ; request . set_name ( user ); // Container for the data we expect from the server. HelloReply reply ; // Context for the client. It could be used to convey extra information to // the server and/or tweak certain RPC behaviors. ClientContext context ; // The actual RPC. Status status = stub_ -> SayHello ( & context , request , & reply ); // Act upon its status. if ( status . ok ()) { return reply . message (); } else { std :: cout << status . error_code () << \": \" << status . error_message () << std :: endl ; return \"RPC failed\" ; } } private : std :: unique_ptr < Greeter :: Stub > stub_ ; }; int main ( int argc , char ** argv ) { // Instantiate the client. It requires a channel, out of which the actual RPCs // are created. This channel models a connection to an endpoint specified by // the argument \"--target=\" which is the only expected argument. std :: string target_str ( \"localhost:50051\" ); GreeterClient greeter ( grpc :: CreateChannel ( target_str , grpc :: InsecureChannelCredentials ())); std :: string user ( \"world\" ); std :: string reply = greeter . SayHello ( user ); std :: cout << \"Greeter received: \" << reply << std :: endl ; return 0 ; }","title":"\u5ba2\u6237\u7aef\u4ee3\u7801 (.cc`)"},{"location":"cpp/grpc/#4-\u7f16\u8bd1\u548c\u8fd0\u884c","text":"","title":"4. \u7f16\u8bd1\u548c\u8fd0\u884c"},{"location":"cpp/grpc/#\u7f16\u8bd1\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef","text":"g++ -std = c++11 -o server server.cc helloworld.pb.cc helloworld.grpc.pb.cc -lgrpc++ -lprotobuf -lpthread g++ -std = c++11 -o client client.cc helloworld.pb.cc helloworld.grpc.pb.cc -lgrpc++ -lprotobuf -lpthread","title":"\u7f16\u8bd1\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef"},{"location":"cpp/grpc/#\u8fd0\u884c\u670d\u52a1\u5668","text":"./server","title":"\u8fd0\u884c\u670d\u52a1\u5668"},{"location":"cpp/grpc/#\u8fd0\u884c\u5ba2\u6237\u7aef","text":"./client","title":"\u8fd0\u884c\u5ba2\u6237\u7aef"},{"location":"cpp/grpc/#5-\u9884\u671f\u8f93\u51fa","text":"\u670d\u52a1\u5668\u8f93\u51fa\uff1a Server listening on 0.0.0.0:50051 \u5ba2\u6237\u7aef\u8f93\u51fa\uff1a Greeter received: Hello world","title":"5. \u9884\u671f\u8f93\u51fa"},{"location":"cpp/grpc/#\u603b\u7ed3","text":"\u901a\u8fc7\u4ee5\u4e0a\u6b65\u9aa4\uff0c\u4f60\u5df2\u7ecf\u6210\u529f\u521b\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684 gRPC \u670d\u52a1\uff0c\u5e76\u4f7f\u7528 C++ \u7f16\u5199\u4e86\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u6765\u6d4b\u8bd5\u8fd9\u4e2a\u670d\u52a1\u3002\u4f60\u53ef\u4ee5\u6839\u636e\u9700\u8981\u6269\u5c55\u8fd9\u4e2a\u793a\u4f8b\uff0c\u6dfb\u52a0\u66f4\u591a\u7684\u670d\u52a1\u548c\u529f\u80fd\u3002 client server hell`hell`prot proto","title":"\u603b\u7ed3"},{"location":"cpp/timestamp/","text":"\u83b7\u53d6 Unix \u65f6\u95f4\u6233\uff08\u81ea 1970 \u5e74 1 \u6708 1 \u65e5\u4ee5\u6765\u7684\u79d2\u6570\uff09 # #include <iostream> #include <chrono> int main() { // \u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u70b9 auto now = std::chrono::system_clock::now(); // \u8f6c\u6362\u4e3a\u65f6\u95f4\u6233\uff08\u79d2\uff09 auto timestamp = std::chrono::system_clock::to_time_t(now); std::cout << \"Unix Timestamp (seconds): \" << timestamp << std::endl; return 0; } \u83b7\u53d6\u9ad8\u7cbe\u5ea6\u65f6\u95f4\u6233\uff08\u6beb\u79d2\u3001\u5fae\u79d2\u6216\u7eb3\u79d2\uff09 # #include <iostream> #include <chrono> int main() { // \u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u70b9\uff08\u9ad8\u7cbe\u5ea6\uff09 auto now = std::chrono::high_resolution_clock::now(); // \u8f6c\u6362\u4e3a\u6beb\u79d2 auto ms = std::chrono::time_point_cast<std::chrono::milliseconds>(now); auto epoch = ms.time_since_epoch(); auto value = std::chrono::duration_cast<std::chrono::milliseconds>(epoch); std::cout << \"Timestamp (milliseconds): \" << value.count() << std::endl; return 0; }","title":"Timestamp"},{"location":"cpp/timestamp/#\u83b7\u53d6-unix-\u65f6\u95f4\u6233\u81ea-1970-\u5e74-1-\u6708-1-\u65e5\u4ee5\u6765\u7684\u79d2\u6570","text":"#include <iostream> #include <chrono> int main() { // \u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u70b9 auto now = std::chrono::system_clock::now(); // \u8f6c\u6362\u4e3a\u65f6\u95f4\u6233\uff08\u79d2\uff09 auto timestamp = std::chrono::system_clock::to_time_t(now); std::cout << \"Unix Timestamp (seconds): \" << timestamp << std::endl; return 0; }","title":"\u83b7\u53d6 Unix \u65f6\u95f4\u6233\uff08\u81ea 1970 \u5e74 1 \u6708 1 \u65e5\u4ee5\u6765\u7684\u79d2\u6570\uff09"},{"location":"cpp/timestamp/#\u83b7\u53d6\u9ad8\u7cbe\u5ea6\u65f6\u95f4\u6233\u6beb\u79d2\u5fae\u79d2\u6216\u7eb3\u79d2","text":"#include <iostream> #include <chrono> int main() { // \u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u70b9\uff08\u9ad8\u7cbe\u5ea6\uff09 auto now = std::chrono::high_resolution_clock::now(); // \u8f6c\u6362\u4e3a\u6beb\u79d2 auto ms = std::chrono::time_point_cast<std::chrono::milliseconds>(now); auto epoch = ms.time_since_epoch(); auto value = std::chrono::duration_cast<std::chrono::milliseconds>(epoch); std::cout << \"Timestamp (milliseconds): \" << value.count() << std::endl; return 0; }","title":"\u83b7\u53d6\u9ad8\u7cbe\u5ea6\u65f6\u95f4\u6233\uff08\u6beb\u79d2\u3001\u5fae\u79d2\u6216\u7eb3\u79d2\uff09"},{"location":"cpp/vcpkg/","text":"vcpkg documentation | Microsoft Learn install # git clone https://github.com/microsoft/vcpkg.git 3rd/vcpkg sudo apt install curl zip unzip tar ninja-build cd 3rd/vcpkg && ./bootstrap-vcpkg.sh export VCPKG_ROOT=/install_dir/vcpkg export PATH=$PATH:$VCPKG_ROOT lib install # vcpkg install spdlog:x64-linux vcpkg install spdlog:arm64-linux cmake_CmakeLists.txt # cmake need to before project cmake_minimum_required(VERSION 3.20) set(CMAKE_TOOLCHAIN_FILE \"/vcpkg_install_dir/vcpkg/scripts/buildsystems/vcpkg.cmake\") set(VCPKG_CHAINLOAD_TOOLCHAIN_FILE \"${CMAKE_CURRENT_SOURCE_DIR}/arm64-gcc.cmake\") set(VCPKG_TARGET_TRIPLET \"arm64-linux\") project(mydev) add_executable(mydev main.cpp) find_package(spdlog CONFIG REQUIRED) find_package(cli CONFIG REQUIRED) target_link_libraries(mydev PRIVATE spdlog::spdlog cli::cli) set(CMAKE_SYSTEM_NAME Linux) set(CMAKE_SYSTEM_PROCESSOR arm64) SET(CMAKE_CXX_COMPILER /usr/bin/aarch64-linux-gnu-g++) SET(CMAKE_C_COMPILER /usr/bin/aarch64-linux-gnu-gcc) set(CMAKE_CXX_STANDARD 17) set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall -Wextra -pthread\") # adjust the default behavior of the FIND_XXX() commands: # search programs in the host environment set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER) # search headers and libraries in the target environment set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY) set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY) cmake_presets # In vscode, can use left cmake pannel to compile, no need commands cmake --list-presets cmake --preset=x86 cmake --build build { \"version\": 8, \"configurePresets\": [ { \"name\": \"x86\", \"displayName\": \"x86-linux\", \"description\": \"x86-linux\", \"generator\": \"Ninja\", \"binaryDir\": \"${sourceDir}/build/${presetName}\", \"cacheVariables\": { \"CMAKE_BUILD_TYPE\": \"Debug\", \"VCPKG_HOST_TRIPLET\": \"x64-linux\", \"CMAKE_TOOLCHAIN_FILE\": \"/home/jcai/gitee/mydev/3rd/vcpkg/scripts/buildsystems/vcpkg.cmake\" } }, { \"name\": \"arm\", \"displayName\": \"arm-linux\", \"description\": \"arm-linux\", \"generator\": \"Ninja\", \"binaryDir\": \"${sourceDir}/build/${presetName}\", \"cacheVariables\": { \"CMAKE_BUILD_TYPE\": \"Debug\", \"VCPKG_CHAINLOAD_TOOLCHAIN_FILE\": \"${sourceDir}/cmake/arm64-linux-gcc.cmake\", \"VCPKG_TARGET_TRIPLET\": \"arm64-linux\", \"CMAKE_TOOLCHAIN_FILE\": \"/home/jcai/gitee/mydev/3rd/vcpkg/scripts/buildsystems/vcpkg.cmake\" } } ] }","title":"Vcpkg"},{"location":"cpp/vcpkg/#install","text":"git clone https://github.com/microsoft/vcpkg.git 3rd/vcpkg sudo apt install curl zip unzip tar ninja-build cd 3rd/vcpkg && ./bootstrap-vcpkg.sh export VCPKG_ROOT=/install_dir/vcpkg export PATH=$PATH:$VCPKG_ROOT","title":"install"},{"location":"cpp/vcpkg/#lib-install","text":"vcpkg install spdlog:x64-linux vcpkg install spdlog:arm64-linux","title":"lib install"},{"location":"cpp/vcpkg/#cmake_cmakeliststxt","text":"cmake need to before project cmake_minimum_required(VERSION 3.20) set(CMAKE_TOOLCHAIN_FILE \"/vcpkg_install_dir/vcpkg/scripts/buildsystems/vcpkg.cmake\") set(VCPKG_CHAINLOAD_TOOLCHAIN_FILE \"${CMAKE_CURRENT_SOURCE_DIR}/arm64-gcc.cmake\") set(VCPKG_TARGET_TRIPLET \"arm64-linux\") project(mydev) add_executable(mydev main.cpp) find_package(spdlog CONFIG REQUIRED) find_package(cli CONFIG REQUIRED) target_link_libraries(mydev PRIVATE spdlog::spdlog cli::cli) set(CMAKE_SYSTEM_NAME Linux) set(CMAKE_SYSTEM_PROCESSOR arm64) SET(CMAKE_CXX_COMPILER /usr/bin/aarch64-linux-gnu-g++) SET(CMAKE_C_COMPILER /usr/bin/aarch64-linux-gnu-gcc) set(CMAKE_CXX_STANDARD 17) set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall -Wextra -pthread\") # adjust the default behavior of the FIND_XXX() commands: # search programs in the host environment set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER) # search headers and libraries in the target environment set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY) set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)","title":"cmake_CmakeLists.txt"},{"location":"cpp/vcpkg/#cmake_presets","text":"In vscode, can use left cmake pannel to compile, no need commands cmake --list-presets cmake --preset=x86 cmake --build build { \"version\": 8, \"configurePresets\": [ { \"name\": \"x86\", \"displayName\": \"x86-linux\", \"description\": \"x86-linux\", \"generator\": \"Ninja\", \"binaryDir\": \"${sourceDir}/build/${presetName}\", \"cacheVariables\": { \"CMAKE_BUILD_TYPE\": \"Debug\", \"VCPKG_HOST_TRIPLET\": \"x64-linux\", \"CMAKE_TOOLCHAIN_FILE\": \"/home/jcai/gitee/mydev/3rd/vcpkg/scripts/buildsystems/vcpkg.cmake\" } }, { \"name\": \"arm\", \"displayName\": \"arm-linux\", \"description\": \"arm-linux\", \"generator\": \"Ninja\", \"binaryDir\": \"${sourceDir}/build/${presetName}\", \"cacheVariables\": { \"CMAKE_BUILD_TYPE\": \"Debug\", \"VCPKG_CHAINLOAD_TOOLCHAIN_FILE\": \"${sourceDir}/cmake/arm64-linux-gcc.cmake\", \"VCPKG_TARGET_TRIPLET\": \"arm64-linux\", \"CMAKE_TOOLCHAIN_FILE\": \"/home/jcai/gitee/mydev/3rd/vcpkg/scripts/buildsystems/vcpkg.cmake\" } } ] }","title":"cmake_presets"},{"location":"fpga/xlnx/","text":"gt_speed # GTP < GPX < GTH < GTZ < GTY < GTM GTP\u6700\u9ad8\u53ef\u4ee5\u8fbe\u52306.6Gb/s\uff0cGTX\u6700\u9ad812.5Gb/s\uff0cGTH\u6700\u9ad813.1Gb/s\uff0cGTZ\u6700\u9ad828.05Gb/s, GTY\u6700\u9ad832.75Gb/s, GTM\u6700\u9ad8112Gb/s","title":"Xlnx"},{"location":"fpga/xlnx/#gt_speed","text":"GTP < GPX < GTH < GTZ < GTY < GTM GTP\u6700\u9ad8\u53ef\u4ee5\u8fbe\u52306.6Gb/s\uff0cGTX\u6700\u9ad812.5Gb/s\uff0cGTH\u6700\u9ad813.1Gb/s\uff0cGTZ\u6700\u9ad828.05Gb/s, GTY\u6700\u9ad832.75Gb/s, GTM\u6700\u9ad8112Gb/s","title":"gt_speed"},{"location":"fw/debian_eth_name/","text":"debian12\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u66f4\u6539eth0\u7684\u540d\u79f0 root@localhost:~# dmesg |grep -i end [ 17.746026] signverif: Parsing issue end = 0, start = 2032830208 [ 39.132333] macb ff0b0000.ethernet end0: renamed from eth0 \u4fee\u6539uboot\u7684\u542f\u52a8\u53c2\u6570 # \u6dfb\u52a0 net.ifnames=0 systemd \u4fee\u6539 # create a file /etc/systemd/network/10-eth1p1.link ex. name: ens86f0 [Match] MACAddress=aa:bb:cc:dd:ee:ff [Link] Name=eth1p1 systemctl restart systemd-udev-trigger.service networking - Debian 11/12 rename network interfaces - Unix & Linux Stack Exchange debian - Rename ether interface with systemd-networkd without reboot - Unix & Linux Stack Exchange","title":"Debian eth name"},{"location":"fw/debian_eth_name/#\u4fee\u6539uboot\u7684\u542f\u52a8\u53c2\u6570","text":"\u6dfb\u52a0 net.ifnames=0","title":"\u4fee\u6539uboot\u7684\u542f\u52a8\u53c2\u6570"},{"location":"fw/debian_eth_name/#systemd-\u4fee\u6539","text":"create a file /etc/systemd/network/10-eth1p1.link ex. name: ens86f0 [Match] MACAddress=aa:bb:cc:dd:ee:ff [Link] Name=eth1p1 systemctl restart systemd-udev-trigger.service networking - Debian 11/12 rename network interfaces - Unix & Linux Stack Exchange debian - Rename ether interface with systemd-networkd without reboot - Unix & Linux Stack Exchange","title":"systemd \u4fee\u6539"},{"location":"fw/devicetree/","text":"dtc # DTB --\u300b DTS ./dtc -I dtb -O dts *.dtb -o *.dts DTS -\u300b DTB ./dtc -I dts -O dtb -o test.dtb test.dts wdg # + gpiowdt: watchdog { + compatible = \"linux,wdt-gpio\"; + gpios = <&gpio1 5 GPIO_ACTIVE_LOW>; + hw_algo = \"level\"; + hw_margin_ms = <1600>; + };","title":"Devicetree"},{"location":"fw/devicetree/#dtc","text":"DTB --\u300b DTS ./dtc -I dtb -O dts *.dtb -o *.dts DTS -\u300b DTB ./dtc -I dts -O dtb -o test.dtb test.dts","title":"dtc"},{"location":"fw/devicetree/#wdg","text":"+ gpiowdt: watchdog { + compatible = \"linux,wdt-gpio\"; + gpios = <&gpio1 5 GPIO_ACTIVE_LOW>; + hw_algo = \"level\"; + hw_margin_ms = <1600>; + };","title":"wdg"},{"location":"fw/gpiod/","text":"compile # comment AC_FUNC_MALLOC from configure.ac ./autogen.sh --enable-tools=yes --host=armv8 CC=/tool/gcc_linaro/gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-gcc \\ --prefix=/home/jcai/linux/libgpiod/gpio2 make make install","title":"Gpiod"},{"location":"fw/gpiod/#compile","text":"comment AC_FUNC_MALLOC from configure.ac ./autogen.sh --enable-tools=yes --host=armv8 CC=/tool/gcc_linaro/gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-gcc \\ --prefix=/home/jcai/linux/libgpiod/gpio2 make make install","title":"compile"},{"location":"fw/ramdisk/","text":"Using the RAM disk block device with Linux \u2014 The Linux Kernel documentation kernel panic unable to mount rootfs - NXP Community RAMDISK: Couldn't find valid RAM disk image starting at 0. CONFIG_BLK_DEV_RAM=y","title":"Ramdisk"},{"location":"linux/IO_API/","text":"pipe\u51fd\u6570 # pipe\u51fd\u6570\u53ef\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u7ba1\u9053\uff0c\u4ee5\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u901a\u4fe1\u3002 #include\uff1cunistd.h\uff1e int pipe(int fd[2]); pipe\u51fd\u6570\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u5305\u542b\u4e24\u4e2aint\u578b\u6574\u6570\u7684\u6570\u7ec4\u6307\u9488\u3002\u8be5\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5e76\u5c06\u4e00\u5bf9\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u503c\u586b\u5165\u5176\u53c2\u6570\u6307\u5411\u7684\u6570\u7ec4\u3002\u5982\u679c\u5931\u8d25\uff0c\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 \u901a\u8fc7pipe\u51fd\u6570\u521b\u5efa\u7684\u8fd9\u4e24\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26fd[0]\u548cfd[1]\u5206\u522b\u6784\u6210\u7ba1\u9053\u7684\u4e24\u7aef\uff0c\u5f80fd[1]\u5199\u5165\u7684\u6570\u636e\u53ef\u4ee5\u4ecefd[0]\u8bfb\u51fa\u3002\u5e76\u4e14\uff0c fd[0]\u53ea\u80fd\u7528\u4e8e\u4ece\u7ba1\u9053\u8bfb\u51fa\u6570\u636e\uff0cfd[1]\u5219\u53ea\u80fd\u7528\u4e8e\u5f80\u7ba1\u9053\u5199\u5165\u6570\u636e \uff0c\u800c\u4e0d\u80fd\u53cd\u8fc7\u6765\u4f7f\u7528\u3002 socket\u7684\u57fa\u7840API\u4e2d\u6709\u4e00\u4e2asocketpair\u51fd\u6570\u3002\u5b83\u80fd\u591f\u65b9\u4fbf\u5730\u521b\u5efa\u53cc\u5411\u7ba1\u9053\u3002 #include\uff1csys/types.h\uff1e #include\uff1csys/socket.h\uff1e int socketpair(int domain,int type,int protocol,int fd[2]); socketpair\u524d\u4e09\u4e2a\u53c2\u6570\u7684\u542b\u4e49\u4e0esocket\u7cfb\u7edf\u8c03\u7528\u7684\u4e09\u4e2a\u53c2\u6570\u5b8c\u5168\u76f8\u540c\uff0c\u4f46domain\u53ea\u80fd\u4f7f\u7528UNIX\u672c\u5730\u57df\u534f\u8bae\u65cfAF_UNIX\uff0c\u56e0\u4e3a\u6211\u4eec\u4ec5\u80fd\u5728\u672c\u5730\u4f7f\u7528\u8fd9\u4e2a\u53cc\u5411\u7ba1\u9053\u3002\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u5219\u548cpipe\u7cfb\u7edf\u8c03\u7528\u7684\u53c2\u6570\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7socketpair\u521b\u5efa\u7684\u8fd9\u5bf9\u6587\u4ef6\u63cf\u8ff0\u7b26\u90fd\u662f\u65e2\u53ef\u8bfb\u53c8\u53ef\u5199\u7684\u3002socketpair\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 dup # \u628a\u6807\u51c6\u8f93\u5165\u91cd\u5b9a\u5411\u5230\u4e00\u4e2a\u6587\u4ef6\uff0c\u6216\u8005\u628a\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u4e00\u4e2a\u7f51\u7edc\u8fde\u63a5 #include\uff1cunistd.h\uff1e int dup(int file_descriptor); int dup2(int file_descriptor_one,int file_descriptor_two); dup\u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u8be5\u65b0\u6587\u4ef6\u63cf\u8ff0\u7b26\u548c\u539f\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26file_descriptor\u6307\u5411\u76f8\u540c\u7684\u6587\u4ef6\u3001\u7ba1\u9053\u6216\u8005\u7f51\u7edc\u8fde\u63a5\u3002\u5e76\u4e14dup\u8fd4\u56de\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u603b\u662f\u53d6\u7cfb\u7edf\u5f53\u524d\u53ef\u7528\u7684\u6700\u5c0f\u6574\u6570\u503c\u3002 dup2\u548cdup\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u5b83\u5c06\u8fd4\u56de\u7b2c\u4e00\u4e2a\u4e0d\u5c0f\u4e8efile_descriptor_two\u7684\u6574\u6570\u503c\u3002dup\u548cdup2\u7cfb\u7edf\u8c03\u7528\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 test_cgi.cpp \u5148\u5173\u95ed\u6807\u51c6\u8f93\u51fa\u6587\u4ef6\u63cf\u8ff0\u7b26STDOUT_FILENO\uff08\u5176\u503c\u662f1\uff09\uff0c\u7136\u540e\u590d\u5236socket\u6587\u4ef6\u63cf\u8ff0\u7b26connfd\u3002\u56e0\u4e3adup\u603b\u662f\u8fd4\u56de\u7cfb\u7edf\u4e2d\u6700\u5c0f\u7684\u53ef\u7528\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u6240\u4ee5\u5b83\u7684\u8fd4\u56de\u503c\u5b9e\u9645\u4e0a\u662f1\uff0c\u5373\u4e4b\u524d\u5173\u95ed\u7684\u6807\u51c6\u8f93\u51fa\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u503c\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u670d\u52a1\u5668\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u7684\u5185\u5bb9\uff08\u8fd9\u91cc\u662f\u201cabcd\u201d\uff09\u5c31\u4f1a\u76f4\u63a5\u53d1\u9001\u5230\u4e0e\u5ba2\u6237\u8fde\u63a5\u5bf9\u5e94\u7684socket\u4e0a\uff0c\u56e0\u6b64printf\u8c03\u7528\u7684\u8f93\u51fa\u5c06\u88ab\u5ba2\u6237\u7aef\u83b7\u5f97\uff08\u800c\u4e0d\u662f\u663e\u793a\u5728\u670d\u52a1\u5668\u7a0b\u5e8f\u7684\u7ec8\u7aef\u4e0a\uff09\u3002\u8fd9\u5c31\u662fCGI\u670d\u52a1\u5668\u7684\u57fa\u672c\u5de5\u4f5c\u539f\u7406\u3002 readv\u51fd\u6570\u548cwritev\u51fd\u6570 # readv\u51fd\u6570\u5c06\u6570\u636e\u4ece\u6587\u4ef6\u63cf\u8ff0\u7b26\u8bfb\u5230\u5206\u6563\u7684\u5185\u5b58\u5757\u4e2d\uff0c\u5373\u5206\u6563\u8bfb\uff1b writev\u51fd\u6570\u5219\u5c06\u591a\u5757\u5206\u6563\u7684\u5185\u5b58\u6570\u636e\u4e00\u5e76\u5199\u5165\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e2d\uff0c\u5373\u96c6\u4e2d\u5199\u3002 #include\uff1csys/uio.h\uff1e ssize_t readv(int fd,const struct iovec*vector,int count)\uff1b ssize_t writev(int fd,const struct iovec*vector,int count); struct iovec { void*iov_base;/*\u5185\u5b58\u8d77\u59cb\u5730\u5740*/ size_t iov_len;/*\u8fd9\u5757\u5185\u5b58\u7684\u957f\u5ea6*/ }; fd\u53c2\u6570\u662f\u88ab\u64cd\u4f5c\u7684\u76ee\u6807\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 vector\u53c2\u6570\u7684\u7c7b\u578b\u662fiovec\u7ed3\u6784\u6570\u7ec4\u3002 count\u53c2\u6570\u662fvector\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u5373\u6709\u591a\u5c11\u5757\u5185\u5b58\u6570\u636e\u9700\u8981\u4ecefd\u8bfb\u51fa\u6216\u5199\u5230fd\u3002 readv\u548cwritev\u5728\u6210\u529f\u65f6\u8fd4\u56de\u8bfb\u51fa/\u5199\u5165fd\u7684\u5b57\u8282\u6570\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 \u5b83\u4eec\u76f8\u5f53\u4e8e\u7b80\u5316\u7248\u7684recvmsg\u548csendmsg\u51fd\u6570\u3002 test_writev.cpp \u76f4\u63a5\u5c06\u76ee\u6807\u6587\u4ef6\u4f5c\u4e3a\u7b2c3\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u670d\u52a1\u5668\u7a0b\u5e8f\uff0c\u5ba2\u6237telnet\u5230\u8be5\u670d\u52a1\u5668\u4e0a\u5373\u53ef\u83b7\u5f97\u8be5\u6587\u4ef6\u3002 sendfile # \u5728\u4e24\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e4b\u95f4\u76f4\u63a5\u4f20\u9012\u6570\u636e\uff08\u5b8c\u5168\u5728\u5185\u6838\u4e2d\u64cd\u4f5c\uff09\uff0c\u4ece\u800c\u907f\u514d\u4e86\u5185\u6838\u7f13\u51b2\u533a\u548c\u7528\u6237\u7f13\u51b2\u533a\u4e4b\u95f4\u7684\u6570\u636e\u62f7\u8d1d\uff0c\u6548\u7387\u5f88\u9ad8\uff0c\u8fd9\u88ab\u79f0\u4e3a\u96f6\u62f7\u8d1d\u3002 #include\uff1csys/sendfile.h\uff1e ssize_t sendfile(int out_fd,int in_fd,off_t*offset,size_t count); in_fd\u53c2\u6570\u662f\u5f85\u8bfb\u51fa\u5185\u5bb9\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c out_fd\u53c2\u6570\u662f\u5f85\u5199\u5165\u5185\u5bb9\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 offset\u53c2\u6570\u6307\u5b9a\u4ece\u8bfb\u5165\u6587\u4ef6\u6d41\u7684\u54ea\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u8bfb\uff0c\u5982\u679c\u4e3a\u7a7a\uff0c\u5219\u4f7f\u7528\u8bfb\u5165\u6587\u4ef6\u6d41\u9ed8\u8ba4\u7684\u8d77\u59cb\u4f4d\u7f6e count\u53c2\u6570\u6307\u5b9a\u5728\u6587\u4ef6\u63cf\u8ff0\u7b26in_fd\u548cout_fd\u4e4b\u95f4\u4f20\u8f93\u7684\u5b57\u8282\u6570\u3002 sendfile\u6210\u529f\u65f6\u8fd4\u56de\u4f20\u8f93\u7684\u5b57\u8282\u6570\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 test_sendfile.cpp \u5c06\u76ee\u6807\u6587\u4ef6\u4f5c\u4e3a\u7b2c3\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u670d\u52a1\u5668\u7a0b\u5e8f\uff0c\u5ba2\u6237telnet\u5230\u8be5\u670d\u52a1\u5668\u4e0a\u5373\u53ef\u83b7\u5f97\u8be5\u6587\u4ef6\u3002 mmap\u51fd\u6570\u548cmunmap\u51fd\u6570 # mmap\u51fd\u6570\u7528\u4e8e\u7533\u8bf7\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u6bb5\u5185\u5b58\u4f5c\u4e3a\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u5171\u4eab\u5185\u5b58\uff0c\u4e5f\u53ef\u4ee5\u5c06\u6587\u4ef6\u76f4\u63a5\u6620\u5c04\u5230\u5176\u4e2d\u3002 munmap\u51fd\u6570\u5219\u91ca\u653e\u7531mmap\u521b\u5efa\u7684\u8fd9\u6bb5\u5185\u5b58\u7a7a\u95f4\u3002 #include\uff1csys/mman.h\uff1e void*mmap(void*start,size_t length,int prot,int flags,int fd,off_t offset); int munmap(void*start,size_t length); start\u53c2\u6570\u5141\u8bb8\u7528\u6237\u4f7f\u7528\u67d0\u4e2a\u7279\u5b9a\u7684\u5730\u5740\u4f5c\u4e3a\u8fd9\u6bb5\u5185\u5b58\u7684\u8d77\u59cb\u5730\u5740\u3002 \u5982\u679c\u5b83\u88ab\u8bbe\u7f6e\u6210NULL\uff0c\u5219\u7cfb\u7edf\u81ea\u52a8\u5206\u914d\u4e00\u4e2a\u5730\u5740\u3002 length\u53c2\u6570\u6307\u5b9a\u5185\u5b58\u6bb5\u7684\u957f\u5ea6\u3002 port\u53c2\u6570\u7528\u6765\u8bbe\u7f6e\u5185\u5b58\u6bb5\u7684\u8bbf\u95ee\u6743\u9650\u3002 \u2751PROT_READ\uff0c\u5185\u5b58\u6bb5\u53ef\u8bfb\u3002 \u2751PROT_WRITE\uff0c\u5185\u5b58\u6bb5\u53ef\u5199\u3002 \u2751PROT_EXEC\uff0c\u5185\u5b58\u6bb5\u53ef\u6267\u884c\u3002 \u2751PROT_NONE\uff0c\u5185\u5b58\u6bb5\u4e0d\u80fd\u88ab\u8bbf\u95ee\u3002 flags\u53c2\u6570\u63a7\u5236\u5185\u5b58\u6bb5\u5185\u5bb9\u88ab\u4fee\u6539\u540e\u7a0b\u5e8f\u7684\u884c\u4e3a\u3002 fd\u53c2\u6570\u662f\u88ab\u6620\u5c04\u6587\u4ef6\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u5b83\u4e00\u822c\u901a\u8fc7open\u7cfb\u7edf\u8c03\u7528\u83b7\u5f97\u3002 offset\u53c2\u6570\u8bbe\u7f6e\u4ece\u6587\u4ef6\u7684\u4f55\u5904\u5f00\u59cb\u6620\u5c04 mmap\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de\u6307\u5411\u76ee\u6807\u5185\u5b58\u533a\u57df\u7684\u6307\u9488\uff0c\u5931\u8d25\u5219\u8fd4\u56deMAP_FAILED\uff08(void*)-1\uff09\u5e76\u8bbe\u7f6eerrno\u3002 munmap\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 splice\u51fd\u6570 # splice\u51fd\u6570\u7528\u4e8e\u5728\u4e24\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e4b\u95f4\u79fb\u52a8\u6570\u636e\uff0c\u4e5f\u662f\u96f6\u62f7\u8d1d\u64cd\u4f5c\u3002 #include\uff1cfcntl.h\uff1e ssize_t splice(int fd_in,loff_t*off_in,int fd_out,loff_t*off_out,size_t len,unsigned int flags); fd_in\u53c2\u6570\u662f\u5f85\u8f93\u5165\u6570\u636e\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u5982\u679cfd_in\u662f\u4e00\u4e2a\u7ba1\u9053\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u90a3\u4e48off_in\u53c2\u6570\u5fc5\u987b\u88ab\u8bbe\u7f6e\u4e3aNULL\u3002\u5982\u679cfd_in\u4e0d\u662f\u4e00\u4e2a\u7ba1\u9053\u6587\u4ef6\u63cf\u8ff0\u7b26\uff08\u6bd4\u5982socket\uff09\uff0c\u90a3\u4e48off_in\u8868\u793a\u4ece\u8f93\u5165\u6570\u636e\u6d41\u7684\u4f55\u5904\u5f00\u59cb\u8bfb\u53d6\u6570\u636e\u3002\u6b64\u65f6\uff0c\u82e5off_in\u88ab\u8bbe\u7f6e\u4e3aNULL\uff0c\u5219\u8868\u793a\u4ece\u8f93\u5165\u6570\u636e\u6d41\u7684\u5f53\u524d\u504f\u79fb\u4f4d\u7f6e\u8bfb\u5165\uff1b\u82e5off_in\u4e0d\u4e3aNULL\uff0c\u5219\u5b83\u5c06\u6307\u51fa\u5177\u4f53\u7684\u504f\u79fb\u4f4d\u7f6e\u3002 len\u53c2\u6570\u6307\u5b9a\u79fb\u52a8\u6570\u636e\u7684\u957f\u5ea6\uff1b flags\u53c2\u6570\u5219\u63a7\u5236\u6570\u636e\u5982\u4f55\u79fb\u52a8 \u4f7f\u7528splice\u51fd\u6570\u65f6\uff0cfd_in\u548cfd_out\u5fc5\u987b\u81f3\u5c11\u6709\u4e00\u4e2a\u662f\u7ba1\u9053\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 splice\u51fd\u6570\u8c03\u7528\u6210\u529f\u65f6\u8fd4\u56de\u79fb\u52a8\u5b57\u8282\u7684\u6570\u91cf\u3002\u5b83\u53ef\u80fd\u8fd4\u56de0\uff0c\u8868\u793a\u6ca1\u6709\u6570\u636e\u9700\u8981\u79fb\u52a8\uff0c\u8fd9\u53d1\u751f\u5728\u4ece\u7ba1\u9053\u4e2d\u8bfb\u53d6\u6570\u636e\uff08fd_in\u662f\u7ba1\u9053\u6587\u4ef6\u63cf\u8ff0\u7b26\uff09\u800c\u8be5\u7ba1\u9053\u6ca1\u6709\u88ab\u5199\u5165\u4efb\u4f55\u6570\u636e\u65f6\u3002 splice\u51fd\u6570\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 test_splice.cpp \u901a\u8fc7splice\u51fd\u6570\u5c06\u5ba2\u6237\u7aef\u7684\u5185\u5bb9\u8bfb\u5165\u5230pipefd[1]\u4e2d\uff0c\u7136\u540e\u518d\u4f7f\u7528splice\u51fd\u6570\u4ecepipefd[0]\u4e2d\u8bfb\u51fa\u8be5\u5185\u5bb9\u5230\u5ba2\u6237\u7aef\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u7b80\u5355\u9ad8\u6548\u7684\u56de\u5c04\u670d\u52a1\u3002 tee\u51fd\u6570 # tee\u51fd\u6570\u5728\u4e24\u4e2a\u7ba1\u9053\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e4b\u95f4\u590d\u5236\u6570\u636e\uff0c\u4e5f\u662f\u96f6\u62f7\u8d1d\u64cd\u4f5c\u3002 #include\uff1cfcntl.h\uff1e ssize_t tee(int fd_in,int fd_out,size_t len,unsigned int flags); fd_in\u548cfd_out\u5fc5\u987b\u90fd\u662f\u7ba1\u9053\u6587\u4ef6\u63cf\u8ff0\u7b26 tee\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de\u5728\u4e24\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e4b\u95f4\u590d\u5236\u7684\u6570\u636e\u6570\u91cf\uff08\u5b57\u8282\u6570\uff09\u3002 \u8fd4\u56de0\u8868\u793a\u6ca1\u6709\u590d\u5236\u4efb\u4f55\u6570\u636e\u3002tee\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 test_tee.cpp \u540c\u65f6\u8f93\u51fa\u6570\u636e\u5230\u7ec8\u7aef\u548c\u6587\u4ef6\u7684\u7a0b\u5e8f fcntl\u51fd\u6570 # fcntl\u51fd\u6570\uff0c\u6b63\u5982\u5176\u540d\u5b57\uff08file control\uff09\u63cf\u8ff0\u7684\u90a3\u6837\uff0c\u63d0\u4f9b\u4e86\u5bf9\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u5404\u79cd\u63a7\u5236\u64cd\u4f5c\u3002 #include\uff1cfcntl.h\uff1e int fcntl(int fd,int cmd,\u2026); fd\u53c2\u6570\u662f\u88ab\u64cd\u4f5c\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c cmd\u53c2\u6570\u6307\u5b9a\u6267\u884c\u4f55\u79cd\u7c7b\u578b\u7684\u64cd\u4f5c\u3002 \u5728\u7f51\u7edc\u7f16\u7a0b\u4e2d\uff0cfcntl\u51fd\u6570\u901a\u5e38\u7528\u6765\u5c06\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u8bbe\u7f6e\u4e3a\u975e\u963b\u585e\u7684 int setnonblocking(int fd) { int old_option=fcntl(fd,F_GETFL);/*\u83b7\u53d6\u6587\u4ef6\u63cf\u8ff0\u7b26\u65e7\u7684\u72b6\u6001\u6807\u5fd7*/ int new_option=old_option|O_NONBLOCK;/*\u8bbe\u7f6e\u975e\u963b\u585e\u6807\u5fd7*/ fcntl(fd,F_SETFL,new_option); return old_option;/*\u8fd4\u56de\u6587\u4ef6\u63cf\u8ff0\u7b26\u65e7\u7684\u72b6\u6001\u6807\u5fd7\uff0c\u4ee5\u4fbf*/ /*\u65e5\u540e\u6062\u590d\u8be5\u72b6\u6001\u6807\u5fd7*/ }","title":"IO API"},{"location":"linux/IO_API/#pipe\u51fd\u6570","text":"pipe\u51fd\u6570\u53ef\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u7ba1\u9053\uff0c\u4ee5\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u901a\u4fe1\u3002 #include\uff1cunistd.h\uff1e int pipe(int fd[2]); pipe\u51fd\u6570\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u5305\u542b\u4e24\u4e2aint\u578b\u6574\u6570\u7684\u6570\u7ec4\u6307\u9488\u3002\u8be5\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5e76\u5c06\u4e00\u5bf9\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u503c\u586b\u5165\u5176\u53c2\u6570\u6307\u5411\u7684\u6570\u7ec4\u3002\u5982\u679c\u5931\u8d25\uff0c\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 \u901a\u8fc7pipe\u51fd\u6570\u521b\u5efa\u7684\u8fd9\u4e24\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26fd[0]\u548cfd[1]\u5206\u522b\u6784\u6210\u7ba1\u9053\u7684\u4e24\u7aef\uff0c\u5f80fd[1]\u5199\u5165\u7684\u6570\u636e\u53ef\u4ee5\u4ecefd[0]\u8bfb\u51fa\u3002\u5e76\u4e14\uff0c fd[0]\u53ea\u80fd\u7528\u4e8e\u4ece\u7ba1\u9053\u8bfb\u51fa\u6570\u636e\uff0cfd[1]\u5219\u53ea\u80fd\u7528\u4e8e\u5f80\u7ba1\u9053\u5199\u5165\u6570\u636e \uff0c\u800c\u4e0d\u80fd\u53cd\u8fc7\u6765\u4f7f\u7528\u3002 socket\u7684\u57fa\u7840API\u4e2d\u6709\u4e00\u4e2asocketpair\u51fd\u6570\u3002\u5b83\u80fd\u591f\u65b9\u4fbf\u5730\u521b\u5efa\u53cc\u5411\u7ba1\u9053\u3002 #include\uff1csys/types.h\uff1e #include\uff1csys/socket.h\uff1e int socketpair(int domain,int type,int protocol,int fd[2]); socketpair\u524d\u4e09\u4e2a\u53c2\u6570\u7684\u542b\u4e49\u4e0esocket\u7cfb\u7edf\u8c03\u7528\u7684\u4e09\u4e2a\u53c2\u6570\u5b8c\u5168\u76f8\u540c\uff0c\u4f46domain\u53ea\u80fd\u4f7f\u7528UNIX\u672c\u5730\u57df\u534f\u8bae\u65cfAF_UNIX\uff0c\u56e0\u4e3a\u6211\u4eec\u4ec5\u80fd\u5728\u672c\u5730\u4f7f\u7528\u8fd9\u4e2a\u53cc\u5411\u7ba1\u9053\u3002\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u5219\u548cpipe\u7cfb\u7edf\u8c03\u7528\u7684\u53c2\u6570\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7socketpair\u521b\u5efa\u7684\u8fd9\u5bf9\u6587\u4ef6\u63cf\u8ff0\u7b26\u90fd\u662f\u65e2\u53ef\u8bfb\u53c8\u53ef\u5199\u7684\u3002socketpair\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002","title":"pipe\u51fd\u6570"},{"location":"linux/IO_API/#dup","text":"\u628a\u6807\u51c6\u8f93\u5165\u91cd\u5b9a\u5411\u5230\u4e00\u4e2a\u6587\u4ef6\uff0c\u6216\u8005\u628a\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u4e00\u4e2a\u7f51\u7edc\u8fde\u63a5 #include\uff1cunistd.h\uff1e int dup(int file_descriptor); int dup2(int file_descriptor_one,int file_descriptor_two); dup\u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u8be5\u65b0\u6587\u4ef6\u63cf\u8ff0\u7b26\u548c\u539f\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26file_descriptor\u6307\u5411\u76f8\u540c\u7684\u6587\u4ef6\u3001\u7ba1\u9053\u6216\u8005\u7f51\u7edc\u8fde\u63a5\u3002\u5e76\u4e14dup\u8fd4\u56de\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u603b\u662f\u53d6\u7cfb\u7edf\u5f53\u524d\u53ef\u7528\u7684\u6700\u5c0f\u6574\u6570\u503c\u3002 dup2\u548cdup\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u5b83\u5c06\u8fd4\u56de\u7b2c\u4e00\u4e2a\u4e0d\u5c0f\u4e8efile_descriptor_two\u7684\u6574\u6570\u503c\u3002dup\u548cdup2\u7cfb\u7edf\u8c03\u7528\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 test_cgi.cpp \u5148\u5173\u95ed\u6807\u51c6\u8f93\u51fa\u6587\u4ef6\u63cf\u8ff0\u7b26STDOUT_FILENO\uff08\u5176\u503c\u662f1\uff09\uff0c\u7136\u540e\u590d\u5236socket\u6587\u4ef6\u63cf\u8ff0\u7b26connfd\u3002\u56e0\u4e3adup\u603b\u662f\u8fd4\u56de\u7cfb\u7edf\u4e2d\u6700\u5c0f\u7684\u53ef\u7528\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u6240\u4ee5\u5b83\u7684\u8fd4\u56de\u503c\u5b9e\u9645\u4e0a\u662f1\uff0c\u5373\u4e4b\u524d\u5173\u95ed\u7684\u6807\u51c6\u8f93\u51fa\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u503c\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u670d\u52a1\u5668\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u7684\u5185\u5bb9\uff08\u8fd9\u91cc\u662f\u201cabcd\u201d\uff09\u5c31\u4f1a\u76f4\u63a5\u53d1\u9001\u5230\u4e0e\u5ba2\u6237\u8fde\u63a5\u5bf9\u5e94\u7684socket\u4e0a\uff0c\u56e0\u6b64printf\u8c03\u7528\u7684\u8f93\u51fa\u5c06\u88ab\u5ba2\u6237\u7aef\u83b7\u5f97\uff08\u800c\u4e0d\u662f\u663e\u793a\u5728\u670d\u52a1\u5668\u7a0b\u5e8f\u7684\u7ec8\u7aef\u4e0a\uff09\u3002\u8fd9\u5c31\u662fCGI\u670d\u52a1\u5668\u7684\u57fa\u672c\u5de5\u4f5c\u539f\u7406\u3002","title":"dup"},{"location":"linux/IO_API/#readv\u51fd\u6570\u548cwritev\u51fd\u6570","text":"readv\u51fd\u6570\u5c06\u6570\u636e\u4ece\u6587\u4ef6\u63cf\u8ff0\u7b26\u8bfb\u5230\u5206\u6563\u7684\u5185\u5b58\u5757\u4e2d\uff0c\u5373\u5206\u6563\u8bfb\uff1b writev\u51fd\u6570\u5219\u5c06\u591a\u5757\u5206\u6563\u7684\u5185\u5b58\u6570\u636e\u4e00\u5e76\u5199\u5165\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e2d\uff0c\u5373\u96c6\u4e2d\u5199\u3002 #include\uff1csys/uio.h\uff1e ssize_t readv(int fd,const struct iovec*vector,int count)\uff1b ssize_t writev(int fd,const struct iovec*vector,int count); struct iovec { void*iov_base;/*\u5185\u5b58\u8d77\u59cb\u5730\u5740*/ size_t iov_len;/*\u8fd9\u5757\u5185\u5b58\u7684\u957f\u5ea6*/ }; fd\u53c2\u6570\u662f\u88ab\u64cd\u4f5c\u7684\u76ee\u6807\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 vector\u53c2\u6570\u7684\u7c7b\u578b\u662fiovec\u7ed3\u6784\u6570\u7ec4\u3002 count\u53c2\u6570\u662fvector\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u5373\u6709\u591a\u5c11\u5757\u5185\u5b58\u6570\u636e\u9700\u8981\u4ecefd\u8bfb\u51fa\u6216\u5199\u5230fd\u3002 readv\u548cwritev\u5728\u6210\u529f\u65f6\u8fd4\u56de\u8bfb\u51fa/\u5199\u5165fd\u7684\u5b57\u8282\u6570\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 \u5b83\u4eec\u76f8\u5f53\u4e8e\u7b80\u5316\u7248\u7684recvmsg\u548csendmsg\u51fd\u6570\u3002 test_writev.cpp \u76f4\u63a5\u5c06\u76ee\u6807\u6587\u4ef6\u4f5c\u4e3a\u7b2c3\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u670d\u52a1\u5668\u7a0b\u5e8f\uff0c\u5ba2\u6237telnet\u5230\u8be5\u670d\u52a1\u5668\u4e0a\u5373\u53ef\u83b7\u5f97\u8be5\u6587\u4ef6\u3002","title":"readv\u51fd\u6570\u548cwritev\u51fd\u6570"},{"location":"linux/IO_API/#sendfile","text":"\u5728\u4e24\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e4b\u95f4\u76f4\u63a5\u4f20\u9012\u6570\u636e\uff08\u5b8c\u5168\u5728\u5185\u6838\u4e2d\u64cd\u4f5c\uff09\uff0c\u4ece\u800c\u907f\u514d\u4e86\u5185\u6838\u7f13\u51b2\u533a\u548c\u7528\u6237\u7f13\u51b2\u533a\u4e4b\u95f4\u7684\u6570\u636e\u62f7\u8d1d\uff0c\u6548\u7387\u5f88\u9ad8\uff0c\u8fd9\u88ab\u79f0\u4e3a\u96f6\u62f7\u8d1d\u3002 #include\uff1csys/sendfile.h\uff1e ssize_t sendfile(int out_fd,int in_fd,off_t*offset,size_t count); in_fd\u53c2\u6570\u662f\u5f85\u8bfb\u51fa\u5185\u5bb9\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c out_fd\u53c2\u6570\u662f\u5f85\u5199\u5165\u5185\u5bb9\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 offset\u53c2\u6570\u6307\u5b9a\u4ece\u8bfb\u5165\u6587\u4ef6\u6d41\u7684\u54ea\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u8bfb\uff0c\u5982\u679c\u4e3a\u7a7a\uff0c\u5219\u4f7f\u7528\u8bfb\u5165\u6587\u4ef6\u6d41\u9ed8\u8ba4\u7684\u8d77\u59cb\u4f4d\u7f6e count\u53c2\u6570\u6307\u5b9a\u5728\u6587\u4ef6\u63cf\u8ff0\u7b26in_fd\u548cout_fd\u4e4b\u95f4\u4f20\u8f93\u7684\u5b57\u8282\u6570\u3002 sendfile\u6210\u529f\u65f6\u8fd4\u56de\u4f20\u8f93\u7684\u5b57\u8282\u6570\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 test_sendfile.cpp \u5c06\u76ee\u6807\u6587\u4ef6\u4f5c\u4e3a\u7b2c3\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u670d\u52a1\u5668\u7a0b\u5e8f\uff0c\u5ba2\u6237telnet\u5230\u8be5\u670d\u52a1\u5668\u4e0a\u5373\u53ef\u83b7\u5f97\u8be5\u6587\u4ef6\u3002","title":"sendfile"},{"location":"linux/IO_API/#mmap\u51fd\u6570\u548cmunmap\u51fd\u6570","text":"mmap\u51fd\u6570\u7528\u4e8e\u7533\u8bf7\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u6bb5\u5185\u5b58\u4f5c\u4e3a\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u5171\u4eab\u5185\u5b58\uff0c\u4e5f\u53ef\u4ee5\u5c06\u6587\u4ef6\u76f4\u63a5\u6620\u5c04\u5230\u5176\u4e2d\u3002 munmap\u51fd\u6570\u5219\u91ca\u653e\u7531mmap\u521b\u5efa\u7684\u8fd9\u6bb5\u5185\u5b58\u7a7a\u95f4\u3002 #include\uff1csys/mman.h\uff1e void*mmap(void*start,size_t length,int prot,int flags,int fd,off_t offset); int munmap(void*start,size_t length); start\u53c2\u6570\u5141\u8bb8\u7528\u6237\u4f7f\u7528\u67d0\u4e2a\u7279\u5b9a\u7684\u5730\u5740\u4f5c\u4e3a\u8fd9\u6bb5\u5185\u5b58\u7684\u8d77\u59cb\u5730\u5740\u3002 \u5982\u679c\u5b83\u88ab\u8bbe\u7f6e\u6210NULL\uff0c\u5219\u7cfb\u7edf\u81ea\u52a8\u5206\u914d\u4e00\u4e2a\u5730\u5740\u3002 length\u53c2\u6570\u6307\u5b9a\u5185\u5b58\u6bb5\u7684\u957f\u5ea6\u3002 port\u53c2\u6570\u7528\u6765\u8bbe\u7f6e\u5185\u5b58\u6bb5\u7684\u8bbf\u95ee\u6743\u9650\u3002 \u2751PROT_READ\uff0c\u5185\u5b58\u6bb5\u53ef\u8bfb\u3002 \u2751PROT_WRITE\uff0c\u5185\u5b58\u6bb5\u53ef\u5199\u3002 \u2751PROT_EXEC\uff0c\u5185\u5b58\u6bb5\u53ef\u6267\u884c\u3002 \u2751PROT_NONE\uff0c\u5185\u5b58\u6bb5\u4e0d\u80fd\u88ab\u8bbf\u95ee\u3002 flags\u53c2\u6570\u63a7\u5236\u5185\u5b58\u6bb5\u5185\u5bb9\u88ab\u4fee\u6539\u540e\u7a0b\u5e8f\u7684\u884c\u4e3a\u3002 fd\u53c2\u6570\u662f\u88ab\u6620\u5c04\u6587\u4ef6\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u5b83\u4e00\u822c\u901a\u8fc7open\u7cfb\u7edf\u8c03\u7528\u83b7\u5f97\u3002 offset\u53c2\u6570\u8bbe\u7f6e\u4ece\u6587\u4ef6\u7684\u4f55\u5904\u5f00\u59cb\u6620\u5c04 mmap\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de\u6307\u5411\u76ee\u6807\u5185\u5b58\u533a\u57df\u7684\u6307\u9488\uff0c\u5931\u8d25\u5219\u8fd4\u56deMAP_FAILED\uff08(void*)-1\uff09\u5e76\u8bbe\u7f6eerrno\u3002 munmap\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002","title":"mmap\u51fd\u6570\u548cmunmap\u51fd\u6570"},{"location":"linux/IO_API/#splice\u51fd\u6570","text":"splice\u51fd\u6570\u7528\u4e8e\u5728\u4e24\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e4b\u95f4\u79fb\u52a8\u6570\u636e\uff0c\u4e5f\u662f\u96f6\u62f7\u8d1d\u64cd\u4f5c\u3002 #include\uff1cfcntl.h\uff1e ssize_t splice(int fd_in,loff_t*off_in,int fd_out,loff_t*off_out,size_t len,unsigned int flags); fd_in\u53c2\u6570\u662f\u5f85\u8f93\u5165\u6570\u636e\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u5982\u679cfd_in\u662f\u4e00\u4e2a\u7ba1\u9053\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u90a3\u4e48off_in\u53c2\u6570\u5fc5\u987b\u88ab\u8bbe\u7f6e\u4e3aNULL\u3002\u5982\u679cfd_in\u4e0d\u662f\u4e00\u4e2a\u7ba1\u9053\u6587\u4ef6\u63cf\u8ff0\u7b26\uff08\u6bd4\u5982socket\uff09\uff0c\u90a3\u4e48off_in\u8868\u793a\u4ece\u8f93\u5165\u6570\u636e\u6d41\u7684\u4f55\u5904\u5f00\u59cb\u8bfb\u53d6\u6570\u636e\u3002\u6b64\u65f6\uff0c\u82e5off_in\u88ab\u8bbe\u7f6e\u4e3aNULL\uff0c\u5219\u8868\u793a\u4ece\u8f93\u5165\u6570\u636e\u6d41\u7684\u5f53\u524d\u504f\u79fb\u4f4d\u7f6e\u8bfb\u5165\uff1b\u82e5off_in\u4e0d\u4e3aNULL\uff0c\u5219\u5b83\u5c06\u6307\u51fa\u5177\u4f53\u7684\u504f\u79fb\u4f4d\u7f6e\u3002 len\u53c2\u6570\u6307\u5b9a\u79fb\u52a8\u6570\u636e\u7684\u957f\u5ea6\uff1b flags\u53c2\u6570\u5219\u63a7\u5236\u6570\u636e\u5982\u4f55\u79fb\u52a8 \u4f7f\u7528splice\u51fd\u6570\u65f6\uff0cfd_in\u548cfd_out\u5fc5\u987b\u81f3\u5c11\u6709\u4e00\u4e2a\u662f\u7ba1\u9053\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 splice\u51fd\u6570\u8c03\u7528\u6210\u529f\u65f6\u8fd4\u56de\u79fb\u52a8\u5b57\u8282\u7684\u6570\u91cf\u3002\u5b83\u53ef\u80fd\u8fd4\u56de0\uff0c\u8868\u793a\u6ca1\u6709\u6570\u636e\u9700\u8981\u79fb\u52a8\uff0c\u8fd9\u53d1\u751f\u5728\u4ece\u7ba1\u9053\u4e2d\u8bfb\u53d6\u6570\u636e\uff08fd_in\u662f\u7ba1\u9053\u6587\u4ef6\u63cf\u8ff0\u7b26\uff09\u800c\u8be5\u7ba1\u9053\u6ca1\u6709\u88ab\u5199\u5165\u4efb\u4f55\u6570\u636e\u65f6\u3002 splice\u51fd\u6570\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 test_splice.cpp \u901a\u8fc7splice\u51fd\u6570\u5c06\u5ba2\u6237\u7aef\u7684\u5185\u5bb9\u8bfb\u5165\u5230pipefd[1]\u4e2d\uff0c\u7136\u540e\u518d\u4f7f\u7528splice\u51fd\u6570\u4ecepipefd[0]\u4e2d\u8bfb\u51fa\u8be5\u5185\u5bb9\u5230\u5ba2\u6237\u7aef\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u7b80\u5355\u9ad8\u6548\u7684\u56de\u5c04\u670d\u52a1\u3002","title":"splice\u51fd\u6570"},{"location":"linux/IO_API/#tee\u51fd\u6570","text":"tee\u51fd\u6570\u5728\u4e24\u4e2a\u7ba1\u9053\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e4b\u95f4\u590d\u5236\u6570\u636e\uff0c\u4e5f\u662f\u96f6\u62f7\u8d1d\u64cd\u4f5c\u3002 #include\uff1cfcntl.h\uff1e ssize_t tee(int fd_in,int fd_out,size_t len,unsigned int flags); fd_in\u548cfd_out\u5fc5\u987b\u90fd\u662f\u7ba1\u9053\u6587\u4ef6\u63cf\u8ff0\u7b26 tee\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de\u5728\u4e24\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e4b\u95f4\u590d\u5236\u7684\u6570\u636e\u6570\u91cf\uff08\u5b57\u8282\u6570\uff09\u3002 \u8fd4\u56de0\u8868\u793a\u6ca1\u6709\u590d\u5236\u4efb\u4f55\u6570\u636e\u3002tee\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 test_tee.cpp \u540c\u65f6\u8f93\u51fa\u6570\u636e\u5230\u7ec8\u7aef\u548c\u6587\u4ef6\u7684\u7a0b\u5e8f","title":"tee\u51fd\u6570"},{"location":"linux/IO_API/#fcntl\u51fd\u6570","text":"fcntl\u51fd\u6570\uff0c\u6b63\u5982\u5176\u540d\u5b57\uff08file control\uff09\u63cf\u8ff0\u7684\u90a3\u6837\uff0c\u63d0\u4f9b\u4e86\u5bf9\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u5404\u79cd\u63a7\u5236\u64cd\u4f5c\u3002 #include\uff1cfcntl.h\uff1e int fcntl(int fd,int cmd,\u2026); fd\u53c2\u6570\u662f\u88ab\u64cd\u4f5c\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c cmd\u53c2\u6570\u6307\u5b9a\u6267\u884c\u4f55\u79cd\u7c7b\u578b\u7684\u64cd\u4f5c\u3002 \u5728\u7f51\u7edc\u7f16\u7a0b\u4e2d\uff0cfcntl\u51fd\u6570\u901a\u5e38\u7528\u6765\u5c06\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u8bbe\u7f6e\u4e3a\u975e\u963b\u585e\u7684 int setnonblocking(int fd) { int old_option=fcntl(fd,F_GETFL);/*\u83b7\u53d6\u6587\u4ef6\u63cf\u8ff0\u7b26\u65e7\u7684\u72b6\u6001\u6807\u5fd7*/ int new_option=old_option|O_NONBLOCK;/*\u8bbe\u7f6e\u975e\u963b\u585e\u6807\u5fd7*/ fcntl(fd,F_SETFL,new_option); return old_option;/*\u8fd4\u56de\u6587\u4ef6\u63cf\u8ff0\u7b26\u65e7\u7684\u72b6\u6001\u6807\u5fd7\uff0c\u4ee5\u4fbf*/ /*\u65e5\u540e\u6062\u590d\u8be5\u72b6\u6001\u6807\u5fd7*/ }","title":"fcntl\u51fd\u6570"},{"location":"linux/IO_multiplexing/","text":"select # elect\u7cfb\u7edf\u8c03\u7528\u7684\u7528\u9014\u662f\uff1a\u5728\u4e00\u6bb5\u6307\u5b9a\u65f6\u95f4\u5185\uff0c\u76d1\u542c\u7528\u6237\u611f\u5174\u8da3\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u7684\u53ef\u8bfb\u3001\u53ef\u5199\u548c\u5f02\u5e38\u7b49\u4e8b\u4ef6\u3002 #include\uff1csys/select.h\uff1e int select(int nfds,fd_set*readfds,fd_set*writefds,fd_set*exceptfds,struct timeval*timeout); FD_ZERO(fd_set*fdset);/*\u6e05\u9664fdset\u7684\u6240\u6709\u4f4d*/ FD_SET(int fd,fd_set*fdset);/*\u8bbe\u7f6efdset\u7684\u4f4dfd*/ FD_CLR(int fd,fd_set*fdset);/*\u6e05\u9664fdset\u7684\u4f4dfd*/ int FD_ISSET(int fd,fd_set*fdset);/*\u6d4b\u8bd5fdset\u7684\u4f4dfd\u662f\u5426\u88ab\u8bbe\u7f6e*/ struct timeval { long tv_sec;/*\u79d2\u6570*/ long tv_usec;/*\u5fae\u79d2\u6570*/ }; nfds\u53c2\u6570\u6307\u5b9a\u88ab\u76d1\u542c\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u603b\u6570\u3002\u5b83\u901a\u5e38\u88ab\u8bbe\u7f6e\u4e3aselect\u76d1\u542c\u7684\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e2d\u7684\u6700\u5927\u503c\u52a01\uff0c\u56e0\u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b26\u662f\u4ece0\u5f00\u59cb\u8ba1\u6570\u7684\u3002 readfds\u3001writefds\u548cexceptfds\u53c2\u6570\u5206\u522b\u6307\u5411\u53ef\u8bfb\u3001\u53ef\u5199\u548c\u5f02\u5e38\u7b49\u4e8b\u4ef6\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6\u5408\u3002 timeout\u53c2\u6570\u7528\u6765\u8bbe\u7f6eselect\u51fd\u6570\u7684\u8d85\u65f6\u65f6\u95f4\u3002 select\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5fae\u79d2\u7ea7\u7684\u5b9a\u65f6\u65b9\u5f0f\u3002\u5982\u679c\u7ed9timeout\u53d8\u91cf\u7684tv_sec\u6210\u5458\u548ctv_usec\u6210\u5458\u90fd\u4f20\u90120\uff0c\u5219select\u5c06\u7acb\u5373\u8fd4\u56de\u3002\u5982\u679c\u7ed9timeout\u4f20\u9012NULL\uff0c\u5219select\u5c06\u4e00\u76f4\u963b\u585e\uff0c\u76f4\u5230\u67d0\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c31\u7eea\u3002 select\u6210\u529f\u65f6\u8fd4\u56de\u5c31\u7eea\uff08\u53ef\u8bfb\u3001\u53ef\u5199\u548c\u5f02\u5e38\uff09\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u603b\u6570\u3002 \u5728\u7f51\u7edc\u7f16\u7a0b\u4e2d\uff0c\u4e0b\u5217\u60c5\u51b5\u4e0bsocket\u53ef\u8bfb\uff1a \u2751socket\u5185\u6838\u63a5\u6536\u7f13\u5b58\u533a\u4e2d\u7684\u5b57\u8282\u6570\u5927\u4e8e\u6216\u7b49\u4e8e\u5176\u4f4e\u6c34\u4f4d\u6807\u8bb0SO_RCVLOWAT\u3002\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u65e0\u963b\u585e\u5730\u8bfb\u8be5socket\uff0c\u5e76\u4e14\u8bfb\u64cd\u4f5c\u8fd4\u56de\u7684\u5b57\u8282\u6570\u5927\u4e8e0\u3002 \u2751socket\u901a\u4fe1\u7684\u5bf9\u65b9\u5173\u95ed\u8fde\u63a5\u3002\u6b64\u65f6\u5bf9\u8be5socket\u7684\u8bfb\u64cd\u4f5c\u5c06\u8fd4\u56de0\u3002 \u2751\u76d1\u542csocket\u4e0a\u6709\u65b0\u7684\u8fde\u63a5\u8bf7\u6c42\u3002 \u2751socket\u4e0a\u6709\u672a\u5904\u7406\u7684\u9519\u8bef\u3002\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528getsockopt\u6765\u8bfb\u53d6\u548c\u6e05\u9664\u8be5\u9519\u8bef\u3002 \u4e0b\u5217\u60c5\u51b5\u4e0bsocket\u53ef\u5199 \u2751socket\u5185\u6838\u53d1\u9001\u7f13\u5b58\u533a\u4e2d\u7684\u53ef\u7528\u5b57\u8282\u6570\u5927\u4e8e\u6216\u7b49\u4e8e\u5176\u4f4e\u6c34\u4f4d\u6807\u8bb0SO_SNDLOWAT\u3002\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u65e0\u963b\u585e\u5730\u5199\u8be5socket\uff0c\u5e76\u4e14\u5199\u64cd\u4f5c\u8fd4\u56de\u7684\u5b57\u8282\u6570\u5927\u4e8e0\u3002 \u2751socket\u7684\u5199\u64cd\u4f5c\u88ab\u5173\u95ed\u3002\u5bf9\u5199\u64cd\u4f5c\u88ab\u5173\u95ed\u7684socket\u6267\u884c\u5199\u64cd\u4f5c\u5c06\u89e6\u53d1\u4e00\u4e2aSIGPIPE\u4fe1\u53f7\u3002 \u2751socket\u4f7f\u7528\u975e\u963b\u585econnect\u8fde\u63a5\u6210\u529f\u6216\u8005\u5931\u8d25\uff08\u8d85\u65f6\uff09\u4e4b\u540e\u3002 \u2751socket\u4e0a\u6709\u672a\u5904\u7406\u7684\u9519\u8bef\u3002\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528getsockopt\u6765\u8bfb\u53d6\u548c\u6e05\u9664\u8be5\u9519\u8bef\u3002 test_select.cpp poll # poll\u7cfb\u7edf\u8c03\u7528\u548cselect\u7c7b\u4f3c\uff0c\u4e5f\u662f\u5728\u6307\u5b9a\u65f6\u95f4\u5185\u8f6e\u8be2\u4e00\u5b9a\u6570\u91cf\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u4ee5\u6d4b\u8bd5\u5176\u4e2d\u662f\u5426\u6709\u5c31\u7eea\u8005\u3002 #include\uff1cpoll.h\uff1e int poll(struct pollfd*fds,nfds_t nfds,int timeout); struct pollfd { int fd;/*\u6587\u4ef6\u63cf\u8ff0\u7b26*/ short events;/*\u6ce8\u518c\u7684\u4e8b\u4ef6*/ short revents;/*\u5b9e\u9645\u53d1\u751f\u7684\u4e8b\u4ef6\uff0c\u7531\u5185\u6838\u586b\u5145*/ }; typedef unsigned long int nfds_t; fds\u53c2\u6570\u662f\u4e00\u4e2apollfd\u7ed3\u6784\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u5b83\u6307\u5b9a\u6240\u6709\u6211\u4eec\u611f\u5174\u8da3\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u53d1\u751f\u7684\u53ef\u8bfb\u3001\u53ef\u5199\u548c\u5f02\u5e38\u7b49\u4e8b\u4ef6\u3002 fd\u6210\u5458\u6307\u5b9a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff1bevents\u6210\u5458\u544a\u8bc9poll\u76d1\u542cfd\u4e0a\u7684\u54ea\u4e9b\u4e8b\u4ef6\uff0c\u5b83\u662f\u4e00\u7cfb\u5217\u4e8b\u4ef6\u7684\u6309\u4f4d\u6216\uff1brevents\u6210\u5458\u5219\u7531\u5185\u6838\u4fee\u6539\uff0c\u4ee5\u901a\u77e5\u5e94\u7528\u7a0b\u5e8ffd\u4e0a\u5b9e\u9645\u53d1\u751f\u4e86\u54ea\u4e9b\u4e8b\u4ef6\u3002 nfds\u53c2\u6570\u6307\u5b9a\u88ab\u76d1\u542c\u4e8b\u4ef6\u96c6\u5408fds\u7684\u5927\u5c0f\u3002 timeout\u53c2\u6570\u6307\u5b9apoll\u7684\u8d85\u65f6\u503c\uff0c\u5355\u4f4d\u662f\u6beb\u79d2\u3002\u5f53timeout\u4e3a-1\u65f6\uff0cpoll\u8c03\u7528\u5c06\u6c38\u8fdc\u963b\u585e\uff0c\u76f4\u5230\u67d0\u4e2a\u4e8b\u4ef6\u53d1\u751f\uff1b\u5f53timeout\u4e3a0\u65f6\uff0cpoll\u8c03\u7528\u5c06\u7acb\u5373\u8fd4\u56de\u3002 poll\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u503c\u7684\u542b\u4e49\u4e0eselect\u76f8\u540c\u3002\\ epoll # epoll\u4f7f\u7528\u4e00\u7ec4\u51fd\u6570\u6765\u5b8c\u6210\u4efb\u52a1\uff0c\u800c\u4e0d\u662f\u5355\u4e2a\u51fd\u6570\u3002\u5176\u6b21\uff0cepoll\u628a\u7528\u6237\u5173\u5fc3\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u7684\u4e8b\u4ef6\u653e\u5728\u5185\u6838\u91cc\u7684\u4e00\u4e2a\u4e8b\u4ef6\u8868\u4e2d\uff0c\u4ece\u800c\u65e0\u987b\u50cfselect\u548cpoll\u90a3\u6837\u6bcf\u6b21\u8c03\u7528\u90fd\u8981\u91cd\u590d\u4f20\u5165\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6\u6216\u4e8b\u4ef6\u96c6\u3002\u4f46epoll\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u989d\u5916\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u6765\u552f\u4e00\u6807\u8bc6\u5185\u6838\u4e2d\u7684\u8fd9\u4e2a\u4e8b\u4ef6\u8868\u3002 #include\uff1csys/epoll.h\uff1e int epoll_create(int size) int epoll_ctl(int epfd,int op,int fd,struct epoll_event*event) fd\u53c2\u6570\u662f\u8981\u64cd\u4f5c\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0cop\u53c2\u6570\u5219\u6307\u5b9a\u64cd\u4f5c\u7c7b\u578b\u3002\u64cd\u4f5c\u7c7b\u578b\u6709\u5982\u4e0b3\u79cd\uff1a \u2751EPOLL_CTL_ADD\uff0c\u5f80\u4e8b\u4ef6\u8868\u4e2d\u6ce8\u518cfd\u4e0a\u7684\u4e8b\u4ef6\u3002 \u2751EPOLL_CTL_MOD\uff0c\u4fee\u6539fd\u4e0a\u7684\u6ce8\u518c\u4e8b\u4ef6\u3002 \u2751EPOLL_CTL_DEL\uff0c\u5220\u9664fd\u4e0a\u7684\u6ce8\u518c\u4e8b\u4ef6\u3002 event\u53c2\u6570\u6307\u5b9a\u4e8b\u4ef6\uff0c\u5b83\u662fepoll_event\u7ed3\u6784\u6307\u9488\u7c7b\u578b\u3002 \u5176\u4e2devents\u6210\u5458\u63cf\u8ff0\u4e8b\u4ef6\u7c7b\u578b\u3002 epoll\u652f\u6301\u7684\u4e8b\u4ef6\u7c7b\u578b\u548cpoll\u57fa\u672c\u76f8\u540c \u3002\u8868\u793aepoll\u4e8b\u4ef6\u7c7b\u578b\u7684\u5b8f\u662f\u5728poll\u5bf9\u5e94\u7684\u5b8f\u524d\u52a0\u4e0a\u201cE\u201d struct epoll_event { __uint32_t events;/*epoll\u4e8b\u4ef6*/ epoll_data_t data;/*\u7528\u6237\u6570\u636e*/ }; data\u6210\u5458\u7528\u4e8e\u5b58\u50a8\u7528\u6237\u6570\u636e\uff0c\u5176\u7c7b\u578bepoll_data_t\u7684\u5b9a\u4e49\u5982\u4e0b \u51764\u4e2a\u6210\u5458\u4e2d\u4f7f\u7528\u6700\u591a\u7684\u662ffd\uff0c\u5b83\u6307\u5b9a\u4e8b\u4ef6\u6240\u4ece\u5c5e\u7684\u76ee\u6807\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002ptr\u6210\u5458\u53ef\u7528\u6765\u6307\u5b9a\u4e0efd\u76f8\u5173\u7684\u7528\u6237\u6570\u636e\u3002 typedef union epoll_data { void*ptr; int fd; uint32_t u32; uint64_t u64; }epoll_data_t; epoll\u7cfb\u5217\u7cfb\u7edf\u8c03\u7528\u7684\u4e3b\u8981\u63a5\u53e3\u662fepoll_wait\u51fd\u6570\u3002\u5b83\u5728\u4e00\u6bb5\u8d85\u65f6\u65f6\u95f4\u5185\u7b49\u5f85\u4e00\u7ec4\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u7684\u4e8b\u4ef6 int epoll_wait(int epfd,struct epoll_event*events,int maxevents,int timeout); \u8be5\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de\u5c31\u7eea\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u4e2a\u6570\uff0c\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 epoll_wait\u51fd\u6570\u5982\u679c\u68c0\u6d4b\u5230\u4e8b\u4ef6\uff0c\u5c31\u5c06\u6240\u6709\u5c31\u7eea\u7684\u4e8b\u4ef6\u4ece\u5185\u6838\u4e8b\u4ef6\u8868\uff08\u7531epfd\u53c2\u6570\u6307\u5b9a\uff09\u4e2d\u590d\u5236\u5230\u5b83\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570events\u6307\u5411\u7684\u6570\u7ec4\u4e2d\u3002 maxevents\u53c2\u6570\u6307\u5b9a\u6700\u591a\u76d1\u542c\u591a\u5c11\u4e2a\u4e8b\u4ef6\uff0c\u5b83\u5fc5\u987b\u5927\u4e8e0\u3002 timeout\u53c2\u6570\u7684\u542b\u4e49\u4e0epoll\u63a5\u53e3\u7684timeout\u53c2\u6570\u76f8\u540c\u3002 epoll\u5bf9\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u64cd\u4f5c\u6709\u4e24\u79cd\u6a21\u5f0f\uff1aLT\uff08Level Trigger\uff0c\u7535\u5e73\u89e6\u53d1\uff09\u6a21\u5f0f\u548cET\uff08Edge Trigger\uff0c\u8fb9\u6cbf\u89e6\u53d1\uff09\u6a21\u5f0f\u3002LT\u6a21\u5f0f\u662f\u9ed8\u8ba4\u7684\u5de5\u4f5c\u6a21\u5f0f\uff0c\u8fd9\u79cd\u6a21\u5f0f\u4e0bepoll\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6548\u7387\u8f83\u9ad8\u7684poll\u3002\u5f53\u5f80epoll\u5185\u6838\u4e8b\u4ef6\u8868\u4e2d\u6ce8\u518c\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u7684EPOLLET\u4e8b\u4ef6\u65f6\uff0cepoll\u5c06\u4ee5ET\u6a21\u5f0f\u6765\u64cd\u4f5c\u8be5\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002ET\u6a21\u5f0f\u662fepoll\u7684\u9ad8\u6548\u5de5\u4f5c\u6a21\u5f0f\u3002 \u5bf9\u4e8e\u91c7\u7528LT\u5de5\u4f5c\u6a21\u5f0f\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5f53epoll_wait\u68c0\u6d4b\u5230\u5176\u4e0a\u6709\u4e8b\u4ef6\u53d1\u751f\u5e76\u5c06\u6b64\u4e8b\u4ef6\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4e0d\u7acb\u5373\u5904\u7406\u8be5\u4e8b\u4ef6\u3002\u8fd9\u6837\uff0c\u5f53\u5e94\u7528\u7a0b\u5e8f\u4e0b\u4e00\u6b21\u8c03\u7528epoll_wait\u65f6\uff0cepoll_wait\u8fd8\u4f1a\u518d\u6b21\u5411\u5e94\u7528\u7a0b\u5e8f\u901a\u544a\u6b64\u4e8b\u4ef6\uff0c\u76f4\u5230\u8be5\u4e8b\u4ef6\u88ab\u5904\u7406\u3002\u800c\u5bf9\u4e8e\u91c7\u7528ET\u5de5\u4f5c\u6a21\u5f0f\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5f53epoll_wait\u68c0\u6d4b\u5230\u5176\u4e0a\u6709\u4e8b\u4ef6\u53d1\u751f\u5e76\u5c06\u6b64\u4e8b\u4ef6\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u7acb\u5373\u5904\u7406\u8be5\u4e8b\u4ef6\uff0c\u56e0\u4e3a\u540e\u7eed\u7684epoll_wait\u8c03\u7528\u5c06\u4e0d\u518d\u5411\u5e94\u7528\u7a0b\u5e8f\u901a\u77e5\u8fd9\u4e00\u4e8b\u4ef6\u3002\u53ef\u89c1\uff0cET\u6a21\u5f0f\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u964d\u4f4e\u4e86\u540c\u4e00\u4e2aepoll\u4e8b\u4ef6\u88ab\u91cd\u590d\u89e6\u53d1\u7684\u6b21\u6570\uff0c\u56e0\u6b64\u6548\u7387\u8981\u6bd4LT\u6a21\u5f0f\u9ad8\u3002 test_epoll_et_lt.cpp \u590d\u7528\u51fd\u6570\u7684\u6bd4\u8f83 #","title":"IO multiplexing"},{"location":"linux/IO_multiplexing/#select","text":"elect\u7cfb\u7edf\u8c03\u7528\u7684\u7528\u9014\u662f\uff1a\u5728\u4e00\u6bb5\u6307\u5b9a\u65f6\u95f4\u5185\uff0c\u76d1\u542c\u7528\u6237\u611f\u5174\u8da3\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u7684\u53ef\u8bfb\u3001\u53ef\u5199\u548c\u5f02\u5e38\u7b49\u4e8b\u4ef6\u3002 #include\uff1csys/select.h\uff1e int select(int nfds,fd_set*readfds,fd_set*writefds,fd_set*exceptfds,struct timeval*timeout); FD_ZERO(fd_set*fdset);/*\u6e05\u9664fdset\u7684\u6240\u6709\u4f4d*/ FD_SET(int fd,fd_set*fdset);/*\u8bbe\u7f6efdset\u7684\u4f4dfd*/ FD_CLR(int fd,fd_set*fdset);/*\u6e05\u9664fdset\u7684\u4f4dfd*/ int FD_ISSET(int fd,fd_set*fdset);/*\u6d4b\u8bd5fdset\u7684\u4f4dfd\u662f\u5426\u88ab\u8bbe\u7f6e*/ struct timeval { long tv_sec;/*\u79d2\u6570*/ long tv_usec;/*\u5fae\u79d2\u6570*/ }; nfds\u53c2\u6570\u6307\u5b9a\u88ab\u76d1\u542c\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u603b\u6570\u3002\u5b83\u901a\u5e38\u88ab\u8bbe\u7f6e\u4e3aselect\u76d1\u542c\u7684\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e2d\u7684\u6700\u5927\u503c\u52a01\uff0c\u56e0\u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b26\u662f\u4ece0\u5f00\u59cb\u8ba1\u6570\u7684\u3002 readfds\u3001writefds\u548cexceptfds\u53c2\u6570\u5206\u522b\u6307\u5411\u53ef\u8bfb\u3001\u53ef\u5199\u548c\u5f02\u5e38\u7b49\u4e8b\u4ef6\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6\u5408\u3002 timeout\u53c2\u6570\u7528\u6765\u8bbe\u7f6eselect\u51fd\u6570\u7684\u8d85\u65f6\u65f6\u95f4\u3002 select\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5fae\u79d2\u7ea7\u7684\u5b9a\u65f6\u65b9\u5f0f\u3002\u5982\u679c\u7ed9timeout\u53d8\u91cf\u7684tv_sec\u6210\u5458\u548ctv_usec\u6210\u5458\u90fd\u4f20\u90120\uff0c\u5219select\u5c06\u7acb\u5373\u8fd4\u56de\u3002\u5982\u679c\u7ed9timeout\u4f20\u9012NULL\uff0c\u5219select\u5c06\u4e00\u76f4\u963b\u585e\uff0c\u76f4\u5230\u67d0\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c31\u7eea\u3002 select\u6210\u529f\u65f6\u8fd4\u56de\u5c31\u7eea\uff08\u53ef\u8bfb\u3001\u53ef\u5199\u548c\u5f02\u5e38\uff09\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u603b\u6570\u3002 \u5728\u7f51\u7edc\u7f16\u7a0b\u4e2d\uff0c\u4e0b\u5217\u60c5\u51b5\u4e0bsocket\u53ef\u8bfb\uff1a \u2751socket\u5185\u6838\u63a5\u6536\u7f13\u5b58\u533a\u4e2d\u7684\u5b57\u8282\u6570\u5927\u4e8e\u6216\u7b49\u4e8e\u5176\u4f4e\u6c34\u4f4d\u6807\u8bb0SO_RCVLOWAT\u3002\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u65e0\u963b\u585e\u5730\u8bfb\u8be5socket\uff0c\u5e76\u4e14\u8bfb\u64cd\u4f5c\u8fd4\u56de\u7684\u5b57\u8282\u6570\u5927\u4e8e0\u3002 \u2751socket\u901a\u4fe1\u7684\u5bf9\u65b9\u5173\u95ed\u8fde\u63a5\u3002\u6b64\u65f6\u5bf9\u8be5socket\u7684\u8bfb\u64cd\u4f5c\u5c06\u8fd4\u56de0\u3002 \u2751\u76d1\u542csocket\u4e0a\u6709\u65b0\u7684\u8fde\u63a5\u8bf7\u6c42\u3002 \u2751socket\u4e0a\u6709\u672a\u5904\u7406\u7684\u9519\u8bef\u3002\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528getsockopt\u6765\u8bfb\u53d6\u548c\u6e05\u9664\u8be5\u9519\u8bef\u3002 \u4e0b\u5217\u60c5\u51b5\u4e0bsocket\u53ef\u5199 \u2751socket\u5185\u6838\u53d1\u9001\u7f13\u5b58\u533a\u4e2d\u7684\u53ef\u7528\u5b57\u8282\u6570\u5927\u4e8e\u6216\u7b49\u4e8e\u5176\u4f4e\u6c34\u4f4d\u6807\u8bb0SO_SNDLOWAT\u3002\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u65e0\u963b\u585e\u5730\u5199\u8be5socket\uff0c\u5e76\u4e14\u5199\u64cd\u4f5c\u8fd4\u56de\u7684\u5b57\u8282\u6570\u5927\u4e8e0\u3002 \u2751socket\u7684\u5199\u64cd\u4f5c\u88ab\u5173\u95ed\u3002\u5bf9\u5199\u64cd\u4f5c\u88ab\u5173\u95ed\u7684socket\u6267\u884c\u5199\u64cd\u4f5c\u5c06\u89e6\u53d1\u4e00\u4e2aSIGPIPE\u4fe1\u53f7\u3002 \u2751socket\u4f7f\u7528\u975e\u963b\u585econnect\u8fde\u63a5\u6210\u529f\u6216\u8005\u5931\u8d25\uff08\u8d85\u65f6\uff09\u4e4b\u540e\u3002 \u2751socket\u4e0a\u6709\u672a\u5904\u7406\u7684\u9519\u8bef\u3002\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528getsockopt\u6765\u8bfb\u53d6\u548c\u6e05\u9664\u8be5\u9519\u8bef\u3002 test_select.cpp","title":"select"},{"location":"linux/IO_multiplexing/#poll","text":"poll\u7cfb\u7edf\u8c03\u7528\u548cselect\u7c7b\u4f3c\uff0c\u4e5f\u662f\u5728\u6307\u5b9a\u65f6\u95f4\u5185\u8f6e\u8be2\u4e00\u5b9a\u6570\u91cf\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u4ee5\u6d4b\u8bd5\u5176\u4e2d\u662f\u5426\u6709\u5c31\u7eea\u8005\u3002 #include\uff1cpoll.h\uff1e int poll(struct pollfd*fds,nfds_t nfds,int timeout); struct pollfd { int fd;/*\u6587\u4ef6\u63cf\u8ff0\u7b26*/ short events;/*\u6ce8\u518c\u7684\u4e8b\u4ef6*/ short revents;/*\u5b9e\u9645\u53d1\u751f\u7684\u4e8b\u4ef6\uff0c\u7531\u5185\u6838\u586b\u5145*/ }; typedef unsigned long int nfds_t; fds\u53c2\u6570\u662f\u4e00\u4e2apollfd\u7ed3\u6784\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u5b83\u6307\u5b9a\u6240\u6709\u6211\u4eec\u611f\u5174\u8da3\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u53d1\u751f\u7684\u53ef\u8bfb\u3001\u53ef\u5199\u548c\u5f02\u5e38\u7b49\u4e8b\u4ef6\u3002 fd\u6210\u5458\u6307\u5b9a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff1bevents\u6210\u5458\u544a\u8bc9poll\u76d1\u542cfd\u4e0a\u7684\u54ea\u4e9b\u4e8b\u4ef6\uff0c\u5b83\u662f\u4e00\u7cfb\u5217\u4e8b\u4ef6\u7684\u6309\u4f4d\u6216\uff1brevents\u6210\u5458\u5219\u7531\u5185\u6838\u4fee\u6539\uff0c\u4ee5\u901a\u77e5\u5e94\u7528\u7a0b\u5e8ffd\u4e0a\u5b9e\u9645\u53d1\u751f\u4e86\u54ea\u4e9b\u4e8b\u4ef6\u3002 nfds\u53c2\u6570\u6307\u5b9a\u88ab\u76d1\u542c\u4e8b\u4ef6\u96c6\u5408fds\u7684\u5927\u5c0f\u3002 timeout\u53c2\u6570\u6307\u5b9apoll\u7684\u8d85\u65f6\u503c\uff0c\u5355\u4f4d\u662f\u6beb\u79d2\u3002\u5f53timeout\u4e3a-1\u65f6\uff0cpoll\u8c03\u7528\u5c06\u6c38\u8fdc\u963b\u585e\uff0c\u76f4\u5230\u67d0\u4e2a\u4e8b\u4ef6\u53d1\u751f\uff1b\u5f53timeout\u4e3a0\u65f6\uff0cpoll\u8c03\u7528\u5c06\u7acb\u5373\u8fd4\u56de\u3002 poll\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u503c\u7684\u542b\u4e49\u4e0eselect\u76f8\u540c\u3002\\","title":"poll"},{"location":"linux/IO_multiplexing/#epoll","text":"epoll\u4f7f\u7528\u4e00\u7ec4\u51fd\u6570\u6765\u5b8c\u6210\u4efb\u52a1\uff0c\u800c\u4e0d\u662f\u5355\u4e2a\u51fd\u6570\u3002\u5176\u6b21\uff0cepoll\u628a\u7528\u6237\u5173\u5fc3\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u7684\u4e8b\u4ef6\u653e\u5728\u5185\u6838\u91cc\u7684\u4e00\u4e2a\u4e8b\u4ef6\u8868\u4e2d\uff0c\u4ece\u800c\u65e0\u987b\u50cfselect\u548cpoll\u90a3\u6837\u6bcf\u6b21\u8c03\u7528\u90fd\u8981\u91cd\u590d\u4f20\u5165\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6\u6216\u4e8b\u4ef6\u96c6\u3002\u4f46epoll\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u989d\u5916\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u6765\u552f\u4e00\u6807\u8bc6\u5185\u6838\u4e2d\u7684\u8fd9\u4e2a\u4e8b\u4ef6\u8868\u3002 #include\uff1csys/epoll.h\uff1e int epoll_create(int size) int epoll_ctl(int epfd,int op,int fd,struct epoll_event*event) fd\u53c2\u6570\u662f\u8981\u64cd\u4f5c\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0cop\u53c2\u6570\u5219\u6307\u5b9a\u64cd\u4f5c\u7c7b\u578b\u3002\u64cd\u4f5c\u7c7b\u578b\u6709\u5982\u4e0b3\u79cd\uff1a \u2751EPOLL_CTL_ADD\uff0c\u5f80\u4e8b\u4ef6\u8868\u4e2d\u6ce8\u518cfd\u4e0a\u7684\u4e8b\u4ef6\u3002 \u2751EPOLL_CTL_MOD\uff0c\u4fee\u6539fd\u4e0a\u7684\u6ce8\u518c\u4e8b\u4ef6\u3002 \u2751EPOLL_CTL_DEL\uff0c\u5220\u9664fd\u4e0a\u7684\u6ce8\u518c\u4e8b\u4ef6\u3002 event\u53c2\u6570\u6307\u5b9a\u4e8b\u4ef6\uff0c\u5b83\u662fepoll_event\u7ed3\u6784\u6307\u9488\u7c7b\u578b\u3002 \u5176\u4e2devents\u6210\u5458\u63cf\u8ff0\u4e8b\u4ef6\u7c7b\u578b\u3002 epoll\u652f\u6301\u7684\u4e8b\u4ef6\u7c7b\u578b\u548cpoll\u57fa\u672c\u76f8\u540c \u3002\u8868\u793aepoll\u4e8b\u4ef6\u7c7b\u578b\u7684\u5b8f\u662f\u5728poll\u5bf9\u5e94\u7684\u5b8f\u524d\u52a0\u4e0a\u201cE\u201d struct epoll_event { __uint32_t events;/*epoll\u4e8b\u4ef6*/ epoll_data_t data;/*\u7528\u6237\u6570\u636e*/ }; data\u6210\u5458\u7528\u4e8e\u5b58\u50a8\u7528\u6237\u6570\u636e\uff0c\u5176\u7c7b\u578bepoll_data_t\u7684\u5b9a\u4e49\u5982\u4e0b \u51764\u4e2a\u6210\u5458\u4e2d\u4f7f\u7528\u6700\u591a\u7684\u662ffd\uff0c\u5b83\u6307\u5b9a\u4e8b\u4ef6\u6240\u4ece\u5c5e\u7684\u76ee\u6807\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002ptr\u6210\u5458\u53ef\u7528\u6765\u6307\u5b9a\u4e0efd\u76f8\u5173\u7684\u7528\u6237\u6570\u636e\u3002 typedef union epoll_data { void*ptr; int fd; uint32_t u32; uint64_t u64; }epoll_data_t; epoll\u7cfb\u5217\u7cfb\u7edf\u8c03\u7528\u7684\u4e3b\u8981\u63a5\u53e3\u662fepoll_wait\u51fd\u6570\u3002\u5b83\u5728\u4e00\u6bb5\u8d85\u65f6\u65f6\u95f4\u5185\u7b49\u5f85\u4e00\u7ec4\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u7684\u4e8b\u4ef6 int epoll_wait(int epfd,struct epoll_event*events,int maxevents,int timeout); \u8be5\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de\u5c31\u7eea\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u4e2a\u6570\uff0c\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 epoll_wait\u51fd\u6570\u5982\u679c\u68c0\u6d4b\u5230\u4e8b\u4ef6\uff0c\u5c31\u5c06\u6240\u6709\u5c31\u7eea\u7684\u4e8b\u4ef6\u4ece\u5185\u6838\u4e8b\u4ef6\u8868\uff08\u7531epfd\u53c2\u6570\u6307\u5b9a\uff09\u4e2d\u590d\u5236\u5230\u5b83\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570events\u6307\u5411\u7684\u6570\u7ec4\u4e2d\u3002 maxevents\u53c2\u6570\u6307\u5b9a\u6700\u591a\u76d1\u542c\u591a\u5c11\u4e2a\u4e8b\u4ef6\uff0c\u5b83\u5fc5\u987b\u5927\u4e8e0\u3002 timeout\u53c2\u6570\u7684\u542b\u4e49\u4e0epoll\u63a5\u53e3\u7684timeout\u53c2\u6570\u76f8\u540c\u3002 epoll\u5bf9\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u64cd\u4f5c\u6709\u4e24\u79cd\u6a21\u5f0f\uff1aLT\uff08Level Trigger\uff0c\u7535\u5e73\u89e6\u53d1\uff09\u6a21\u5f0f\u548cET\uff08Edge Trigger\uff0c\u8fb9\u6cbf\u89e6\u53d1\uff09\u6a21\u5f0f\u3002LT\u6a21\u5f0f\u662f\u9ed8\u8ba4\u7684\u5de5\u4f5c\u6a21\u5f0f\uff0c\u8fd9\u79cd\u6a21\u5f0f\u4e0bepoll\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6548\u7387\u8f83\u9ad8\u7684poll\u3002\u5f53\u5f80epoll\u5185\u6838\u4e8b\u4ef6\u8868\u4e2d\u6ce8\u518c\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u7684EPOLLET\u4e8b\u4ef6\u65f6\uff0cepoll\u5c06\u4ee5ET\u6a21\u5f0f\u6765\u64cd\u4f5c\u8be5\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002ET\u6a21\u5f0f\u662fepoll\u7684\u9ad8\u6548\u5de5\u4f5c\u6a21\u5f0f\u3002 \u5bf9\u4e8e\u91c7\u7528LT\u5de5\u4f5c\u6a21\u5f0f\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5f53epoll_wait\u68c0\u6d4b\u5230\u5176\u4e0a\u6709\u4e8b\u4ef6\u53d1\u751f\u5e76\u5c06\u6b64\u4e8b\u4ef6\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4e0d\u7acb\u5373\u5904\u7406\u8be5\u4e8b\u4ef6\u3002\u8fd9\u6837\uff0c\u5f53\u5e94\u7528\u7a0b\u5e8f\u4e0b\u4e00\u6b21\u8c03\u7528epoll_wait\u65f6\uff0cepoll_wait\u8fd8\u4f1a\u518d\u6b21\u5411\u5e94\u7528\u7a0b\u5e8f\u901a\u544a\u6b64\u4e8b\u4ef6\uff0c\u76f4\u5230\u8be5\u4e8b\u4ef6\u88ab\u5904\u7406\u3002\u800c\u5bf9\u4e8e\u91c7\u7528ET\u5de5\u4f5c\u6a21\u5f0f\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5f53epoll_wait\u68c0\u6d4b\u5230\u5176\u4e0a\u6709\u4e8b\u4ef6\u53d1\u751f\u5e76\u5c06\u6b64\u4e8b\u4ef6\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u7acb\u5373\u5904\u7406\u8be5\u4e8b\u4ef6\uff0c\u56e0\u4e3a\u540e\u7eed\u7684epoll_wait\u8c03\u7528\u5c06\u4e0d\u518d\u5411\u5e94\u7528\u7a0b\u5e8f\u901a\u77e5\u8fd9\u4e00\u4e8b\u4ef6\u3002\u53ef\u89c1\uff0cET\u6a21\u5f0f\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u964d\u4f4e\u4e86\u540c\u4e00\u4e2aepoll\u4e8b\u4ef6\u88ab\u91cd\u590d\u89e6\u53d1\u7684\u6b21\u6570\uff0c\u56e0\u6b64\u6548\u7387\u8981\u6bd4LT\u6a21\u5f0f\u9ad8\u3002 test_epoll_et_lt.cpp","title":"epoll"},{"location":"linux/IO_multiplexing/#\u590d\u7528\u51fd\u6570\u7684\u6bd4\u8f83","text":"","title":"\u590d\u7528\u51fd\u6570\u7684\u6bd4\u8f83"},{"location":"linux/apt/","text":"download package # download required package ```shell apt-cache depends lsyncd apt download package sudo apt-get install --reinstall -d apt-cache depends packname | grep depends | cut -d: f2 |tr -d \"<>\" ```","title":"Apt"},{"location":"linux/apt/#download-package","text":"download required package ```shell apt-cache depends lsyncd apt download package sudo apt-get install --reinstall -d apt-cache depends packname | grep depends | cut -d: f2 |tr -d \"<>\" ```","title":"download package"},{"location":"linux/basic_api/","text":"syslog # Linux\u63d0\u4f9b\u4e00\u4e2a\u5b88\u62a4\u8fdb\u7a0b\u6765\u5904\u7406\u7cfb\u7edf\u65e5\u5fd7\u2014\u2014syslogd\uff0c\u4e0d\u8fc7\u73b0\u5728\u7684Linux\u7cfb\u7edf\u4e0a\u4f7f\u7528\u7684\u90fd\u662f\u5b83\u7684\u5347\u7ea7\u7248\u2014\u2014rsyslogd\u3002 \u7528\u6237\u8fdb\u7a0b\u662f\u901a\u8fc7\u8c03\u7528syslog\u51fd\u6570\u751f\u6210\u7cfb\u7edf\u65e5\u5fd7\u7684\u3002\u8be5\u51fd\u6570\u5c06\u65e5\u5fd7\u8f93\u51fa\u5230\u4e00\u4e2aUNIX\u672c\u5730\u57dfsocket\u7c7b\u578b\uff08AF_UNIX\uff09\u7684\u6587\u4ef6/dev/log\u4e2d\uff0crsyslogd\u5219\u76d1\u542c\u8be5\u6587\u4ef6\u4ee5\u83b7\u53d6\u7528\u6237\u8fdb\u7a0b\u7684\u8f93\u51fa\u3002 \u5185\u6838\u65e5\u5fd7\u7531printk\u7b49\u51fd\u6570\u6253\u5370\u81f3\u5185\u6838\u7684\u73af\u72b6\u7f13\u5b58\uff08ring buffer\uff09\u4e2d\u3002\u73af\u72b6\u7f13\u5b58\u7684\u5185\u5bb9\u76f4\u63a5\u6620\u5c04\u5230/proc/kmsg\u6587\u4ef6\u4e2d\u3002rsyslogd\u5219\u901a\u8fc7\u8bfb\u53d6\u8be5\u6587\u4ef6\u83b7\u5f97\u5185\u6838\u65e5\u5fd7\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8c03\u8bd5\u4fe1\u606f\u4f1a\u4fdd\u5b58\u81f3/var/log/debug\u6587\u4ef6\uff0c\u666e\u901a\u4fe1\u606f\u4fdd\u5b58\u81f3/var/log/messages\u6587\u4ef6\uff0c\u5185\u6838\u6d88\u606f\u5219\u4fdd\u5b58\u81f3/var/log/kern.log\u6587\u4ef6\u3002 rsyslogd\u7684\u4e3b\u914d\u7f6e\u6587\u4ef6\u662f/etc/rsyslog.conf\uff0c\u5176\u4e2d\u4e3b\u8981\u53ef\u4ee5\u8bbe\u7f6e\u7684\u9879\u5305\u62ec\uff1a\u5185\u6838\u65e5\u5fd7\u8f93\u5165\u8def\u5f84\uff0c\u662f\u5426\u63a5\u6536UDP\u65e5\u5fd7\u53ca\u5176\u76d1\u542c\u7aef\u53e3\uff08\u9ed8\u8ba4\u662f514\uff0c\u89c1/etc/services\u6587\u4ef6\uff09\uff0c\u662f\u5426\u63a5\u6536TCP\u65e5\u5fd7\u53ca\u5176\u76d1\u542c\u7aef\u53e3\uff0c\u65e5\u5fd7\u6587\u4ef6\u7684\u6743\u9650\uff0c\u5305\u542b\u54ea\u4e9b\u5b50\u914d\u7f6e\u6587\u4ef6\uff08\u6bd4\u5982/etc/rsyslog.d/*.conf\uff09\u3002rsyslogd\u7684\u5b50\u914d\u7f6e\u6587\u4ef6\u5219\u6307\u5b9a\u5404\u7c7b\u65e5\u5fd7\u7684\u76ee\u6807\u5b58\u50a8\u6587\u4ef6\u3002 #include\uff1csyslog.h\uff1e void syslog(int priority,const char*message,...); #define LOG_EMERG 0/*\u7cfb\u7edf\u4e0d\u53ef\u7528*/ #define LOG_ALERT 1/*\u62a5\u8b66\uff0c\u9700\u8981\u7acb\u5373\u91c7\u53d6\u52a8\u4f5c*/ #define LOG_CRIT 2/*\u975e\u5e38\u4e25\u91cd\u7684\u60c5\u51b5*/ #define LOG_ERR 3/*\u9519\u8bef*/ #define LOG_WARNING 4/*\u8b66\u544a*/ #define LOG_NOTICE 5/*\u901a\u77e5*/ #define LOG_INFO 6/*\u4fe1\u606f*/ #define LOG_DEBUG 7/*\u8c03\u8bd5*/ \u8be5\u51fd\u6570\u91c7\u7528\u53ef\u53d8\u53c2\u6570\uff08\u7b2c\u4e8c\u4e2a\u53c2\u6570message\u548c\u7b2c\u4e09\u4e2a\u53c2\u6570\u2026\uff09\u6765\u7ed3\u6784\u5316\u8f93\u51fa\u3002priority\u53c2\u6570\u662f\u6240\u8c13\u7684\u8bbe\u65bd\u503c\u4e0e\u65e5\u5fd7\u7ea7\u522b\u7684\u6309\u4f4d\u6216\u3002\u8bbe\u65bd\u503c\u7684\u9ed8\u8ba4\u503c\u662fLOG_USER void openlog(const char*ident,int logopt,int facility); #define LOG_PID 0x01/*\u5728\u65e5\u5fd7\u6d88\u606f\u4e2d\u5305\u542b\u7a0b\u5e8fPID*/ #define LOG_CONS 0x02/*\u5982\u679c\u6d88\u606f\u4e0d\u80fd\u8bb0\u5f55\u5230\u65e5\u5fd7\u6587\u4ef6\uff0c\u5219\u6253\u5370\u81f3\u7ec8\u7aef*/ #define LOG_ODELAY 0x04/*\u5ef6\u8fdf\u6253\u5f00\u65e5\u5fd7\u529f\u80fd\u76f4\u5230\u7b2c\u4e00\u6b21\u8c03\u7528syslog*/ #define LOG_NDELAY 0x08/*\u4e0d\u5ef6\u8fdf\u6253\u5f00\u65e5\u5fd7\u529f\u80fd*/ ident\u53c2\u6570\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u5c06\u88ab\u6dfb\u52a0\u5230\u65e5\u5fd7\u6d88\u606f\u7684\u65e5\u671f\u548c\u65f6\u95f4\u4e4b\u540e\uff0c\u5b83\u901a\u5e38\u88ab\u8bbe\u7f6e\u4e3a\u7a0b\u5e8f\u7684\u540d\u5b57\u3002logopt\u53c2\u6570\u5bf9\u540e\u7eedsyslog\u8c03\u7528\u7684\u884c\u4e3a\u8fdb\u884c\u914d\u7f6e facility\u53c2\u6570\u53ef\u7528\u6765\u4fee\u6539syslog\u51fd\u6570\u4e2d\u7684\u9ed8\u8ba4\u8bbe\u65bd\u503c\u3002 int setlogmask(int maskpri); maskpri\u53c2\u6570\u6307\u5b9a\u65e5\u5fd7\u63a9\u7801\u503c\u3002\u8be5\u51fd\u6570\u59cb\u7ec8\u4f1a\u6210\u529f\uff0c\u5b83\u8fd4\u56de\u8c03\u7528\u8fdb\u7a0b\u5148\u524d\u7684\u65e5\u5fd7\u63a9\u7801\u503c\u3002 void closelog(); \u5173\u95ed\u65e5\u5fd7\u529f\u80fd \u7528\u6237\u4fe1\u606f # \u4e0b\u9762\u8fd9\u4e00\u7ec4\u51fd\u6570\u53ef\u4ee5\u83b7\u53d6\u548c\u8bbe\u7f6e\u5f53\u524d\u8fdb\u7a0b\u7684\u771f\u5b9e\u7528\u6237ID\uff08UID\uff09\u3001\u6709\u6548\u7528\u6237ID\uff08EUID\uff09\u3001\u771f\u5b9e\u7ec4ID\uff08GID\uff09\u548c\u6709\u6548\u7ec4ID\uff08EGID\uff09\uff1a #include\uff1csys/types.h> #include\uff1cunistd.h\uff1e uid_t getuid();/*\u83b7\u53d6\u771f\u5b9e\u7528\u6237ID*/ uid_t geteuid();/*\u83b7\u53d6\u6709\u6548\u7528\u6237ID*/ gid_t getgid();/*\u83b7\u53d6\u771f\u5b9e\u7ec4ID*/ gid_t getegid();/*\u83b7\u53d6\u6709\u6548\u7ec4ID*/ int setuid(uid_t uid);/*\u8bbe\u7f6e\u771f\u5b9e\u7528\u6237ID*/ int seteuid(uid_t uid);/*\u8bbe\u7f6e\u6709\u6548\u7528\u6237ID*/ int setgid(gid_t gid);/*\u8bbe\u7f6e\u771f\u5b9e\u7ec4ID*/ int setegid(gid_t gid);/*\u8bbe\u7f6e\u6709\u6548\u7ec4ID*/ \u8fdb\u7a0b\u95f4\u5173\u7cfb # pid \u2013 the process id. ppid \u2013 the PID of the parent of this process. pgrp \u2013 the process group id of the process. sid \u2013 the session id of the process. tty \u2013 the controlling terminal of the process. (The minor device number is contained in the combination of bits 31 to 20 and 7 to 0; the major device number is in bits 15 to 8.) tgid \u2013 the id of the foreground process group of the controlling terminal of the process. Linux\u4e0b\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u96b6\u5c5e\u4e8e\u4e00\u4e2a\u8fdb\u7a0b\u7ec4\uff0c\u56e0\u6b64\u5b83\u4eec\u9664\u4e86PID\u4fe1\u606f\u5916\uff0c\u8fd8\u6709\u8fdb\u7a0b\u7ec4ID\uff08PGID\uff09\u3002 #include\uff1cunistd.h\uff1e pid_t getpgid(pid_t pid); \u8be5\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de\u8fdb\u7a0bpid\u6240\u5c5e\u8fdb\u7a0b\u7ec4\u7684PGID\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 \u6bcf\u4e2a\u8fdb\u7a0b\u7ec4\u90fd\u6709\u4e00\u4e2a\u9996\u9886\u8fdb\u7a0b\uff0c\u5176PGID\u548cPID\u76f8\u540c\u3002\u8fdb\u7a0b\u7ec4\u5c06\u4e00\u76f4\u5b58\u5728\uff0c\u76f4\u5230\u5176\u4e2d\u6240\u6709\u8fdb\u7a0b\u90fd\u9000\u51fa\uff0c\u6216\u8005\u52a0\u5165\u5230\u5176\u4ed6\u8fdb\u7a0b\u7ec4\u3002 \u4e0b\u9762\u7684\u51fd\u6570\u7528\u4e8e\u8bbe\u7f6ePGID\uff1a #include\uff1cunistd.h\uff1e int setpgid(pid_t pid,pid_t pgid); \u8be5\u51fd\u6570\u5c06PID\u4e3apid\u7684\u8fdb\u7a0b\u7684PGID\u8bbe\u7f6e\u4e3apgid\u3002\u5982\u679cpid\u548cpgid\u76f8\u540c\uff0c\u5219\u7531pid\u6307\u5b9a\u7684\u8fdb\u7a0b\u5c06\u88ab\u8bbe\u7f6e\u4e3a\u8fdb\u7a0b\u7ec4\u9996\u9886\uff1b\u5982\u679cpid\u4e3a0\uff0c\u5219\u8868\u793a\u8bbe\u7f6e\u5f53\u524d\u8fdb\u7a0b\u7684PGID\u4e3apgid\uff1b\u5982\u679cpgid\u4e3a0\uff0c\u5219\u4f7f\u7528pid\u4f5c\u4e3a\u76ee\u6807PGID\u3002 setpgid\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 \u4e00\u4e2a\u8fdb\u7a0b\u53ea\u80fd\u8bbe\u7f6e\u81ea\u5df1\u6216\u8005\u5176\u5b50\u8fdb\u7a0b\u7684PGID\u3002\u5e76\u4e14\uff0c\u5f53\u5b50\u8fdb\u7a0b\u8c03\u7528exec\u7cfb\u5217\u51fd\u6570\u540e\uff0c\u6211\u4eec\u4e5f\u4e0d\u80fd\u518d\u5728\u7236\u8fdb\u7a0b\u4e2d\u5bf9\u5b83\u8bbe\u7f6ePGID\u3002 \u4f1a\u8bdd # \u4e00\u4e9b\u6709\u5173\u8054\u7684\u8fdb\u7a0b\u7ec4\u5c06\u5f62\u6210\u4e00\u4e2a\u4f1a\u8bdd\uff08session\uff09 #include\uff1cunistd.h\uff1e pid_t setsid(void); \u8be5\u51fd\u6570\u4e0d\u80fd\u7531\u8fdb\u7a0b\u7ec4\u7684\u9996\u9886\u8fdb\u7a0b\u8c03\u7528\uff0c\u5426\u5219\u5c06\u4ea7\u751f\u4e00\u4e2a\u9519\u8bef\u3002 \u5bf9\u4e8e\u975e\u7ec4\u9996\u9886\u7684\u8fdb\u7a0b\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u4e0d\u4ec5\u521b\u5efa\u65b0\u4f1a\u8bdd\uff0c\u800c\u4e14\u6709\u5982\u4e0b\u989d\u5916\u6548\u679c \u2751\u8c03\u7528\u8fdb\u7a0b\u6210\u4e3a\u4f1a\u8bdd\u7684\u9996\u9886\uff0c\u6b64\u65f6\u8be5\u8fdb\u7a0b\u662f\u65b0\u4f1a\u8bdd\u7684\u552f\u4e00\u6210\u5458\u3002 \u2751\u65b0\u5efa\u4e00\u4e2a\u8fdb\u7a0b\u7ec4\uff0c\u5176PGID\u5c31\u662f\u8c03\u7528\u8fdb\u7a0b\u7684PID\uff0c\u8c03\u7528\u8fdb\u7a0b\u6210\u4e3a\u8be5\u7ec4\u7684\u9996\u9886\u3002 \u2751\u8c03\u7528\u8fdb\u7a0b\u5c06\u7529\u5f00\u7ec8\u7aef\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u3002 \u8be5\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de\u65b0\u7684\u8fdb\u7a0b\u7ec4\u7684PGID\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 Linux\u8fdb\u7a0b\u5e76\u672a\u63d0\u4f9b\u6240\u8c13\u4f1a\u8bddID\uff08SID\uff09\u7684\u6982\u5ff5\uff0c\u4f46Linux\u7cfb\u7edf\u8ba4\u4e3a\u5b83\u7b49\u4e8e\u4f1a\u8bdd\u9996\u9886\u6240\u5728\u7684\u8fdb\u7a0b\u7ec4\u7684PGID\uff0c\u5e76\u63d0\u4f9b\u4e86\u5982\u4e0b\u51fd\u6570\u6765\u8bfb\u53d6SID pid_t getsid(pid_t pid); \u7528ps\u547d\u4ee4\u67e5\u770b\u8fdb\u7a0b\u5173\u7cfb # $ps -o pid,ppid,pgid,sid,comm|less PID PPID PGID SID COMMAND 1943 1942 1943 1943 bash 2298 1943 2298 1943 ps 2299 1943 2298 1943 less ps\u548cless\u547d\u4ee4\u7684\u7236\u8fdb\u7a0b\u662fbash\u547d\u4ee4 \u8fd93\u6761\u547d\u4ee4\u521b\u5efa\u4e861\u4e2a\u4f1a\u8bdd\uff08SID\u662f1943\uff09\u548c2\u4e2a\u8fdb\u7a0b\u7ec4\uff08PGID\u5206\u522b\u662f1943\u548c2298\uff09\u3002 bash\u547d\u4ee4\u7684PID\u3001PGID\u548cSID\u90fd\u76f8\u540c\uff0c\u5f88\u660e\u663e\u5b83\u65e2\u662f\u4f1a\u8bdd\u7684\u9996\u9886\uff0c\u4e5f\u662f\u7ec41943\u7684\u9996\u9886\u3002 ps\u547d\u4ee4\u5219\u662f\u7ec42298\u7684\u9996\u9886\uff0c\u56e0\u4e3a\u5176PID\u4e5f\u662f2298\u3002 \u7cfb\u7edf\u8d44\u6e90\u9650\u5236 # Linux\u7cfb\u7edf\u8d44\u6e90\u9650\u5236\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u4e00\u5bf9\u51fd\u6570\u6765\u8bfb\u53d6\u548c\u8bbe\u7f6e #include\uff1csys/resource.h\uff1e int getrlimit(int resource,struct rlimit*rlim); int setrlimit(int resource,const struct rlimit*rlim); struct rlimit { rlim_t rlim_cur; rlim_t rlim_max; }; rlim_t\u662f\u4e00\u4e2a\u6574\u6570\u7c7b\u578b\uff0c\u5b83\u63cf\u8ff0\u8d44\u6e90\u7ea7\u522b\u3002 rlim_cur\u6210\u5458\u6307\u5b9a\u8d44\u6e90\u7684\u8f6f\u9650\u5236\uff0crlim_max\u6210\u5458\u6307\u5b9a\u8d44\u6e90\u7684\u786c\u9650\u5236\u3002 \u8f6f\u9650\u5236\u662f\u4e00\u4e2a\u5efa\u8bae\u6027\u7684\u3001\u6700\u597d\u4e0d\u8981\u8d85\u8d8a\u7684\u9650\u5236\uff0c\u5982\u679c\u8d85\u8d8a\u7684\u8bdd\uff0c\u7cfb\u7edf\u53ef\u80fd\u5411\u8fdb\u7a0b\u53d1\u9001\u4fe1\u53f7\u4ee5\u7ec8\u6b62\u5176\u8fd0\u884c\u3002 \u53ef\u4ee5\u4f7f\u7528ulimit\u547d\u4ee4\u4fee\u6539\u5f53\u524dshell\u73af\u5883\u4e0b\u7684\u8d44\u6e90\u9650\u5236\uff08\u8f6f\u9650\u5236\u6216/\u548c\u786c\u9650\u5236\uff09\uff0c\u8fd9\u79cd\u4fee\u6539\u5c06\u5bf9\u8be5shell\u542f\u52a8\u7684\u6240\u6709\u540e\u7eed\u7a0b\u5e8f\u6709\u6548 \u6539\u53d8\u5de5\u4f5c\u76ee\u5f55\u548c\u6839\u76ee\u5f55 # \u83b7\u53d6\u8fdb\u7a0b\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u548c\u6539\u53d8\u8fdb\u7a0b\u5de5\u4f5c\u76ee\u5f55\u7684\u51fd\u6570 #include\uff1cunistd.h\uff1e char* getcwd(char*buf,size_t size); int chdir(const char*path); int chroot(const char*path); getcwd buf\u53c2\u6570\u6307\u5411\u7684\u5185\u5b58\u7528\u4e8e\u5b58\u50a8\u8fdb\u7a0b\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84\u540d\uff0c\u5176\u5927\u5c0f\u7531size\u53c2\u6570\u6307\u5b9a\u3002 getcwd\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u76ee\u6807\u5b58\u50a8\u533a\uff08buf\u6307\u5411\u7684\u7f13\u5b58\u533a\u6216\u662fgetcwd\u5728\u5185\u90e8\u52a8\u6001\u521b\u5efa\u7684\u7f13\u5b58\u533a\uff09\u7684\u6307\u9488\uff0c\u5931\u8d25\u5219\u8fd4\u56deNULL\u5e76\u8bbe\u7f6eerrno\u3002 chroot path\u53c2\u6570\u6307\u5b9a\u8981\u5207\u6362\u5230\u7684\u76ee\u6807\u6839\u76ee\u5f55\u3002\u5b83\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 chroot\u5e76\u4e0d\u6539\u53d8\u8fdb\u7a0b\u7684\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff0c\u6240\u4ee5\u8c03\u7528chroot\u4e4b\u540e\uff0c\u6211\u4eec\u4ecd\u7136\u9700\u8981\u4f7f\u7528chdir(\u201c/\u201d)\u6765\u5c06\u5de5\u4f5c\u76ee\u5f55\u5207\u6362\u81f3\u65b0\u7684\u6839\u76ee\u5f55\u3002 \u670d\u52a1\u5668\u7a0b\u5e8f\u540e\u53f0\u5316 # #include\uff1cunistd.h\uff1e int daemon(int nochdir,int noclose); nochdir\u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u662f\u5426\u6539\u53d8\u5de5\u4f5c\u76ee\u5f55\uff0c\u5982\u679c\u7ed9\u5b83\u4f20\u90120\uff0c\u5219\u5de5\u4f5c\u76ee\u5f55\u5c06\u88ab\u8bbe\u7f6e\u4e3a\u201c/\u201d\uff08\u6839\u76ee\u5f55\uff09\uff0c\u5426\u5219\u7ee7\u7eed\u4f7f\u7528\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u3002noclose\u53c2\u6570\u4e3a0\u65f6\uff0c\u6807\u51c6\u8f93\u5165\u3001\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u90fd\u88ab\u91cd\u5b9a\u5411\u5230/dev/null\u6587\u4ef6\uff0c\u5426\u5219\u4f9d\u7136\u4f7f\u7528\u539f\u6765\u7684\u8bbe\u5907\u3002\u8be5\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002","title":"Basic api"},{"location":"linux/basic_api/#syslog","text":"Linux\u63d0\u4f9b\u4e00\u4e2a\u5b88\u62a4\u8fdb\u7a0b\u6765\u5904\u7406\u7cfb\u7edf\u65e5\u5fd7\u2014\u2014syslogd\uff0c\u4e0d\u8fc7\u73b0\u5728\u7684Linux\u7cfb\u7edf\u4e0a\u4f7f\u7528\u7684\u90fd\u662f\u5b83\u7684\u5347\u7ea7\u7248\u2014\u2014rsyslogd\u3002 \u7528\u6237\u8fdb\u7a0b\u662f\u901a\u8fc7\u8c03\u7528syslog\u51fd\u6570\u751f\u6210\u7cfb\u7edf\u65e5\u5fd7\u7684\u3002\u8be5\u51fd\u6570\u5c06\u65e5\u5fd7\u8f93\u51fa\u5230\u4e00\u4e2aUNIX\u672c\u5730\u57dfsocket\u7c7b\u578b\uff08AF_UNIX\uff09\u7684\u6587\u4ef6/dev/log\u4e2d\uff0crsyslogd\u5219\u76d1\u542c\u8be5\u6587\u4ef6\u4ee5\u83b7\u53d6\u7528\u6237\u8fdb\u7a0b\u7684\u8f93\u51fa\u3002 \u5185\u6838\u65e5\u5fd7\u7531printk\u7b49\u51fd\u6570\u6253\u5370\u81f3\u5185\u6838\u7684\u73af\u72b6\u7f13\u5b58\uff08ring buffer\uff09\u4e2d\u3002\u73af\u72b6\u7f13\u5b58\u7684\u5185\u5bb9\u76f4\u63a5\u6620\u5c04\u5230/proc/kmsg\u6587\u4ef6\u4e2d\u3002rsyslogd\u5219\u901a\u8fc7\u8bfb\u53d6\u8be5\u6587\u4ef6\u83b7\u5f97\u5185\u6838\u65e5\u5fd7\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8c03\u8bd5\u4fe1\u606f\u4f1a\u4fdd\u5b58\u81f3/var/log/debug\u6587\u4ef6\uff0c\u666e\u901a\u4fe1\u606f\u4fdd\u5b58\u81f3/var/log/messages\u6587\u4ef6\uff0c\u5185\u6838\u6d88\u606f\u5219\u4fdd\u5b58\u81f3/var/log/kern.log\u6587\u4ef6\u3002 rsyslogd\u7684\u4e3b\u914d\u7f6e\u6587\u4ef6\u662f/etc/rsyslog.conf\uff0c\u5176\u4e2d\u4e3b\u8981\u53ef\u4ee5\u8bbe\u7f6e\u7684\u9879\u5305\u62ec\uff1a\u5185\u6838\u65e5\u5fd7\u8f93\u5165\u8def\u5f84\uff0c\u662f\u5426\u63a5\u6536UDP\u65e5\u5fd7\u53ca\u5176\u76d1\u542c\u7aef\u53e3\uff08\u9ed8\u8ba4\u662f514\uff0c\u89c1/etc/services\u6587\u4ef6\uff09\uff0c\u662f\u5426\u63a5\u6536TCP\u65e5\u5fd7\u53ca\u5176\u76d1\u542c\u7aef\u53e3\uff0c\u65e5\u5fd7\u6587\u4ef6\u7684\u6743\u9650\uff0c\u5305\u542b\u54ea\u4e9b\u5b50\u914d\u7f6e\u6587\u4ef6\uff08\u6bd4\u5982/etc/rsyslog.d/*.conf\uff09\u3002rsyslogd\u7684\u5b50\u914d\u7f6e\u6587\u4ef6\u5219\u6307\u5b9a\u5404\u7c7b\u65e5\u5fd7\u7684\u76ee\u6807\u5b58\u50a8\u6587\u4ef6\u3002 #include\uff1csyslog.h\uff1e void syslog(int priority,const char*message,...); #define LOG_EMERG 0/*\u7cfb\u7edf\u4e0d\u53ef\u7528*/ #define LOG_ALERT 1/*\u62a5\u8b66\uff0c\u9700\u8981\u7acb\u5373\u91c7\u53d6\u52a8\u4f5c*/ #define LOG_CRIT 2/*\u975e\u5e38\u4e25\u91cd\u7684\u60c5\u51b5*/ #define LOG_ERR 3/*\u9519\u8bef*/ #define LOG_WARNING 4/*\u8b66\u544a*/ #define LOG_NOTICE 5/*\u901a\u77e5*/ #define LOG_INFO 6/*\u4fe1\u606f*/ #define LOG_DEBUG 7/*\u8c03\u8bd5*/ \u8be5\u51fd\u6570\u91c7\u7528\u53ef\u53d8\u53c2\u6570\uff08\u7b2c\u4e8c\u4e2a\u53c2\u6570message\u548c\u7b2c\u4e09\u4e2a\u53c2\u6570\u2026\uff09\u6765\u7ed3\u6784\u5316\u8f93\u51fa\u3002priority\u53c2\u6570\u662f\u6240\u8c13\u7684\u8bbe\u65bd\u503c\u4e0e\u65e5\u5fd7\u7ea7\u522b\u7684\u6309\u4f4d\u6216\u3002\u8bbe\u65bd\u503c\u7684\u9ed8\u8ba4\u503c\u662fLOG_USER void openlog(const char*ident,int logopt,int facility); #define LOG_PID 0x01/*\u5728\u65e5\u5fd7\u6d88\u606f\u4e2d\u5305\u542b\u7a0b\u5e8fPID*/ #define LOG_CONS 0x02/*\u5982\u679c\u6d88\u606f\u4e0d\u80fd\u8bb0\u5f55\u5230\u65e5\u5fd7\u6587\u4ef6\uff0c\u5219\u6253\u5370\u81f3\u7ec8\u7aef*/ #define LOG_ODELAY 0x04/*\u5ef6\u8fdf\u6253\u5f00\u65e5\u5fd7\u529f\u80fd\u76f4\u5230\u7b2c\u4e00\u6b21\u8c03\u7528syslog*/ #define LOG_NDELAY 0x08/*\u4e0d\u5ef6\u8fdf\u6253\u5f00\u65e5\u5fd7\u529f\u80fd*/ ident\u53c2\u6570\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u5c06\u88ab\u6dfb\u52a0\u5230\u65e5\u5fd7\u6d88\u606f\u7684\u65e5\u671f\u548c\u65f6\u95f4\u4e4b\u540e\uff0c\u5b83\u901a\u5e38\u88ab\u8bbe\u7f6e\u4e3a\u7a0b\u5e8f\u7684\u540d\u5b57\u3002logopt\u53c2\u6570\u5bf9\u540e\u7eedsyslog\u8c03\u7528\u7684\u884c\u4e3a\u8fdb\u884c\u914d\u7f6e facility\u53c2\u6570\u53ef\u7528\u6765\u4fee\u6539syslog\u51fd\u6570\u4e2d\u7684\u9ed8\u8ba4\u8bbe\u65bd\u503c\u3002 int setlogmask(int maskpri); maskpri\u53c2\u6570\u6307\u5b9a\u65e5\u5fd7\u63a9\u7801\u503c\u3002\u8be5\u51fd\u6570\u59cb\u7ec8\u4f1a\u6210\u529f\uff0c\u5b83\u8fd4\u56de\u8c03\u7528\u8fdb\u7a0b\u5148\u524d\u7684\u65e5\u5fd7\u63a9\u7801\u503c\u3002 void closelog(); \u5173\u95ed\u65e5\u5fd7\u529f\u80fd","title":"syslog"},{"location":"linux/basic_api/#\u7528\u6237\u4fe1\u606f","text":"\u4e0b\u9762\u8fd9\u4e00\u7ec4\u51fd\u6570\u53ef\u4ee5\u83b7\u53d6\u548c\u8bbe\u7f6e\u5f53\u524d\u8fdb\u7a0b\u7684\u771f\u5b9e\u7528\u6237ID\uff08UID\uff09\u3001\u6709\u6548\u7528\u6237ID\uff08EUID\uff09\u3001\u771f\u5b9e\u7ec4ID\uff08GID\uff09\u548c\u6709\u6548\u7ec4ID\uff08EGID\uff09\uff1a #include\uff1csys/types.h> #include\uff1cunistd.h\uff1e uid_t getuid();/*\u83b7\u53d6\u771f\u5b9e\u7528\u6237ID*/ uid_t geteuid();/*\u83b7\u53d6\u6709\u6548\u7528\u6237ID*/ gid_t getgid();/*\u83b7\u53d6\u771f\u5b9e\u7ec4ID*/ gid_t getegid();/*\u83b7\u53d6\u6709\u6548\u7ec4ID*/ int setuid(uid_t uid);/*\u8bbe\u7f6e\u771f\u5b9e\u7528\u6237ID*/ int seteuid(uid_t uid);/*\u8bbe\u7f6e\u6709\u6548\u7528\u6237ID*/ int setgid(gid_t gid);/*\u8bbe\u7f6e\u771f\u5b9e\u7ec4ID*/ int setegid(gid_t gid);/*\u8bbe\u7f6e\u6709\u6548\u7ec4ID*/","title":"\u7528\u6237\u4fe1\u606f"},{"location":"linux/basic_api/#\u8fdb\u7a0b\u95f4\u5173\u7cfb","text":"pid \u2013 the process id. ppid \u2013 the PID of the parent of this process. pgrp \u2013 the process group id of the process. sid \u2013 the session id of the process. tty \u2013 the controlling terminal of the process. (The minor device number is contained in the combination of bits 31 to 20 and 7 to 0; the major device number is in bits 15 to 8.) tgid \u2013 the id of the foreground process group of the controlling terminal of the process. Linux\u4e0b\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u96b6\u5c5e\u4e8e\u4e00\u4e2a\u8fdb\u7a0b\u7ec4\uff0c\u56e0\u6b64\u5b83\u4eec\u9664\u4e86PID\u4fe1\u606f\u5916\uff0c\u8fd8\u6709\u8fdb\u7a0b\u7ec4ID\uff08PGID\uff09\u3002 #include\uff1cunistd.h\uff1e pid_t getpgid(pid_t pid); \u8be5\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de\u8fdb\u7a0bpid\u6240\u5c5e\u8fdb\u7a0b\u7ec4\u7684PGID\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 \u6bcf\u4e2a\u8fdb\u7a0b\u7ec4\u90fd\u6709\u4e00\u4e2a\u9996\u9886\u8fdb\u7a0b\uff0c\u5176PGID\u548cPID\u76f8\u540c\u3002\u8fdb\u7a0b\u7ec4\u5c06\u4e00\u76f4\u5b58\u5728\uff0c\u76f4\u5230\u5176\u4e2d\u6240\u6709\u8fdb\u7a0b\u90fd\u9000\u51fa\uff0c\u6216\u8005\u52a0\u5165\u5230\u5176\u4ed6\u8fdb\u7a0b\u7ec4\u3002 \u4e0b\u9762\u7684\u51fd\u6570\u7528\u4e8e\u8bbe\u7f6ePGID\uff1a #include\uff1cunistd.h\uff1e int setpgid(pid_t pid,pid_t pgid); \u8be5\u51fd\u6570\u5c06PID\u4e3apid\u7684\u8fdb\u7a0b\u7684PGID\u8bbe\u7f6e\u4e3apgid\u3002\u5982\u679cpid\u548cpgid\u76f8\u540c\uff0c\u5219\u7531pid\u6307\u5b9a\u7684\u8fdb\u7a0b\u5c06\u88ab\u8bbe\u7f6e\u4e3a\u8fdb\u7a0b\u7ec4\u9996\u9886\uff1b\u5982\u679cpid\u4e3a0\uff0c\u5219\u8868\u793a\u8bbe\u7f6e\u5f53\u524d\u8fdb\u7a0b\u7684PGID\u4e3apgid\uff1b\u5982\u679cpgid\u4e3a0\uff0c\u5219\u4f7f\u7528pid\u4f5c\u4e3a\u76ee\u6807PGID\u3002 setpgid\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 \u4e00\u4e2a\u8fdb\u7a0b\u53ea\u80fd\u8bbe\u7f6e\u81ea\u5df1\u6216\u8005\u5176\u5b50\u8fdb\u7a0b\u7684PGID\u3002\u5e76\u4e14\uff0c\u5f53\u5b50\u8fdb\u7a0b\u8c03\u7528exec\u7cfb\u5217\u51fd\u6570\u540e\uff0c\u6211\u4eec\u4e5f\u4e0d\u80fd\u518d\u5728\u7236\u8fdb\u7a0b\u4e2d\u5bf9\u5b83\u8bbe\u7f6ePGID\u3002","title":"\u8fdb\u7a0b\u95f4\u5173\u7cfb"},{"location":"linux/basic_api/#\u4f1a\u8bdd","text":"\u4e00\u4e9b\u6709\u5173\u8054\u7684\u8fdb\u7a0b\u7ec4\u5c06\u5f62\u6210\u4e00\u4e2a\u4f1a\u8bdd\uff08session\uff09 #include\uff1cunistd.h\uff1e pid_t setsid(void); \u8be5\u51fd\u6570\u4e0d\u80fd\u7531\u8fdb\u7a0b\u7ec4\u7684\u9996\u9886\u8fdb\u7a0b\u8c03\u7528\uff0c\u5426\u5219\u5c06\u4ea7\u751f\u4e00\u4e2a\u9519\u8bef\u3002 \u5bf9\u4e8e\u975e\u7ec4\u9996\u9886\u7684\u8fdb\u7a0b\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u4e0d\u4ec5\u521b\u5efa\u65b0\u4f1a\u8bdd\uff0c\u800c\u4e14\u6709\u5982\u4e0b\u989d\u5916\u6548\u679c \u2751\u8c03\u7528\u8fdb\u7a0b\u6210\u4e3a\u4f1a\u8bdd\u7684\u9996\u9886\uff0c\u6b64\u65f6\u8be5\u8fdb\u7a0b\u662f\u65b0\u4f1a\u8bdd\u7684\u552f\u4e00\u6210\u5458\u3002 \u2751\u65b0\u5efa\u4e00\u4e2a\u8fdb\u7a0b\u7ec4\uff0c\u5176PGID\u5c31\u662f\u8c03\u7528\u8fdb\u7a0b\u7684PID\uff0c\u8c03\u7528\u8fdb\u7a0b\u6210\u4e3a\u8be5\u7ec4\u7684\u9996\u9886\u3002 \u2751\u8c03\u7528\u8fdb\u7a0b\u5c06\u7529\u5f00\u7ec8\u7aef\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u3002 \u8be5\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de\u65b0\u7684\u8fdb\u7a0b\u7ec4\u7684PGID\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 Linux\u8fdb\u7a0b\u5e76\u672a\u63d0\u4f9b\u6240\u8c13\u4f1a\u8bddID\uff08SID\uff09\u7684\u6982\u5ff5\uff0c\u4f46Linux\u7cfb\u7edf\u8ba4\u4e3a\u5b83\u7b49\u4e8e\u4f1a\u8bdd\u9996\u9886\u6240\u5728\u7684\u8fdb\u7a0b\u7ec4\u7684PGID\uff0c\u5e76\u63d0\u4f9b\u4e86\u5982\u4e0b\u51fd\u6570\u6765\u8bfb\u53d6SID pid_t getsid(pid_t pid);","title":"\u4f1a\u8bdd"},{"location":"linux/basic_api/#\u7528ps\u547d\u4ee4\u67e5\u770b\u8fdb\u7a0b\u5173\u7cfb","text":"$ps -o pid,ppid,pgid,sid,comm|less PID PPID PGID SID COMMAND 1943 1942 1943 1943 bash 2298 1943 2298 1943 ps 2299 1943 2298 1943 less ps\u548cless\u547d\u4ee4\u7684\u7236\u8fdb\u7a0b\u662fbash\u547d\u4ee4 \u8fd93\u6761\u547d\u4ee4\u521b\u5efa\u4e861\u4e2a\u4f1a\u8bdd\uff08SID\u662f1943\uff09\u548c2\u4e2a\u8fdb\u7a0b\u7ec4\uff08PGID\u5206\u522b\u662f1943\u548c2298\uff09\u3002 bash\u547d\u4ee4\u7684PID\u3001PGID\u548cSID\u90fd\u76f8\u540c\uff0c\u5f88\u660e\u663e\u5b83\u65e2\u662f\u4f1a\u8bdd\u7684\u9996\u9886\uff0c\u4e5f\u662f\u7ec41943\u7684\u9996\u9886\u3002 ps\u547d\u4ee4\u5219\u662f\u7ec42298\u7684\u9996\u9886\uff0c\u56e0\u4e3a\u5176PID\u4e5f\u662f2298\u3002","title":"\u7528ps\u547d\u4ee4\u67e5\u770b\u8fdb\u7a0b\u5173\u7cfb"},{"location":"linux/basic_api/#\u7cfb\u7edf\u8d44\u6e90\u9650\u5236","text":"Linux\u7cfb\u7edf\u8d44\u6e90\u9650\u5236\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u4e00\u5bf9\u51fd\u6570\u6765\u8bfb\u53d6\u548c\u8bbe\u7f6e #include\uff1csys/resource.h\uff1e int getrlimit(int resource,struct rlimit*rlim); int setrlimit(int resource,const struct rlimit*rlim); struct rlimit { rlim_t rlim_cur; rlim_t rlim_max; }; rlim_t\u662f\u4e00\u4e2a\u6574\u6570\u7c7b\u578b\uff0c\u5b83\u63cf\u8ff0\u8d44\u6e90\u7ea7\u522b\u3002 rlim_cur\u6210\u5458\u6307\u5b9a\u8d44\u6e90\u7684\u8f6f\u9650\u5236\uff0crlim_max\u6210\u5458\u6307\u5b9a\u8d44\u6e90\u7684\u786c\u9650\u5236\u3002 \u8f6f\u9650\u5236\u662f\u4e00\u4e2a\u5efa\u8bae\u6027\u7684\u3001\u6700\u597d\u4e0d\u8981\u8d85\u8d8a\u7684\u9650\u5236\uff0c\u5982\u679c\u8d85\u8d8a\u7684\u8bdd\uff0c\u7cfb\u7edf\u53ef\u80fd\u5411\u8fdb\u7a0b\u53d1\u9001\u4fe1\u53f7\u4ee5\u7ec8\u6b62\u5176\u8fd0\u884c\u3002 \u53ef\u4ee5\u4f7f\u7528ulimit\u547d\u4ee4\u4fee\u6539\u5f53\u524dshell\u73af\u5883\u4e0b\u7684\u8d44\u6e90\u9650\u5236\uff08\u8f6f\u9650\u5236\u6216/\u548c\u786c\u9650\u5236\uff09\uff0c\u8fd9\u79cd\u4fee\u6539\u5c06\u5bf9\u8be5shell\u542f\u52a8\u7684\u6240\u6709\u540e\u7eed\u7a0b\u5e8f\u6709\u6548","title":"\u7cfb\u7edf\u8d44\u6e90\u9650\u5236"},{"location":"linux/basic_api/#\u6539\u53d8\u5de5\u4f5c\u76ee\u5f55\u548c\u6839\u76ee\u5f55","text":"\u83b7\u53d6\u8fdb\u7a0b\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u548c\u6539\u53d8\u8fdb\u7a0b\u5de5\u4f5c\u76ee\u5f55\u7684\u51fd\u6570 #include\uff1cunistd.h\uff1e char* getcwd(char*buf,size_t size); int chdir(const char*path); int chroot(const char*path); getcwd buf\u53c2\u6570\u6307\u5411\u7684\u5185\u5b58\u7528\u4e8e\u5b58\u50a8\u8fdb\u7a0b\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84\u540d\uff0c\u5176\u5927\u5c0f\u7531size\u53c2\u6570\u6307\u5b9a\u3002 getcwd\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u76ee\u6807\u5b58\u50a8\u533a\uff08buf\u6307\u5411\u7684\u7f13\u5b58\u533a\u6216\u662fgetcwd\u5728\u5185\u90e8\u52a8\u6001\u521b\u5efa\u7684\u7f13\u5b58\u533a\uff09\u7684\u6307\u9488\uff0c\u5931\u8d25\u5219\u8fd4\u56deNULL\u5e76\u8bbe\u7f6eerrno\u3002 chroot path\u53c2\u6570\u6307\u5b9a\u8981\u5207\u6362\u5230\u7684\u76ee\u6807\u6839\u76ee\u5f55\u3002\u5b83\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 chroot\u5e76\u4e0d\u6539\u53d8\u8fdb\u7a0b\u7684\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff0c\u6240\u4ee5\u8c03\u7528chroot\u4e4b\u540e\uff0c\u6211\u4eec\u4ecd\u7136\u9700\u8981\u4f7f\u7528chdir(\u201c/\u201d)\u6765\u5c06\u5de5\u4f5c\u76ee\u5f55\u5207\u6362\u81f3\u65b0\u7684\u6839\u76ee\u5f55\u3002","title":"\u6539\u53d8\u5de5\u4f5c\u76ee\u5f55\u548c\u6839\u76ee\u5f55"},{"location":"linux/basic_api/#\u670d\u52a1\u5668\u7a0b\u5e8f\u540e\u53f0\u5316","text":"#include\uff1cunistd.h\uff1e int daemon(int nochdir,int noclose); nochdir\u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u662f\u5426\u6539\u53d8\u5de5\u4f5c\u76ee\u5f55\uff0c\u5982\u679c\u7ed9\u5b83\u4f20\u90120\uff0c\u5219\u5de5\u4f5c\u76ee\u5f55\u5c06\u88ab\u8bbe\u7f6e\u4e3a\u201c/\u201d\uff08\u6839\u76ee\u5f55\uff09\uff0c\u5426\u5219\u7ee7\u7eed\u4f7f\u7528\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u3002noclose\u53c2\u6570\u4e3a0\u65f6\uff0c\u6807\u51c6\u8f93\u5165\u3001\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u90fd\u88ab\u91cd\u5b9a\u5411\u5230/dev/null\u6587\u4ef6\uff0c\u5426\u5219\u4f9d\u7136\u4f7f\u7528\u539f\u6765\u7684\u8bbe\u5907\u3002\u8be5\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002","title":"\u670d\u52a1\u5668\u7a0b\u5e8f\u540e\u53f0\u5316"},{"location":"linux/centos7/","text":"setup basic # \u68c0\u67e5\u7f51\u7edc\u8fde\u63a5\u72b6\u6001\uff1a ip addr \u8fd9\u6761\u547d\u4ee4\u4f1a\u663e\u793a\u6240\u6709\u7f51\u7edc\u63a5\u53e3\u7684\u72b6\u6001\u3002 \u7f16\u8f91\u7f51\u7edc\u914d\u7f6e\u6587\u4ef6\uff1a \u627e\u5230\u4f60\u7684\u7f51\u7edc\u63a5\u53e3\u914d\u7f6e\u6587\u4ef6\uff0c\u901a\u5e38\u5728 /etc/sysconfig/network-scripts/ \u76ee\u5f55\u4e0b\u3002\u6587\u4ef6\u540d\u901a\u5e38\u4ee5 ifcfg- \u5f00\u5934\uff0c\u4f8b\u5982 ifcfg-ens33 \u3002 cd /etc/sysconfig/network-scripts/ vi ifcfg-ens33 \u5c06 ONBOOT \u8bbe\u7f6e\u4e3a yes \uff0c\u786e\u4fdd\u7f51\u7edc\u63a5\u53e3\u5728\u542f\u52a8\u65f6\u81ea\u52a8\u542f\u7528\uff1a ONBOOT=yes \u66f4\u6362 yum \u6e90 # \u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u56fd\u5185\u7684\u955c\u50cf\u6e90\u6765\u66ff\u4ee3\u5b98\u65b9 yum \u4ed3\u5e93\u3002\u4f8b\u5982\uff0c\u963f\u91cc\u4e91\u3001\u7f51\u6613\u4e91\u7b49\u90fd\u63d0\u4f9b\u4e86 CentOS \u7684\u955c\u50cf\u6e90\u3002 \u4ee5\u963f\u91cc\u4e91\u4e3a\u4f8b\uff1a \u5907\u4efd\u539f\u6709\u7684 yum \u914d\u7f6e\u6587\u4ef6\uff1a sudo cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak \u3002 \u4e0b\u8f7d\u963f\u91cc\u4e91\u7684 yum \u914d\u7f6e\u6587\u4ef6\uff1a sudo wget -O /etc/yum.repos.d/CentOS-Base.repo [http://mirrors.aliyun.com/repo/Centos-7.repo](http://mirrors.aliyun.com/repo/Centos-7.repo) \u3002 \u66f4\u65b0 yum \u7f13\u5b58\uff1a sudo yum makecache \u3002 \u68c0\u67e5 SELinux \u548c iptables SELinux \u53ef\u80fd\u4f1a\u9650\u5236 yum \u7684\u67d0\u4e9b\u64cd\u4f5c\u3002\u53ef\u4ee5\u5c1d\u8bd5\u5c06 SELinux \u8bbe\u7f6e\u4e3a permissive \u6a21\u5f0f\uff08\u4e34\u65f6\uff09\u6765\u68c0\u67e5\u662f\u5426\u662f SELinux \u5bfc\u81f4\u7684\u95ee\u9898\uff1a sudo setenforce 0 \u3002\u5982\u679c\u95ee\u9898\u89e3\u51b3\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8c03\u6574 SELinux \u7b56\u7565\u4ee5\u5141\u8bb8 yum \u7684\u6b63\u5e38\u64cd\u4f5c\u3002 \u68c0\u67e5 iptables \u89c4\u5219\uff0c\u786e\u4fdd\u6ca1\u6709\u963b\u6b62 yum \u76f8\u5173\u7684\u7f51\u7edc\u6d41\u91cf\u3002\u53ef\u4ee5\u4f7f\u7528 iptables -L \u547d\u4ee4\u67e5\u770b\u5f53\u524d\u7684\u9632\u706b\u5899\u89c4\u5219\uff0c\u5e76\u6839\u636e\u9700\u8981\u8fdb\u884c\u8c03\u6574\u3002 desktop # CentOS \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u901a\u5e38\u4e0d\u5b89\u88c5\u684c\u9762\u73af\u5883\uff0c\u7279\u522b\u662f\u5728\u670d\u52a1\u5668\u7248\u672c\u4e2d\u3002\u4f60\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u6765\u5b89\u88c5 GNOME \u684c\u9762\u73af\u5883\uff1a \u66f4\u65b0\u7cfb\u7edf\u5305\uff1a sudo yum update \u5b89\u88c5 GNOME \u684c\u9762\u73af\u5883\u53ca\u76f8\u5173\u5de5\u5177\uff1a sudo yum groupinstall \"GNOME Desktop\" \"Graphical Administration Tools\" \u8bbe\u7f6e\u7cfb\u7edf\u9ed8\u8ba4\u8fd0\u884c\u7ea7\u522b\u4e3a\u56fe\u5f62\u754c\u9762\u6a21\u5f0f\uff1a sudo systemctl set-default graphical.target \u542f\u52a8\u56fe\u5f62\u754c\u9762\uff1a sudo systemctl start graphical.target \uff08\u53ef\u9009\uff09\u542f\u7528\u56fe\u5f62\u767b\u5f55\u7ba1\u7406\u5668\uff08\u9002\u7528\u4e8e CentOS 7 \u53ca\u66f4\u9ad8\u7248\u672c\uff09\uff1a sudo systemctl enable gdm \u91cd\u65b0\u542f\u52a8\u7cfb\u7edf\uff1a sudo reboot remote desktop # \u9996\u5148\uff0c\u5982\u679c\u5b89\u88c5\u6d4bcentos7\u662f\u5df2\u7ecf\u5b89\u88c5\u4e86GNOME \u6216\u8005 KDE \u684c\u9762\uff0c \u5219\u53ea\u9700\u8981\u518d\u5b89\u88c5xrdp\u5c31\u53ef\u4ee5\u4e86\u3002 \u76f4\u63a5\u901a\u8fc7yum install xrdp \u662f\u4e0d\u884c\u7684\uff0c\u56e0\u4e3axrdp \u4e0d\u5728\u9ed8\u8ba4\u6e90\u4e2d \u5148\u914d\u7f6e\u6e90 yum install epel* -y \u7136\u540e\u518d\u5b89\u88c5 yum install xrdp \u6216 yum --enablerepo=epel -y install xrdp \u5176\u5b9e\u4f1a\u53d1\u73b0\u597d\u591a\u5176\u4ed6\u65b9\u6cd5\u90fd\u8981\u6c42\u5b89\u88c5 \u5404\u79cd\u7248\u672c\u7684vnc\uff0c\u8fd9\u662f\u6ca1\u6709\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u4f60\u5e76\u4e0d\u4f7f\u7528vncviewer \u53bb\u8fdc\u7a0b\u8bbf\u95ee \u5b89\u88c5\u597d xrdp\uff0c\u540e\u9700\u8981**\u542f\u52a8 systemctl start xrdp** \u540c\u65f6\u9700\u8981\u6dfb\u52a0**\u7aef\u53e3\u5141\u8bb8\u8bbf\u95ee\uff0cxrdp\u7528\u7684\u7aef\u53e3\u662f 3389** \u6216\u8005\u7b80\u5355\u7c97\u66b4\u4e00\u70b9\uff0c\u5173\u95ed\u9632\u706b\u5899\uff0csystemctl stop firewalld // \u5176\u4ed6\u76f8\u5173\u7684\u547d\u4ee4\uff0c\u5982\uff1a\u5982\u4f55\u8bbe\u7f6e\u5f00\u673a\u542f\u52a8 systemctl enable xrdp \u5982\u4f55\u7981\u7528\u9632\u706b\u5899\u7b49\uff1b\u5982\u4f55\u6dfb\u52a0\u7aef\u53e3\u8bbf\u95ee\u7b49\u3002\u53ef\u518d\u67e5\u8be2 \u8865\u5145\u4e00\u4e0b vncserver \u548c xrdp\u7684\u5173\u7cfb \u901a\u5e38\uff0c\u4e3a\u4e86\u4f7f\u7528vncserver \u6211\u4eec\u9700\u8981\u5b89\u88c5 yum install tigervnc tigervnc-server ****tigervnc tigervnc-server\u5c31\u662f\u63d0\u4f9bvncserver\u7684\u529f\u80fd\u7684\u5de5\u5177\u3002 \u7c7b\u4f3c\u4e8e\u6211\u4eec\u4f7f\u7528word\u53ef\u4ee5\u9009\u62e9\u5fae\u8f6f\u7684\u6216\u8005WPS\u7684\u3002 \u8fd9\u91cc\u6211\u4eec\u9009\u62e9****tigervnc******** ****\u5b89\u88c5\u597d\u540e\uff0c\u6211\u4eec\u4f7f\u7528vncserver :1 \u5f00\u542f\u4e00\u4e2aid\u4e3a1\u684c\u9762**** ****xrdp\u662f\u4ec0\u4e48\u5462? \u53ef\u4ee5\u7406\u89e3\u4e3a\u6211\u4eec\u4f7f\u7528windows \u81ea\u5e26\u7684\u8fdc\u7a0b\u684c\u9762\u5de5\u5177\u53bb\u8bbf\u95ee vncserver :1\u8fd9\u4e2a\u684c\u9762\u3002**** ****\u5b89\u88c5\u597dxrdp \u548c\u542f\u52a8\u4e86vncserver :1 \u53ea\u9700\u8981\u914d\u7f6e\u4e00\u4e0b\u76f8\u5173\u7684\u63a5\u53e3\u5373\u53ef\u3002****","title":"Centos7"},{"location":"linux/centos7/#setup-basic","text":"\u68c0\u67e5\u7f51\u7edc\u8fde\u63a5\u72b6\u6001\uff1a ip addr \u8fd9\u6761\u547d\u4ee4\u4f1a\u663e\u793a\u6240\u6709\u7f51\u7edc\u63a5\u53e3\u7684\u72b6\u6001\u3002 \u7f16\u8f91\u7f51\u7edc\u914d\u7f6e\u6587\u4ef6\uff1a \u627e\u5230\u4f60\u7684\u7f51\u7edc\u63a5\u53e3\u914d\u7f6e\u6587\u4ef6\uff0c\u901a\u5e38\u5728 /etc/sysconfig/network-scripts/ \u76ee\u5f55\u4e0b\u3002\u6587\u4ef6\u540d\u901a\u5e38\u4ee5 ifcfg- \u5f00\u5934\uff0c\u4f8b\u5982 ifcfg-ens33 \u3002 cd /etc/sysconfig/network-scripts/ vi ifcfg-ens33 \u5c06 ONBOOT \u8bbe\u7f6e\u4e3a yes \uff0c\u786e\u4fdd\u7f51\u7edc\u63a5\u53e3\u5728\u542f\u52a8\u65f6\u81ea\u52a8\u542f\u7528\uff1a ONBOOT=yes","title":"setup basic"},{"location":"linux/centos7/#\u66f4\u6362-yum-\u6e90","text":"\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u56fd\u5185\u7684\u955c\u50cf\u6e90\u6765\u66ff\u4ee3\u5b98\u65b9 yum \u4ed3\u5e93\u3002\u4f8b\u5982\uff0c\u963f\u91cc\u4e91\u3001\u7f51\u6613\u4e91\u7b49\u90fd\u63d0\u4f9b\u4e86 CentOS \u7684\u955c\u50cf\u6e90\u3002 \u4ee5\u963f\u91cc\u4e91\u4e3a\u4f8b\uff1a \u5907\u4efd\u539f\u6709\u7684 yum \u914d\u7f6e\u6587\u4ef6\uff1a sudo cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak \u3002 \u4e0b\u8f7d\u963f\u91cc\u4e91\u7684 yum \u914d\u7f6e\u6587\u4ef6\uff1a sudo wget -O /etc/yum.repos.d/CentOS-Base.repo [http://mirrors.aliyun.com/repo/Centos-7.repo](http://mirrors.aliyun.com/repo/Centos-7.repo) \u3002 \u66f4\u65b0 yum \u7f13\u5b58\uff1a sudo yum makecache \u3002 \u68c0\u67e5 SELinux \u548c iptables SELinux \u53ef\u80fd\u4f1a\u9650\u5236 yum \u7684\u67d0\u4e9b\u64cd\u4f5c\u3002\u53ef\u4ee5\u5c1d\u8bd5\u5c06 SELinux \u8bbe\u7f6e\u4e3a permissive \u6a21\u5f0f\uff08\u4e34\u65f6\uff09\u6765\u68c0\u67e5\u662f\u5426\u662f SELinux \u5bfc\u81f4\u7684\u95ee\u9898\uff1a sudo setenforce 0 \u3002\u5982\u679c\u95ee\u9898\u89e3\u51b3\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8c03\u6574 SELinux \u7b56\u7565\u4ee5\u5141\u8bb8 yum \u7684\u6b63\u5e38\u64cd\u4f5c\u3002 \u68c0\u67e5 iptables \u89c4\u5219\uff0c\u786e\u4fdd\u6ca1\u6709\u963b\u6b62 yum \u76f8\u5173\u7684\u7f51\u7edc\u6d41\u91cf\u3002\u53ef\u4ee5\u4f7f\u7528 iptables -L \u547d\u4ee4\u67e5\u770b\u5f53\u524d\u7684\u9632\u706b\u5899\u89c4\u5219\uff0c\u5e76\u6839\u636e\u9700\u8981\u8fdb\u884c\u8c03\u6574\u3002","title":"\u66f4\u6362 yum \u6e90"},{"location":"linux/centos7/#desktop","text":"CentOS \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u901a\u5e38\u4e0d\u5b89\u88c5\u684c\u9762\u73af\u5883\uff0c\u7279\u522b\u662f\u5728\u670d\u52a1\u5668\u7248\u672c\u4e2d\u3002\u4f60\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u6765\u5b89\u88c5 GNOME \u684c\u9762\u73af\u5883\uff1a \u66f4\u65b0\u7cfb\u7edf\u5305\uff1a sudo yum update \u5b89\u88c5 GNOME \u684c\u9762\u73af\u5883\u53ca\u76f8\u5173\u5de5\u5177\uff1a sudo yum groupinstall \"GNOME Desktop\" \"Graphical Administration Tools\" \u8bbe\u7f6e\u7cfb\u7edf\u9ed8\u8ba4\u8fd0\u884c\u7ea7\u522b\u4e3a\u56fe\u5f62\u754c\u9762\u6a21\u5f0f\uff1a sudo systemctl set-default graphical.target \u542f\u52a8\u56fe\u5f62\u754c\u9762\uff1a sudo systemctl start graphical.target \uff08\u53ef\u9009\uff09\u542f\u7528\u56fe\u5f62\u767b\u5f55\u7ba1\u7406\u5668\uff08\u9002\u7528\u4e8e CentOS 7 \u53ca\u66f4\u9ad8\u7248\u672c\uff09\uff1a sudo systemctl enable gdm \u91cd\u65b0\u542f\u52a8\u7cfb\u7edf\uff1a sudo reboot","title":"desktop"},{"location":"linux/centos7/#remote-desktop","text":"\u9996\u5148\uff0c\u5982\u679c\u5b89\u88c5\u6d4bcentos7\u662f\u5df2\u7ecf\u5b89\u88c5\u4e86GNOME \u6216\u8005 KDE \u684c\u9762\uff0c \u5219\u53ea\u9700\u8981\u518d\u5b89\u88c5xrdp\u5c31\u53ef\u4ee5\u4e86\u3002 \u76f4\u63a5\u901a\u8fc7yum install xrdp \u662f\u4e0d\u884c\u7684\uff0c\u56e0\u4e3axrdp \u4e0d\u5728\u9ed8\u8ba4\u6e90\u4e2d \u5148\u914d\u7f6e\u6e90 yum install epel* -y \u7136\u540e\u518d\u5b89\u88c5 yum install xrdp \u6216 yum --enablerepo=epel -y install xrdp \u5176\u5b9e\u4f1a\u53d1\u73b0\u597d\u591a\u5176\u4ed6\u65b9\u6cd5\u90fd\u8981\u6c42\u5b89\u88c5 \u5404\u79cd\u7248\u672c\u7684vnc\uff0c\u8fd9\u662f\u6ca1\u6709\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u4f60\u5e76\u4e0d\u4f7f\u7528vncviewer \u53bb\u8fdc\u7a0b\u8bbf\u95ee \u5b89\u88c5\u597d xrdp\uff0c\u540e\u9700\u8981**\u542f\u52a8 systemctl start xrdp** \u540c\u65f6\u9700\u8981\u6dfb\u52a0**\u7aef\u53e3\u5141\u8bb8\u8bbf\u95ee\uff0cxrdp\u7528\u7684\u7aef\u53e3\u662f 3389** \u6216\u8005\u7b80\u5355\u7c97\u66b4\u4e00\u70b9\uff0c\u5173\u95ed\u9632\u706b\u5899\uff0csystemctl stop firewalld // \u5176\u4ed6\u76f8\u5173\u7684\u547d\u4ee4\uff0c\u5982\uff1a\u5982\u4f55\u8bbe\u7f6e\u5f00\u673a\u542f\u52a8 systemctl enable xrdp \u5982\u4f55\u7981\u7528\u9632\u706b\u5899\u7b49\uff1b\u5982\u4f55\u6dfb\u52a0\u7aef\u53e3\u8bbf\u95ee\u7b49\u3002\u53ef\u518d\u67e5\u8be2 \u8865\u5145\u4e00\u4e0b vncserver \u548c xrdp\u7684\u5173\u7cfb \u901a\u5e38\uff0c\u4e3a\u4e86\u4f7f\u7528vncserver \u6211\u4eec\u9700\u8981\u5b89\u88c5 yum install tigervnc tigervnc-server ****tigervnc tigervnc-server\u5c31\u662f\u63d0\u4f9bvncserver\u7684\u529f\u80fd\u7684\u5de5\u5177\u3002 \u7c7b\u4f3c\u4e8e\u6211\u4eec\u4f7f\u7528word\u53ef\u4ee5\u9009\u62e9\u5fae\u8f6f\u7684\u6216\u8005WPS\u7684\u3002 \u8fd9\u91cc\u6211\u4eec\u9009\u62e9****tigervnc******** ****\u5b89\u88c5\u597d\u540e\uff0c\u6211\u4eec\u4f7f\u7528vncserver :1 \u5f00\u542f\u4e00\u4e2aid\u4e3a1\u684c\u9762**** ****xrdp\u662f\u4ec0\u4e48\u5462? \u53ef\u4ee5\u7406\u89e3\u4e3a\u6211\u4eec\u4f7f\u7528windows \u81ea\u5e26\u7684\u8fdc\u7a0b\u684c\u9762\u5de5\u5177\u53bb\u8bbf\u95ee vncserver :1\u8fd9\u4e2a\u684c\u9762\u3002**** ****\u5b89\u88c5\u597dxrdp \u548c\u542f\u52a8\u4e86vncserver :1 \u53ea\u9700\u8981\u914d\u7f6e\u4e00\u4e0b\u76f8\u5173\u7684\u63a5\u53e3\u5373\u53ef\u3002****","title":"remote desktop"},{"location":"linux/coredump/","text":"To enable core dumps, first check the maximum core dump size: $ ulimit -c If the result of this is zero (i.e. no core dump will be produced), set the limit to the maximum: $ ulimit -c unlimited A core dump will now be generated and placed in the location specified by /proc/sys/kernel/core_pattern. Check this location by running: $ cat /proc/sys/kernel/core_pattern On CSE systems (and many other systems), the default settings result in the output: core This means that any core dumps will be placed in the current directory in a file named core. You can change this location using: $ echo \" / \" > /proc/sys/kernel/core_pattern Start a GDB session with the program binary and coredump file $ gdb ulimit -c unlimited echo \"/root/coredump\" > /proc/sys/kernel/core_pattern","title":"Coredump"},{"location":"linux/gpio/","text":"apt install libgpiod apt install libgpiod2 gpiodetect gpioinfo gpioset gpiochip3 9=1 gpioset 3 9=1 gpioset 3 9=0 gpioget gpiochip3 8 gpioget 3 8 echo 44 > /sys/class/gpio/export echo 44 > /sys/class/gpio/unexport echo in > /sys/class/gpio/gpio44/direction cat /sys/class/gpio/gpio44/value echo 0 > /sys/class/gpio/gpio44/value","title":"Gpio"},{"location":"linux/inbox/","text":"ssh_SSH2_MSG_KEXINIT # ssh \u65e0\u6cd5\u767b\u5f55\u95ee\u9898 SSH2_MSG_KEXINIT-\u963f\u91cc\u4e91\u5f00\u53d1\u8005\u793e\u533a (aliyun.com) ssh \u8fde\u63a5\u51fa\u73b0expecting SSH2_MSG_KEX_ECDH_REPLY\u5931\u8d25\u89e3\u51b3_Linux\u7231\u597d\u8005\u7684\u6280\u672f\u535a\u5ba2_51CTO\u535a\u5ba2 ifconfit eth0 mtu 1400","title":"Inbox"},{"location":"linux/inbox/#ssh_ssh2_msg_kexinit","text":"ssh \u65e0\u6cd5\u767b\u5f55\u95ee\u9898 SSH2_MSG_KEXINIT-\u963f\u91cc\u4e91\u5f00\u53d1\u8005\u793e\u533a (aliyun.com) ssh \u8fde\u63a5\u51fa\u73b0expecting SSH2_MSG_KEX_ECDH_REPLY\u5931\u8d25\u89e3\u51b3_Linux\u7231\u597d\u8005\u7684\u6280\u672f\u535a\u5ba2_51CTO\u535a\u5ba2 ifconfit eth0 mtu 1400","title":"ssh_SSH2_MSG_KEXINIT"},{"location":"linux/iptables_nat/","text":"echo 1 > /proc/sys/net/ipv4/ip_forward ip link add link eth1 name eth1.99 type vlan id 99 ip link set dev eth1.99 up ip addr add 192.168.99.1/24 dev eth1.99 iptables-legacy -t nat -A PREROUTING -p tcp -i eth0 --dport 9022 -j DNAT --to-destination 192.168.99.22:22 iptables-legacy -t nat -A POSTROUTING -p tcp -o eth0 --sport 22 -j SNAT --to-source 10.13.14.11:9022 iptables-legacy -t nat -A PREROUTING -p tcp -i eth0 --dport 12355 -j DNAT --to-destination 192.168.99.22 iptables-legacy -t nat -A POSTROUTING -p tcp -o eth0 --sport 12355 -j SNAT --to-source 10.13.14.11 iptables-legacy -t nat -A PREROUTING -p tcp -i eth0 --dport 12300 -j DNAT --to-destination 192.168.99.22 iptables-legacy -t nat -A POSTROUTING -p tcp -o eth0 --sport 12300 -j SNAT --to-source 10.13.14.11 iptables-legacy -t nat -A PREROUTING -p tcp -i eth0 --dport 50004 -j DNAT --to-destination 192.168.99.22 iptables-legacy -t nat -A POSTROUTING -p tcp -o eth0 --sport 50004 -j SNAT --to-source 10.13.14.11 #xr ip route del default ip route add default via 192.168.99.1 via br0","title":"Iptables nat"},{"location":"linux/kernel_prameter/","text":"/proc/sys/fs # \u2751/proc/sys/fs/file-max\uff0c\u7cfb\u7edf\u7ea7\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u9650\u5236\u3002 \u2751/proc/sys/fs/epoll/max_user_watches\uff0c\u4e00\u4e2a\u7528\u6237\u80fd\u591f\u5f80epoll\u5185\u6838\u4e8b\u4ef6\u8868\u4e2d\u6ce8\u518c\u7684\u4e8b\u4ef6\u7684\u603b\u91cf\u3002 /proc/sys/net # \u2751/proc/sys/net/core/somaxconn\uff0c\u6307\u5b9alisten\u76d1\u542c\u961f\u5217\u91cc\uff0c\u80fd\u591f\u5efa\u7acb\u5b8c\u6574\u8fde\u63a5\u4ece\u800c\u8fdb\u5165ESTABLISHED\u72b6\u6001\u7684socket\u7684\u6700\u5927\u6570\u76ee\u3002 \u2751/proc/sys/net/ipv4/tcp_max_syn_backlog\uff0c\u6307\u5b9alisten\u76d1\u542c\u961f\u5217\u91cc\uff0c\u80fd\u591f\u8f6c\u79fb\u81f3ESTAB-LISHED\u6216\u8005SYN_RCVD\u72b6\u6001\u7684socket\u7684\u6700\u5927\u6570\u76ee\u3002 \u2751/proc/sys/net/ipv4/tcp_wmem\uff0c\u5b83\u5305\u542b3\u4e2a\u503c\uff0c\u5206\u522b\u6307\u5b9a\u4e00\u4e2asocket\u7684TCP\u5199\u7f13\u51b2\u533a\u7684\u6700\u5c0f\u503c\u3001\u9ed8\u8ba4\u503c\u548c\u6700\u5927\u503c\u3002 \u2751/proc/sys/net/ipv4/tcp_rmem\uff0c\u5b83\u5305\u542b3\u4e2a\u503c\uff0c\u5206\u522b\u6307\u5b9a\u4e00\u4e2asocket\u7684TCP\u8bfb\u7f13\u51b2\u533a\u7684\u6700\u5c0f\u503c\u3001\u9ed8\u8ba4\u503c\u548c\u6700\u5927\u503c\u3002 \u2751/proc/sys/net/ipv4/tcp_syncookies\uff0c\u6307\u5b9a\u662f\u5426\u6253\u5f00TCP\u540c\u6b65\u6807\u7b7e\uff08syncookie\uff09\u3002\u540c\u6b65\u6807\u7b7e\u901a\u8fc7\u542f\u52a8cookie\u6765\u9632\u6b62\u4e00\u4e2a\u76d1\u542csocket\u56e0\u4e0d\u505c\u5730\u91cd\u590d\u63a5\u6536\u6765\u81ea\u540c\u4e00\u4e2a\u5730\u5740\u7684\u8fde\u63a5\u8bf7\u6c42\uff08\u540c\u6b65\u62a5\u6587\u6bb5\uff09\uff0c\u800c\u5bfc\u81f4listen\u76d1\u542c\u961f\u5217\u6ea2\u51fa\uff08\u6240\u8c13\u7684SYN\u98ce\u66b4\uff09\u3002 \u7ebf\u7a0b\u6570\u91cf # /proc/sys/kernel/threads-max","title":"Kernel prameter"},{"location":"linux/kernel_prameter/#procsysfs","text":"\u2751/proc/sys/fs/file-max\uff0c\u7cfb\u7edf\u7ea7\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u9650\u5236\u3002 \u2751/proc/sys/fs/epoll/max_user_watches\uff0c\u4e00\u4e2a\u7528\u6237\u80fd\u591f\u5f80epoll\u5185\u6838\u4e8b\u4ef6\u8868\u4e2d\u6ce8\u518c\u7684\u4e8b\u4ef6\u7684\u603b\u91cf\u3002","title":"/proc/sys/fs"},{"location":"linux/kernel_prameter/#procsysnet","text":"\u2751/proc/sys/net/core/somaxconn\uff0c\u6307\u5b9alisten\u76d1\u542c\u961f\u5217\u91cc\uff0c\u80fd\u591f\u5efa\u7acb\u5b8c\u6574\u8fde\u63a5\u4ece\u800c\u8fdb\u5165ESTABLISHED\u72b6\u6001\u7684socket\u7684\u6700\u5927\u6570\u76ee\u3002 \u2751/proc/sys/net/ipv4/tcp_max_syn_backlog\uff0c\u6307\u5b9alisten\u76d1\u542c\u961f\u5217\u91cc\uff0c\u80fd\u591f\u8f6c\u79fb\u81f3ESTAB-LISHED\u6216\u8005SYN_RCVD\u72b6\u6001\u7684socket\u7684\u6700\u5927\u6570\u76ee\u3002 \u2751/proc/sys/net/ipv4/tcp_wmem\uff0c\u5b83\u5305\u542b3\u4e2a\u503c\uff0c\u5206\u522b\u6307\u5b9a\u4e00\u4e2asocket\u7684TCP\u5199\u7f13\u51b2\u533a\u7684\u6700\u5c0f\u503c\u3001\u9ed8\u8ba4\u503c\u548c\u6700\u5927\u503c\u3002 \u2751/proc/sys/net/ipv4/tcp_rmem\uff0c\u5b83\u5305\u542b3\u4e2a\u503c\uff0c\u5206\u522b\u6307\u5b9a\u4e00\u4e2asocket\u7684TCP\u8bfb\u7f13\u51b2\u533a\u7684\u6700\u5c0f\u503c\u3001\u9ed8\u8ba4\u503c\u548c\u6700\u5927\u503c\u3002 \u2751/proc/sys/net/ipv4/tcp_syncookies\uff0c\u6307\u5b9a\u662f\u5426\u6253\u5f00TCP\u540c\u6b65\u6807\u7b7e\uff08syncookie\uff09\u3002\u540c\u6b65\u6807\u7b7e\u901a\u8fc7\u542f\u52a8cookie\u6765\u9632\u6b62\u4e00\u4e2a\u76d1\u542csocket\u56e0\u4e0d\u505c\u5730\u91cd\u590d\u63a5\u6536\u6765\u81ea\u540c\u4e00\u4e2a\u5730\u5740\u7684\u8fde\u63a5\u8bf7\u6c42\uff08\u540c\u6b65\u62a5\u6587\u6bb5\uff09\uff0c\u800c\u5bfc\u81f4listen\u76d1\u542c\u961f\u5217\u6ea2\u51fa\uff08\u6240\u8c13\u7684SYN\u98ce\u66b4\uff09\u3002","title":"/proc/sys/net"},{"location":"linux/kernel_prameter/#\u7ebf\u7a0b\u6570\u91cf","text":"/proc/sys/kernel/threads-max","title":"\u7ebf\u7a0b\u6570\u91cf"},{"location":"linux/linux_signal/","text":"kill # #include\uff1csys/types.h\uff1e #include\uff1csignal.h\uff1e int kill(pid_t pid,int sig); \u8be5\u51fd\u6570\u628a\u4fe1\u53f7sig\u53d1\u9001\u7ed9\u76ee\u6807\u8fdb\u7a0b\uff1b\u76ee\u6807\u8fdb\u7a0b\u7531pid\u53c2\u6570\u6307\u5b9a \u8be5\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 \u4fe1\u53f7\u5904\u7406\u65b9\u5f0f # \u76ee\u6807\u8fdb\u7a0b\u5728\u6536\u5230\u4fe1\u53f7\u65f6\uff0c\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u63a5\u6536\u51fd\u6570\u6765\u5904\u7406\u4e4b\u3002 #include\uff1csignal.h\uff1e typedef void(*__sighandler_t)(int); #include\uff1cbits/signum.h\uff1e #define SIG_DFL((__sighandler_t)0) #define SIG_IGN((__sighandler_t)1) \u4fe1\u53f7\u5904\u7406\u51fd\u6570\u53ea\u5e26\u6709\u4e00\u4e2a\u6574\u578b\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u7528\u6765\u6307\u793a\u4fe1\u53f7\u7c7b\u578b\u3002 SIG_IGN\u8868\u793a\u5ffd\u7565\u76ee\u6807\u4fe1\u53f7\uff0cSIG_DFL\u8868\u793a\u4f7f\u7528\u4fe1\u53f7\u7684\u9ed8\u8ba4\u5904\u7406\u65b9\u5f0f\u3002\u4fe1\u53f7\u7684\u9ed8\u8ba4\u5904\u7406\u65b9\u5f0f\u6709\u5982\u4e0b\u51e0\u79cd\uff1a\u7ed3\u675f\u8fdb\u7a0b\uff08Term\uff09\u3001\u5ffd\u7565\u4fe1\u53f7\uff08Ign\uff09\u3001\u7ed3\u675f\u8fdb\u7a0b\u5e76\u751f\u6210\u6838\u5fc3\u8f6c\u50a8\u6587\u4ef6\uff08Core\uff09\u3001\u6682\u505c\u8fdb\u7a0b\uff08Stop\uff09\uff0c\u4ee5\u53ca\u7ee7\u7eed\u8fdb\u7a0b\uff08Cont\uff09\u3002 Linux\u4fe1\u53f7 # \u4fe1\u53f7\u51fd\u6570 # #include\uff1csignal.h\uff1e _sighandler_t signal(intsig,_sighandler_t_handler) sig\u53c2\u6570\u6307\u51fa\u8981\u6355\u83b7\u7684\u4fe1\u53f7\u7c7b\u578b\u3002_handler\u53c2\u6570\u662f_sighandler_t\u7c7b\u578b\u7684\u51fd\u6570\u6307\u9488\uff0c\u7528\u4e8e\u6307\u5b9a\u4fe1\u53f7sig\u7684\u5904\u7406\u51fd\u6570\u3002 signal\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u8be5\u51fd\u6570\u6307\u9488\u7684\u7c7b\u578b\u4e5f\u662f_sighandler_t\u3002\u8fd9\u4e2a\u8fd4\u56de\u503c\u662f\u524d\u4e00\u6b21\u8c03\u7528signal\u51fd\u6570\u65f6\u4f20\u5165\u7684\u51fd\u6570\u6307\u9488\uff0c\u6216\u8005\u662f\u4fe1\u53f7sig\u5bf9\u5e94\u7684\u9ed8\u8ba4\u5904\u7406\u51fd\u6570\u6307\u9488SIG_DEF\uff08\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u8c03\u7528signal\u7684\u8bdd\uff09\u3002 signal\u7cfb\u7edf\u8c03\u7528\u51fa\u9519\u65f6\u8fd4\u56deSIG_ERR\uff0c\u5e76\u8bbe\u7f6eerrno\u3002 #include\uff1csignal.h\uff1e int sigaction(int sig,const struct sigaction*act,struct sigaction*oact); sig\u53c2\u6570\u6307\u51fa\u8981\u6355\u83b7\u7684\u4fe1\u53f7\u7c7b\u578b\uff0cact\u53c2\u6570\u6307\u5b9a\u65b0\u7684\u4fe1\u53f7\u5904\u7406\u65b9\u5f0f\uff0coact\u53c2\u6570\u5219\u8f93\u51fa\u4fe1\u53f7\u5148\u524d\u7684\u5904\u7406\u65b9\u5f0f struct sigaction { #ifdef__USE_POSIX199309 union { _sighandler_t sa_handler; void(*sa_sigaction)(int,siginfo_t*,void*); } _sigaction_handler; #define sa_handler__sigaction_handler.sa_handler #define sa_sigaction__sigaction_handler.sa_sigaction #else _sighandler_t sa_handler; #endif _sigset_t sa_mask; int sa_flags; void(*sa_restorer)(void); }; sa_hander\u6210\u5458\u6307\u5b9a\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002 sa_mask\u6210\u5458\u8bbe\u7f6e\u8fdb\u7a0b\u7684\u4fe1\u53f7\u63a9\u7801 sa_flags\u6210\u5458\u7528\u4e8e\u8bbe\u7f6e\u7a0b\u5e8f\u6536\u5230\u4fe1\u53f7\u65f6\u7684\u884c\u4e3a sa_restorer\u6210\u5458\u5df2\u7ecf\u8fc7\u65f6\uff0c\u6700\u597d\u4e0d\u8981\u4f7f\u7528\u3002 sigaction\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 \u4fe1\u53f7\u96c6 # Linux\u4f7f\u7528\u6570\u636e\u7ed3\u6784sigset_t\u6765\u8868\u793a\u4e00\u7ec4\u4fe1\u53f7 #include\uff1cbits/sigset.h\uff1e #define_SIGSET_NWORDS(1024/(8*sizeof(unsigned long int))) typedef struct { unsigned long int__val[_SIGSET_NWORDS]; }__sigset_t; int sigemptyset(sigset_t*_set)/*\u6e05\u7a7a\u4fe1\u53f7\u96c6*/ int sigfillset(sigset_t*_set)/*\u5728\u4fe1\u53f7\u96c6\u4e2d\u8bbe\u7f6e\u6240\u6709\u4fe1\u53f7*/ int sigaddset(sigset_t*_set,int_signo)/*\u5c06\u4fe1\u53f7_signo\u6dfb\u52a0\u81f3\u4fe1\u53f7\u96c6\u4e2d*/ int sigdelset(sigset_t*_set,int_signo)/*\u5c06\u4fe1\u53f7_signo\u4ece\u4fe1\u53f7\u96c6\u4e2d\u5220\u9664*/ int sigismember(_const sigset_t*_set,int_signo)/*\u6d4b\u8bd5_signo\u662f\u5426\u5728\u4fe1\u53f7\u96c6\u4e2d*/ int sigprocmask(int_how,_const sigset_t*_set,sigset_t*_oset); sigset_t\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u957f\u6574\u578b\u6570\u7ec4\uff0c\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u6bcf\u4e2a\u4f4d\u8868\u793a\u4e00\u4e2a\u4fe1\u53f7\u3002\u8fd9\u79cd\u5b9a\u4e49\u65b9\u5f0f\u548c\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6fd_set\u7c7b\u4f3c\u3002 Linux\u63d0\u4f9b\u4e86\u4e00\u7ec4\u51fd\u6570\u6765\u8bbe\u7f6e\u3001\u4fee\u6539\u3001\u5220\u9664\u548c\u67e5\u8be2\u4fe1\u53f7\u96c6 _set\u53c2\u6570\u6307\u5b9a\u65b0\u7684\u4fe1\u53f7\u63a9\u7801\uff0c_oset\u53c2\u6570\u5219\u8f93\u51fa\u539f\u6765\u7684\u4fe1\u53f7\u63a9\u7801\uff08\u5982\u679c\u4e0d\u4e3aNULL\u7684\u8bdd\uff09\u3002\u5982\u679c_set\u53c2\u6570\u4e0d\u4e3aNULL\uff0c\u5219_how\u53c2\u6570\u6307\u5b9a\u8bbe\u7f6e\u8fdb\u7a0b\u4fe1\u53f7\u63a9\u7801\u7684\u65b9\u5f0f\uff0c\u5176\u53ef\u9009\u503c\u5982\u8868 \u8bbe\u7f6e\u8fdb\u7a0b\u4fe1\u53f7\u63a9\u7801\u540e\uff0c\u88ab\u5c4f\u853d\u7684\u4fe1\u53f7\u5c06\u4e0d\u80fd\u88ab\u8fdb\u7a0b\u63a5\u6536\u3002\u5982\u679c\u7ed9\u8fdb\u7a0b\u53d1\u9001\u4e00\u4e2a\u88ab\u5c4f\u853d\u7684\u4fe1\u53f7\uff0c\u5219\u64cd\u4f5c\u7cfb\u7edf\u5c06\u8be5\u4fe1\u53f7\u8bbe\u7f6e\u4e3a\u8fdb\u7a0b\u7684\u4e00\u4e2a\u88ab\u6302\u8d77\u7684\u4fe1\u53f7\u3002\u5982\u679c\u6211\u4eec\u53d6\u6d88\u5bf9\u88ab\u6302\u8d77\u4fe1\u53f7\u7684\u5c4f\u853d\uff0c\u5219\u5b83\u80fd\u7acb\u5373\u88ab\u8fdb\u7a0b\u63a5\u6536\u5230\u3002\u5982\u4e0b\u51fd\u6570\u53ef\u4ee5\u83b7\u5f97\u8fdb\u7a0b\u5f53\u524d\u88ab\u6302\u8d77\u7684\u4fe1\u53f7\u96c6 int sigpending(sigset_t*set); set\u53c2\u6570\u7528\u4e8e\u4fdd\u5b58\u88ab\u6302\u8d77\u7684\u4fe1\u53f7\u96c6\u3002 igpending\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 test_signal.cpp test_sigurg.cpp","title":"Linux signal"},{"location":"linux/linux_signal/#kill","text":"#include\uff1csys/types.h\uff1e #include\uff1csignal.h\uff1e int kill(pid_t pid,int sig); \u8be5\u51fd\u6570\u628a\u4fe1\u53f7sig\u53d1\u9001\u7ed9\u76ee\u6807\u8fdb\u7a0b\uff1b\u76ee\u6807\u8fdb\u7a0b\u7531pid\u53c2\u6570\u6307\u5b9a \u8be5\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002","title":"kill"},{"location":"linux/linux_signal/#\u4fe1\u53f7\u5904\u7406\u65b9\u5f0f","text":"\u76ee\u6807\u8fdb\u7a0b\u5728\u6536\u5230\u4fe1\u53f7\u65f6\uff0c\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u63a5\u6536\u51fd\u6570\u6765\u5904\u7406\u4e4b\u3002 #include\uff1csignal.h\uff1e typedef void(*__sighandler_t)(int); #include\uff1cbits/signum.h\uff1e #define SIG_DFL((__sighandler_t)0) #define SIG_IGN((__sighandler_t)1) \u4fe1\u53f7\u5904\u7406\u51fd\u6570\u53ea\u5e26\u6709\u4e00\u4e2a\u6574\u578b\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u7528\u6765\u6307\u793a\u4fe1\u53f7\u7c7b\u578b\u3002 SIG_IGN\u8868\u793a\u5ffd\u7565\u76ee\u6807\u4fe1\u53f7\uff0cSIG_DFL\u8868\u793a\u4f7f\u7528\u4fe1\u53f7\u7684\u9ed8\u8ba4\u5904\u7406\u65b9\u5f0f\u3002\u4fe1\u53f7\u7684\u9ed8\u8ba4\u5904\u7406\u65b9\u5f0f\u6709\u5982\u4e0b\u51e0\u79cd\uff1a\u7ed3\u675f\u8fdb\u7a0b\uff08Term\uff09\u3001\u5ffd\u7565\u4fe1\u53f7\uff08Ign\uff09\u3001\u7ed3\u675f\u8fdb\u7a0b\u5e76\u751f\u6210\u6838\u5fc3\u8f6c\u50a8\u6587\u4ef6\uff08Core\uff09\u3001\u6682\u505c\u8fdb\u7a0b\uff08Stop\uff09\uff0c\u4ee5\u53ca\u7ee7\u7eed\u8fdb\u7a0b\uff08Cont\uff09\u3002","title":"\u4fe1\u53f7\u5904\u7406\u65b9\u5f0f"},{"location":"linux/linux_signal/#linux\u4fe1\u53f7","text":"","title":"Linux\u4fe1\u53f7"},{"location":"linux/linux_signal/#\u4fe1\u53f7\u51fd\u6570","text":"#include\uff1csignal.h\uff1e _sighandler_t signal(intsig,_sighandler_t_handler) sig\u53c2\u6570\u6307\u51fa\u8981\u6355\u83b7\u7684\u4fe1\u53f7\u7c7b\u578b\u3002_handler\u53c2\u6570\u662f_sighandler_t\u7c7b\u578b\u7684\u51fd\u6570\u6307\u9488\uff0c\u7528\u4e8e\u6307\u5b9a\u4fe1\u53f7sig\u7684\u5904\u7406\u51fd\u6570\u3002 signal\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u8be5\u51fd\u6570\u6307\u9488\u7684\u7c7b\u578b\u4e5f\u662f_sighandler_t\u3002\u8fd9\u4e2a\u8fd4\u56de\u503c\u662f\u524d\u4e00\u6b21\u8c03\u7528signal\u51fd\u6570\u65f6\u4f20\u5165\u7684\u51fd\u6570\u6307\u9488\uff0c\u6216\u8005\u662f\u4fe1\u53f7sig\u5bf9\u5e94\u7684\u9ed8\u8ba4\u5904\u7406\u51fd\u6570\u6307\u9488SIG_DEF\uff08\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u8c03\u7528signal\u7684\u8bdd\uff09\u3002 signal\u7cfb\u7edf\u8c03\u7528\u51fa\u9519\u65f6\u8fd4\u56deSIG_ERR\uff0c\u5e76\u8bbe\u7f6eerrno\u3002 #include\uff1csignal.h\uff1e int sigaction(int sig,const struct sigaction*act,struct sigaction*oact); sig\u53c2\u6570\u6307\u51fa\u8981\u6355\u83b7\u7684\u4fe1\u53f7\u7c7b\u578b\uff0cact\u53c2\u6570\u6307\u5b9a\u65b0\u7684\u4fe1\u53f7\u5904\u7406\u65b9\u5f0f\uff0coact\u53c2\u6570\u5219\u8f93\u51fa\u4fe1\u53f7\u5148\u524d\u7684\u5904\u7406\u65b9\u5f0f struct sigaction { #ifdef__USE_POSIX199309 union { _sighandler_t sa_handler; void(*sa_sigaction)(int,siginfo_t*,void*); } _sigaction_handler; #define sa_handler__sigaction_handler.sa_handler #define sa_sigaction__sigaction_handler.sa_sigaction #else _sighandler_t sa_handler; #endif _sigset_t sa_mask; int sa_flags; void(*sa_restorer)(void); }; sa_hander\u6210\u5458\u6307\u5b9a\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002 sa_mask\u6210\u5458\u8bbe\u7f6e\u8fdb\u7a0b\u7684\u4fe1\u53f7\u63a9\u7801 sa_flags\u6210\u5458\u7528\u4e8e\u8bbe\u7f6e\u7a0b\u5e8f\u6536\u5230\u4fe1\u53f7\u65f6\u7684\u884c\u4e3a sa_restorer\u6210\u5458\u5df2\u7ecf\u8fc7\u65f6\uff0c\u6700\u597d\u4e0d\u8981\u4f7f\u7528\u3002 sigaction\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002","title":"\u4fe1\u53f7\u51fd\u6570"},{"location":"linux/linux_signal/#\u4fe1\u53f7\u96c6","text":"Linux\u4f7f\u7528\u6570\u636e\u7ed3\u6784sigset_t\u6765\u8868\u793a\u4e00\u7ec4\u4fe1\u53f7 #include\uff1cbits/sigset.h\uff1e #define_SIGSET_NWORDS(1024/(8*sizeof(unsigned long int))) typedef struct { unsigned long int__val[_SIGSET_NWORDS]; }__sigset_t; int sigemptyset(sigset_t*_set)/*\u6e05\u7a7a\u4fe1\u53f7\u96c6*/ int sigfillset(sigset_t*_set)/*\u5728\u4fe1\u53f7\u96c6\u4e2d\u8bbe\u7f6e\u6240\u6709\u4fe1\u53f7*/ int sigaddset(sigset_t*_set,int_signo)/*\u5c06\u4fe1\u53f7_signo\u6dfb\u52a0\u81f3\u4fe1\u53f7\u96c6\u4e2d*/ int sigdelset(sigset_t*_set,int_signo)/*\u5c06\u4fe1\u53f7_signo\u4ece\u4fe1\u53f7\u96c6\u4e2d\u5220\u9664*/ int sigismember(_const sigset_t*_set,int_signo)/*\u6d4b\u8bd5_signo\u662f\u5426\u5728\u4fe1\u53f7\u96c6\u4e2d*/ int sigprocmask(int_how,_const sigset_t*_set,sigset_t*_oset); sigset_t\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u957f\u6574\u578b\u6570\u7ec4\uff0c\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u6bcf\u4e2a\u4f4d\u8868\u793a\u4e00\u4e2a\u4fe1\u53f7\u3002\u8fd9\u79cd\u5b9a\u4e49\u65b9\u5f0f\u548c\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6fd_set\u7c7b\u4f3c\u3002 Linux\u63d0\u4f9b\u4e86\u4e00\u7ec4\u51fd\u6570\u6765\u8bbe\u7f6e\u3001\u4fee\u6539\u3001\u5220\u9664\u548c\u67e5\u8be2\u4fe1\u53f7\u96c6 _set\u53c2\u6570\u6307\u5b9a\u65b0\u7684\u4fe1\u53f7\u63a9\u7801\uff0c_oset\u53c2\u6570\u5219\u8f93\u51fa\u539f\u6765\u7684\u4fe1\u53f7\u63a9\u7801\uff08\u5982\u679c\u4e0d\u4e3aNULL\u7684\u8bdd\uff09\u3002\u5982\u679c_set\u53c2\u6570\u4e0d\u4e3aNULL\uff0c\u5219_how\u53c2\u6570\u6307\u5b9a\u8bbe\u7f6e\u8fdb\u7a0b\u4fe1\u53f7\u63a9\u7801\u7684\u65b9\u5f0f\uff0c\u5176\u53ef\u9009\u503c\u5982\u8868 \u8bbe\u7f6e\u8fdb\u7a0b\u4fe1\u53f7\u63a9\u7801\u540e\uff0c\u88ab\u5c4f\u853d\u7684\u4fe1\u53f7\u5c06\u4e0d\u80fd\u88ab\u8fdb\u7a0b\u63a5\u6536\u3002\u5982\u679c\u7ed9\u8fdb\u7a0b\u53d1\u9001\u4e00\u4e2a\u88ab\u5c4f\u853d\u7684\u4fe1\u53f7\uff0c\u5219\u64cd\u4f5c\u7cfb\u7edf\u5c06\u8be5\u4fe1\u53f7\u8bbe\u7f6e\u4e3a\u8fdb\u7a0b\u7684\u4e00\u4e2a\u88ab\u6302\u8d77\u7684\u4fe1\u53f7\u3002\u5982\u679c\u6211\u4eec\u53d6\u6d88\u5bf9\u88ab\u6302\u8d77\u4fe1\u53f7\u7684\u5c4f\u853d\uff0c\u5219\u5b83\u80fd\u7acb\u5373\u88ab\u8fdb\u7a0b\u63a5\u6536\u5230\u3002\u5982\u4e0b\u51fd\u6570\u53ef\u4ee5\u83b7\u5f97\u8fdb\u7a0b\u5f53\u524d\u88ab\u6302\u8d77\u7684\u4fe1\u53f7\u96c6 int sigpending(sigset_t*set); set\u53c2\u6570\u7528\u4e8e\u4fdd\u5b58\u88ab\u6302\u8d77\u7684\u4fe1\u53f7\u96c6\u3002 igpending\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 test_signal.cpp test_sigurg.cpp","title":"\u4fe1\u53f7\u96c6"},{"location":"linux/misc_cmds/","text":"date # date -s \"20120523 01:01:01\" ntpdate -u cn.pool.ntp.org timedatectl set-timezone Asia/Shanghai dd # sudo dd if=/dev/mmcblk0 of=~/sd-card-copy.img bs=1M status=progress","title":"Misc cmds"},{"location":"linux/misc_cmds/#date","text":"date -s \"20120523 01:01:01\" ntpdate -u cn.pool.ntp.org timedatectl set-timezone Asia/Shanghai","title":"date"},{"location":"linux/misc_cmds/#dd","text":"sudo dd if=/dev/mmcblk0 of=~/sd-card-copy.img bs=1M status=progress","title":"dd"},{"location":"linux/network_cmds/","text":"ip # sudo apt install iproute2 ip -d link show ifconfig # ifconfig eth1 hw ether 00:01:9f:ef:66:77 arp # arp-d 192.168.1.109#\u5220\u9664Kongming20\u5bf9\u5e94\u7684ARP\u7f13\u5b58\u9879 arp-s 192.168.1.109 08:00:27:53:10:67#\u6dfb\u52a0Kongming20\u5bf9\u5e94\u7684ARP\u7f13\u5b58\u9879 tcpdump # tcpdump\u662f\u4e00\u6b3e\u7ecf\u5178\u7684\u7f51\u7edc\u6293\u5305\u5de5\u5177\u3002 \u2751-n\uff0c\u4f7f\u7528IP\u5730\u5740\u8868\u793a\u4e3b\u673a\uff0c\u800c\u4e0d\u662f\u4e3b\u673a\u540d\uff1b\u4f7f\u7528\u6570\u5b57\u8868\u793a\u7aef\u53e3\u53f7\uff0c\u800c\u4e0d\u662f\u670d\u52a1\u540d\u79f0\u3002 \u2751-i\uff0c\u6307\u5b9a\u8981\u76d1\u542c\u7684\u7f51\u5361\u63a5\u53e3\u3002\u201c-i any\u201d\u8868\u793a\u6293\u53d6\u6240\u6709\u7f51\u5361\u63a5\u53e3\u4e0a\u7684\u6570\u636e\u5305\u3002 \u2751-v\uff0c\u8f93\u51fa\u4e00\u4e2a\u7a0d\u5fae\u8be6\u7ec6\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\uff0c\u663e\u793aIP\u6570\u636e\u5305\u4e2d\u7684TTL\u548cTOS\u4fe1\u606f\u3002 \u2751-t\uff0c\u4e0d\u6253\u5370\u65f6\u95f4\u6233\u3002 \u2751-e\uff0c\u663e\u793a\u4ee5\u592a\u7f51\u5e27\u5934\u90e8\u4fe1\u606f\u3002 \u2751-c\uff0c\u4ec5\u6293\u53d6\u6307\u5b9a\u6570\u91cf\u7684\u6570\u636e\u5305\u3002 \u2751-x\uff0c\u4ee5\u5341\u516d\u8fdb\u5236\u6570\u663e\u793a\u6570\u636e\u5305\u7684\u5185\u5bb9\uff0c\u4f46\u4e0d\u663e\u793a\u5305\u4e2d\u4ee5\u592a\u7f51\u5e27\u7684\u5934\u90e8\u4fe1\u606f\u3002 \u2751-X\uff0c\u4e0e-x\u9009\u9879\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u8fd8\u6253\u5370\u6bcf\u4e2a\u5341\u516d\u8fdb\u5236\u5b57\u8282\u5bf9\u5e94\u7684ASCII\u5b57\u7b26\u3002 \u2751-XX\uff0c\u4e0e-X\u76f8\u540c\uff0c\u4e0d\u8fc7\u8fd8\u6253\u5370\u4ee5\u592a\u7f51\u5e27\u7684\u5934\u90e8\u4fe1\u606f\u3002 \u2751-s\uff0c\u8bbe\u7f6e\u6293\u5305\u65f6\u7684\u6293\u53d6\u957f\u5ea6 \u2751-S\uff0c\u4ee5\u7edd\u5bf9\u503c\u6765\u663e\u793aTCP\u62a5\u6587\u6bb5\u7684\u5e8f\u53f7\uff0c\u800c\u4e0d\u662f\u76f8\u5bf9\u503c\u3002 \u2751-w\uff0c\u5c06tcpdump\u7684\u8f93\u51fa\u4ee5\u7279\u6b8a\u7684\u683c\u5f0f\u5b9a\u5411\u5230\u67d0\u4e2a\u6587\u4ef6\u3002 \u2751-r\uff0c\u4ece\u6587\u4ef6\u8bfb\u53d6\u6570\u636e\u5305\u4fe1\u606f\u5e76\u663e\u793a\u4e4b\u3002 \u2751\u7c7b\u578b\uff0c\u89e3\u91ca\u5176\u540e\u9762\u7d27\u8ddf\u7740\u7684\u53c2\u6570\u7684\u542b\u4e49\u3002tcpdump\u652f\u6301\u7684\u7c7b\u578b\u5305\u62echost\u3001net\u3001port\u548cportrange\u3002\u5b83\u4eec\u5206\u522b\u6307\u5b9a\u4e3b\u673a\u540d\uff08\u6216IP\u5730\u5740\uff09\uff0c\u7528CIDR\u65b9\u6cd5\u8868\u793a\u7684\u7f51\u7edc\u5730\u5740\uff0c\u7aef\u53e3\u53f7\u4ee5\u53ca\u7aef\u53e3\u8303\u56f4\u3002 $tcpdump net 1.2.3.0/24 \u2751\u65b9\u5411\uff0csrc\u6307\u5b9a\u6570\u636e\u5305\u7684\u53d1\u9001\u7aef\uff0cdst\u6307\u5b9a\u6570\u636e\u5305\u7684\u76ee\u7684\u7aef\u3002 $tcpdump dst port 13579 \u2751\u534f\u8bae\uff0c\u6307\u5b9a\u76ee\u6807\u534f\u8bae\u3002 tcpdump icmp cpdump\u652f\u6301\u7684\u903b\u8f91\u64cd\u4f5c\u7b26\u548c\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u903b\u8f91\u64cd\u4f5c\u7b26\u5b8c\u5168\u76f8\u540c\uff0c\u5305\u62ecand\uff08\u6216\u8005\uff06\uff06\uff09\u3001or\uff08\u6216\u8005||\uff09\u3001not\uff08\u6216\u8005!\uff09\u3002 `tcpdump -i eth0 -ent '(dst 192.168.1.109 and src 192.168.1.108)or (dst 192.168.1.108 and src 192.168.1.109)' tcpdump-i eth0 -nt -s 500 port domain \u7528\u201cport domain\u201d\u6765\u8fc7\u6ee4\u6570\u636e\u5305\uff0c\u8868\u793a\u53ea\u6293\u53d6\u4f7f\u7528domain\uff08\u57df\u540d\uff09\u670d\u52a1\u7684\u6570\u636e\u5305\uff0c\u5373DNS\u67e5\u8be2\u548c\u5e94\u7b54\u62a5\u6587\u3002 tcpdump -ntv -i eth0 icmp \u53ea\u6293\u53d6ICMP\u62a5\u6587 tcpdump\u8fd8\u5141\u8bb8\u76f4\u63a5\u4f7f\u7528\u6570\u636e\u5305\u4e2d\u7684\u90e8\u5206\u534f\u8bae\u5b57\u6bb5\u7684\u5185\u5bb9\u6765\u8fc7\u6ee4\u6570\u636e\u5305\u3002\u6bd4\u5982\uff0c\u4ec5\u6293\u53d6TCP\u540c\u6b65\u62a5\u6587\u6bb5\uff0c\u53ef\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4 tcpdump'tcp[13]\uff062!=0' tcpdump'tcp[tcpflags]\uff06tcp-syn!=0' tcpdump -vv -i eth1 '( vlan and ( ether[14:2] & 0xfff == 1000 or ether[14:2] & 0xfff == 501 ) ) and ( ip host 10.1.1.98 or ip host 10.1.1.99 )' DNS # Linux\u4f7f\u7528/etc/resolv.conf\u6587\u4ef6\u6765\u5b58\u653eDNS\u670d\u52a1\u5668\u7684IP\u5730\u5740\u3002 nameserver 219.239.26.42 nameserver 124.207.160.106 host\u547d\u4ee4\u4f7f\u7528DNS\u534f\u8bae\u548cDNS\u670d\u52a1\u5668\u901a\u4fe1\uff0c\u5176-t\u9009\u9879\u544a\u8bc9DNS\u534f\u8bae\u4f7f\u7528\u54ea\u79cd\u67e5\u8be2\u7c7b\u578b\u3002 $host-t A www.baidu.com www.baidu.com is an alias for www.a.shifen.com. www.a.shifen.com has address 119.75.217.56 www.a.shifen.com has address 119.75.218.77 protocols # /etc/protocols\u6587\u4ef6\u5b9a\u4e49\u4e86\u6240\u6709\u4e0a\u5c42\u534f\u8bae\u5bf9\u5e94\u7684protocol\u5b57\u6bb5\u7684\u6570\u503c\u3002\u5176\u4e2d\uff0cICMP\u662f1\uff0cTCP\u662f6\uff0cUDP\u662f17\u3002 route # Kernel IP routing table Destination Gateway Genmask Flags Metric Ref Use Iface default 192.168.1.1 0.0.0.0 UG 0 0 0 eth0 192.168.1.0*255.255.255.0 U 1 0 0 eth0 $sudo route add-host 192.168.1.109 dev eth0 $sudo route del-net 192.168.1.0 netmask 255.255.255.0 $sudo route del default $sudo route add default gw 192.168.1.109 dev eth0 ip_forward # echo 1\uff1e/proc/sys/net/ipv4/ip_forward ICMP # /proc/sys/net/ipv4/conf/all/send_redirects\u5185\u6838\u53c2\u6570\u6307\u5b9a\u662f\u5426\u5141\u8bb8\u53d1\u9001ICMP\u91cd\u5b9a\u5411\u62a5\u6587\uff0c /proc/sys/net/ipv4/conf/all/accept_redirects\u5185\u6838\u53c2\u6570\u5219\u6307\u5b9a\u662f\u5426\u5141\u8bb8\u63a5\u6536ICMP\u91cd\u5b9a\u5411\u62a5\u6587\u3002 tcp_port # /etc/services iptables # $sudo iptables -F $sudo iptables -I INPUT -p tcp --syn -i eth0 -j DROP \u4e22\u5f03\u6240\u6709\u63a5\u6536\u5230\u7684\u8fde\u63a5\u8bf7\u6c42 sync_retries # /proc/sys/net/ipv4/tcp_syn_retries nc # nc\uff08netcat\uff09\u547d\u4ee4\u77ed\u5c0f\u7cbe\u5e72\u3001\u529f\u80fd\u5f3a\u5927\uff0c\u6709\u7740\u201c\u745e\u58eb\u519b\u5200\u201d\u7684\u7f8e\u8a89\u3002 \u4e3b\u8981\u88ab\u7528\u6765\u5feb\u901f\u6784\u5efa\u7f51\u7edc\u8fde\u63a5\u3002\u6211\u4eec\u53ef\u4ee5\u8ba9\u5b83\u4ee5\u670d\u52a1\u5668\u65b9\u5f0f\u8fd0\u884c\uff0c\u76d1\u542c\u67d0\u4e2a\u7aef\u53e3\u5e76\u63a5\u6536\u5ba2\u6237\u8fde\u63a5\uff0c\u56e0\u6b64\u5b83\u53ef\u7528\u6765\u8c03\u8bd5\u5ba2\u6237\u7aef\u7a0b\u5e8f\u3002 \u4f7f\u4e4b\u4ee5\u5ba2\u6237\u7aef\u65b9\u5f0f\u8fd0\u884c\uff0c\u5411\u670d\u52a1\u5668\u53d1\u8d77\u8fde\u63a5\u5e76\u6536\u53d1\u6570\u636e\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u7528\u6765\u8c03\u8bd5\u670d\u52a1\u5668\u7a0b\u5e8f\uff0c\u6b64\u65f6\u5b83\u6709\u70b9\u50cftelnet\u7a0b\u5e8f\u3002 nc\u547d\u4ee4\u5e38\u7528\u7684\u9009\u9879\u5305\u62ec\uff1a \u2751-i\uff0c\u8bbe\u7f6e\u6570\u636e\u5305\u4f20\u9001\u7684\u65f6\u95f4\u95f4\u9694\u3002 \u2751-l\uff0c\u4ee5\u670d\u52a1\u5668\u65b9\u5f0f\u8fd0\u884c\uff0c\u76d1\u542c\u6307\u5b9a\u7684\u7aef\u53e3\u3002nc\u547d\u4ee4\u9ed8\u8ba4\u4ee5\u5ba2\u6237\u7aef\u65b9\u5f0f\u8fd0\u884c\u3002 \u2751-k\uff0c\u91cd\u590d\u63a5\u53d7\u5e76\u5904\u7406\u67d0\u4e2a\u7aef\u53e3\u4e0a\u7684\u6240\u6709\u8fde\u63a5\uff0c\u5fc5\u987b\u4e0e-l\u9009\u9879\u4e00\u8d77\u4f7f\u7528\u3002 \u2751-n\uff0c\u4f7f\u7528IP\u5730\u5740\u8868\u793a\u4e3b\u673a\uff0c\u800c\u4e0d\u662f\u4e3b\u673a\u540d\uff1b\u4f7f\u7528\u6570\u5b57\u8868\u793a\u7aef\u53e3\u53f7\uff0c\u800c\u4e0d\u662f\u670d\u52a1\u540d\u79f0\u3002 \u2751-p\uff0c\u5f53nc\u547d\u4ee4\u4ee5\u5ba2\u6237\u7aef\u65b9\u5f0f\u8fd0\u884c\u65f6\uff0c\u5f3a\u5236\u5176\u4f7f\u7528\u6307\u5b9a\u7684\u7aef\u53e3\u53f7\u30023.4.2\u5c0f\u8282\u4e2d\u6211\u4eec\u5c31\u66fe\u4f7f\u7528\u8fc7\u8be5\u9009\u9879\u3002 \u2751-s\uff0c\u8bbe\u7f6e\u672c\u5730\u4e3b\u673a\u53d1\u9001\u51fa\u7684\u6570\u636e\u5305\u7684IP\u5730\u5740\u3002 \u2751-C\uff0c\u5c06CR\u548cLF\u4e24\u4e2a\u5b57\u7b26\u4f5c\u4e3a\u884c\u7ed3\u675f\u7b26\u3002 \u2751-U\uff0c\u4f7f\u7528UNIX\u672c\u5730\u57df\u534f\u8bae\u901a\u4fe1\u3002 \u2751-u\uff0c\u4f7f\u7528UDP\u534f\u8bae\u3002nc\u547d\u4ee4\u9ed8\u8ba4\u4f7f\u7528\u7684\u4f20\u8f93\u5c42\u534f\u8bae\u662fTCP\u534f\u8bae\u3002 \u2751-w\uff0c\u5982\u679cnc\u5ba2\u6237\u7aef\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u5185\u672a\u68c0\u6d4b\u5230\u4efb\u4f55\u8f93\u5165\uff0c\u5219\u9000\u51fa\u3002 \u2751-X\uff0c\u5f53nc\u5ba2\u6237\u7aef\u548c\u4ee3\u7406\u670d\u52a1\u5668\u901a\u4fe1\u65f6\uff0c\u8be5\u9009\u9879\u6307\u5b9a\u5b83\u4eec\u4e4b\u95f4\u4f7f\u7528\u7684\u901a\u4fe1\u534f\u8bae\u3002\u76ee\u524dnc\u652f\u6301\u7684\u4ee3\u7406\u534f\u8bae\u5305\u62ec\u201c4\u201d\uff08SOCKS v.4\uff09\uff0c\u201c5\u201d\uff08SOCKS v.5\uff09\u548c\u201cconnect\u201d\uff08HTTPS proxy\uff09\u3002nc\u9ed8\u8ba4\u4f7f\u7528\u7684\u4ee3\u7406\u534f\u8bae\u662fSOCKS v.5\u3002 \u2751-x\uff0c\u6307\u5b9a\u76ee\u6807\u4ee3\u7406\u670d\u52a1\u5668\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u53f7\u3002\u6bd4\u5982\uff0c\u8981\u4eceKongming20\u8fde\u63a5\u5230ernest-laptop\u4e0a\u7684squid\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u5e76\u901a\u8fc7\u5b83\u6765\u8bbf\u95eewww.baidu.com\u7684Web\u670d\u52a1\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a $nc-x ernest-laptop:1080-X connect www.baidu.com 80 \u2751-z\uff0c\u626b\u63cf\u76ee\u6807\u673a\u5668\u4e0a\u7684\u67d0\u4e2a\u6216\u67d0\u4e9b\u670d\u52a1\u662f\u5426\u5f00\u542f\uff08\u7aef\u53e3\u626b\u63cf\uff09\u3002\u6bd4\u5982\uff0c\u8981\u626b\u63cf\u673a\u5668ernest-laptop\u4e0a\u7aef\u53e3\u53f7\u572820\uff5e50\u4e4b\u95f4\u7684\u670d\u52a1\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a $nc-z ernest-laptop 20-50 netstat # netstat\u662f\u4e00\u4e2a\u529f\u80fd\u5f88\u5f3a\u5927\u7684\u7f51\u7edc\u4fe1\u606f\u7edf\u8ba1\u5de5\u5177\u3002\u5b83\u53ef\u4ee5\u6253\u5370\u672c\u5730\u7f51\u5361\u63a5\u53e3\u4e0a\u7684\u5168\u90e8\u8fde\u63a5\u3001\u8def\u7531\u8868\u4fe1\u606f\u3001\u7f51\u5361\u63a5\u53e3\u4fe1\u606f\u7b49 \u2751-n\uff0c\u4f7f\u7528IP\u5730\u5740\u8868\u793a\u4e3b\u673a\uff0c\u800c\u4e0d\u662f\u4e3b\u673a\u540d\uff1b\u4f7f\u7528\u6570\u5b57\u8868\u793a\u7aef\u53e3\u53f7\uff0c\u800c\u4e0d\u662f\u670d\u52a1\u540d\u79f0\u3002 \u2751-a\uff0c\u663e\u793a\u7ed3\u679c\u4e2d\u4e5f\u5305\u542b\u76d1\u542csocket\u3002 \u2751-t\uff0c\u4ec5\u663e\u793aTCP\u8fde\u63a5\u3002 \u2751-r\uff0c\u663e\u793a\u8def\u7531\u4fe1\u606f\u3002 \u2751-i\uff0c\u663e\u793a\u7f51\u5361\u63a5\u53e3\u7684\u6570\u636e\u6d41\u91cf\u3002 \u2751-c\uff0c\u6bcf\u96941 s\u8f93\u51fa\u4e00\u6b21\u3002 \u2751-o\uff0c\u663e\u793asocket\u5b9a\u65f6\u5668\uff08\u6bd4\u5982\u4fdd\u6d3b\u5b9a\u65f6\u5668\uff09\u7684\u4fe1\u606f\u3002 \u2751-p\uff0c\u663e\u793asocket\u6240\u5c5e\u7684\u8fdb\u7a0b\u7684PID\u548c\u540d\u5b57\u3002 netstat\u7684\u6bcf\u884c\u8f93\u51fa\u90fd\u5305\u542b\u5982\u4e0b6\u4e2a\u5b57\u6bb5 \u2751Proto\uff0c\u534f\u8bae\u540d\u3002 \u2751Recv-Q\uff0csocket\u5185\u6838\u63a5\u6536\u7f13\u51b2\u533a\u4e2d\u5c1a\u672a\u88ab\u5e94\u7528\u7a0b\u5e8f\u8bfb\u53d6\u7684\u6570\u636e\u91cf\u3002 \u2751Send-Q\uff0c\u672a\u88ab\u5bf9\u65b9\u786e\u8ba4\u7684\u6570\u636e\u91cf\u3002\\ \u2751Local Address\uff0c\u672c\u7aef\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u53f7\u3002 \u2751Foreign Address\uff0c\u5bf9\u65b9\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u53f7\u3002 \u2751State\uff0csocket\u7684\u72b6\u6001\u3002\u5bf9\u4e8e\u65e0\u72b6\u6001\u534f\u8bae\uff0c\u6bd4\u5982UDP\u534f\u8bae\uff0c\u8fd9\u4e00\u5b57\u6bb5\u5c06\u663e\u793a\u4e3a\u7a7a\u3002\u800c\u5bf9\u9762\u5411\u8fde\u63a5\u7684\u534f\u8bae\u800c\u8a00\uff0cnetstat\u652f\u6301\u7684State\u5305\u62ecESTABLISHED\u3001SYN_SENT\u3001SYN_RCVD\u3001FIN_WAIT1\u3001FIN_WAIT2\u3001TIME_WAIT\u3001CLOSE\u3001CLOSE_WAIT\u3001LAST_ACK\u3001LISTEN\u3001CLOSING\u3001UNKNOWN\u3002\u5b83\u4eec\u7684\u542b\u4e49\u548c\u56fe3-8\u4e2d\u7684\u540c\u540d\u72b6\u6001\u4e00\u81f4 [1] \u3002 iperf # iperf\u662f\u4e00\u4e2a\u6d4b\u91cf\u7f51\u7edc\u72b6\u51b5\u7684\u5de5\u5177\uff0c-s\u9009\u9879\u8868\u793a\u5c06\u5176\u4f5c\u4e3a\u670d\u52a1\u5668\u8fd0\u884c\u3002 \u670d\u52a1\u7aef\uff1a\u6536\u5305\uff0c\u4f7f\u7528 -s \u53c2\u6570\u6307\u5b9a\uff0c iperf3 -s \u5ba2\u6237\u7aef\uff1a\u53d1\u5305\uff0c\u4f7f\u7528 -c xx.xx.xx.xx \u6765\u6307\u5b9a\u8981\u5f80\u54ea\u4e2a\u670d\u52a1\u7aef\u53d1\u5305\uff0c iperf3 -c 172.20.20.200 iperf3 \u8fd8\u6709\u66f4\u591a\u7684\u53c2\u6570\uff0c\u5176\u4e2d\u6709\u4e00\u4e9b\u662f\u5ba2\u6237\u7aef\u4e13\u7528\u7684\uff0c\u6709\u4e00\u4e9b\u662f\u670d\u52a1\u7aef\u4e13\u7528\u7684\uff0c\u4e5f\u6709\u4e00\u4e9b\u662f\u4e8c\u8005\u5171\u7528\u7684\u3002 \u5177\u4f53\u53ef\u4ee5\u524d\u5f80\u8fd9\u4e2a\u5730\u5740\uff0c\u8fdb\u884c\u67e5\u9605\uff1a https://www.cnblogs.com/yingsong/p/5682080.html \u5e38\u7528\u7684\u53c2\u6570\u6709 -u\uff1a\u53d1\u9001 UDP \u5305\uff0c\u4ec5\u5ba2\u6237\u7aef\u53ef\u7528\uff0c\u670d\u52a1\u7aef\u9ed8\u8ba4 tcp udp \u90fd\u53ef\u4ee5\u63a5\u6536 -b\uff1a\u6307\u5b9a\u53d1\u9001\u901f\u7387\uff08\u6bd4\u5982 100M\uff09\uff0c\u53d1\u9001\u7aef\u4e0d\u53d7\u9650\u901f\u5f71\u54cd\uff0c\u5982\u679c\u6709\u9650\u901f\uff0c\u4e5f\u53ea\u662f\u63a5\u6536\u7aef\u6709\u5f71\u54cd -p\uff1a\u540e\u63a5\u670d\u52a1\u7aef\u76d1\u542c\u7684\u7aef\u53e3 -i\uff1a\u8bbe\u7f6e\u5e26\u5bbd\u62a5\u544a\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u4e3a\u79d2 -t\uff1a\u8bbe\u7f6e\u6d4b\u8bd5\u7684\u65f6\u957f\uff0c\u5355\u4f4d\u4e3a\u79d2 -w\uff1a\u8bbe\u7f6etcp\u7a97\u53e3\u5927\u5c0f\uff0c\u4e00\u822c\u53ef\u4ee5\u4e0d\u7528\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u5373\u53ef -B\uff1a\u7ed1\u5b9a\u5ba2\u6237\u7aef\u7684ip\u5730\u5740 -4\uff1a\u6307\u5b9a ipv4 -n\uff1a\u6307\u5b9a\u4f20\u8f93\u7684\u5b57\u8282\u6570 -f\uff1a\u683c\u5f0f\u5316\u5e26\u5bbd\u6570\u8f93\u51fa\uff0c\u540e\u63a5\u5355\u4f4d\uff0c\u6bd4\u5982 K\uff0cM --get-server-output\uff1a\u5728\u5ba2\u6237\u7aef\u76f4\u63a5\u83b7\u53d6\u670d\u52a1\u7aef\u8f93\u51fa\u7684\u7ed3\u679c iperf3 \u7684\u8f93\u51fa\u7ed3\u679c\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b \u4e00\u7c7b\u662f\uff0c\u8be6\u7ec6\u7684\u5e26\u5bbd\u6570\u636e \u4e00\u7c7b\u662f\uff0c\u6700\u7ec8\u7684\u5e26\u5bbd\u6570\u636e \u5982\u679c\u4f60\u50cf\u6211\u4e00\u6837\u52a0\u4e0a --get-server-output \uff0c\u53ef\u4ee5\u770b\u5230\u670d\u52a1\u7aef\u8f93\u51fa\u7684\u62a5\u544a\u3002 \u63a5\u4e0b\u6765\u770b\u4e00\u4e0b\uff0c\u8f93\u51fa\u7684\u62a5\u544a\u6709\u54ea\u4e9b\u5185\u5bb9\u3002 \u7b2c\u4e00\u5217 Interval\uff1a\u6d4b\u8bd5\u7684\u65f6\u957f \u7b2c\u4e8c\u5217 Transfer\uff1a\u5728 Interval \u65f6\u957f\u91cc\uff0c\u4f20\u8f93\u7684\u6570\u636e\u91cf \u7b2c\u4e09\u5217 Bitrate\uff1a\u4f20\u8f93\u901f\u7387 \u7b2c\u56db\u5217 Jitter\uff1a\u7f51\u7edc\u6296\u52a8\uff0c\u8fde\u7eed\u53d1\u9001\u6570\u636e\u5305\u65f6\u5ef6\u5dee\u503c\u7684\u5e73\u5747\u503c\uff0c\u8d8a\u5c0f\u8bf4\u660e\u7f51\u7edc\u8d28\u91cf\u8d8a\u597d \u7b2c\u4e94\u5217 Lost/Total Datagrams\uff1a\u4e22\u5931\u7684\u6570\u636e\u5305\u4e0e\u53d1\u9001\u7684\u603b\u6570\u636e\u5305 lsof # lsof\uff08list open file\uff09\u662f\u4e00\u4e2a\u5217\u51fa\u5f53\u524d\u7cfb\u7edf\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u5de5\u5177\u3002 -i\uff0c\u663e\u793asocket\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 -u\uff0c\u663e\u793a\u6307\u5b9a\u7528\u6237\u542f\u52a8\u7684\u6240\u6709\u8fdb\u7a0b\u6253\u5f00\u7684\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 -c\uff0c\u663e\u793a\u6307\u5b9a\u7684\u547d\u4ee4\u6253\u5f00\u7684\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 lsof-c websrv -p\uff0c\u663e\u793a\u6307\u5b9a\u8fdb\u7a0b\u6253\u5f00\u7684\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 -t\uff0c\u4ec5\u663e\u793a\u6253\u5f00\u4e86\u76ee\u6807\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u8fdb\u7a0b\u7684PID\u3002 lsof\u547d\u4ee4\u7684\u8f93\u51fa\u5185\u5bb9\u76f8\u5f53\u4e30\u5bcc\uff0c\u5176\u4e2d\u6bcf\u884c\u5185\u5bb9\u90fd\u5305\u542b\u5982\u4e0b\u5b57\u6bb5\uff1a \u2751COMMAND\uff0c\u6267\u884c\u7a0b\u5e8f\u6240\u4f7f\u7528\u7684\u7ec8\u7aef\u547d\u4ee4\uff08\u9ed8\u8ba4\u4ec5\u663e\u793a\u524d9\u4e2a\u5b57\u7b26\uff09\u3002 \u2751PID\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u6240\u5c5e\u8fdb\u7a0b\u7684PID\u3002 \u2751USER\uff0c\u62e5\u6709\u8be5\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u7528\u6237\u7684\u7528\u6237\u540d\u3002 \u2751FD\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u63cf\u8ff0\u3002\u5176\u4e2dcwd\u8868\u793a\u8fdb\u7a0b\u7684\u5de5\u4f5c\u76ee\u5f55\uff0crtd\u8868\u793a\u7528\u6237\u7684\u6839\u76ee\u5f55\uff0ctxt\u8868\u793a\u8fdb\u7a0b\u8fd0\u884c\u7684\u7a0b\u5e8f\u4ee3\u7801\uff0cmem\u8868\u793a\u76f4\u63a5\u6620\u5c04\u5230\u5185\u5b58\u4e2d\u7684\u6587\u4ef6\uff08\u672c\u4f8b\u4e2d\u90fd\u662f\u52a8\u6001\u5e93\uff09\u3002\u6709\u7684FD\u662f\u4ee5\u201c\u6570\u5b57+\u8bbf\u95ee\u6743\u9650\u201d\u8868\u793a\u7684\uff0c\u5176\u4e2d\u6570\u5b57\u662f\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u5177\u4f53\u6570\u503c\uff0c\u8bbf\u95ee\u6743\u9650\u5305\u62ecr\uff08\u53ef\u8bfb\uff09\u3001w\uff08\u53ef\u5199\uff09\u548cu\uff08\u53ef\u8bfb\u53ef\u5199\uff09\u3002\u5728\u672c\u4f8b\u4e2d\uff0c0u\u30011u\u30012u\u5206\u522b\u8868\u793a\u6807\u51c6\u8f93\u5165\u3001\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u8f93\u51fa\uff1b3u\u8868\u793a\u5904\u4e8eLISTEN\u72b6\u6001\u7684\u76d1\u542csocket\uff1b4u\u8868\u793aepoll\u5185\u6838\u4e8b\u4ef6\u8868\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u2751TYPE\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u7c7b\u578b\u3002\u5176\u4e2dDIR\u662f\u76ee\u5f55\uff0cREG\u662f\u666e\u901a\u6587\u4ef6\uff0cCHR\u662f\u5b57\u7b26\u8bbe\u5907\u6587\u4ef6\uff0cIPv4\u662fIPv4\u7c7b\u578b\u7684socket\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c0000\u662f\u672a\u77e5\u7c7b\u578b\u3002\u66f4\u591a\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u7c7b\u578b\u8bf7\u53c2\u8003lsof\u547d\u4ee4\u7684man\u624b\u518c\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002 \u2751DEVICE\uff0c\u6587\u4ef6\u6240\u5c5e\u8bbe\u5907\u3002\u5bf9\u4e8e\u5b57\u7b26\u8bbe\u5907\u548c\u5757\u8bbe\u5907\uff0c\u5176\u8868\u793a\u65b9\u6cd5\u662f\u201c\u4e3b\u8bbe\u5907\u53f7\uff0c\u6b21\u8bbe\u5907\u53f7\u201d\u3002\u7531\u4ee3\u7801\u6e05\u535517-1\u53ef\u89c1\uff0c\u6d4b\u8bd5\u673a\u5668\u4e0a\u7684\u7a0b\u5e8f\u6587\u4ef6\u548c\u52a8\u6001\u5e93\u90fd\u5b58\u653e\u5728\u8bbe\u5907\u201c8,3\u201d\u4e2d\u3002\u5176\u4e2d\uff0c\u201c8\u201d\u8868\u793a\u8fd9\u662f\u4e00\u4e2aSCSI\u786c\u76d8\uff1b\u201c3\u201d\u8868\u793a\u8fd9\u662f\u8be5\u786c\u76d8\u4e0a\u7684\u7b2c3\u4e2a\u5206\u533a\uff0c\u5373sda3\u3002websrv\u7a0b\u5e8f\u7684\u6807\u51c6\u8f93\u5165\u3001\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u5bf9\u5e94\u7684\u8bbe\u5907\u662f\u201c136,3\u201d\u3002 \u5176\u4e2d\uff0c\u201c136\u201d\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u4f2a\u7ec8\u7aef\uff1b\u201c3\u201d\u8868\u793a\u5b83\u662f\u7b2c3\u4e2a\u4f2a\u7ec8\u7aef\uff0c\u5373/dev/pts/3\u3002\u5173\u4e8e\u8bbe\u5907\u7f16\u53f7\u7684\u66f4\u591a\u7ec6\u8282\uff0c\u8bf7\u53c2\u8003\u6587\u6863http\uff1a// www.kernel.org/pub/linux/docs/lanana/device-list/devices-2.6.txt \u3002\u5bf9\u4e8eFIFO\u7c7b\u578b\u7684\u6587\u4ef6\uff0c\u6bd4\u5982\u7ba1\u9053\u548csocket\uff0c\u8be5\u5b57\u6bb5\u5c06\u663e\u793a\u4e00\u4e2a\u5185\u6838\u5f15\u7528\u76ee\u6807\u6587\u4ef6\u7684\u5730\u5740\uff0c\u6216\u8005\u662f\u5176i\u8282\u70b9\u53f7\u3002 \u2751SIZE/OFF\uff0c\u6587\u4ef6\u5927\u5c0f\u6216\u8005\u504f\u79fb\u503c\u3002\u5982\u679c\u8be5\u5b57\u6bb5\u663e\u793a\u4e3a\u201c0t*\u201d\u6216\u8005\u201c0x*\u201d\uff0c\u5c31\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u504f\u79fb\u503c\uff0c\u5426\u5219\u5c31\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u6587\u4ef6\u5927\u5c0f\u3002\u5bf9\u5b57\u7b26\u8bbe\u5907\u6216\u8005FIFO\u7c7b\u578b\u7684\u6587\u4ef6\u5b9a\u4e49\u6587\u4ef6\u5927\u5c0f\u6ca1\u6709\u610f\u4e49\uff0c\u6240\u4ee5\u8be5\u5b57\u6bb5\u5c06\u663e\u793a\u4e00\u4e2a\u504f\u79fb\u503c\u3002 \u2751NODE\uff0c\u6587\u4ef6\u7684i\u8282\u70b9\u53f7\u3002\u5bf9\u4e8esocket\uff0c\u5219\u663e\u793a\u4e3a\u534f\u8bae\u7c7b\u578b\uff0c\u6bd4\u5982\u201cTCP\u201d\u3002 \u2751NAME\uff0c\u6587\u4ef6\u7684\u540d\u5b57\u3002 strace # strace\u662f\u6d4b\u8bd5\u670d\u52a1\u5668\u6027\u80fd\u7684\u91cd\u8981\u5de5\u5177\u3002\u5b83\u8ddf\u8e2a\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u6267\u884c\u7684\u7cfb\u7edf\u8c03\u7528\u548c\u63a5\u6536\u5230\u7684\u4fe1\u53f7\uff0c\u5e76\u5c06\u7cfb\u7edf\u8c03\u7528\u540d\u3001\u53c2\u6570\u3001\u8fd4\u56de\u503c\u53ca\u4fe1\u53f7\u540d\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u6216\u8005\u6307\u5b9a\u7684\u6587\u4ef6\u3002 strace\u547d\u4ee4\u5e38\u7528\u7684\u9009\u9879\u5305\u62ec\uff1a \u2751-c\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u7cfb\u7edf\u8c03\u7528\u6267\u884c\u65f6\u95f4\u3001\u6267\u884c\u6b21\u6570\u548c\u51fa\u9519\u6b21\u6570\u3002 \u2751-f\uff0c\u8ddf\u8e2a\u7531fork\u8c03\u7528\u751f\u6210\u7684\u5b50\u8fdb\u7a0b\u3002 \u2751-t\uff0c\u5728\u8f93\u51fa\u7684\u6bcf\u4e00\u884c\u4fe1\u606f\u524d\u52a0\u4e0a\u65f6\u95f4\u4fe1\u606f\u3002 \u2751-e\uff0c\u6307\u5b9a\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u7528\u6765\u63a7\u5236\u5982\u4f55\u8ddf\u8e2a\u7cfb\u7edf\u8c03\u7528 \u25c6-e trace=set\uff0c\u53ea\u8ddf\u8e2a\u6307\u5b9a\u7684\u7cfb\u7edf\u8c03\u7528\u3002\u4f8b\u5982\uff0c-e trace=open\uff0cclose\uff0cread\uff0cwrite\u8868\u793a\u53ea\u8ddf\u8e2aopen\u3001close\u3001read\u548cwrite\u8fd9\u56db\u79cd\u7cfb\u7edf\u8c03\u7528\u3002 \u25c6-e trace=file\uff0c\u53ea\u8ddf\u8e2a\u4e0e\u6587\u4ef6\u64cd\u4f5c\u76f8\u5173\u7684\u7cfb\u7edf\u8c03\u7528\u3002 \u25c6-e trace=process\uff0c\u53ea\u8ddf\u8e2a\u4e0e\u8fdb\u7a0b\u63a7\u5236\u76f8\u5173\u7684\u7cfb\u7edf\u8c03\u7528\u3002 \u25c6-e trace=network\uff0c\u53ea\u8ddf\u8e2a\u4e0e\u7f51\u7edc\u76f8\u5173\u7684\u7cfb\u7edf\u8c03\u7528\u3002 \u25c6-e trace=signal\uff0c\u53ea\u8ddf\u8e2a\u4e0e\u4fe1\u53f7\u76f8\u5173\u7684\u7cfb\u7edf\u8c03\u7528\u3002 \u25c6-e trace=ipc\uff0c\u53ea\u8ddf\u8e2a\u4e0e\u8fdb\u7a0b\u95f4\u901a\u4fe1\u76f8\u5173\u7684\u7cfb\u7edf\u8c03\u7528\u3002 \u25c6-e signal=set\uff0c\u53ea\u8ddf\u8e2a\u6307\u5b9a\u7684\u4fe1\u53f7\u3002\u6bd4\u5982\uff0c-e signal=!SIGIO\u8868\u793a\u8ddf\u8e2a\u9664SIGIO\u4e4b\u5916\u7684\u6240\u6709\u4fe1\u53f7\u3002 \u25c6-e read=set\uff0c\u8f93\u51fa\u4ece\u6307\u5b9a\u6587\u4ef6\u4e2d\u8bfb\u5165\u7684\u6570\u636e\u3002 \u2751-o\uff0c\u5c06strace\u7684\u8f93\u51fa\u5199\u5165\u6307\u5b9a\u7684\u6587\u4ef6\u3002 strace\u547d\u4ee4\u5bf9\u4e0d\u540c\u7684\u53c2\u6570\u7c7b\u578b\u5c06\u6709\u4e0d\u540c\u7684\u8f93\u51fa\u65b9\u5f0f\uff0c \u2751\u5bf9\u4e8eC\u98ce\u683c\u7684\u5b57\u7b26\u4e32\uff0cstrace\u5c06\u8f93\u51fa\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u3002 \u2751\u5bf9\u4e8e\u7ed3\u6784\u4f53\uff0cstrace\u5c06\u7528\u201c{}\u201d\u8f93\u51fa\u8be5\u7ed3\u6784\u4f53\u7684\u6bcf\u4e2a\u5b57\u6bb5\uff0c\u5e76\u7528\u201c,\u201d\u5c06\u6bcf\u4e2a\u5b57\u6bb5\u9694\u5f00\u3002 \u2751\u5bf9\u4e8e\u4f4d\u96c6\u5408\u53c2\u6570\uff08\u6bd4\u5982\u4fe1\u53f7\u96c6\u7c7b\u578bsigset_t\uff09\uff0cstrace\u5c06\u7528\u201c[]\u201d\u8f93\u51fa\u8be5\u96c6\u5408\u4e2d\u6240\u6709\u88ab\u7f6e1\u7684\u4f4d\uff0c\u5e76\u7528\u7a7a\u683c\u5c06\u6bcf\u4e00\u9879\u9694\u5f00\u3002 $./websrv 127.0.0.1 13579 $ps-ef|grep websrv shuang 30526 29064 0 05:19 pts/7 00:00:00./websrv 127.0.0.1 13579 $sudo strace -p 30526 epoll_wait(4, vmstat # vmstat\u662fvirtual memory statistics\u7684\u7f29\u5199\uff0c\u5b83\u80fd\u5b9e\u65f6\u8f93\u51fa\u7cfb\u7edf\u7684\u5404\u79cd\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u6bd4\u5982\u8fdb\u7a0b\u4fe1\u606f\u3001\u5185\u5b58\u4f7f\u7528\u3001CPU\u4f7f\u7528\u7387\u4ee5\u53caI/O\u4f7f\u7528\u60c5\u51b5\u3002 vmstat\u547d\u4ee4\u5e38\u7528\u7684\u9009\u9879\u548c\u53c2\u6570\u5305\u62ec\uff1a \u2751-f\uff0c\u663e\u793a\u7cfb\u7edf\u81ea\u542f\u52a8\u4ee5\u6765\u6267\u884c\u7684fork\u6b21\u6570\u3002 \u2751-s\uff0c\u663e\u793a\u5185\u5b58\u76f8\u5173\u7684\u7edf\u8ba1\u4fe1\u606f\u4ee5\u53ca\u591a\u79cd\u7cfb\u7edf\u6d3b\u52a8\u7684\u6570\u91cf\uff08\u6bd4\u5982CPU\u4e0a\u4e0b\u6587\u5207\u6362\u6b21\u6570\uff09\u3002 \u2751-d\uff0c\u663e\u793a\u78c1\u76d8\u76f8\u5173\u7684\u7edf\u8ba1\u4fe1\u606f\u3002 \u2751-p\uff0c\u663e\u793a\u6307\u5b9a\u78c1\u76d8\u5206\u533a\u7684\u7edf\u8ba1\u4fe1\u606f\u3002 \u2751-S\uff0c\u4f7f\u7528\u6307\u5b9a\u7684\u5355\u4f4d\u6765\u663e\u793a\u3002\u53c2\u6570k\u3001K\u3001m\u3001M\u5206\u522b\u4ee3\u88681000\u30011024\u30011 000 000\u548c1 048 576\u5b57\u8282\u3002 \u2751delay\uff0c\u91c7\u6837\u95f4\u9694\uff08\u5355\u4f4d\u662fs\uff09\uff0c\u5373\u6bcf\u9694delay\u7684\u65f6\u95f4\u8f93\u51fa\u4e00\u6b21\u7edf\u8ba1\u4fe1\u606f\u3002 \u2751count\uff0c\u91c7\u6837\u6b21\u6570\uff0c\u5373\u5171\u8f93\u51facount\u6b21\u7edf\u8ba1\u4fe1\u606f\u3002 $vmstat 5 3#\u6bcf\u96945\u79d2\u8f93\u51fa\u4e00\u6b21\u7ed3\u679c\uff0c\u5171\u8f93\u51fa3\u6b21 procs-----------memory-------------swap-------io------system------cpu---- r b swpd free buff cache si so bi bo in cs us sy id wa 0 0 0 74864 48088 1486188 0 0 12 3 149 280 0 1 99 0 1 0 0 66548 48088 1494640 0 0 0 0 454 619 0 0 99 0 0 0 0 74608 48096 1486188 0 0 0 10 289 339 0 0 99 0 \u7b2c1\u884c\u8f93\u51fa\u662f\u81ea\u7cfb\u7edf\u542f\u52a8\u4ee5\u6765\u7684\u5e73\u5747\u7ed3\u679c\uff0c\u800c\u540e\u9762\u7684\u8f93\u51fa\u5219\u662f\u91c7\u6837\u95f4\u9694\u5185\u7684\u5e73\u5747\u7ed3\u679c\u3002vmstat\u7684\u6bcf\u6761\u8f93\u51fa\u90fd\u5305\u542b6\u4e2a\u5b57\u6bb5 \u2751procs\uff0c\u8fdb\u7a0b\u4fe1\u606f\u3002\u201cr\u201d\u8868\u793a\u7b49\u5f85\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u76ee\uff1b\u201cb\u201d\u8868\u793a\u5904\u4e8e\u4e0d\u53ef\u4e2d\u65ad\u7761\u7720\u72b6\u6001\u7684\u8fdb\u7a0b\u6570\u76ee\u3002 \u2751memory\uff0c\u5185\u5b58\u4fe1\u606f\uff0c\u5404\u9879\u7684\u5355\u4f4d\u90fd\u662f\u5343\u5b57\u8282\uff08KB\uff09\u3002\u201cswpd\u201d\u8868\u793a\u865a\u62df\u5185\u5b58\u7684\u4f7f\u7528\u6570\u91cf\u3002\u201cfree\u201d\u8868\u793a\u7a7a\u95f2\u5185\u5b58\u7684\u6570\u91cf\u3002\u201cbuff\u201d\u8868\u793a\u4f5c\u4e3a\u201cbuffer cache\u201d\u7684\u5185\u5b58\u6570\u91cf\u3002\u4ece\u78c1\u76d8\u8bfb\u5165\u7684\u6570\u636e\u53ef\u80fd\u88ab\u4fdd\u6301\u5728\u201cbuffer cache\u201d\u4e2d\uff0c\u4ee5\u4fbf\u4e0b\u4e00\u6b21\u5feb\u901f\u8bbf\u95ee\u3002\u201ccache\u201d\u8868\u793a\u4f5c\u4e3a\u201cpage cache\u201d\u7684\u5185\u5b58\u6570\u91cf\u3002\u5f85\u5199\u5165\u78c1\u76d8\u7684\u6570\u636e\u5c06\u9996\u5148\u88ab\u653e\u5230\u201cpage cache\u201d\u4e2d\uff0c\u7136\u540e\u7531\u78c1\u76d8\u4e2d\u65ad\u7a0b\u5e8f\u5199\u5165\u78c1\u76d8\u3002 \u2751swap\uff0c\u4ea4\u6362\u5206\u533a\uff08\u865a\u62df\u5185\u5b58\uff09\u7684\u4f7f\u7528\u4fe1\u606f\uff0c\u5404\u9879\u7684\u5355\u4f4d\u90fd\u662fKB/s\u3002\u201csi\u201d\u8868\u793a\u6570\u636e\u7531\u78c1\u76d8\u4ea4\u6362\u81f3\u5185\u5b58\u7684\u901f\u7387\uff1b\u201cso\u201d\u8868\u793a\u6570\u636e\u7531\u5185\u5b58\u4ea4\u6362\u81f3\u78c1\u76d8\u7684\u901f\u7387\u3002\u5982\u679c\u8fd9\u4e24\u4e2a\u503c\u7ecf\u5e38\u53d1\u751f\u53d8\u5316\uff0c\u5219\u8bf4\u660e\u5185\u5b58\u4e0d\u8db3\u3002 \u2751io\uff0c\u5757\u8bbe\u5907\u7684\u4f7f\u7528\u4fe1\u606f\uff0c\u5355\u4f4d\u662fblock/s\u3002\u201cbi\u201d\u8868\u793a\u4ece\u5757\u8bbe\u5907\u8bfb\u5165\u5757\u7684\u901f\u7387\uff1b\u201cbo\u201d\u8868\u793a\u5411\u5757\u8bbe\u5907\u5199\u5165\u5757\u7684\u901f\u7387\u3002 \u2751system\uff0c\u7cfb\u7edf\u4fe1\u606f\u3002\u201cin\u201d\u8868\u793a\u6bcf\u79d2\u53d1\u751f\u7684\u4e2d\u65ad\u6b21\u6570\uff1b\u201ccs\u201d\u8868\u793a\u6bcf\u79d2\u53d1\u751f\u7684\u4e0a\u4e0b\u6587\u5207\u6362\uff08\u8fdb\u7a0b\u5207\u6362\uff09\u6b21\u6570\u3002 \u2751cpu\uff0cCPU\u4f7f\u7528\u4fe1\u606f\u3002\u201cus\u201d\u8868\u793a\u7cfb\u7edf\u6240\u6709\u8fdb\u7a0b\u8fd0\u884c\u5728\u7528\u6237\u7a7a\u95f4\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\uff1b\u201csy\u201d\u8868\u793a\u7cfb\u7edf\u6240\u6709\u8fdb\u7a0b\u8fd0\u884c\u5728\u5185\u6838\u7a7a\u95f4\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\uff1b\u201cid\u201d\u8868\u793aCPU\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\uff1b\u201cwa\u201d\u8868\u793aCPU\u7b49\u5f85I/O\u4e8b\u4ef6\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\u3002 ifstat # fstat\u662finterface statistics\u7684\u7f29\u5199\uff0c\u5b83\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7f51\u7edc\u6d41\u91cf\u76d1\u6d4b\u5de5\u5177\u3002\u5176\u5e38\u7528\u7684\u9009\u9879\u548c\u53c2\u6570\u5305\u62ec\uff1a \u2751-a\uff0c\u76d1\u6d4b\u7cfb\u7edf\u4e0a\u7684\u6240\u6709\u7f51\u5361\u63a5\u53e3\u3002 \u2751-i\uff0c\u6307\u5b9a\u8981\u76d1\u6d4b\u7684\u7f51\u5361\u63a5\u53e3\u3002 \u2751-t\uff0c\u5728\u6bcf\u884c\u8f93\u51fa\u4fe1\u606f\u524d\u52a0\u4e0a\u65f6\u95f4\u6233\u3002 \u2751-b\uff0c\u4ee5Kbit/s\u4e3a\u5355\u4f4d\u663e\u793a\u6570\u636e\uff0c\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684KB/s\u3002 \u2751delay\uff0c\u91c7\u6837\u95f4\u9694\uff08\u5355\u4f4d\u662fs\uff09\uff0c\u5373\u6bcf\u9694delay\u7684\u65f6\u95f4\u8f93\u51fa\u4e00\u6b21\u7edf\u8ba1\u4fe1\u606f\u3002 \u2751count\uff0c\u91c7\u6837\u6b21\u6570\uff0c\u5373\u5171\u8f93\u51facount\u6b21\u7edf\u8ba1\u4fe1\u606f\u3002 $ifstat -a 2 5#\u6bcf\u96942\u79d2\u8f93\u51fa\u4e00\u6b21\u7ed3\u679c\uff0c\u5171\u8f93\u51fa5\u6b21 lo eth0 KB/s in KB/s out KB/s in KB/s out 8.62 8.62 124.71 515.74 7.46 7.46 125.50 510.30 1.79 1.79 126.87 497.57 8.10 8.10 127.82 526.13 9.53 9.53 130.10 516.78 mpstat # mpstat\u662fmulti-processor statistics\u7684\u7f29\u5199\uff0c\u5b83\u80fd\u5b9e\u65f6\u76d1\u6d4b\u591a\u5904\u7406\u5668\u7cfb\u7edf\u4e0a\u6bcf\u4e2aCPU\u7684\u4f7f\u7528\u60c5\u51b5\u3002mpstat\u547d\u4ee4\u548ciostat\u547d\u4ee4\u901a\u5e38\u90fd\u96c6\u6210\u5728\u5305sysstat\u4e2d\uff0c\u5b89\u88c5sysstat\u5373\u53ef\u83b7\u5f97\u8fd9\u4e24\u4e2a\u547d\u4ee4 mpstat[-P{|ALL}][interval[count]] \u9009\u9879P\u6307\u5b9a\u8981\u76d1\u63a7\u7684CPU\u53f7\uff080\uff5eCPU\u4e2a\u6570-1\uff09\uff0c\u5176\u503c\u201cALL\u201d\u8868\u793a\u76d1\u542c\u6240\u6709\u7684CPU\u3002 interval\u53c2\u6570\u662f\u91c7\u6837\u95f4\u9694\uff08\u5355\u4f4d\u662fs\uff09\uff0c\u5373\u6bcf\u9694interval\u7684\u65f6\u95f4\u8f93\u51fa\u4e00\u6b21\u7edf\u8ba1\u4fe1\u606f\u3002 count\u53c2\u6570\u662f\u91c7\u6837\u6b21\u6570\uff0c\u5373\u5171\u8f93\u51facount\u6b21\u7edf\u8ba1\u4fe1\u606f \u2751CPU\uff0c\u6307\u793a\u8be5\u6761\u4fe1\u606f\u662f\u54ea\u4e2aCPU\u7684\u6570\u636e\u3002\u201c0\u201d\u8868\u793a\u662f\u7b2c1\u4e2aCPU\u7684\u6570\u636e\uff0c\u201c1\u201d\u8868\u793a\u662f\u7b2c2\u4e2aCPU\u7684\u6570\u636e\uff0c\u201call\u201d\u5219\u8868\u793a\u662f\u8fd9\u4e24\u4e2aCPU\u6570\u636e\u7684\u5e73\u5747\u503c\u3002 \u2751%usr\uff0c\u9664\u4e86nice\u503c\u4e3a\u8d1f\u7684\u8fdb\u7a0b\uff0c\u7cfb\u7edf\u4e0a\u5176\u4ed6\u8fdb\u7a0b\u8fd0\u884c\u5728\u7528\u6237\u7a7a\u95f4\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\u3002 \u2751%nice\uff0cnice\u503c\u4e3a\u8d1f\u7684\u8fdb\u7a0b\u8fd0\u884c\u5728\u7528\u6237\u7a7a\u95f4\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\u3002 \u2751%sys\uff0c\u7cfb\u7edf\u4e0a\u6240\u6709\u8fdb\u7a0b\u8fd0\u884c\u5728\u5185\u6838\u7a7a\u95f4\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\uff0c\u4f46\u4e0d\u5305\u62ec\u786c\u4ef6\u548c\u8f6f\u4ef6\u4e2d\u65ad\u6d88\u8017\u7684CPU\u65f6\u95f4\u3002 \u2751%iowait\uff0cCPU\u7b49\u5f85\u78c1\u76d8\u64cd\u4f5c\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\u3002 \u2751%irq\uff0cCPU\u7528\u4e8e\u5904\u7406\u786c\u4ef6\u4e2d\u65ad\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\u3002 \u2751%soft\uff0cCPU\u7528\u4e8e\u5904\u7406\u8f6f\u4ef6\u4e2d\u65ad\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\u3002 \u2751%steal\uff0c\u4e00\u4e2a\u7269\u7406CPU\u53ef\u4ee5\u5305\u542b\u4e00\u5bf9\u865a\u62dfCPU\uff0c\u8fd9\u4e00\u5bf9\u865a\u62dfCPU\u7531\u8d85\u7ea7\u7ba1\u7406\u7a0b\u5e8f\u7ba1\u7406\u3002\u5f53\u8d85\u7ea7\u7ba1\u7406\u7a0b\u5e8f\u5728\u5904\u7406\u67d0\u4e2a\u865a\u62dfCPU\u65f6\uff0c\u53e6\u5916\u4e00\u4e2a\u865a\u62dfCPU\u5219\u5fc5\u987b\u7b49\u5f85\u5b83\u5904\u7406\u5b8c\u6210\u624d\u80fd\u8fd0\u884c\u3002\u8fd9\u90e8\u5206\u7b49\u5f85\u65f6\u95f4\u5c31\u662f\u6240\u8c13\u7684steal\u65f6\u95f4\u3002\u8be5\u5b57\u6bb5\u8868\u793asteal\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\u3002 \u2751%guest\uff0c\u8fd0\u884c\u865a\u62dfCPU\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\u3002 \u2751%idle\uff0c\u7cfb\u7edf\u7a7a\u95f2\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\u3002 misc # check socket port # sudo apt install iproute2 sudo ss -tulpn -t, --tcp: To see all TCP sockets -u, --udp: To see all UDP sockets -l, --listening: To see all listening sockets -p, processes: To see which processes are using sockets -n, --numeric: Use this option if you want to see a port number instead of service names sudo apt-get install net-tools sudo netstat \u2013tulnp -t, --tcp: To see all TCP sockets -u, --udp: To see all UDP sockets -l, --listening: To see all listening sockets -p, processes: To see which processes are using sockets -n, --numeric: Use this option if you want to see a port number instead of service names apt-get install lsof sudo lsof -nP -iTCP -sTCP:LISTEN Check open ports using the Nmap utility sudo apt install nmap sudo nmap \u2013sT \u2013p-65535 ip-address","title":"Network cmds"},{"location":"linux/network_cmds/#ip","text":"sudo apt install iproute2 ip -d link show","title":"ip"},{"location":"linux/network_cmds/#ifconfig","text":"ifconfig eth1 hw ether 00:01:9f:ef:66:77","title":"ifconfig"},{"location":"linux/network_cmds/#arp","text":"arp-d 192.168.1.109#\u5220\u9664Kongming20\u5bf9\u5e94\u7684ARP\u7f13\u5b58\u9879 arp-s 192.168.1.109 08:00:27:53:10:67#\u6dfb\u52a0Kongming20\u5bf9\u5e94\u7684ARP\u7f13\u5b58\u9879","title":"arp"},{"location":"linux/network_cmds/#tcpdump","text":"tcpdump\u662f\u4e00\u6b3e\u7ecf\u5178\u7684\u7f51\u7edc\u6293\u5305\u5de5\u5177\u3002 \u2751-n\uff0c\u4f7f\u7528IP\u5730\u5740\u8868\u793a\u4e3b\u673a\uff0c\u800c\u4e0d\u662f\u4e3b\u673a\u540d\uff1b\u4f7f\u7528\u6570\u5b57\u8868\u793a\u7aef\u53e3\u53f7\uff0c\u800c\u4e0d\u662f\u670d\u52a1\u540d\u79f0\u3002 \u2751-i\uff0c\u6307\u5b9a\u8981\u76d1\u542c\u7684\u7f51\u5361\u63a5\u53e3\u3002\u201c-i any\u201d\u8868\u793a\u6293\u53d6\u6240\u6709\u7f51\u5361\u63a5\u53e3\u4e0a\u7684\u6570\u636e\u5305\u3002 \u2751-v\uff0c\u8f93\u51fa\u4e00\u4e2a\u7a0d\u5fae\u8be6\u7ec6\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\uff0c\u663e\u793aIP\u6570\u636e\u5305\u4e2d\u7684TTL\u548cTOS\u4fe1\u606f\u3002 \u2751-t\uff0c\u4e0d\u6253\u5370\u65f6\u95f4\u6233\u3002 \u2751-e\uff0c\u663e\u793a\u4ee5\u592a\u7f51\u5e27\u5934\u90e8\u4fe1\u606f\u3002 \u2751-c\uff0c\u4ec5\u6293\u53d6\u6307\u5b9a\u6570\u91cf\u7684\u6570\u636e\u5305\u3002 \u2751-x\uff0c\u4ee5\u5341\u516d\u8fdb\u5236\u6570\u663e\u793a\u6570\u636e\u5305\u7684\u5185\u5bb9\uff0c\u4f46\u4e0d\u663e\u793a\u5305\u4e2d\u4ee5\u592a\u7f51\u5e27\u7684\u5934\u90e8\u4fe1\u606f\u3002 \u2751-X\uff0c\u4e0e-x\u9009\u9879\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u8fd8\u6253\u5370\u6bcf\u4e2a\u5341\u516d\u8fdb\u5236\u5b57\u8282\u5bf9\u5e94\u7684ASCII\u5b57\u7b26\u3002 \u2751-XX\uff0c\u4e0e-X\u76f8\u540c\uff0c\u4e0d\u8fc7\u8fd8\u6253\u5370\u4ee5\u592a\u7f51\u5e27\u7684\u5934\u90e8\u4fe1\u606f\u3002 \u2751-s\uff0c\u8bbe\u7f6e\u6293\u5305\u65f6\u7684\u6293\u53d6\u957f\u5ea6 \u2751-S\uff0c\u4ee5\u7edd\u5bf9\u503c\u6765\u663e\u793aTCP\u62a5\u6587\u6bb5\u7684\u5e8f\u53f7\uff0c\u800c\u4e0d\u662f\u76f8\u5bf9\u503c\u3002 \u2751-w\uff0c\u5c06tcpdump\u7684\u8f93\u51fa\u4ee5\u7279\u6b8a\u7684\u683c\u5f0f\u5b9a\u5411\u5230\u67d0\u4e2a\u6587\u4ef6\u3002 \u2751-r\uff0c\u4ece\u6587\u4ef6\u8bfb\u53d6\u6570\u636e\u5305\u4fe1\u606f\u5e76\u663e\u793a\u4e4b\u3002 \u2751\u7c7b\u578b\uff0c\u89e3\u91ca\u5176\u540e\u9762\u7d27\u8ddf\u7740\u7684\u53c2\u6570\u7684\u542b\u4e49\u3002tcpdump\u652f\u6301\u7684\u7c7b\u578b\u5305\u62echost\u3001net\u3001port\u548cportrange\u3002\u5b83\u4eec\u5206\u522b\u6307\u5b9a\u4e3b\u673a\u540d\uff08\u6216IP\u5730\u5740\uff09\uff0c\u7528CIDR\u65b9\u6cd5\u8868\u793a\u7684\u7f51\u7edc\u5730\u5740\uff0c\u7aef\u53e3\u53f7\u4ee5\u53ca\u7aef\u53e3\u8303\u56f4\u3002 $tcpdump net 1.2.3.0/24 \u2751\u65b9\u5411\uff0csrc\u6307\u5b9a\u6570\u636e\u5305\u7684\u53d1\u9001\u7aef\uff0cdst\u6307\u5b9a\u6570\u636e\u5305\u7684\u76ee\u7684\u7aef\u3002 $tcpdump dst port 13579 \u2751\u534f\u8bae\uff0c\u6307\u5b9a\u76ee\u6807\u534f\u8bae\u3002 tcpdump icmp cpdump\u652f\u6301\u7684\u903b\u8f91\u64cd\u4f5c\u7b26\u548c\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u903b\u8f91\u64cd\u4f5c\u7b26\u5b8c\u5168\u76f8\u540c\uff0c\u5305\u62ecand\uff08\u6216\u8005\uff06\uff06\uff09\u3001or\uff08\u6216\u8005||\uff09\u3001not\uff08\u6216\u8005!\uff09\u3002 `tcpdump -i eth0 -ent '(dst 192.168.1.109 and src 192.168.1.108)or (dst 192.168.1.108 and src 192.168.1.109)' tcpdump-i eth0 -nt -s 500 port domain \u7528\u201cport domain\u201d\u6765\u8fc7\u6ee4\u6570\u636e\u5305\uff0c\u8868\u793a\u53ea\u6293\u53d6\u4f7f\u7528domain\uff08\u57df\u540d\uff09\u670d\u52a1\u7684\u6570\u636e\u5305\uff0c\u5373DNS\u67e5\u8be2\u548c\u5e94\u7b54\u62a5\u6587\u3002 tcpdump -ntv -i eth0 icmp \u53ea\u6293\u53d6ICMP\u62a5\u6587 tcpdump\u8fd8\u5141\u8bb8\u76f4\u63a5\u4f7f\u7528\u6570\u636e\u5305\u4e2d\u7684\u90e8\u5206\u534f\u8bae\u5b57\u6bb5\u7684\u5185\u5bb9\u6765\u8fc7\u6ee4\u6570\u636e\u5305\u3002\u6bd4\u5982\uff0c\u4ec5\u6293\u53d6TCP\u540c\u6b65\u62a5\u6587\u6bb5\uff0c\u53ef\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4 tcpdump'tcp[13]\uff062!=0' tcpdump'tcp[tcpflags]\uff06tcp-syn!=0' tcpdump -vv -i eth1 '( vlan and ( ether[14:2] & 0xfff == 1000 or ether[14:2] & 0xfff == 501 ) ) and ( ip host 10.1.1.98 or ip host 10.1.1.99 )'","title":"tcpdump"},{"location":"linux/network_cmds/#dns","text":"Linux\u4f7f\u7528/etc/resolv.conf\u6587\u4ef6\u6765\u5b58\u653eDNS\u670d\u52a1\u5668\u7684IP\u5730\u5740\u3002 nameserver 219.239.26.42 nameserver 124.207.160.106 host\u547d\u4ee4\u4f7f\u7528DNS\u534f\u8bae\u548cDNS\u670d\u52a1\u5668\u901a\u4fe1\uff0c\u5176-t\u9009\u9879\u544a\u8bc9DNS\u534f\u8bae\u4f7f\u7528\u54ea\u79cd\u67e5\u8be2\u7c7b\u578b\u3002 $host-t A www.baidu.com www.baidu.com is an alias for www.a.shifen.com. www.a.shifen.com has address 119.75.217.56 www.a.shifen.com has address 119.75.218.77","title":"DNS"},{"location":"linux/network_cmds/#protocols","text":"/etc/protocols\u6587\u4ef6\u5b9a\u4e49\u4e86\u6240\u6709\u4e0a\u5c42\u534f\u8bae\u5bf9\u5e94\u7684protocol\u5b57\u6bb5\u7684\u6570\u503c\u3002\u5176\u4e2d\uff0cICMP\u662f1\uff0cTCP\u662f6\uff0cUDP\u662f17\u3002","title":"protocols"},{"location":"linux/network_cmds/#route","text":"Kernel IP routing table Destination Gateway Genmask Flags Metric Ref Use Iface default 192.168.1.1 0.0.0.0 UG 0 0 0 eth0 192.168.1.0*255.255.255.0 U 1 0 0 eth0 $sudo route add-host 192.168.1.109 dev eth0 $sudo route del-net 192.168.1.0 netmask 255.255.255.0 $sudo route del default $sudo route add default gw 192.168.1.109 dev eth0","title":"route"},{"location":"linux/network_cmds/#ip_forward","text":"echo 1\uff1e/proc/sys/net/ipv4/ip_forward","title":"ip_forward"},{"location":"linux/network_cmds/#icmp","text":"/proc/sys/net/ipv4/conf/all/send_redirects\u5185\u6838\u53c2\u6570\u6307\u5b9a\u662f\u5426\u5141\u8bb8\u53d1\u9001ICMP\u91cd\u5b9a\u5411\u62a5\u6587\uff0c /proc/sys/net/ipv4/conf/all/accept_redirects\u5185\u6838\u53c2\u6570\u5219\u6307\u5b9a\u662f\u5426\u5141\u8bb8\u63a5\u6536ICMP\u91cd\u5b9a\u5411\u62a5\u6587\u3002","title":"ICMP"},{"location":"linux/network_cmds/#tcp_port","text":"/etc/services","title":"tcp_port"},{"location":"linux/network_cmds/#iptables","text":"$sudo iptables -F $sudo iptables -I INPUT -p tcp --syn -i eth0 -j DROP \u4e22\u5f03\u6240\u6709\u63a5\u6536\u5230\u7684\u8fde\u63a5\u8bf7\u6c42","title":"iptables"},{"location":"linux/network_cmds/#sync_retries","text":"/proc/sys/net/ipv4/tcp_syn_retries","title":"sync_retries"},{"location":"linux/network_cmds/#nc","text":"nc\uff08netcat\uff09\u547d\u4ee4\u77ed\u5c0f\u7cbe\u5e72\u3001\u529f\u80fd\u5f3a\u5927\uff0c\u6709\u7740\u201c\u745e\u58eb\u519b\u5200\u201d\u7684\u7f8e\u8a89\u3002 \u4e3b\u8981\u88ab\u7528\u6765\u5feb\u901f\u6784\u5efa\u7f51\u7edc\u8fde\u63a5\u3002\u6211\u4eec\u53ef\u4ee5\u8ba9\u5b83\u4ee5\u670d\u52a1\u5668\u65b9\u5f0f\u8fd0\u884c\uff0c\u76d1\u542c\u67d0\u4e2a\u7aef\u53e3\u5e76\u63a5\u6536\u5ba2\u6237\u8fde\u63a5\uff0c\u56e0\u6b64\u5b83\u53ef\u7528\u6765\u8c03\u8bd5\u5ba2\u6237\u7aef\u7a0b\u5e8f\u3002 \u4f7f\u4e4b\u4ee5\u5ba2\u6237\u7aef\u65b9\u5f0f\u8fd0\u884c\uff0c\u5411\u670d\u52a1\u5668\u53d1\u8d77\u8fde\u63a5\u5e76\u6536\u53d1\u6570\u636e\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u7528\u6765\u8c03\u8bd5\u670d\u52a1\u5668\u7a0b\u5e8f\uff0c\u6b64\u65f6\u5b83\u6709\u70b9\u50cftelnet\u7a0b\u5e8f\u3002 nc\u547d\u4ee4\u5e38\u7528\u7684\u9009\u9879\u5305\u62ec\uff1a \u2751-i\uff0c\u8bbe\u7f6e\u6570\u636e\u5305\u4f20\u9001\u7684\u65f6\u95f4\u95f4\u9694\u3002 \u2751-l\uff0c\u4ee5\u670d\u52a1\u5668\u65b9\u5f0f\u8fd0\u884c\uff0c\u76d1\u542c\u6307\u5b9a\u7684\u7aef\u53e3\u3002nc\u547d\u4ee4\u9ed8\u8ba4\u4ee5\u5ba2\u6237\u7aef\u65b9\u5f0f\u8fd0\u884c\u3002 \u2751-k\uff0c\u91cd\u590d\u63a5\u53d7\u5e76\u5904\u7406\u67d0\u4e2a\u7aef\u53e3\u4e0a\u7684\u6240\u6709\u8fde\u63a5\uff0c\u5fc5\u987b\u4e0e-l\u9009\u9879\u4e00\u8d77\u4f7f\u7528\u3002 \u2751-n\uff0c\u4f7f\u7528IP\u5730\u5740\u8868\u793a\u4e3b\u673a\uff0c\u800c\u4e0d\u662f\u4e3b\u673a\u540d\uff1b\u4f7f\u7528\u6570\u5b57\u8868\u793a\u7aef\u53e3\u53f7\uff0c\u800c\u4e0d\u662f\u670d\u52a1\u540d\u79f0\u3002 \u2751-p\uff0c\u5f53nc\u547d\u4ee4\u4ee5\u5ba2\u6237\u7aef\u65b9\u5f0f\u8fd0\u884c\u65f6\uff0c\u5f3a\u5236\u5176\u4f7f\u7528\u6307\u5b9a\u7684\u7aef\u53e3\u53f7\u30023.4.2\u5c0f\u8282\u4e2d\u6211\u4eec\u5c31\u66fe\u4f7f\u7528\u8fc7\u8be5\u9009\u9879\u3002 \u2751-s\uff0c\u8bbe\u7f6e\u672c\u5730\u4e3b\u673a\u53d1\u9001\u51fa\u7684\u6570\u636e\u5305\u7684IP\u5730\u5740\u3002 \u2751-C\uff0c\u5c06CR\u548cLF\u4e24\u4e2a\u5b57\u7b26\u4f5c\u4e3a\u884c\u7ed3\u675f\u7b26\u3002 \u2751-U\uff0c\u4f7f\u7528UNIX\u672c\u5730\u57df\u534f\u8bae\u901a\u4fe1\u3002 \u2751-u\uff0c\u4f7f\u7528UDP\u534f\u8bae\u3002nc\u547d\u4ee4\u9ed8\u8ba4\u4f7f\u7528\u7684\u4f20\u8f93\u5c42\u534f\u8bae\u662fTCP\u534f\u8bae\u3002 \u2751-w\uff0c\u5982\u679cnc\u5ba2\u6237\u7aef\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u5185\u672a\u68c0\u6d4b\u5230\u4efb\u4f55\u8f93\u5165\uff0c\u5219\u9000\u51fa\u3002 \u2751-X\uff0c\u5f53nc\u5ba2\u6237\u7aef\u548c\u4ee3\u7406\u670d\u52a1\u5668\u901a\u4fe1\u65f6\uff0c\u8be5\u9009\u9879\u6307\u5b9a\u5b83\u4eec\u4e4b\u95f4\u4f7f\u7528\u7684\u901a\u4fe1\u534f\u8bae\u3002\u76ee\u524dnc\u652f\u6301\u7684\u4ee3\u7406\u534f\u8bae\u5305\u62ec\u201c4\u201d\uff08SOCKS v.4\uff09\uff0c\u201c5\u201d\uff08SOCKS v.5\uff09\u548c\u201cconnect\u201d\uff08HTTPS proxy\uff09\u3002nc\u9ed8\u8ba4\u4f7f\u7528\u7684\u4ee3\u7406\u534f\u8bae\u662fSOCKS v.5\u3002 \u2751-x\uff0c\u6307\u5b9a\u76ee\u6807\u4ee3\u7406\u670d\u52a1\u5668\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u53f7\u3002\u6bd4\u5982\uff0c\u8981\u4eceKongming20\u8fde\u63a5\u5230ernest-laptop\u4e0a\u7684squid\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u5e76\u901a\u8fc7\u5b83\u6765\u8bbf\u95eewww.baidu.com\u7684Web\u670d\u52a1\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a $nc-x ernest-laptop:1080-X connect www.baidu.com 80 \u2751-z\uff0c\u626b\u63cf\u76ee\u6807\u673a\u5668\u4e0a\u7684\u67d0\u4e2a\u6216\u67d0\u4e9b\u670d\u52a1\u662f\u5426\u5f00\u542f\uff08\u7aef\u53e3\u626b\u63cf\uff09\u3002\u6bd4\u5982\uff0c\u8981\u626b\u63cf\u673a\u5668ernest-laptop\u4e0a\u7aef\u53e3\u53f7\u572820\uff5e50\u4e4b\u95f4\u7684\u670d\u52a1\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a $nc-z ernest-laptop 20-50","title":"nc"},{"location":"linux/network_cmds/#netstat","text":"netstat\u662f\u4e00\u4e2a\u529f\u80fd\u5f88\u5f3a\u5927\u7684\u7f51\u7edc\u4fe1\u606f\u7edf\u8ba1\u5de5\u5177\u3002\u5b83\u53ef\u4ee5\u6253\u5370\u672c\u5730\u7f51\u5361\u63a5\u53e3\u4e0a\u7684\u5168\u90e8\u8fde\u63a5\u3001\u8def\u7531\u8868\u4fe1\u606f\u3001\u7f51\u5361\u63a5\u53e3\u4fe1\u606f\u7b49 \u2751-n\uff0c\u4f7f\u7528IP\u5730\u5740\u8868\u793a\u4e3b\u673a\uff0c\u800c\u4e0d\u662f\u4e3b\u673a\u540d\uff1b\u4f7f\u7528\u6570\u5b57\u8868\u793a\u7aef\u53e3\u53f7\uff0c\u800c\u4e0d\u662f\u670d\u52a1\u540d\u79f0\u3002 \u2751-a\uff0c\u663e\u793a\u7ed3\u679c\u4e2d\u4e5f\u5305\u542b\u76d1\u542csocket\u3002 \u2751-t\uff0c\u4ec5\u663e\u793aTCP\u8fde\u63a5\u3002 \u2751-r\uff0c\u663e\u793a\u8def\u7531\u4fe1\u606f\u3002 \u2751-i\uff0c\u663e\u793a\u7f51\u5361\u63a5\u53e3\u7684\u6570\u636e\u6d41\u91cf\u3002 \u2751-c\uff0c\u6bcf\u96941 s\u8f93\u51fa\u4e00\u6b21\u3002 \u2751-o\uff0c\u663e\u793asocket\u5b9a\u65f6\u5668\uff08\u6bd4\u5982\u4fdd\u6d3b\u5b9a\u65f6\u5668\uff09\u7684\u4fe1\u606f\u3002 \u2751-p\uff0c\u663e\u793asocket\u6240\u5c5e\u7684\u8fdb\u7a0b\u7684PID\u548c\u540d\u5b57\u3002 netstat\u7684\u6bcf\u884c\u8f93\u51fa\u90fd\u5305\u542b\u5982\u4e0b6\u4e2a\u5b57\u6bb5 \u2751Proto\uff0c\u534f\u8bae\u540d\u3002 \u2751Recv-Q\uff0csocket\u5185\u6838\u63a5\u6536\u7f13\u51b2\u533a\u4e2d\u5c1a\u672a\u88ab\u5e94\u7528\u7a0b\u5e8f\u8bfb\u53d6\u7684\u6570\u636e\u91cf\u3002 \u2751Send-Q\uff0c\u672a\u88ab\u5bf9\u65b9\u786e\u8ba4\u7684\u6570\u636e\u91cf\u3002\\ \u2751Local Address\uff0c\u672c\u7aef\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u53f7\u3002 \u2751Foreign Address\uff0c\u5bf9\u65b9\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u53f7\u3002 \u2751State\uff0csocket\u7684\u72b6\u6001\u3002\u5bf9\u4e8e\u65e0\u72b6\u6001\u534f\u8bae\uff0c\u6bd4\u5982UDP\u534f\u8bae\uff0c\u8fd9\u4e00\u5b57\u6bb5\u5c06\u663e\u793a\u4e3a\u7a7a\u3002\u800c\u5bf9\u9762\u5411\u8fde\u63a5\u7684\u534f\u8bae\u800c\u8a00\uff0cnetstat\u652f\u6301\u7684State\u5305\u62ecESTABLISHED\u3001SYN_SENT\u3001SYN_RCVD\u3001FIN_WAIT1\u3001FIN_WAIT2\u3001TIME_WAIT\u3001CLOSE\u3001CLOSE_WAIT\u3001LAST_ACK\u3001LISTEN\u3001CLOSING\u3001UNKNOWN\u3002\u5b83\u4eec\u7684\u542b\u4e49\u548c\u56fe3-8\u4e2d\u7684\u540c\u540d\u72b6\u6001\u4e00\u81f4 [1] \u3002","title":"netstat"},{"location":"linux/network_cmds/#iperf","text":"iperf\u662f\u4e00\u4e2a\u6d4b\u91cf\u7f51\u7edc\u72b6\u51b5\u7684\u5de5\u5177\uff0c-s\u9009\u9879\u8868\u793a\u5c06\u5176\u4f5c\u4e3a\u670d\u52a1\u5668\u8fd0\u884c\u3002 \u670d\u52a1\u7aef\uff1a\u6536\u5305\uff0c\u4f7f\u7528 -s \u53c2\u6570\u6307\u5b9a\uff0c iperf3 -s \u5ba2\u6237\u7aef\uff1a\u53d1\u5305\uff0c\u4f7f\u7528 -c xx.xx.xx.xx \u6765\u6307\u5b9a\u8981\u5f80\u54ea\u4e2a\u670d\u52a1\u7aef\u53d1\u5305\uff0c iperf3 -c 172.20.20.200 iperf3 \u8fd8\u6709\u66f4\u591a\u7684\u53c2\u6570\uff0c\u5176\u4e2d\u6709\u4e00\u4e9b\u662f\u5ba2\u6237\u7aef\u4e13\u7528\u7684\uff0c\u6709\u4e00\u4e9b\u662f\u670d\u52a1\u7aef\u4e13\u7528\u7684\uff0c\u4e5f\u6709\u4e00\u4e9b\u662f\u4e8c\u8005\u5171\u7528\u7684\u3002 \u5177\u4f53\u53ef\u4ee5\u524d\u5f80\u8fd9\u4e2a\u5730\u5740\uff0c\u8fdb\u884c\u67e5\u9605\uff1a https://www.cnblogs.com/yingsong/p/5682080.html \u5e38\u7528\u7684\u53c2\u6570\u6709 -u\uff1a\u53d1\u9001 UDP \u5305\uff0c\u4ec5\u5ba2\u6237\u7aef\u53ef\u7528\uff0c\u670d\u52a1\u7aef\u9ed8\u8ba4 tcp udp \u90fd\u53ef\u4ee5\u63a5\u6536 -b\uff1a\u6307\u5b9a\u53d1\u9001\u901f\u7387\uff08\u6bd4\u5982 100M\uff09\uff0c\u53d1\u9001\u7aef\u4e0d\u53d7\u9650\u901f\u5f71\u54cd\uff0c\u5982\u679c\u6709\u9650\u901f\uff0c\u4e5f\u53ea\u662f\u63a5\u6536\u7aef\u6709\u5f71\u54cd -p\uff1a\u540e\u63a5\u670d\u52a1\u7aef\u76d1\u542c\u7684\u7aef\u53e3 -i\uff1a\u8bbe\u7f6e\u5e26\u5bbd\u62a5\u544a\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u4e3a\u79d2 -t\uff1a\u8bbe\u7f6e\u6d4b\u8bd5\u7684\u65f6\u957f\uff0c\u5355\u4f4d\u4e3a\u79d2 -w\uff1a\u8bbe\u7f6etcp\u7a97\u53e3\u5927\u5c0f\uff0c\u4e00\u822c\u53ef\u4ee5\u4e0d\u7528\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u5373\u53ef -B\uff1a\u7ed1\u5b9a\u5ba2\u6237\u7aef\u7684ip\u5730\u5740 -4\uff1a\u6307\u5b9a ipv4 -n\uff1a\u6307\u5b9a\u4f20\u8f93\u7684\u5b57\u8282\u6570 -f\uff1a\u683c\u5f0f\u5316\u5e26\u5bbd\u6570\u8f93\u51fa\uff0c\u540e\u63a5\u5355\u4f4d\uff0c\u6bd4\u5982 K\uff0cM --get-server-output\uff1a\u5728\u5ba2\u6237\u7aef\u76f4\u63a5\u83b7\u53d6\u670d\u52a1\u7aef\u8f93\u51fa\u7684\u7ed3\u679c iperf3 \u7684\u8f93\u51fa\u7ed3\u679c\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b \u4e00\u7c7b\u662f\uff0c\u8be6\u7ec6\u7684\u5e26\u5bbd\u6570\u636e \u4e00\u7c7b\u662f\uff0c\u6700\u7ec8\u7684\u5e26\u5bbd\u6570\u636e \u5982\u679c\u4f60\u50cf\u6211\u4e00\u6837\u52a0\u4e0a --get-server-output \uff0c\u53ef\u4ee5\u770b\u5230\u670d\u52a1\u7aef\u8f93\u51fa\u7684\u62a5\u544a\u3002 \u63a5\u4e0b\u6765\u770b\u4e00\u4e0b\uff0c\u8f93\u51fa\u7684\u62a5\u544a\u6709\u54ea\u4e9b\u5185\u5bb9\u3002 \u7b2c\u4e00\u5217 Interval\uff1a\u6d4b\u8bd5\u7684\u65f6\u957f \u7b2c\u4e8c\u5217 Transfer\uff1a\u5728 Interval \u65f6\u957f\u91cc\uff0c\u4f20\u8f93\u7684\u6570\u636e\u91cf \u7b2c\u4e09\u5217 Bitrate\uff1a\u4f20\u8f93\u901f\u7387 \u7b2c\u56db\u5217 Jitter\uff1a\u7f51\u7edc\u6296\u52a8\uff0c\u8fde\u7eed\u53d1\u9001\u6570\u636e\u5305\u65f6\u5ef6\u5dee\u503c\u7684\u5e73\u5747\u503c\uff0c\u8d8a\u5c0f\u8bf4\u660e\u7f51\u7edc\u8d28\u91cf\u8d8a\u597d \u7b2c\u4e94\u5217 Lost/Total Datagrams\uff1a\u4e22\u5931\u7684\u6570\u636e\u5305\u4e0e\u53d1\u9001\u7684\u603b\u6570\u636e\u5305","title":"iperf"},{"location":"linux/network_cmds/#lsof","text":"lsof\uff08list open file\uff09\u662f\u4e00\u4e2a\u5217\u51fa\u5f53\u524d\u7cfb\u7edf\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u5de5\u5177\u3002 -i\uff0c\u663e\u793asocket\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 -u\uff0c\u663e\u793a\u6307\u5b9a\u7528\u6237\u542f\u52a8\u7684\u6240\u6709\u8fdb\u7a0b\u6253\u5f00\u7684\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 -c\uff0c\u663e\u793a\u6307\u5b9a\u7684\u547d\u4ee4\u6253\u5f00\u7684\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 lsof-c websrv -p\uff0c\u663e\u793a\u6307\u5b9a\u8fdb\u7a0b\u6253\u5f00\u7684\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 -t\uff0c\u4ec5\u663e\u793a\u6253\u5f00\u4e86\u76ee\u6807\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u8fdb\u7a0b\u7684PID\u3002 lsof\u547d\u4ee4\u7684\u8f93\u51fa\u5185\u5bb9\u76f8\u5f53\u4e30\u5bcc\uff0c\u5176\u4e2d\u6bcf\u884c\u5185\u5bb9\u90fd\u5305\u542b\u5982\u4e0b\u5b57\u6bb5\uff1a \u2751COMMAND\uff0c\u6267\u884c\u7a0b\u5e8f\u6240\u4f7f\u7528\u7684\u7ec8\u7aef\u547d\u4ee4\uff08\u9ed8\u8ba4\u4ec5\u663e\u793a\u524d9\u4e2a\u5b57\u7b26\uff09\u3002 \u2751PID\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u6240\u5c5e\u8fdb\u7a0b\u7684PID\u3002 \u2751USER\uff0c\u62e5\u6709\u8be5\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u7528\u6237\u7684\u7528\u6237\u540d\u3002 \u2751FD\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u63cf\u8ff0\u3002\u5176\u4e2dcwd\u8868\u793a\u8fdb\u7a0b\u7684\u5de5\u4f5c\u76ee\u5f55\uff0crtd\u8868\u793a\u7528\u6237\u7684\u6839\u76ee\u5f55\uff0ctxt\u8868\u793a\u8fdb\u7a0b\u8fd0\u884c\u7684\u7a0b\u5e8f\u4ee3\u7801\uff0cmem\u8868\u793a\u76f4\u63a5\u6620\u5c04\u5230\u5185\u5b58\u4e2d\u7684\u6587\u4ef6\uff08\u672c\u4f8b\u4e2d\u90fd\u662f\u52a8\u6001\u5e93\uff09\u3002\u6709\u7684FD\u662f\u4ee5\u201c\u6570\u5b57+\u8bbf\u95ee\u6743\u9650\u201d\u8868\u793a\u7684\uff0c\u5176\u4e2d\u6570\u5b57\u662f\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u5177\u4f53\u6570\u503c\uff0c\u8bbf\u95ee\u6743\u9650\u5305\u62ecr\uff08\u53ef\u8bfb\uff09\u3001w\uff08\u53ef\u5199\uff09\u548cu\uff08\u53ef\u8bfb\u53ef\u5199\uff09\u3002\u5728\u672c\u4f8b\u4e2d\uff0c0u\u30011u\u30012u\u5206\u522b\u8868\u793a\u6807\u51c6\u8f93\u5165\u3001\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u8f93\u51fa\uff1b3u\u8868\u793a\u5904\u4e8eLISTEN\u72b6\u6001\u7684\u76d1\u542csocket\uff1b4u\u8868\u793aepoll\u5185\u6838\u4e8b\u4ef6\u8868\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u2751TYPE\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u7c7b\u578b\u3002\u5176\u4e2dDIR\u662f\u76ee\u5f55\uff0cREG\u662f\u666e\u901a\u6587\u4ef6\uff0cCHR\u662f\u5b57\u7b26\u8bbe\u5907\u6587\u4ef6\uff0cIPv4\u662fIPv4\u7c7b\u578b\u7684socket\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c0000\u662f\u672a\u77e5\u7c7b\u578b\u3002\u66f4\u591a\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u7c7b\u578b\u8bf7\u53c2\u8003lsof\u547d\u4ee4\u7684man\u624b\u518c\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002 \u2751DEVICE\uff0c\u6587\u4ef6\u6240\u5c5e\u8bbe\u5907\u3002\u5bf9\u4e8e\u5b57\u7b26\u8bbe\u5907\u548c\u5757\u8bbe\u5907\uff0c\u5176\u8868\u793a\u65b9\u6cd5\u662f\u201c\u4e3b\u8bbe\u5907\u53f7\uff0c\u6b21\u8bbe\u5907\u53f7\u201d\u3002\u7531\u4ee3\u7801\u6e05\u535517-1\u53ef\u89c1\uff0c\u6d4b\u8bd5\u673a\u5668\u4e0a\u7684\u7a0b\u5e8f\u6587\u4ef6\u548c\u52a8\u6001\u5e93\u90fd\u5b58\u653e\u5728\u8bbe\u5907\u201c8,3\u201d\u4e2d\u3002\u5176\u4e2d\uff0c\u201c8\u201d\u8868\u793a\u8fd9\u662f\u4e00\u4e2aSCSI\u786c\u76d8\uff1b\u201c3\u201d\u8868\u793a\u8fd9\u662f\u8be5\u786c\u76d8\u4e0a\u7684\u7b2c3\u4e2a\u5206\u533a\uff0c\u5373sda3\u3002websrv\u7a0b\u5e8f\u7684\u6807\u51c6\u8f93\u5165\u3001\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u5bf9\u5e94\u7684\u8bbe\u5907\u662f\u201c136,3\u201d\u3002 \u5176\u4e2d\uff0c\u201c136\u201d\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u4f2a\u7ec8\u7aef\uff1b\u201c3\u201d\u8868\u793a\u5b83\u662f\u7b2c3\u4e2a\u4f2a\u7ec8\u7aef\uff0c\u5373/dev/pts/3\u3002\u5173\u4e8e\u8bbe\u5907\u7f16\u53f7\u7684\u66f4\u591a\u7ec6\u8282\uff0c\u8bf7\u53c2\u8003\u6587\u6863http\uff1a// www.kernel.org/pub/linux/docs/lanana/device-list/devices-2.6.txt \u3002\u5bf9\u4e8eFIFO\u7c7b\u578b\u7684\u6587\u4ef6\uff0c\u6bd4\u5982\u7ba1\u9053\u548csocket\uff0c\u8be5\u5b57\u6bb5\u5c06\u663e\u793a\u4e00\u4e2a\u5185\u6838\u5f15\u7528\u76ee\u6807\u6587\u4ef6\u7684\u5730\u5740\uff0c\u6216\u8005\u662f\u5176i\u8282\u70b9\u53f7\u3002 \u2751SIZE/OFF\uff0c\u6587\u4ef6\u5927\u5c0f\u6216\u8005\u504f\u79fb\u503c\u3002\u5982\u679c\u8be5\u5b57\u6bb5\u663e\u793a\u4e3a\u201c0t*\u201d\u6216\u8005\u201c0x*\u201d\uff0c\u5c31\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u504f\u79fb\u503c\uff0c\u5426\u5219\u5c31\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u6587\u4ef6\u5927\u5c0f\u3002\u5bf9\u5b57\u7b26\u8bbe\u5907\u6216\u8005FIFO\u7c7b\u578b\u7684\u6587\u4ef6\u5b9a\u4e49\u6587\u4ef6\u5927\u5c0f\u6ca1\u6709\u610f\u4e49\uff0c\u6240\u4ee5\u8be5\u5b57\u6bb5\u5c06\u663e\u793a\u4e00\u4e2a\u504f\u79fb\u503c\u3002 \u2751NODE\uff0c\u6587\u4ef6\u7684i\u8282\u70b9\u53f7\u3002\u5bf9\u4e8esocket\uff0c\u5219\u663e\u793a\u4e3a\u534f\u8bae\u7c7b\u578b\uff0c\u6bd4\u5982\u201cTCP\u201d\u3002 \u2751NAME\uff0c\u6587\u4ef6\u7684\u540d\u5b57\u3002","title":"lsof"},{"location":"linux/network_cmds/#strace","text":"strace\u662f\u6d4b\u8bd5\u670d\u52a1\u5668\u6027\u80fd\u7684\u91cd\u8981\u5de5\u5177\u3002\u5b83\u8ddf\u8e2a\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u6267\u884c\u7684\u7cfb\u7edf\u8c03\u7528\u548c\u63a5\u6536\u5230\u7684\u4fe1\u53f7\uff0c\u5e76\u5c06\u7cfb\u7edf\u8c03\u7528\u540d\u3001\u53c2\u6570\u3001\u8fd4\u56de\u503c\u53ca\u4fe1\u53f7\u540d\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u6216\u8005\u6307\u5b9a\u7684\u6587\u4ef6\u3002 strace\u547d\u4ee4\u5e38\u7528\u7684\u9009\u9879\u5305\u62ec\uff1a \u2751-c\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u7cfb\u7edf\u8c03\u7528\u6267\u884c\u65f6\u95f4\u3001\u6267\u884c\u6b21\u6570\u548c\u51fa\u9519\u6b21\u6570\u3002 \u2751-f\uff0c\u8ddf\u8e2a\u7531fork\u8c03\u7528\u751f\u6210\u7684\u5b50\u8fdb\u7a0b\u3002 \u2751-t\uff0c\u5728\u8f93\u51fa\u7684\u6bcf\u4e00\u884c\u4fe1\u606f\u524d\u52a0\u4e0a\u65f6\u95f4\u4fe1\u606f\u3002 \u2751-e\uff0c\u6307\u5b9a\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u7528\u6765\u63a7\u5236\u5982\u4f55\u8ddf\u8e2a\u7cfb\u7edf\u8c03\u7528 \u25c6-e trace=set\uff0c\u53ea\u8ddf\u8e2a\u6307\u5b9a\u7684\u7cfb\u7edf\u8c03\u7528\u3002\u4f8b\u5982\uff0c-e trace=open\uff0cclose\uff0cread\uff0cwrite\u8868\u793a\u53ea\u8ddf\u8e2aopen\u3001close\u3001read\u548cwrite\u8fd9\u56db\u79cd\u7cfb\u7edf\u8c03\u7528\u3002 \u25c6-e trace=file\uff0c\u53ea\u8ddf\u8e2a\u4e0e\u6587\u4ef6\u64cd\u4f5c\u76f8\u5173\u7684\u7cfb\u7edf\u8c03\u7528\u3002 \u25c6-e trace=process\uff0c\u53ea\u8ddf\u8e2a\u4e0e\u8fdb\u7a0b\u63a7\u5236\u76f8\u5173\u7684\u7cfb\u7edf\u8c03\u7528\u3002 \u25c6-e trace=network\uff0c\u53ea\u8ddf\u8e2a\u4e0e\u7f51\u7edc\u76f8\u5173\u7684\u7cfb\u7edf\u8c03\u7528\u3002 \u25c6-e trace=signal\uff0c\u53ea\u8ddf\u8e2a\u4e0e\u4fe1\u53f7\u76f8\u5173\u7684\u7cfb\u7edf\u8c03\u7528\u3002 \u25c6-e trace=ipc\uff0c\u53ea\u8ddf\u8e2a\u4e0e\u8fdb\u7a0b\u95f4\u901a\u4fe1\u76f8\u5173\u7684\u7cfb\u7edf\u8c03\u7528\u3002 \u25c6-e signal=set\uff0c\u53ea\u8ddf\u8e2a\u6307\u5b9a\u7684\u4fe1\u53f7\u3002\u6bd4\u5982\uff0c-e signal=!SIGIO\u8868\u793a\u8ddf\u8e2a\u9664SIGIO\u4e4b\u5916\u7684\u6240\u6709\u4fe1\u53f7\u3002 \u25c6-e read=set\uff0c\u8f93\u51fa\u4ece\u6307\u5b9a\u6587\u4ef6\u4e2d\u8bfb\u5165\u7684\u6570\u636e\u3002 \u2751-o\uff0c\u5c06strace\u7684\u8f93\u51fa\u5199\u5165\u6307\u5b9a\u7684\u6587\u4ef6\u3002 strace\u547d\u4ee4\u5bf9\u4e0d\u540c\u7684\u53c2\u6570\u7c7b\u578b\u5c06\u6709\u4e0d\u540c\u7684\u8f93\u51fa\u65b9\u5f0f\uff0c \u2751\u5bf9\u4e8eC\u98ce\u683c\u7684\u5b57\u7b26\u4e32\uff0cstrace\u5c06\u8f93\u51fa\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u3002 \u2751\u5bf9\u4e8e\u7ed3\u6784\u4f53\uff0cstrace\u5c06\u7528\u201c{}\u201d\u8f93\u51fa\u8be5\u7ed3\u6784\u4f53\u7684\u6bcf\u4e2a\u5b57\u6bb5\uff0c\u5e76\u7528\u201c,\u201d\u5c06\u6bcf\u4e2a\u5b57\u6bb5\u9694\u5f00\u3002 \u2751\u5bf9\u4e8e\u4f4d\u96c6\u5408\u53c2\u6570\uff08\u6bd4\u5982\u4fe1\u53f7\u96c6\u7c7b\u578bsigset_t\uff09\uff0cstrace\u5c06\u7528\u201c[]\u201d\u8f93\u51fa\u8be5\u96c6\u5408\u4e2d\u6240\u6709\u88ab\u7f6e1\u7684\u4f4d\uff0c\u5e76\u7528\u7a7a\u683c\u5c06\u6bcf\u4e00\u9879\u9694\u5f00\u3002 $./websrv 127.0.0.1 13579 $ps-ef|grep websrv shuang 30526 29064 0 05:19 pts/7 00:00:00./websrv 127.0.0.1 13579 $sudo strace -p 30526 epoll_wait(4,","title":"strace"},{"location":"linux/network_cmds/#vmstat","text":"vmstat\u662fvirtual memory statistics\u7684\u7f29\u5199\uff0c\u5b83\u80fd\u5b9e\u65f6\u8f93\u51fa\u7cfb\u7edf\u7684\u5404\u79cd\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u6bd4\u5982\u8fdb\u7a0b\u4fe1\u606f\u3001\u5185\u5b58\u4f7f\u7528\u3001CPU\u4f7f\u7528\u7387\u4ee5\u53caI/O\u4f7f\u7528\u60c5\u51b5\u3002 vmstat\u547d\u4ee4\u5e38\u7528\u7684\u9009\u9879\u548c\u53c2\u6570\u5305\u62ec\uff1a \u2751-f\uff0c\u663e\u793a\u7cfb\u7edf\u81ea\u542f\u52a8\u4ee5\u6765\u6267\u884c\u7684fork\u6b21\u6570\u3002 \u2751-s\uff0c\u663e\u793a\u5185\u5b58\u76f8\u5173\u7684\u7edf\u8ba1\u4fe1\u606f\u4ee5\u53ca\u591a\u79cd\u7cfb\u7edf\u6d3b\u52a8\u7684\u6570\u91cf\uff08\u6bd4\u5982CPU\u4e0a\u4e0b\u6587\u5207\u6362\u6b21\u6570\uff09\u3002 \u2751-d\uff0c\u663e\u793a\u78c1\u76d8\u76f8\u5173\u7684\u7edf\u8ba1\u4fe1\u606f\u3002 \u2751-p\uff0c\u663e\u793a\u6307\u5b9a\u78c1\u76d8\u5206\u533a\u7684\u7edf\u8ba1\u4fe1\u606f\u3002 \u2751-S\uff0c\u4f7f\u7528\u6307\u5b9a\u7684\u5355\u4f4d\u6765\u663e\u793a\u3002\u53c2\u6570k\u3001K\u3001m\u3001M\u5206\u522b\u4ee3\u88681000\u30011024\u30011 000 000\u548c1 048 576\u5b57\u8282\u3002 \u2751delay\uff0c\u91c7\u6837\u95f4\u9694\uff08\u5355\u4f4d\u662fs\uff09\uff0c\u5373\u6bcf\u9694delay\u7684\u65f6\u95f4\u8f93\u51fa\u4e00\u6b21\u7edf\u8ba1\u4fe1\u606f\u3002 \u2751count\uff0c\u91c7\u6837\u6b21\u6570\uff0c\u5373\u5171\u8f93\u51facount\u6b21\u7edf\u8ba1\u4fe1\u606f\u3002 $vmstat 5 3#\u6bcf\u96945\u79d2\u8f93\u51fa\u4e00\u6b21\u7ed3\u679c\uff0c\u5171\u8f93\u51fa3\u6b21 procs-----------memory-------------swap-------io------system------cpu---- r b swpd free buff cache si so bi bo in cs us sy id wa 0 0 0 74864 48088 1486188 0 0 12 3 149 280 0 1 99 0 1 0 0 66548 48088 1494640 0 0 0 0 454 619 0 0 99 0 0 0 0 74608 48096 1486188 0 0 0 10 289 339 0 0 99 0 \u7b2c1\u884c\u8f93\u51fa\u662f\u81ea\u7cfb\u7edf\u542f\u52a8\u4ee5\u6765\u7684\u5e73\u5747\u7ed3\u679c\uff0c\u800c\u540e\u9762\u7684\u8f93\u51fa\u5219\u662f\u91c7\u6837\u95f4\u9694\u5185\u7684\u5e73\u5747\u7ed3\u679c\u3002vmstat\u7684\u6bcf\u6761\u8f93\u51fa\u90fd\u5305\u542b6\u4e2a\u5b57\u6bb5 \u2751procs\uff0c\u8fdb\u7a0b\u4fe1\u606f\u3002\u201cr\u201d\u8868\u793a\u7b49\u5f85\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u76ee\uff1b\u201cb\u201d\u8868\u793a\u5904\u4e8e\u4e0d\u53ef\u4e2d\u65ad\u7761\u7720\u72b6\u6001\u7684\u8fdb\u7a0b\u6570\u76ee\u3002 \u2751memory\uff0c\u5185\u5b58\u4fe1\u606f\uff0c\u5404\u9879\u7684\u5355\u4f4d\u90fd\u662f\u5343\u5b57\u8282\uff08KB\uff09\u3002\u201cswpd\u201d\u8868\u793a\u865a\u62df\u5185\u5b58\u7684\u4f7f\u7528\u6570\u91cf\u3002\u201cfree\u201d\u8868\u793a\u7a7a\u95f2\u5185\u5b58\u7684\u6570\u91cf\u3002\u201cbuff\u201d\u8868\u793a\u4f5c\u4e3a\u201cbuffer cache\u201d\u7684\u5185\u5b58\u6570\u91cf\u3002\u4ece\u78c1\u76d8\u8bfb\u5165\u7684\u6570\u636e\u53ef\u80fd\u88ab\u4fdd\u6301\u5728\u201cbuffer cache\u201d\u4e2d\uff0c\u4ee5\u4fbf\u4e0b\u4e00\u6b21\u5feb\u901f\u8bbf\u95ee\u3002\u201ccache\u201d\u8868\u793a\u4f5c\u4e3a\u201cpage cache\u201d\u7684\u5185\u5b58\u6570\u91cf\u3002\u5f85\u5199\u5165\u78c1\u76d8\u7684\u6570\u636e\u5c06\u9996\u5148\u88ab\u653e\u5230\u201cpage cache\u201d\u4e2d\uff0c\u7136\u540e\u7531\u78c1\u76d8\u4e2d\u65ad\u7a0b\u5e8f\u5199\u5165\u78c1\u76d8\u3002 \u2751swap\uff0c\u4ea4\u6362\u5206\u533a\uff08\u865a\u62df\u5185\u5b58\uff09\u7684\u4f7f\u7528\u4fe1\u606f\uff0c\u5404\u9879\u7684\u5355\u4f4d\u90fd\u662fKB/s\u3002\u201csi\u201d\u8868\u793a\u6570\u636e\u7531\u78c1\u76d8\u4ea4\u6362\u81f3\u5185\u5b58\u7684\u901f\u7387\uff1b\u201cso\u201d\u8868\u793a\u6570\u636e\u7531\u5185\u5b58\u4ea4\u6362\u81f3\u78c1\u76d8\u7684\u901f\u7387\u3002\u5982\u679c\u8fd9\u4e24\u4e2a\u503c\u7ecf\u5e38\u53d1\u751f\u53d8\u5316\uff0c\u5219\u8bf4\u660e\u5185\u5b58\u4e0d\u8db3\u3002 \u2751io\uff0c\u5757\u8bbe\u5907\u7684\u4f7f\u7528\u4fe1\u606f\uff0c\u5355\u4f4d\u662fblock/s\u3002\u201cbi\u201d\u8868\u793a\u4ece\u5757\u8bbe\u5907\u8bfb\u5165\u5757\u7684\u901f\u7387\uff1b\u201cbo\u201d\u8868\u793a\u5411\u5757\u8bbe\u5907\u5199\u5165\u5757\u7684\u901f\u7387\u3002 \u2751system\uff0c\u7cfb\u7edf\u4fe1\u606f\u3002\u201cin\u201d\u8868\u793a\u6bcf\u79d2\u53d1\u751f\u7684\u4e2d\u65ad\u6b21\u6570\uff1b\u201ccs\u201d\u8868\u793a\u6bcf\u79d2\u53d1\u751f\u7684\u4e0a\u4e0b\u6587\u5207\u6362\uff08\u8fdb\u7a0b\u5207\u6362\uff09\u6b21\u6570\u3002 \u2751cpu\uff0cCPU\u4f7f\u7528\u4fe1\u606f\u3002\u201cus\u201d\u8868\u793a\u7cfb\u7edf\u6240\u6709\u8fdb\u7a0b\u8fd0\u884c\u5728\u7528\u6237\u7a7a\u95f4\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\uff1b\u201csy\u201d\u8868\u793a\u7cfb\u7edf\u6240\u6709\u8fdb\u7a0b\u8fd0\u884c\u5728\u5185\u6838\u7a7a\u95f4\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\uff1b\u201cid\u201d\u8868\u793aCPU\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\uff1b\u201cwa\u201d\u8868\u793aCPU\u7b49\u5f85I/O\u4e8b\u4ef6\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\u3002","title":"vmstat"},{"location":"linux/network_cmds/#ifstat","text":"fstat\u662finterface statistics\u7684\u7f29\u5199\uff0c\u5b83\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7f51\u7edc\u6d41\u91cf\u76d1\u6d4b\u5de5\u5177\u3002\u5176\u5e38\u7528\u7684\u9009\u9879\u548c\u53c2\u6570\u5305\u62ec\uff1a \u2751-a\uff0c\u76d1\u6d4b\u7cfb\u7edf\u4e0a\u7684\u6240\u6709\u7f51\u5361\u63a5\u53e3\u3002 \u2751-i\uff0c\u6307\u5b9a\u8981\u76d1\u6d4b\u7684\u7f51\u5361\u63a5\u53e3\u3002 \u2751-t\uff0c\u5728\u6bcf\u884c\u8f93\u51fa\u4fe1\u606f\u524d\u52a0\u4e0a\u65f6\u95f4\u6233\u3002 \u2751-b\uff0c\u4ee5Kbit/s\u4e3a\u5355\u4f4d\u663e\u793a\u6570\u636e\uff0c\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684KB/s\u3002 \u2751delay\uff0c\u91c7\u6837\u95f4\u9694\uff08\u5355\u4f4d\u662fs\uff09\uff0c\u5373\u6bcf\u9694delay\u7684\u65f6\u95f4\u8f93\u51fa\u4e00\u6b21\u7edf\u8ba1\u4fe1\u606f\u3002 \u2751count\uff0c\u91c7\u6837\u6b21\u6570\uff0c\u5373\u5171\u8f93\u51facount\u6b21\u7edf\u8ba1\u4fe1\u606f\u3002 $ifstat -a 2 5#\u6bcf\u96942\u79d2\u8f93\u51fa\u4e00\u6b21\u7ed3\u679c\uff0c\u5171\u8f93\u51fa5\u6b21 lo eth0 KB/s in KB/s out KB/s in KB/s out 8.62 8.62 124.71 515.74 7.46 7.46 125.50 510.30 1.79 1.79 126.87 497.57 8.10 8.10 127.82 526.13 9.53 9.53 130.10 516.78","title":"ifstat"},{"location":"linux/network_cmds/#mpstat","text":"mpstat\u662fmulti-processor statistics\u7684\u7f29\u5199\uff0c\u5b83\u80fd\u5b9e\u65f6\u76d1\u6d4b\u591a\u5904\u7406\u5668\u7cfb\u7edf\u4e0a\u6bcf\u4e2aCPU\u7684\u4f7f\u7528\u60c5\u51b5\u3002mpstat\u547d\u4ee4\u548ciostat\u547d\u4ee4\u901a\u5e38\u90fd\u96c6\u6210\u5728\u5305sysstat\u4e2d\uff0c\u5b89\u88c5sysstat\u5373\u53ef\u83b7\u5f97\u8fd9\u4e24\u4e2a\u547d\u4ee4 mpstat[-P{|ALL}][interval[count]] \u9009\u9879P\u6307\u5b9a\u8981\u76d1\u63a7\u7684CPU\u53f7\uff080\uff5eCPU\u4e2a\u6570-1\uff09\uff0c\u5176\u503c\u201cALL\u201d\u8868\u793a\u76d1\u542c\u6240\u6709\u7684CPU\u3002 interval\u53c2\u6570\u662f\u91c7\u6837\u95f4\u9694\uff08\u5355\u4f4d\u662fs\uff09\uff0c\u5373\u6bcf\u9694interval\u7684\u65f6\u95f4\u8f93\u51fa\u4e00\u6b21\u7edf\u8ba1\u4fe1\u606f\u3002 count\u53c2\u6570\u662f\u91c7\u6837\u6b21\u6570\uff0c\u5373\u5171\u8f93\u51facount\u6b21\u7edf\u8ba1\u4fe1\u606f \u2751CPU\uff0c\u6307\u793a\u8be5\u6761\u4fe1\u606f\u662f\u54ea\u4e2aCPU\u7684\u6570\u636e\u3002\u201c0\u201d\u8868\u793a\u662f\u7b2c1\u4e2aCPU\u7684\u6570\u636e\uff0c\u201c1\u201d\u8868\u793a\u662f\u7b2c2\u4e2aCPU\u7684\u6570\u636e\uff0c\u201call\u201d\u5219\u8868\u793a\u662f\u8fd9\u4e24\u4e2aCPU\u6570\u636e\u7684\u5e73\u5747\u503c\u3002 \u2751%usr\uff0c\u9664\u4e86nice\u503c\u4e3a\u8d1f\u7684\u8fdb\u7a0b\uff0c\u7cfb\u7edf\u4e0a\u5176\u4ed6\u8fdb\u7a0b\u8fd0\u884c\u5728\u7528\u6237\u7a7a\u95f4\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\u3002 \u2751%nice\uff0cnice\u503c\u4e3a\u8d1f\u7684\u8fdb\u7a0b\u8fd0\u884c\u5728\u7528\u6237\u7a7a\u95f4\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\u3002 \u2751%sys\uff0c\u7cfb\u7edf\u4e0a\u6240\u6709\u8fdb\u7a0b\u8fd0\u884c\u5728\u5185\u6838\u7a7a\u95f4\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\uff0c\u4f46\u4e0d\u5305\u62ec\u786c\u4ef6\u548c\u8f6f\u4ef6\u4e2d\u65ad\u6d88\u8017\u7684CPU\u65f6\u95f4\u3002 \u2751%iowait\uff0cCPU\u7b49\u5f85\u78c1\u76d8\u64cd\u4f5c\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\u3002 \u2751%irq\uff0cCPU\u7528\u4e8e\u5904\u7406\u786c\u4ef6\u4e2d\u65ad\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\u3002 \u2751%soft\uff0cCPU\u7528\u4e8e\u5904\u7406\u8f6f\u4ef6\u4e2d\u65ad\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\u3002 \u2751%steal\uff0c\u4e00\u4e2a\u7269\u7406CPU\u53ef\u4ee5\u5305\u542b\u4e00\u5bf9\u865a\u62dfCPU\uff0c\u8fd9\u4e00\u5bf9\u865a\u62dfCPU\u7531\u8d85\u7ea7\u7ba1\u7406\u7a0b\u5e8f\u7ba1\u7406\u3002\u5f53\u8d85\u7ea7\u7ba1\u7406\u7a0b\u5e8f\u5728\u5904\u7406\u67d0\u4e2a\u865a\u62dfCPU\u65f6\uff0c\u53e6\u5916\u4e00\u4e2a\u865a\u62dfCPU\u5219\u5fc5\u987b\u7b49\u5f85\u5b83\u5904\u7406\u5b8c\u6210\u624d\u80fd\u8fd0\u884c\u3002\u8fd9\u90e8\u5206\u7b49\u5f85\u65f6\u95f4\u5c31\u662f\u6240\u8c13\u7684steal\u65f6\u95f4\u3002\u8be5\u5b57\u6bb5\u8868\u793asteal\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\u3002 \u2751%guest\uff0c\u8fd0\u884c\u865a\u62dfCPU\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\u3002 \u2751%idle\uff0c\u7cfb\u7edf\u7a7a\u95f2\u7684\u65f6\u95f4\u5360CPU\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u6bd4\u4f8b\u3002","title":"mpstat"},{"location":"linux/network_cmds/#misc","text":"","title":"misc"},{"location":"linux/network_cmds/#check-socket-port","text":"sudo apt install iproute2 sudo ss -tulpn -t, --tcp: To see all TCP sockets -u, --udp: To see all UDP sockets -l, --listening: To see all listening sockets -p, processes: To see which processes are using sockets -n, --numeric: Use this option if you want to see a port number instead of service names sudo apt-get install net-tools sudo netstat \u2013tulnp -t, --tcp: To see all TCP sockets -u, --udp: To see all UDP sockets -l, --listening: To see all listening sockets -p, processes: To see which processes are using sockets -n, --numeric: Use this option if you want to see a port number instead of service names apt-get install lsof sudo lsof -nP -iTCP -sTCP:LISTEN Check open ports using the Nmap utility sudo apt install nmap sudo nmap \u2013sT \u2013p-65535 ip-address","title":"check socket port"},{"location":"linux/process/","text":"fork # #include\uff1csys/types.h\uff1e #include\uff1cunistd.h\uff1e pid_t fork(void); \u8be5\u51fd\u6570\u7684\u6bcf\u6b21\u8c03\u7528\u90fd\u8fd4\u56de\u4e24\u6b21\uff0c\u5728\u7236\u8fdb\u7a0b\u4e2d\u8fd4\u56de\u7684\u662f\u5b50\u8fdb\u7a0b\u7684PID\uff0c\u5728\u5b50\u8fdb\u7a0b\u4e2d\u5219\u8fd4\u56de0\u3002 \u8be5\u8fd4\u56de\u503c\u662f\u540e\u7eed\u4ee3\u7801\u5224\u65ad\u5f53\u524d\u8fdb\u7a0b\u662f\u7236\u8fdb\u7a0b\u8fd8\u662f\u5b50\u8fdb\u7a0b\u7684\u4f9d\u636e\u3002 fork\u8c03\u7528\u5931\u8d25\u65f6\u8fd4\u56de-1\uff0c\u5e76\u8bbe\u7f6eerrno\u3002 fork\u51fd\u6570\u590d\u5236\u5f53\u524d\u8fdb\u7a0b\uff0c\u5728\u5185\u6838\u8fdb\u7a0b\u8868\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\u8868\u9879\u3002\u65b0\u7684\u8fdb\u7a0b\u8868\u9879\u6709\u5f88\u591a\u5c5e\u6027\u548c\u539f\u8fdb\u7a0b\u76f8\u540c\uff0c\u6bd4\u5982\u5806\u6307\u9488\u3001\u6808\u6307\u9488\u548c\u6807\u5fd7\u5bc4\u5b58\u5668\u7684\u503c\u3002\u4f46\u4e5f\u6709\u8bb8\u591a\u5c5e\u6027\u88ab\u8d4b\u4e88\u4e86\u65b0\u7684\u503c\uff0c\u6bd4\u5982\u8be5\u8fdb\u7a0b\u7684PPID\u88ab\u8bbe\u7f6e\u6210\u539f\u8fdb\u7a0b\u7684PID\uff0c\u4fe1\u53f7\u4f4d\u56fe\u88ab\u6e05\u9664 \u5b50\u8fdb\u7a0b\u7684\u4ee3\u7801\u4e0e\u7236\u8fdb\u7a0b\u5b8c\u5168\u76f8\u540c\uff0c\u540c\u65f6\u5b83\u8fd8\u4f1a\u590d\u5236\u7236\u8fdb\u7a0b\u7684\u6570\u636e\uff08\u5806\u6570\u636e\u3001\u6808\u6570\u636e\u548c\u9759\u6001\u6570\u636e\uff09\u3002\u6570\u636e\u7684\u590d\u5236\u91c7\u7528\u7684\u662f\u6240\u8c13\u7684\u5199\u65f6\u590d\u5236\uff08copy on writte\uff09\uff0c\u5373\u53ea\u6709\u5728\u4efb\u4e00\u8fdb\u7a0b\uff08\u7236\u8fdb\u7a0b\u6216\u5b50\u8fdb\u7a0b\uff09\u5bf9\u6570\u636e\u6267\u884c\u4e86\u5199\u64cd\u4f5c\u65f6\uff0c\u590d\u5236\u624d\u4f1a\u53d1\u751f\uff08\u5148\u662f\u7f3a\u9875\u4e2d\u65ad\uff0c\u7136\u540e\u64cd\u4f5c\u7cfb\u7edf\u7ed9\u5b50\u8fdb\u7a0b\u5206\u914d\u5185\u5b58\u5e76\u590d\u5236\u7236\u8fdb\u7a0b\u7684\u6570\u636e\uff09\u3002\\ exec # \u5728\u5b50\u8fdb\u7a0b\u4e2d\u6267\u884c\u5176\u4ed6\u7a0b\u5e8f\uff0c\u5373\u66ff\u6362\u5f53\u524d\u8fdb\u7a0b\u6620\u50cf #include\uff1cunistd.h\uff1e extern char**environ; int execl(const char*path,const char*arg,...); int execlp(const char*file,const char*arg,...); int execle(const char*path,const char*arg,...,char*const envp[]); int execv(const char*path,char*const argv[]); int execvp(const char*file,char*const argv[]); int execve(const char*path,char*const argv[],char*const envp[]); path\u53c2\u6570\u6307\u5b9a\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5b8c\u6574\u8def\u5f84\uff0c file\u53c2\u6570\u53ef\u4ee5\u63a5\u53d7\u6587\u4ef6\u540d\uff0c\u8be5\u6587\u4ef6\u7684\u5177\u4f53\u4f4d\u7f6e\u5219\u5728\u73af\u5883\u53d8\u91cfPATH\u4e2d\u641c\u5bfb\u3002 arg\u63a5\u53d7\u53ef\u53d8\u53c2\u6570\uff0c argv\u5219\u63a5\u53d7\u53c2\u6570\u6570\u7ec4\uff0c\u5b83\u4eec\u90fd\u4f1a\u88ab\u4f20\u9012\u7ed9\u65b0\u7a0b\u5e8f\uff08path\u6216file\u6307\u5b9a\u7684\u7a0b\u5e8f\uff09\u7684main\u51fd\u6570\u3002 envp\u53c2\u6570\u7528\u4e8e\u8bbe\u7f6e\u65b0\u7a0b\u5e8f\u7684\u73af\u5883\u53d8\u91cf\u3002\u5982\u679c\u672a\u8bbe\u7f6e\u5b83\uff0c\u5219\u65b0\u7a0b\u5e8f\u5c06\u4f7f\u7528\u7531\u5168\u5c40\u53d8\u91cfenviron\u6307\u5b9a\u7684\u73af\u5883\u53d8\u91cf\u3002 exec\u51fd\u6570\u662f\u4e0d\u8fd4\u56de\u7684\uff0c\u9664\u975e\u51fa\u9519\u3002\u5b83\u51fa\u9519\u65f6\u8fd4\u56de-1\uff0c\u5e76\u8bbe\u7f6eerrno\u3002\u5982\u679c\u6ca1\u51fa\u9519\uff0c\u5219\u539f\u7a0b\u5e8f\u4e2dexec\u8c03\u7528\u4e4b\u540e\u7684\u4ee3\u7801\u90fd\u4e0d\u4f1a\u6267\u884c\uff0c\u56e0\u4e3a\u6b64\u65f6\u539f\u7a0b\u5e8f\u5df2\u7ecf\u88abexec\u7684\u53c2\u6570\u6307\u5b9a\u7684\u7a0b\u5e8f\u5b8c\u5168\u66ff\u6362 exec\u51fd\u6570\u4e0d\u4f1a\u5173\u95ed\u539f\u7a0b\u5e8f\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u9664\u975e\u8be5\u6587\u4ef6\u63cf\u8ff0\u7b26\u88ab\u8bbe\u7f6e\u4e86\u7c7b\u4f3cSOCK_CLOEXEC\u7684\u5c5e\u6027 \u5904\u7406\u50f5\u5c38\u8fdb\u7a0b # \u51fd\u6570\u5728\u7236\u8fdb\u7a0b\u4e2d\u8c03\u7528\uff0c\u4ee5\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7684\u7ed3\u675f\uff0c\u5e76\u83b7\u53d6\u5b50\u8fdb\u7a0b\u7684\u8fd4\u56de\u4fe1\u606f\uff0c\u4ece\u800c\u907f\u514d\u4e86\u50f5\u5c38\u8fdb\u7a0b\u7684\u4ea7\u751f\uff0c\u6216\u8005\u4f7f\u5b50\u8fdb\u7a0b\u7684\u50f5\u5c38\u6001\u7acb\u5373\u7ed3\u675f #include\uff1csys/types.h\uff1e #include\uff1csys/wait.h\uff1e pid_t wait(int*stat_loc); pid_t waitpid(pid_t pid,int*stat_loc,int options); wait\u51fd\u6570\u5c06\u963b\u585e\u8fdb\u7a0b\uff0c\u76f4\u5230\u8be5\u8fdb\u7a0b\u7684\u67d0\u4e2a\u5b50\u8fdb\u7a0b\u7ed3\u675f\u8fd0\u884c\u4e3a\u6b62\u3002 \u5b83\u8fd4\u56de\u7ed3\u675f\u8fd0\u884c\u7684\u5b50\u8fdb\u7a0b\u7684PID\uff0c\u5e76\u5c06\u8be5\u5b50\u8fdb\u7a0b\u7684\u9000\u51fa\u72b6\u6001\u4fe1\u606f\u5b58\u50a8\u4e8estat_loc\u53c2\u6570\u6307\u5411\u7684\u5185\u5b58\u4e2d\u3002sys/wait.h\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u51e0\u4e2a\u5b8f\u6765\u5e2e\u52a9\u89e3\u91ca\u5b50\u8fdb\u7a0b\u7684\u9000\u51fa\u72b6\u6001\u4fe1\u606f **waitpid**\u53ea\u7b49\u5f85\u7531pid\u53c2\u6570\u6307\u5b9a\u7684\u5b50\u8fdb\u7a0b\u3002\u5982\u679cpid\u53d6\u503c\u4e3a-1\uff0c\u90a3\u4e48\u5b83\u5c31\u548cwait\u51fd\u6570\u76f8\u540c\uff0c\u5373\u7b49\u5f85\u4efb\u610f\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u7ed3\u675f\u3002 \u5f53options\u7684\u53d6\u503c\u662fWNOHANG\u65f6\uff0cwaitpid\u8c03\u7528\u5c06\u662f\u975e\u963b\u585e\u7684\u6307\u5b9a\u7684\u76ee\u6807\u5b50\u8fdb\u7a0b\u8fd8\u6ca1\u6709\u7ed3\u675f\u6216\u610f\u5916\u7ec8\u6b62\uff0c\u5219waitpid\u7acb\u5373\u8fd4\u56de0\uff1b\u5982\u679c\u76ee\u6807\u5b50\u8fdb\u7a0b\u786e\u5b9e\u6b63\u5e38\u9000\u51fa\u4e86\uff0c\u5219waitpid\u8fd4\u56de\u8be5\u5b50\u8fdb\u7a0b\u7684PID\u3002waitpid\u8c03\u7528\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 \u5f53\u4e00\u4e2a\u8fdb\u7a0b\u7ed3\u675f\u65f6\uff0c\u5b83\u5c06\u7ed9\u5176\u7236\u8fdb\u7a0b\u53d1\u9001\u4e00\u4e2aSIGCHLD\u4fe1\u53f7\u3002 \u5728\u7236\u8fdb\u7a0b\u4e2d\u6355\u83b7SIGCHLD\u4fe1\u53f7\uff0c\u5e76\u5728\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u4e2d\u8c03\u7528waitpid\u51fd\u6570\u4ee5\u201c\u5f7b\u5e95\u7ed3\u675f\u201d\u4e00\u4e2a\u5b50\u8fdb\u7a0b static void handle_child(int sig) { pid_t pid; int stat; while((pid=waitpid(-1,\uff06stat,WNOHANG))\uff1e0) { /*\u5bf9\u7ed3\u675f\u7684\u5b50\u8fdb\u7a0b\u8fdb\u884c\u5584\u540e\u5904\u7406*/ } } pipe # \u7ba1\u9053\u80fd\u5728\u7236\u3001\u5b50\u8fdb\u7a0b\u95f4\u4f20\u9012\u6570\u636e\uff0c\u5229\u7528\u7684\u662ffork\u8c03\u7528\u4e4b\u540e\u4e24\u4e2a\u7ba1\u9053\u6587\u4ef6\u63cf\u8ff0\u7b26\uff08fd[0]\u548cfd[1]\uff09\u90fd\u4fdd\u6301\u6253\u5f00\u3002 \u4fe1\u53f7\u91cf # \u4fe1\u53f7\u91cf\uff08Semaphore\uff09\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u53d8\u91cf\uff0c\u5b83\u53ea\u80fd\u53d6\u81ea\u7136\u6570\u503c\u5e76\u4e14\u53ea\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a\u7b49\u5f85\uff08wait\uff09\u548c\u4fe1\u53f7\uff08signal\uff09\u3002 \u5bf9\u4fe1\u53f7\u91cf\u7684\u8fd9\u4e24\u79cd\u64cd\u4f5c\u66f4\u5e38\u7528\u7684\u79f0\u547c\u662fP\u3001V\u64cd\u4f5c\u3002\u8fd9\u4e24\u4e2a\u5b57\u6bcd\u6765\u81ea\u4e8e\u8377\u5170\u8bed\u5355\u8bcdpasseren\uff08\u4f20\u9012\uff0c\u5c31\u597d\u50cf\u8fdb\u5165\u4e34\u754c\u533a\uff09\u548cvrijgeven\uff08\u91ca\u653e\uff0c\u5c31\u597d\u50cf\u9000\u51fa\u4e34\u754c\u533a\uff09\u3002\u5047\u8bbe\u6709\u4fe1\u53f7\u91cfSV\uff0c\u5219\u5bf9\u5b83\u7684P\u3001V\u64cd\u4f5c\u542b\u4e49\u5982\u4e0b\uff1a \u2751P(SV)\uff0c\u5982\u679cSV\u7684\u503c\u5927\u4e8e0\uff0c\u5c31\u5c06\u5b83\u51cf1\uff1b\u5982\u679cSV\u7684\u503c\u4e3a0\uff0c\u5219\u6302\u8d77\u8fdb\u7a0b\u7684\u6267\u884c\u3002 \u2751V(SV)\uff0c\u5982\u679c\u6709\u5176\u4ed6\u8fdb\u7a0b\u56e0\u4e3a\u7b49\u5f85SV\u800c\u6302\u8d77\uff0c\u5219\u5524\u9192\u4e4b\uff1b\u5982\u679c\u6ca1\u6709\uff0c\u5219\u5c06SV\u52a01\u3002 Linux\u4fe1\u53f7\u91cf\u7684API\u90fd\u5b9a\u4e49\u5728sys/sem.h\u5934\u6587\u4ef6\u4e2d\uff0c\u4e3b\u8981\u5305\u542b3\u4e2a\u7cfb\u7edf\u8c03\u7528\uff1asemget\u3001semop\u548csemctl\u3002 #include\uff1csys/sem.h\uff1e int semget(key_t key,int num_sems,int sem_flags); semget\u7cfb\u7edf\u8c03\u7528\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4fe1\u53f7\u91cf\u96c6\uff0c\u6216\u8005\u83b7\u53d6\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u4fe1\u53f7\u91cf\u96c6\u3002 key\u53c2\u6570\u662f\u4e00\u4e2a\u952e\u503c\uff0c\u7528\u6765\u6807\u8bc6\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684\u4fe1\u53f7\u91cf\u96c6\uff0c\u5c31\u50cf\u6587\u4ef6\u540d\u5168\u5c40\u552f\u4e00\u5730\u6807\u8bc6\u4e00\u4e2a\u6587\u4ef6\u4e00\u6837\u3002\u8981\u901a\u8fc7\u4fe1\u53f7\u91cf\u901a\u4fe1\u7684\u8fdb\u7a0b\u9700\u8981\u4f7f\u7528\u76f8\u540c\u7684\u952e\u503c\u6765\u521b\u5efa/\u83b7\u53d6\u8be5\u4fe1\u53f7\u91cf\u3002 \u56fe\u300013-2\u3000\u4f7f\u7528\u4fe1\u53f7\u91cf\u4fdd\u62a4\u5173\u952e\u4ee3\u7801\u6bb5 \u5728\u56fe13-2\u4e2d\uff0c\u5f53\u5173\u952e\u4ee3\u7801\u6bb5\u53ef\u7528\u65f6\uff0c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cfSV\u7684\u503c\u4e3a1\uff0c\u8fdb\u7a0bA\u548cB\u90fd\u6709\u673a\u4f1a\u8fdb\u5165\u5173\u952e\u4ee3\u7801\u6bb5\u3002\u5982\u679c\u6b64\u65f6\u8fdb\u7a0bA\u6267\u884c\u4e86P(SV)\u64cd\u4f5c\u5c06SV\u51cf1\uff0c\u5219\u8fdb\u7a0bB\u82e5\u518d\u6267\u884cP(SV)\u64cd\u4f5c\u5c31\u4f1a\u88ab\u6302\u8d77\u3002\u76f4\u5230\u8fdb\u7a0bA\u79bb\u5f00\u5173\u952e\u4ee3\u7801\u6bb5\uff0c\u5e76\u6267\u884cV(SV)\u64cd\u4f5c\u5c06SV\u52a01\uff0c\u5173\u952e\u4ee3\u7801\u6bb5\u624d\u91cd\u65b0\u53d8\u5f97\u53ef\u7528\u3002\u5982\u679c\u6b64\u65f6\u8fdb\u7a0bB\u56e0\u4e3a\u7b49\u5f85SV\u800c\u5904\u4e8e\u6302\u8d77\u72b6\u6001\uff0c\u5219\u5b83\u5c06\u88ab\u5524\u9192\uff0c\u5e76\u8fdb\u5165\u5173\u952e\u4ee3\u7801\u6bb5\u3002\u540c\u6837\uff0c\u8fd9\u65f6\u8fdb\u7a0bA\u5982\u679c\u518d\u6267\u884cP(SV)\u64cd\u4f5c\uff0c\u5219\u4e5f\u53ea\u80fd\u88ab\u64cd\u4f5c\u7cfb\u7edf\u6302\u8d77\u4ee5\u7b49\u5f85\u8fdb\u7a0bB\u9000\u51fa\u5173\u952e\u4ee3\u7801\u6bb5\u3002 \u6ce8\u610f\u3000\u4f7f\u7528\u4e00\u4e2a\u666e\u901a\u53d8\u91cf\u6765\u6a21\u62df\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u662f\u884c\u4e0d\u901a\u7684\uff0c\u56e0\u4e3a\u6240\u6709\u9ad8\u7ea7\u8bed\u8a00\u90fd\u6ca1\u6709\u4e00\u4e2a\u539f\u5b50\u64cd\u4f5c\u53ef\u4ee5\u540c\u65f6\u5b8c\u6210\u5982\u4e0b\u4e24\u6b65\u64cd\u4f5c\uff1a\u68c0\u6d4b\u53d8\u91cf\u662f\u5426\u4e3atrue/false\uff0c\u5982\u679c\u662f\u5219\u518d\u5c06\u5b83\u8bbe\u7f6e\u4e3afalse/true\u3002 Linux\u4fe1\u53f7\u91cf\u7684API\u90fd\u5b9a\u4e49\u5728sys/sem.h\u5934\u6587\u4ef6\u4e2d\uff0c\u4e3b\u8981\u5305\u542b3\u4e2a\u7cfb\u7edf\u8c03\u7528\uff1asemget\u3001semop\u548csemctl\u3002\u5b83\u4eec\u90fd\u88ab\u8bbe\u8ba1\u4e3a\u64cd\u4f5c\u4e00\u7ec4\u4fe1\u53f7\u91cf\uff0c\u5373\u4fe1\u53f7\u91cf\u96c6\uff0c\u800c\u4e0d\u662f\u5355\u4e2a\u4fe1\u53f7\u91cf\uff0c\u56e0\u6b64\u8fd9\u4e9b\u63a5\u53e3\u770b\u4e0a\u53bb\u591a\u5c11\u6bd4\u6211\u4eec\u671f\u671b\u7684\u8981\u590d\u6742\u4e00\u70b9\u3002\u6211\u4eec\u5c06\u52063\u5c0f\u8282\u4f9d\u6b21\u8ba8\u8bba\u4e4b\u3002 13.5.2\u3000semget\u7cfb\u7edf\u8c03\u7528 semget\u7cfb\u7edf\u8c03\u7528\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4fe1\u53f7\u91cf\u96c6\uff0c\u6216\u8005\u83b7\u53d6\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u4fe1\u53f7\u91cf\u96c6\u3002\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a include\uff1csys/sem.h\uff1e # int semget(key_t key,int num_sems,int sem_flags); key\u53c2\u6570\u662f\u4e00\u4e2a\u952e\u503c\uff0c\u7528\u6765\u6807\u8bc6\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684\u4fe1\u53f7\u91cf\u96c6\uff0c\u5c31\u50cf\u6587\u4ef6\u540d\u5168\u5c40\u552f\u4e00\u5730\u6807\u8bc6\u4e00\u4e2a\u6587\u4ef6\u4e00\u6837\u3002\u8981\u901a\u8fc7\u4fe1\u53f7\u91cf\u901a\u4fe1\u7684\u8fdb\u7a0b\u9700\u8981\u4f7f\u7528\u76f8\u540c\u7684\u952e\u503c\u6765\u521b\u5efa/\u83b7\u53d6\u8be5\u4fe1\u53f7\u91cf\u3002 num_sems\u53c2\u6570\u6307\u5b9a\u8981\u521b\u5efa/\u83b7\u53d6\u7684\u4fe1\u53f7\u91cf\u96c6\u4e2d\u4fe1\u53f7\u91cf\u7684\u6570\u76ee\u3002\u5982\u679c\u662f\u521b\u5efa\u4fe1\u53f7\u91cf\uff0c\u5219\u8be5\u503c\u5fc5\u987b\u88ab\u6307\u5b9a\uff1b\u5982\u679c\u662f\u83b7\u53d6\u5df2\u7ecf\u5b58\u5728\u7684\u4fe1\u53f7\u91cf\uff0c\u5219\u53ef\u4ee5\u628a\u5b83\u8bbe\u7f6e\u4e3a0\u3002 sem_flags\u53c2\u6570\u6307\u5b9a\u4e00\u7ec4\u6807\u5fd7\u3002\u5b83\u4f4e\u7aef\u76849\u4e2a\u6bd4\u7279\u662f\u8be5\u4fe1\u53f7\u91cf\u7684\u6743\u9650\uff0c\u5176\u683c\u5f0f\u548c\u542b\u4e49\u90fd\u4e0e\u7cfb\u7edf\u8c03\u7528open\u7684mode\u53c2\u6570\u76f8\u540c\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u53ef\u4ee5\u548cIPC_CREAT\u6807\u5fd7\u505a\u6309\u4f4d\u201c\u6216\u201d\u8fd0\u7b97\u4ee5\u521b\u5efa\u65b0\u7684\u4fe1\u53f7\u91cf\u96c6\u3002\u6b64\u65f6\u5373\u4f7f\u4fe1\u53f7\u91cf\u5df2\u7ecf\u5b58\u5728\uff0csemget\u4e5f\u4e0d\u4f1a\u4ea7\u751f\u9519\u8bef\u3002 semget\u6210\u529f\u65f6\u8fd4\u56de\u4e00\u4e2a\u6b63\u6574\u6570\u503c\uff0c\u5b83\u662f\u4fe1\u53f7\u91cf\u96c6\u7684\u6807\u8bc6\u7b26\uff1bsemget\u5931\u8d25\u65f6\u8fd4\u56de-1\uff0c\u5e76\u8bbe\u7f6eerrno\u3002 unsigned short semval ; /*\u4fe1\u53f7\u91cf\u7684\u503c*/ unsigned short semzcnt ; /*\u7b49\u5f85\u4fe1\u53f7\u91cf\u503c\u53d8\u4e3a0\u7684\u8fdb\u7a0b\u6570\u91cf*/ unsigned short semncnt ; /*\u7b49\u5f85\u4fe1\u53f7\u91cf\u503c\u589e\u52a0\u7684\u8fdb\u7a0b\u6570\u91cf*/ pid_t sempid ; /*\u6700\u540e\u4e00\u6b21\u6267\u884csemop\u64cd\u4f5c\u7684\u8fdb\u7a0bID*/ int semop ( int sem_id , struct sembuf * sem_ops , size_t num_sem_ops ); sem_id\u53c2\u6570\u662f\u7531semget\u8c03\u7528\u8fd4\u56de\u7684\u4fe1\u53f7\u91cf\u96c6\u6807\u8bc6\u7b26\uff0c\u7528\u4ee5\u6307\u5b9a\u88ab\u64cd\u4f5c\u7684\u76ee\u6807\u4fe1\u53f7\u91cf\u96c6\u3002 sem_ops\u53c2\u6570\u6307\u5411\u4e00\u4e2asembuf\u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u6570\u7ec4\uff0csembuf\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49 struct sembuf { unsigned short int sem_num ; short int sem_op ; short int sem_flg ; } sem_num\u6210\u5458\u662f\u4fe1\u53f7\u91cf\u96c6\u4e2d\u4fe1\u53f7\u91cf\u7684\u7f16\u53f7\uff0c0\u8868\u793a\u4fe1\u53f7\u91cf\u96c6\u4e2d\u7684\u7b2c\u4e00\u4e2a\u4fe1\u53f7\u91cf\u3002 sem_op\u6210\u5458\u6307\u5b9a\u64cd\u4f5c\u7c7b\u578b\uff0c\u5176\u53ef\u9009\u503c\u4e3a\u6b63\u6574\u6570\u30010\u548c\u8d1f\u6574\u6570\u3002 sem_flg\u7684\u53ef\u9009\u503c\u662fIPC_NOWAIT\u548cSEM_UNDO\u3002 - IPC_NOWAIT\u7684\u542b\u4e49\u662f\uff0c\u65e0\u8bba\u4fe1\u53f7\u91cf\u64cd\u4f5c\u662f\u5426\u6210\u529f\uff0csemop\u8c03\u7528\u90fd\u5c06\u7acb\u5373\u8fd4\u56de - SEM_UNDO\u7684\u542b\u4e49\u662f\uff0c\u5f53\u8fdb\u7a0b\u9000\u51fa\u65f6\u53d6\u6d88\u6b63\u5728\u8fdb\u884c\u7684semop\u64cd\u4f5c\u3002 \u5982\u679csem_op\u5927\u4e8e0\uff0c\u5219semop\u5c06\u88ab\u64cd\u4f5c\u7684\u4fe1\u53f7\u91cf\u7684\u503csemval\u589e\u52a0sem_op\u3002\u8be5\u64cd\u4f5c\u8981\u6c42\u8c03\u7528\u8fdb\u7a0b\u5bf9\u88ab\u64cd\u4f5c\u4fe1\u53f7\u91cf\u96c6\u62e5\u6709\u5199\u6743\u9650\u3002 \u5982\u679csem_op\u7b49\u4e8e0\uff0c\u5219\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u201c\u7b49\u5f850\u201d\uff08wait-for-zero\uff09\u64cd\u4f5c\u3002\u8be5\u64cd\u4f5c\u8981\u6c42\u8c03\u7528\u8fdb\u7a0b\u5bf9\u88ab\u64cd\u4f5c\u4fe1\u53f7\u91cf\u96c6\u62e5\u6709\u8bfb\u6743\u9650\u3002 \u5982\u679csem_op\u5c0f\u4e8e0\uff0c\u5219\u8868\u793a\u5bf9\u4fe1\u53f7\u91cf\u503c\u8fdb\u884c\u51cf\u64cd\u4f5c\uff0c\u5373\u671f\u671b\u83b7\u5f97\u4fe1\u53f7\u91cf\u3002\u8be5\u64cd\u4f5c\u8981\u6c42\u8c03\u7528\u8fdb\u7a0b\u5bf9\u88ab\u64cd\u4f5c\u4fe1\u53f7\u91cf\u96c6\u62e5\u6709\u5199\u6743\u9650\u3002 semop\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002\u5931\u8d25\u7684\u65f6\u5019\uff0csem_ops\u6570\u7ec4\u4e2d\u6307\u5b9a\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u4e0d\u88ab\u6267\u884c\u3002 #include\uff1csys/sem.h\uff1e int semctl(int sem_id,int sem_num,int command,...); semctl\u7cfb\u7edf\u8c03\u7528\u5141\u8bb8\u8c03\u7528\u8005\u5bf9\u4fe1\u53f7\u91cf\u8fdb\u884c\u76f4\u63a5\u63a7\u5236\u3002 sem_id\u53c2\u6570\u662f\u7531semget\u8c03\u7528\u8fd4\u56de\u7684\u4fe1\u53f7\u91cf\u96c6\u6807\u8bc6\u7b26\uff0c\u7528\u4ee5\u6307\u5b9a\u88ab\u64cd\u4f5c\u7684\u4fe1\u53f7\u91cf\u96c6 sem_num\u53c2\u6570\u6307\u5b9a\u88ab\u64cd\u4f5c\u7684\u4fe1\u53f7\u91cf\u5728\u4fe1\u53f7\u91cf\u96c6\u4e2d\u7684\u7f16\u53f7\u3002 command\u53c2\u6570\u6307\u5b9a\u8981\u6267\u884c\u7684\u547d\u4ee4\u3002\u6709\u7684\u547d\u4ee4\u9700\u8981\u8c03\u7528\u8005\u4f20\u9012\u7b2c4\u4e2a\u53c2\u6570\u3002\u7b2c4\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u7531\u7528\u6237\u81ea\u5df1\u5b9a\u4e49\uff0c\u4f46sys/sem.h\u5934\u6587\u4ef6\u7ed9\u51fa\u4e86\u5b83\u7684\u63a8\u8350\u683c\u5f0f union semun { int val ; /*\u7528\u4e8eSETVAL\u547d\u4ee4*/ struct semid_ds * buf ; /*\u7528\u4e8eIPC_STAT\u548cIPC_SET\u547d\u4ee4*/ unsigned short * array ; /*\u7528\u4e8eGETALL\u548cSETALL\u547d\u4ee4*/ struct seminfo * __buf ; /*\u7528\u4e8eIPC_INFO\u547d\u4ee4*/ }; struct seminfo { int semmap ; /*Linux\u5185\u6838\u6ca1\u6709\u4f7f\u7528*/ int semmni ; /*\u7cfb\u7edf\u6700\u591a\u53ef\u4ee5\u62e5\u6709\u7684\u4fe1\u53f7\u91cf\u96c6\u6570\u76ee*/ int semmns ; /*\u7cfb\u7edf\u6700\u591a\u53ef\u4ee5\u62e5\u6709\u7684\u4fe1\u53f7\u91cf\u6570\u76ee*/ int semmnu ; /*Linux\u5185\u6838\u6ca1\u6709\u4f7f\u7528*/ int semmsl ; /*\u4e00\u4e2a\u4fe1\u53f7\u91cf\u96c6\u6700\u591a\u5141\u8bb8\u5305\u542b\u7684\u4fe1\u53f7\u91cf\u6570\u76ee*/ int semopm ; /*semop\u4e00\u6b21\u6700\u591a\u80fd\u6267\u884c\u7684sem_op\u64cd\u4f5c\u6570\u76ee*/ int semume ; /*Linux\u5185\u6838\u6ca1\u6709\u4f7f\u7528*/ int semusz ; /*sem_undo\u7ed3\u6784\u4f53\u7684\u5927\u5c0f*/ int semvmx ; /*\u6700\u5927\u5141\u8bb8\u7684\u4fe1\u53f7\u91cf\u503c*/ /*\u6700\u591a\u5141\u8bb8\u7684UNDO\u6b21\u6570\uff08\u5e26SEM_UNDO\u6807\u5fd7\u7684semop\u64cd\u4f5c\u7684\u6b21\u6570\uff09*/ int semaem ; }; semctl\u652f\u6301\u7684\u6240\u6709\u547d\u4ee4 GETNCNT\u3001GETPID\u3001GETVAL\u3001GETZCNT\u548cSETVAL\u64cd\u4f5c\u7684\u662f\u5355\u4e2a\u4fe1\u53f7\u91cf\uff0c\u5b83\u662f\u7531\u6807\u8bc6\u7b26sem_id\u6307\u5b9a\u7684\u4fe1\u53f7\u91cf\u96c6\u4e2d\u7684\u7b2csem_num\u4e2a\u4fe1\u53f7\u91cf\uff1b\u800c\u5176\u4ed6\u64cd\u4f5c\u9488\u5bf9\u7684\u662f\u6574\u4e2a\u4fe1\u53f7\u91cf\u96c6\uff0c\u6b64\u65f6semctl\u7684\u53c2\u6570sem_num\u88ab\u5ffd\u7565\u3002 \u5171\u4eab\u5185\u5b58 # \u5171\u4eab\u5185\u5b58\u662f\u6700\u9ad8\u6548\u7684IPC\u673a\u5236\uff0c\u56e0\u4e3a\u5b83\u4e0d\u6d89\u53ca\u8fdb\u7a0b\u4e4b\u95f4\u7684\u4efb\u4f55\u6570\u636e\u4f20\u8f93\u3002 shmget\u7cfb\u7edf\u8c03\u7528 # shmget\u7cfb\u7edf\u8c03\u7528\u521b\u5efa\u4e00\u6bb5\u65b0\u7684\u5171\u4eab\u5185\u5b58\uff0c\u6216\u8005\u83b7\u53d6\u4e00\u6bb5\u5df2\u7ecf\u5b58\u5728\u7684\u5171\u4eab\u5185\u5b58\u3002 #include\uff1csys/shm.h\uff1e int shmget ( key_t key , size_t size , int shmflg ); key\u53c2\u6570\u662f\u4e00\u4e2a\u952e\u503c\uff0c\u7528\u6765\u6807\u8bc6\u4e00\u6bb5\u5168\u5c40\u552f\u4e00\u7684\u5171\u4eab\u5185\u5b58\u3002 size\u53c2\u6570\u6307\u5b9a\u5171\u4eab\u5185\u5b58\u7684\u5927\u5c0f\uff0c\u5355\u4f4d\u662f\u5b57\u8282\u3002\u5982\u679c\u662f\u521b\u5efa\u65b0\u7684\u5171\u4eab\u5185\u5b58\uff0c\u5219size\u503c\u5fc5\u987b\u88ab\u6307\u5b9a\u3002\u5982\u679c\u662f\u83b7\u53d6\u5df2\u7ecf\u5b58\u5728\u7684\u5171\u4eab\u5185\u5b58\uff0c\u5219\u53ef\u4ee5\u628asize\u8bbe\u7f6e\u4e3a0\u3002 hmflg\u53c2\u6570\u7684\u4f7f\u7528\u548c\u542b\u4e49\u4e0esemget\u7cfb\u7edf\u8c03\u7528\u7684sem_flags\u53c2\u6570\u76f8\u540c\u3002 \u2751SHM_HUGETLB\uff0c\u7c7b\u4f3c\u4e8emmap\u7684MAP_HUGETLB\u6807\u5fd7\uff0c\u7cfb\u7edf\u5c06\u4f7f\u7528\u201c\u5927\u9875\u9762\u201d\u6765\u4e3a\u5171\u4eab\u5185\u5b58\u5206\u914d\u7a7a\u95f4\u3002 \u2751SHM_NORESERVE\uff0c\u7c7b\u4f3c\u4e8emmap\u7684MAP_NORESERVE\u6807\u5fd7\uff0c\u4e0d\u4e3a\u5171\u4eab\u5185\u5b58\u4fdd\u7559\u4ea4\u6362\u5206\u533a\uff08swap\u7a7a\u95f4\uff09\u3002\u8fd9\u6837\uff0c\u5f53\u7269\u7406\u5185\u5b58\u4e0d\u8db3\u7684\u65f6\u5019\uff0c\u5bf9\u8be5\u5171\u4eab\u5185\u5b58\u6267\u884c\u5199\u64cd\u4f5c\u5c06\u89e6\u53d1SIGSEGV\u4fe1\u53f7\u3002 shmget\u6210\u529f\u65f6\u8fd4\u56de\u4e00\u4e2a\u6b63\u6574\u6570\u503c\uff0c\u5b83\u662f\u5171\u4eab\u5185\u5b58\u7684\u6807\u8bc6\u7b26\u3002shmget\u5931\u8d25\u65f6\u8fd4\u56de-1\uff0c\u5e76\u8bbe\u7f6eerrno\u3002 shmat\u548cshmdt\u7cfb\u7edf\u8c03\u7528 # \u5171\u4eab\u5185\u5b58\u88ab\u521b\u5efa/\u83b7\u53d6\u4e4b\u540e\uff0c\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u8bbf\u95ee\u5b83\uff0c\u800c\u662f\u9700\u8981\u5148\u5c06\u5b83\u5173\u8054\u5230\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u4e2d\u3002\u4f7f\u7528\u5b8c\u5171\u4eab\u5185\u5b58\u4e4b\u540e\uff0c\u6211\u4eec\u4e5f\u9700\u8981\u5c06\u5b83\u4ece\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u4e2d\u5206\u79bb\u3002 #include\uff1csys/shm.h\uff1e void * shmat ( int shm_id , const void * shm_addr , int shmflg ); int shmdt ( const void * shm_addr ); shm_id\u53c2\u6570\u662f\u7531shmget\u8c03\u7528\u8fd4\u56de\u7684\u5171\u4eab\u5185\u5b58\u6807\u8bc6\u7b26\u3002 shm_addr\u53c2\u6570\u6307\u5b9a\u5c06\u5171\u4eab\u5185\u5b58\u5173\u8054\u5230\u8fdb\u7a0b\u7684\u54ea\u5757\u5730\u5740\u7a7a\u95f4 shmflg\u53c2\u6570\u7684\u53ef\u9009\u6807\u5fd7SHM_RND\u7684\u5f71\u54cd\uff1a \u2751\u5982\u679cshm_addr\u4e3aNULL\uff0c\u5219\u88ab\u5173\u8054\u7684\u5730\u5740\u7531\u64cd\u4f5c\u7cfb\u7edf\u9009\u62e9\u3002\u8fd9\u662f\u63a8\u8350\u7684\u505a\u6cd5\uff0c\u4ee5\u786e\u4fdd\u4ee3\u7801\u7684\u53ef\u79fb\u690d\u6027\u3002 \u2751\u5982\u679cshm_addr\u975e\u7a7a\uff0c\u5e76\u4e14SHM_RND\u6807\u5fd7\u672a\u88ab\u8bbe\u7f6e\uff0c\u5219\u5171\u4eab\u5185\u5b58\u88ab\u5173\u8054\u5230addr\u6307\u5b9a\u7684\u5730\u5740\u5904\u3002 \u2751\u5982\u679cshm_addr\u975e\u7a7a\uff0c\u5e76\u4e14\u8bbe\u7f6e\u4e86SHM_RND\u6807\u5fd7\uff0c\u5219\u88ab\u5173\u8054\u7684\u5730\u5740\u662f[shm_addr-(shm_addr%SHMLBA)]\u3002SHMLBA\u7684\u542b\u4e49\u662f\u201c\u6bb5\u4f4e\u7aef\u8fb9\u754c\u5730\u5740\u500d\u6570\u201d\uff08Segment Low Boundary Address Multiple\uff09\uff0c\u5b83\u5fc5\u987b\u662f\u5185\u5b58\u9875\u9762\u5927\u5c0f\uff08PAGE_SIZE\uff09\u7684\u6574\u6570\u500d\u3002 \u2751SHM_RDONLY\u3002\u8fdb\u7a0b\u4ec5\u80fd\u8bfb\u53d6\u5171\u4eab\u5185\u5b58\u4e2d\u7684\u5185\u5bb9\u3002\u82e5\u6ca1\u6709\u6307\u5b9a\u8be5\u6807\u5fd7\uff0c\u5219\u8fdb\u7a0b\u53ef\u540c\u65f6\u5bf9\u5171\u4eab\u5185\u5b58\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\uff08\u5f53\u7136\uff0c\u8fd9\u9700\u8981\u5728\u521b\u5efa\u5171\u4eab\u5185\u5b58\u7684\u65f6\u5019\u6307\u5b9a\u5176\u8bfb\u5199\u6743\u9650\uff09\u3002 \u2751SHM_REMAP\u3002\u5982\u679c\u5730\u5740shmaddr\u5df2\u7ecf\u88ab\u5173\u8054\u5230\u4e00\u6bb5\u5171\u4eab\u5185\u5b58\u4e0a\uff0c\u5219\u91cd\u65b0\u5173\u8054\u3002 \u2751SHM_EXEC\u3002\u5b83\u6307\u5b9a\u5bf9\u5171\u4eab\u5185\u5b58\u6bb5\u7684\u6267\u884c\u6743\u9650\u3002\u5bf9\u5171\u4eab\u5185\u5b58\u800c\u8a00\uff0c\u6267\u884c\u6743\u9650\u5b9e\u9645\u4e0a\u548c\u8bfb\u6743\u9650\u662f\u4e00\u6837\u7684\u3002 shmat\u6210\u529f\u65f6\u8fd4\u56de\u5171\u4eab\u5185\u5b58\u88ab\u5173\u8054\u5230\u7684\u5730\u5740\uff0c\u5931\u8d25\u5219\u8fd4\u56de(void*)-1\u5e76\u8bbe\u7f6eerrno\u3002shmat\u6210\u529f\u65f6\uff0c\u5c06\u4fee\u6539\u5185\u6838\u6570\u636e\u7ed3\u6784shmid_ds\u7684\u90e8\u5206\u5b57\u6bb5\uff0c\u5982\u4e0b\uff1a \u2751\u5c06shm_nattach\u52a01\u3002 \u2751\u5c06shm_lpid\u8bbe\u7f6e\u4e3a\u8c03\u7528\u8fdb\u7a0b\u7684PID\u3002 \u2751\u5c06shm_atime\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7684\u65f6\u95f4\u3002 shmdt\u51fd\u6570\u5c06\u5173\u8054\u5230shm_addr\u5904\u7684\u5171\u4eab\u5185\u5b58\u4ece\u8fdb\u7a0b\u4e2d\u5206\u79bb\u3002\u5b83\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002shmdt\u5728\u6210\u529f\u8c03\u7528\u65f6\u5c06\u4fee\u6539\u5185\u6838\u6570\u636e\u7ed3\u6784shmid_ds\u7684\u90e8\u5206\u5b57\u6bb5\uff0c\u5982\u4e0b\uff1a \u2751\u5c06shm_nattach\u51cf1\u3002 \u2751\u5c06shm_lpid\u8bbe\u7f6e\u4e3a\u8c03\u7528\u8fdb\u7a0b\u7684PID\u3002 \u2751\u5c06shm_dtime\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7684\u65f6\u95f4\u3002 shmctl\u7cfb\u7edf\u8c03\u7528 # #include\uff1csys/shm.h\uff1e int shmctl ( int shm_id , int command , struct shmid_ds * buf ); shm_id\u53c2\u6570\u662f\u7531shmget\u8c03\u7528\u8fd4\u56de\u7684\u5171\u4eab\u5185\u5b58\u6807\u8bc6\u7b26\u3002 command\u53c2\u6570\u6307\u5b9a\u8981\u6267\u884c\u7684\u547d\u4ee4\u3002 shmctl\u652f\u6301\u7684\u6240\u6709\u547d\u4ee4\u5982\u8868 \u5171\u4eab\u5185\u5b58\u7684POSIX\u65b9\u6cd5 # #include\uff1csys/mman.h\uff1e #include\uff1csys/stat.h\uff1e #include\uff1cfcntl.h\uff1e int shm_open ( const char * name , int oflag , mode_t mode ); shm_open\u7684\u4f7f\u7528\u65b9\u6cd5\u4e0eopen\u7cfb\u7edf\u8c03\u7528\u5b8c\u5168\u76f8\u540c\u3002 name\u53c2\u6570\u6307\u5b9a\u8981\u521b\u5efa/\u6253\u5f00\u7684\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u3002 oflag\u53c2\u6570\u6307\u5b9a\u521b\u5efa\u65b9\u5f0f\u3002 \u2751O_RDONLY\u3002\u4ee5\u53ea\u8bfb\u65b9\u5f0f\u6253\u5f00\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u3002 \u2751O_RDWR\u3002\u4ee5\u53ef\u8bfb\u3001\u53ef\u5199\u65b9\u5f0f\u6253\u5f00\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u3002 \u2751O_CREAT\u3002\u5982\u679c\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u4e4b\u3002\u6b64\u65f6mode\u53c2\u6570\u7684\u6700\u4f4e9\u4f4d\u5c06\u6307\u5b9a\u8be5\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u7684\u8bbf\u95ee\u6743\u9650\u3002\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u88ab\u521b\u5efa\u7684\u65f6\u5019\uff0c\u5176\u521d\u59cb\u957f\u5ea6\u4e3a0\u3002 \u2751O_EXCL\u3002\u548cO_CREAT\u4e00\u8d77\u4f7f\u7528\uff0c\u5982\u679c\u7531name\u6307\u5b9a\u7684\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u5df2\u7ecf\u5b58\u5728\uff0c\u5219shm_open\u8c03\u7528\u8fd4\u56de\u9519\u8bef\uff0c\u5426\u5219\u5c31\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u3002 \u2751O_TRUNC\u3002\u5982\u679c\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u628a\u5b83\u622a\u65ad\uff0c\u4f7f\u5176\u957f\u5ea6\u4e3a0\u3002 shm_open\u8c03\u7528\u6210\u529f\u65f6\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u8be5\u6587\u4ef6\u63cf\u8ff0\u7b26\u53ef\u7528\u4e8e\u540e\u7eed\u7684mmap\u8c03\u7528\uff0c\u4ece\u800c\u5c06\u5171\u4eab\u5185\u5b58\u5173\u8054\u5230\u8c03\u7528\u8fdb\u7a0b\u3002shm_open\u5931\u8d25\u65f6\u8fd4\u56de-1\uff0c\u5e76\u8bbe\u7f6eerrno\u3002 int shm_unlink ( const char * name ); \u8be5\u51fd\u6570\u5c06name\u53c2\u6570\u6307\u5b9a\u7684\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u6807\u8bb0\u4e3a\u7b49\u5f85\u5220\u9664\u3002\u5f53\u6240\u6709\u4f7f\u7528\u8be5\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u7684\u8fdb\u7a0b\u90fd\u4f7f\u7528ummap\u5c06\u5b83\u4ece\u8fdb\u7a0b\u4e2d\u5206\u79bb\u4e4b\u540e\uff0c\u7cfb\u7edf\u5c06\u9500\u6bc1\u8fd9\u4e2a\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u6240\u5360\u636e\u7684\u8d44\u6e90\u3002 test_shm.cpp \u6d88\u606f\u961f\u5217 # \u6d88\u606f\u961f\u5217\u662f\u5728\u4e24\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u4f20\u9012\u4e8c\u8fdb\u5236\u5757\u6570\u636e\u7684\u4e00\u79cd\u7b80\u5355\u6709\u6548\u7684\u65b9\u5f0f\u3002\u6bcf\u4e2a\u6570\u636e\u5757\u90fd\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\u7c7b\u578b\uff0c\u63a5\u6536\u65b9\u53ef\u4ee5\u6839\u636e\u7c7b\u578b\u6765\u6709\u9009\u62e9\u5730\u63a5\u6536\u6570\u636e\uff0c\u800c\u4e0d\u4e00\u5b9a\u50cf\u7ba1\u9053\u548c\u547d\u540d\u7ba1\u9053\u90a3\u6837\u5fc5\u987b\u4ee5\u5148\u8fdb\u5148\u51fa\u7684\u65b9\u5f0f\u63a5\u6536\u6570\u636e\u3002 msgget\u7cfb\u7edf\u8c03\u7528 # #include\uff1csys/msg.h\uff1e int msgget ( key_t key , int msgflg ); key\u53c2\u6570\u662f\u4e00\u4e2a\u952e\u503c\uff0c\u7528\u6765\u6807\u8bc6\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684\u6d88\u606f\u961f\u5217\u3002 msgflg\u53c2\u6570\u4f7f\u7528\u548c\u542b\u4e49\u4e0esemget\u7cfb\u7edf\u8c03\u7528\u7684sem_flags\u53c2\u6570\u76f8\u540c\u3002 msgget\u6210\u529f\u65f6\u8fd4\u56de\u4e00\u4e2a\u6b63\u6574\u6570\u503c\uff0c\u5b83\u662f\u6d88\u606f\u961f\u5217\u7684\u6807\u8bc6\u7b26\u3002msgget\u5931\u8d25\u65f6\u8fd4\u56de-1\uff0c\u5e76\u8bbe\u7f6eerrno\u3002 \u5982\u679cmsgget\u7528\u4e8e\u521b\u5efa\u6d88\u606f\u961f\u5217\uff0c\u5219\u4e0e\u4e4b\u5173\u8054\u7684\u5185\u6838\u6570\u636e\u7ed3\u6784msqid_ds\u5c06\u88ab\u521b\u5efa\u5e76\u521d\u59cb\u5316\u3002msqid_ds\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49 struct msqid_ds { struct ipc_perm msg_perm ; /*\u6d88\u606f\u961f\u5217\u7684\u64cd\u4f5c\u6743\u9650*/ time_t msg_stime ; /*\u6700\u540e\u4e00\u6b21\u8c03\u7528msgsnd\u7684\u65f6\u95f4*/ time_t msg_rtime ; /*\u6700\u540e\u4e00\u6b21\u8c03\u7528msgrcv\u7684\u65f6\u95f4*/ time_t msg_ctime ; /*\u6700\u540e\u4e00\u6b21\u88ab\u4fee\u6539\u7684\u65f6\u95f4*/ unsigned long__msg_cbytes ; /*\u6d88\u606f\u961f\u5217\u4e2d\u5df2\u6709\u7684\u5b57\u8282\u6570*/ msgqnum_t msg_qnum ; /*\u6d88\u606f\u961f\u5217\u4e2d\u5df2\u6709\u7684\u6d88\u606f\u6570*/ msglen_t msg_qbytes ; /*\u6d88\u606f\u961f\u5217\u5141\u8bb8\u7684\u6700\u5927\u5b57\u8282\u6570*/ pid_t msg_lspid ; /*\u6700\u540e\u6267\u884cmsgsnd\u7684\u8fdb\u7a0b\u7684PID*/ pid_t msg_lrpid ; /*\u6700\u540e\u6267\u884cmsgrcv\u7684\u8fdb\u7a0b\u7684PID*/ }; msgsnd\u7cfb\u7edf\u8c03\u7528 # msgsnd\u7cfb\u7edf\u8c03\u7528\u628a\u4e00\u6761\u6d88\u606f\u6dfb\u52a0\u5230\u6d88\u606f\u961f\u5217\u4e2d\u3002 #include\uff1csys/msg.h\uff1e int msgsnd ( int msqid , const void * msg_ptr , size_t msg_sz , int msgflg ); struct msgbuf { long mtype ; /*\u6d88\u606f\u7c7b\u578b*/ char mtext [ 512 ]; /*\u6d88\u606f\u6570\u636e*/ }; msqid\u53c2\u6570\u662f\u7531msgget\u8c03\u7528\u8fd4\u56de\u7684\u6d88\u606f\u961f\u5217\u6807\u8bc6\u7b26\u3002 msg_ptr\u53c2\u6570\u6307\u5411\u4e00\u4e2a\u51c6\u5907\u53d1\u9001\u7684\u6d88\u606f mtype\u6210\u5458\u6307\u5b9a\u6d88\u606f\u7684\u7c7b\u578b\uff0c\u5b83\u5fc5\u987b\u662f\u4e00\u4e2a\u6b63\u6574\u6570\u3002mtext\u662f\u6d88\u606f\u6570\u636e\u3002 msg_sz\u53c2\u6570\u662f\u6d88\u606f\u7684\u6570\u636e\u90e8\u5206\uff08mtext\uff09\u7684\u957f\u5ea6\u3002\u8fd9\u4e2a\u957f\u5ea6\u53ef\u4ee5\u4e3a0\uff0c\u8868\u793a\u6ca1\u6709\u6d88\u606f\u6570\u636e\u3002 msgflg\u53c2\u6570\u63a7\u5236msgsnd\u7684\u884c\u4e3a\u3002\u5b83\u901a\u5e38\u4ec5\u652f\u6301IPC_NOWAIT\u6807\u5fd7\uff0c\u5373\u4ee5\u975e\u963b\u585e\u7684\u65b9\u5f0f\u53d1\u9001\u6d88\u606f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53d1\u9001\u6d88\u606f\u65f6\u5982\u679c\u6d88\u606f\u961f\u5217\u6ee1\u4e86\uff0c\u5219msgsnd\u5c06\u963b\u585e\u3002\u82e5IPC_NOWAIT\u6807\u5fd7\u88ab\u6307\u5b9a\uff0c\u5219msgsnd\u5c06\u7acb\u5373\u8fd4\u56de\u5e76\u8bbe\u7f6eerrno\u4e3aEAGAIN\u3002 msgrcv\u7cfb\u7edf\u8c03\u7528 # msgrcv\u7cfb\u7edf\u8c03\u7528\u4ece\u6d88\u606f\u961f\u5217\u4e2d\u83b7\u53d6\u6d88\u606f\u3002 int msgrcv ( int msqid , void * msg_ptr , size_t msg_sz , long int msgtype , int msgflg ); msqid\u53c2\u6570\u662f\u7531msgget\u8c03\u7528\u8fd4\u56de\u7684\u6d88\u606f\u961f\u5217\u6807\u8bc6\u7b26\u3002 msg_ptr\u53c2\u6570\u7528\u4e8e\u5b58\u50a8\u63a5\u6536\u7684\u6d88\u606f\uff0cmsg_sz\u53c2\u6570\u6307\u7684\u662f\u6d88\u606f\u6570\u636e\u90e8\u5206\u7684\u957f\u5ea6\u3002 msgtype\u53c2\u6570\u6307\u5b9a\u63a5\u6536\u4f55\u79cd\u7c7b\u578b\u7684\u6d88\u606f\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u51e0\u79cd\u65b9\u5f0f\u6765\u6307\u5b9a\u6d88\u606f\u7c7b\u578b\uff1a \u2751msgtype\u7b49\u4e8e0\u3002\u8bfb\u53d6\u6d88\u606f\u961f\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6d88\u606f\u3002 \u2751msgtype\u5927\u4e8e0\u3002\u8bfb\u53d6\u6d88\u606f\u961f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u7c7b\u578b\u4e3amsgtype\u7684\u6d88\u606f\uff08\u9664\u975e\u6307\u5b9a\u4e86\u6807\u5fd7MSG_EXCEPT\uff0c\u89c1\u540e\u6587\uff09\u3002 \u2751msgtype\u5c0f\u4e8e0\u3002\u8bfb\u53d6\u6d88\u606f\u961f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u7c7b\u578b\u503c\u6bd4msgtype\u7684\u7edd\u5bf9\u503c\u5c0f\u7684\u6d88\u606f\u3002 \u53c2\u6570msgflg\u63a7\u5236msgrcv\u51fd\u6570\u7684\u884c\u4e3a\u3002\u5b83\u53ef\u4ee5\u662f\u5982\u4e0b\u4e00\u4e9b\u6807\u5fd7\u7684\u6309\u4f4d\u6216\uff1a \u2751IPC_NOWAIT\u3002\u5982\u679c\u6d88\u606f\u961f\u5217\u4e2d\u6ca1\u6709\u6d88\u606f\uff0c\u5219msgrcv\u8c03\u7528\u7acb\u5373\u8fd4\u56de\u5e76\u8bbe\u7f6eerrno\u4e3aENOMSG\u3002 \u2751MSG_EXCEPT\u3002\u5982\u679cmsgtype\u5927\u4e8e0\uff0c\u5219\u63a5\u6536\u6d88\u606f\u961f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u975emsgtype\u7c7b\u578b\u7684\u6d88\u606f\u3002 \u2751MSG_NOERROR\u3002\u5982\u679c\u6d88\u606f\u6570\u636e\u90e8\u5206\u7684\u957f\u5ea6\u8d85\u8fc7\u4e86msg_sz\uff0c\u5c31\u5c06\u5b83\u622a\u65ad\u3002 \u5904\u4e8e\u963b\u585e\u72b6\u6001\u7684msgrcv\u8c03\u7528\u8fd8\u53ef\u80fd\u88ab\u5982\u4e0b\u4e24\u79cd\u5f02\u5e38\u60c5\u51b5\u6240\u4e2d\u65ad\uff1a \u2751\u6d88\u606f\u961f\u5217\u88ab\u79fb\u9664\u3002\u6b64\u65f6msgrcv\u8c03\u7528\u5c06\u7acb\u5373\u8fd4\u56de\u5e76\u8bbe\u7f6eerrno\u4e3aEIDRM\u3002 \u2751\u7a0b\u5e8f\u63a5\u6536\u5230\u4fe1\u53f7\u3002\u6b64\u65f6msgrcv\u8c03\u7528\u5c06\u7acb\u5373\u8fd4\u56de\u5e76\u8bbe\u7f6eerrno\u4e3aEINTR\u3002 msgrcv\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002msgrcv\u6210\u529f\u65f6\u5c06\u4fee\u6539\u5185\u6838\u6570\u636e\u7ed3\u6784msqid_ds\u7684\u90e8\u5206\u5b57\u6bb5\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u2751\u5c06msg_qnum\u51cf1\u3002 \u2751\u5c06msg_lrpid\u8bbe\u7f6e\u4e3a\u8c03\u7528\u8fdb\u7a0b\u7684PID\u3002 \u2751\u5c06msg_rtime\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7684\u65f6\u95f4\u3002 msgctl\u7cfb\u7edf\u8c03\u7528 # msgctl\u7cfb\u7edf\u8c03\u7528\u63a7\u5236\u6d88\u606f\u961f\u5217\u7684\u67d0\u4e9b\u5c5e\u6027\u3002 #include\uff1csys/msg.h\uff1e int msgctl ( int msqid , int command , struct msqid_ds * buf ); msqid\u53c2\u6570\u662f\u7531msgget\u8c03\u7528\u8fd4\u56de\u7684\u5171\u4eab\u5185\u5b58\u6807\u8bc6\u7b26\u3002 command\u53c2\u6570\u6307\u5b9a\u8981\u6267\u884c\u7684\u547d\u4ee4\u3002 msgctl\u6210\u529f\u65f6\u7684\u8fd4\u56de\u503c\u53d6\u51b3\u4e8ecommand\u53c2\u6570, msgctl\u51fd\u6570\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 socket\u4f20\u9012 # \u53ef\u4ee5\u5229\u7528UNIX\u57dfsocket\u5728\u8fdb\u7a0b\u95f4\u4f20\u9012\u7279\u6b8a\u7684\u8f85\u52a9\u6570\u636e\uff0c\u4ee5\u5b9e\u73b0\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u4f20\u9012 test_socket_share_process.cpp","title":"Process"},{"location":"linux/process/#fork","text":"#include\uff1csys/types.h\uff1e #include\uff1cunistd.h\uff1e pid_t fork(void); \u8be5\u51fd\u6570\u7684\u6bcf\u6b21\u8c03\u7528\u90fd\u8fd4\u56de\u4e24\u6b21\uff0c\u5728\u7236\u8fdb\u7a0b\u4e2d\u8fd4\u56de\u7684\u662f\u5b50\u8fdb\u7a0b\u7684PID\uff0c\u5728\u5b50\u8fdb\u7a0b\u4e2d\u5219\u8fd4\u56de0\u3002 \u8be5\u8fd4\u56de\u503c\u662f\u540e\u7eed\u4ee3\u7801\u5224\u65ad\u5f53\u524d\u8fdb\u7a0b\u662f\u7236\u8fdb\u7a0b\u8fd8\u662f\u5b50\u8fdb\u7a0b\u7684\u4f9d\u636e\u3002 fork\u8c03\u7528\u5931\u8d25\u65f6\u8fd4\u56de-1\uff0c\u5e76\u8bbe\u7f6eerrno\u3002 fork\u51fd\u6570\u590d\u5236\u5f53\u524d\u8fdb\u7a0b\uff0c\u5728\u5185\u6838\u8fdb\u7a0b\u8868\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\u8868\u9879\u3002\u65b0\u7684\u8fdb\u7a0b\u8868\u9879\u6709\u5f88\u591a\u5c5e\u6027\u548c\u539f\u8fdb\u7a0b\u76f8\u540c\uff0c\u6bd4\u5982\u5806\u6307\u9488\u3001\u6808\u6307\u9488\u548c\u6807\u5fd7\u5bc4\u5b58\u5668\u7684\u503c\u3002\u4f46\u4e5f\u6709\u8bb8\u591a\u5c5e\u6027\u88ab\u8d4b\u4e88\u4e86\u65b0\u7684\u503c\uff0c\u6bd4\u5982\u8be5\u8fdb\u7a0b\u7684PPID\u88ab\u8bbe\u7f6e\u6210\u539f\u8fdb\u7a0b\u7684PID\uff0c\u4fe1\u53f7\u4f4d\u56fe\u88ab\u6e05\u9664 \u5b50\u8fdb\u7a0b\u7684\u4ee3\u7801\u4e0e\u7236\u8fdb\u7a0b\u5b8c\u5168\u76f8\u540c\uff0c\u540c\u65f6\u5b83\u8fd8\u4f1a\u590d\u5236\u7236\u8fdb\u7a0b\u7684\u6570\u636e\uff08\u5806\u6570\u636e\u3001\u6808\u6570\u636e\u548c\u9759\u6001\u6570\u636e\uff09\u3002\u6570\u636e\u7684\u590d\u5236\u91c7\u7528\u7684\u662f\u6240\u8c13\u7684\u5199\u65f6\u590d\u5236\uff08copy on writte\uff09\uff0c\u5373\u53ea\u6709\u5728\u4efb\u4e00\u8fdb\u7a0b\uff08\u7236\u8fdb\u7a0b\u6216\u5b50\u8fdb\u7a0b\uff09\u5bf9\u6570\u636e\u6267\u884c\u4e86\u5199\u64cd\u4f5c\u65f6\uff0c\u590d\u5236\u624d\u4f1a\u53d1\u751f\uff08\u5148\u662f\u7f3a\u9875\u4e2d\u65ad\uff0c\u7136\u540e\u64cd\u4f5c\u7cfb\u7edf\u7ed9\u5b50\u8fdb\u7a0b\u5206\u914d\u5185\u5b58\u5e76\u590d\u5236\u7236\u8fdb\u7a0b\u7684\u6570\u636e\uff09\u3002\\","title":"fork"},{"location":"linux/process/#exec","text":"\u5728\u5b50\u8fdb\u7a0b\u4e2d\u6267\u884c\u5176\u4ed6\u7a0b\u5e8f\uff0c\u5373\u66ff\u6362\u5f53\u524d\u8fdb\u7a0b\u6620\u50cf #include\uff1cunistd.h\uff1e extern char**environ; int execl(const char*path,const char*arg,...); int execlp(const char*file,const char*arg,...); int execle(const char*path,const char*arg,...,char*const envp[]); int execv(const char*path,char*const argv[]); int execvp(const char*file,char*const argv[]); int execve(const char*path,char*const argv[],char*const envp[]); path\u53c2\u6570\u6307\u5b9a\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5b8c\u6574\u8def\u5f84\uff0c file\u53c2\u6570\u53ef\u4ee5\u63a5\u53d7\u6587\u4ef6\u540d\uff0c\u8be5\u6587\u4ef6\u7684\u5177\u4f53\u4f4d\u7f6e\u5219\u5728\u73af\u5883\u53d8\u91cfPATH\u4e2d\u641c\u5bfb\u3002 arg\u63a5\u53d7\u53ef\u53d8\u53c2\u6570\uff0c argv\u5219\u63a5\u53d7\u53c2\u6570\u6570\u7ec4\uff0c\u5b83\u4eec\u90fd\u4f1a\u88ab\u4f20\u9012\u7ed9\u65b0\u7a0b\u5e8f\uff08path\u6216file\u6307\u5b9a\u7684\u7a0b\u5e8f\uff09\u7684main\u51fd\u6570\u3002 envp\u53c2\u6570\u7528\u4e8e\u8bbe\u7f6e\u65b0\u7a0b\u5e8f\u7684\u73af\u5883\u53d8\u91cf\u3002\u5982\u679c\u672a\u8bbe\u7f6e\u5b83\uff0c\u5219\u65b0\u7a0b\u5e8f\u5c06\u4f7f\u7528\u7531\u5168\u5c40\u53d8\u91cfenviron\u6307\u5b9a\u7684\u73af\u5883\u53d8\u91cf\u3002 exec\u51fd\u6570\u662f\u4e0d\u8fd4\u56de\u7684\uff0c\u9664\u975e\u51fa\u9519\u3002\u5b83\u51fa\u9519\u65f6\u8fd4\u56de-1\uff0c\u5e76\u8bbe\u7f6eerrno\u3002\u5982\u679c\u6ca1\u51fa\u9519\uff0c\u5219\u539f\u7a0b\u5e8f\u4e2dexec\u8c03\u7528\u4e4b\u540e\u7684\u4ee3\u7801\u90fd\u4e0d\u4f1a\u6267\u884c\uff0c\u56e0\u4e3a\u6b64\u65f6\u539f\u7a0b\u5e8f\u5df2\u7ecf\u88abexec\u7684\u53c2\u6570\u6307\u5b9a\u7684\u7a0b\u5e8f\u5b8c\u5168\u66ff\u6362 exec\u51fd\u6570\u4e0d\u4f1a\u5173\u95ed\u539f\u7a0b\u5e8f\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u9664\u975e\u8be5\u6587\u4ef6\u63cf\u8ff0\u7b26\u88ab\u8bbe\u7f6e\u4e86\u7c7b\u4f3cSOCK_CLOEXEC\u7684\u5c5e\u6027","title":"exec"},{"location":"linux/process/#\u5904\u7406\u50f5\u5c38\u8fdb\u7a0b","text":"\u51fd\u6570\u5728\u7236\u8fdb\u7a0b\u4e2d\u8c03\u7528\uff0c\u4ee5\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7684\u7ed3\u675f\uff0c\u5e76\u83b7\u53d6\u5b50\u8fdb\u7a0b\u7684\u8fd4\u56de\u4fe1\u606f\uff0c\u4ece\u800c\u907f\u514d\u4e86\u50f5\u5c38\u8fdb\u7a0b\u7684\u4ea7\u751f\uff0c\u6216\u8005\u4f7f\u5b50\u8fdb\u7a0b\u7684\u50f5\u5c38\u6001\u7acb\u5373\u7ed3\u675f #include\uff1csys/types.h\uff1e #include\uff1csys/wait.h\uff1e pid_t wait(int*stat_loc); pid_t waitpid(pid_t pid,int*stat_loc,int options); wait\u51fd\u6570\u5c06\u963b\u585e\u8fdb\u7a0b\uff0c\u76f4\u5230\u8be5\u8fdb\u7a0b\u7684\u67d0\u4e2a\u5b50\u8fdb\u7a0b\u7ed3\u675f\u8fd0\u884c\u4e3a\u6b62\u3002 \u5b83\u8fd4\u56de\u7ed3\u675f\u8fd0\u884c\u7684\u5b50\u8fdb\u7a0b\u7684PID\uff0c\u5e76\u5c06\u8be5\u5b50\u8fdb\u7a0b\u7684\u9000\u51fa\u72b6\u6001\u4fe1\u606f\u5b58\u50a8\u4e8estat_loc\u53c2\u6570\u6307\u5411\u7684\u5185\u5b58\u4e2d\u3002sys/wait.h\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u51e0\u4e2a\u5b8f\u6765\u5e2e\u52a9\u89e3\u91ca\u5b50\u8fdb\u7a0b\u7684\u9000\u51fa\u72b6\u6001\u4fe1\u606f **waitpid**\u53ea\u7b49\u5f85\u7531pid\u53c2\u6570\u6307\u5b9a\u7684\u5b50\u8fdb\u7a0b\u3002\u5982\u679cpid\u53d6\u503c\u4e3a-1\uff0c\u90a3\u4e48\u5b83\u5c31\u548cwait\u51fd\u6570\u76f8\u540c\uff0c\u5373\u7b49\u5f85\u4efb\u610f\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u7ed3\u675f\u3002 \u5f53options\u7684\u53d6\u503c\u662fWNOHANG\u65f6\uff0cwaitpid\u8c03\u7528\u5c06\u662f\u975e\u963b\u585e\u7684\u6307\u5b9a\u7684\u76ee\u6807\u5b50\u8fdb\u7a0b\u8fd8\u6ca1\u6709\u7ed3\u675f\u6216\u610f\u5916\u7ec8\u6b62\uff0c\u5219waitpid\u7acb\u5373\u8fd4\u56de0\uff1b\u5982\u679c\u76ee\u6807\u5b50\u8fdb\u7a0b\u786e\u5b9e\u6b63\u5e38\u9000\u51fa\u4e86\uff0c\u5219waitpid\u8fd4\u56de\u8be5\u5b50\u8fdb\u7a0b\u7684PID\u3002waitpid\u8c03\u7528\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 \u5f53\u4e00\u4e2a\u8fdb\u7a0b\u7ed3\u675f\u65f6\uff0c\u5b83\u5c06\u7ed9\u5176\u7236\u8fdb\u7a0b\u53d1\u9001\u4e00\u4e2aSIGCHLD\u4fe1\u53f7\u3002 \u5728\u7236\u8fdb\u7a0b\u4e2d\u6355\u83b7SIGCHLD\u4fe1\u53f7\uff0c\u5e76\u5728\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u4e2d\u8c03\u7528waitpid\u51fd\u6570\u4ee5\u201c\u5f7b\u5e95\u7ed3\u675f\u201d\u4e00\u4e2a\u5b50\u8fdb\u7a0b static void handle_child(int sig) { pid_t pid; int stat; while((pid=waitpid(-1,\uff06stat,WNOHANG))\uff1e0) { /*\u5bf9\u7ed3\u675f\u7684\u5b50\u8fdb\u7a0b\u8fdb\u884c\u5584\u540e\u5904\u7406*/ } }","title":"\u5904\u7406\u50f5\u5c38\u8fdb\u7a0b"},{"location":"linux/process/#pipe","text":"\u7ba1\u9053\u80fd\u5728\u7236\u3001\u5b50\u8fdb\u7a0b\u95f4\u4f20\u9012\u6570\u636e\uff0c\u5229\u7528\u7684\u662ffork\u8c03\u7528\u4e4b\u540e\u4e24\u4e2a\u7ba1\u9053\u6587\u4ef6\u63cf\u8ff0\u7b26\uff08fd[0]\u548cfd[1]\uff09\u90fd\u4fdd\u6301\u6253\u5f00\u3002","title":"pipe"},{"location":"linux/process/#\u4fe1\u53f7\u91cf","text":"\u4fe1\u53f7\u91cf\uff08Semaphore\uff09\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u53d8\u91cf\uff0c\u5b83\u53ea\u80fd\u53d6\u81ea\u7136\u6570\u503c\u5e76\u4e14\u53ea\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a\u7b49\u5f85\uff08wait\uff09\u548c\u4fe1\u53f7\uff08signal\uff09\u3002 \u5bf9\u4fe1\u53f7\u91cf\u7684\u8fd9\u4e24\u79cd\u64cd\u4f5c\u66f4\u5e38\u7528\u7684\u79f0\u547c\u662fP\u3001V\u64cd\u4f5c\u3002\u8fd9\u4e24\u4e2a\u5b57\u6bcd\u6765\u81ea\u4e8e\u8377\u5170\u8bed\u5355\u8bcdpasseren\uff08\u4f20\u9012\uff0c\u5c31\u597d\u50cf\u8fdb\u5165\u4e34\u754c\u533a\uff09\u548cvrijgeven\uff08\u91ca\u653e\uff0c\u5c31\u597d\u50cf\u9000\u51fa\u4e34\u754c\u533a\uff09\u3002\u5047\u8bbe\u6709\u4fe1\u53f7\u91cfSV\uff0c\u5219\u5bf9\u5b83\u7684P\u3001V\u64cd\u4f5c\u542b\u4e49\u5982\u4e0b\uff1a \u2751P(SV)\uff0c\u5982\u679cSV\u7684\u503c\u5927\u4e8e0\uff0c\u5c31\u5c06\u5b83\u51cf1\uff1b\u5982\u679cSV\u7684\u503c\u4e3a0\uff0c\u5219\u6302\u8d77\u8fdb\u7a0b\u7684\u6267\u884c\u3002 \u2751V(SV)\uff0c\u5982\u679c\u6709\u5176\u4ed6\u8fdb\u7a0b\u56e0\u4e3a\u7b49\u5f85SV\u800c\u6302\u8d77\uff0c\u5219\u5524\u9192\u4e4b\uff1b\u5982\u679c\u6ca1\u6709\uff0c\u5219\u5c06SV\u52a01\u3002 Linux\u4fe1\u53f7\u91cf\u7684API\u90fd\u5b9a\u4e49\u5728sys/sem.h\u5934\u6587\u4ef6\u4e2d\uff0c\u4e3b\u8981\u5305\u542b3\u4e2a\u7cfb\u7edf\u8c03\u7528\uff1asemget\u3001semop\u548csemctl\u3002 #include\uff1csys/sem.h\uff1e int semget(key_t key,int num_sems,int sem_flags); semget\u7cfb\u7edf\u8c03\u7528\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4fe1\u53f7\u91cf\u96c6\uff0c\u6216\u8005\u83b7\u53d6\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u4fe1\u53f7\u91cf\u96c6\u3002 key\u53c2\u6570\u662f\u4e00\u4e2a\u952e\u503c\uff0c\u7528\u6765\u6807\u8bc6\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684\u4fe1\u53f7\u91cf\u96c6\uff0c\u5c31\u50cf\u6587\u4ef6\u540d\u5168\u5c40\u552f\u4e00\u5730\u6807\u8bc6\u4e00\u4e2a\u6587\u4ef6\u4e00\u6837\u3002\u8981\u901a\u8fc7\u4fe1\u53f7\u91cf\u901a\u4fe1\u7684\u8fdb\u7a0b\u9700\u8981\u4f7f\u7528\u76f8\u540c\u7684\u952e\u503c\u6765\u521b\u5efa/\u83b7\u53d6\u8be5\u4fe1\u53f7\u91cf\u3002 \u56fe\u300013-2\u3000\u4f7f\u7528\u4fe1\u53f7\u91cf\u4fdd\u62a4\u5173\u952e\u4ee3\u7801\u6bb5 \u5728\u56fe13-2\u4e2d\uff0c\u5f53\u5173\u952e\u4ee3\u7801\u6bb5\u53ef\u7528\u65f6\uff0c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cfSV\u7684\u503c\u4e3a1\uff0c\u8fdb\u7a0bA\u548cB\u90fd\u6709\u673a\u4f1a\u8fdb\u5165\u5173\u952e\u4ee3\u7801\u6bb5\u3002\u5982\u679c\u6b64\u65f6\u8fdb\u7a0bA\u6267\u884c\u4e86P(SV)\u64cd\u4f5c\u5c06SV\u51cf1\uff0c\u5219\u8fdb\u7a0bB\u82e5\u518d\u6267\u884cP(SV)\u64cd\u4f5c\u5c31\u4f1a\u88ab\u6302\u8d77\u3002\u76f4\u5230\u8fdb\u7a0bA\u79bb\u5f00\u5173\u952e\u4ee3\u7801\u6bb5\uff0c\u5e76\u6267\u884cV(SV)\u64cd\u4f5c\u5c06SV\u52a01\uff0c\u5173\u952e\u4ee3\u7801\u6bb5\u624d\u91cd\u65b0\u53d8\u5f97\u53ef\u7528\u3002\u5982\u679c\u6b64\u65f6\u8fdb\u7a0bB\u56e0\u4e3a\u7b49\u5f85SV\u800c\u5904\u4e8e\u6302\u8d77\u72b6\u6001\uff0c\u5219\u5b83\u5c06\u88ab\u5524\u9192\uff0c\u5e76\u8fdb\u5165\u5173\u952e\u4ee3\u7801\u6bb5\u3002\u540c\u6837\uff0c\u8fd9\u65f6\u8fdb\u7a0bA\u5982\u679c\u518d\u6267\u884cP(SV)\u64cd\u4f5c\uff0c\u5219\u4e5f\u53ea\u80fd\u88ab\u64cd\u4f5c\u7cfb\u7edf\u6302\u8d77\u4ee5\u7b49\u5f85\u8fdb\u7a0bB\u9000\u51fa\u5173\u952e\u4ee3\u7801\u6bb5\u3002 \u6ce8\u610f\u3000\u4f7f\u7528\u4e00\u4e2a\u666e\u901a\u53d8\u91cf\u6765\u6a21\u62df\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u662f\u884c\u4e0d\u901a\u7684\uff0c\u56e0\u4e3a\u6240\u6709\u9ad8\u7ea7\u8bed\u8a00\u90fd\u6ca1\u6709\u4e00\u4e2a\u539f\u5b50\u64cd\u4f5c\u53ef\u4ee5\u540c\u65f6\u5b8c\u6210\u5982\u4e0b\u4e24\u6b65\u64cd\u4f5c\uff1a\u68c0\u6d4b\u53d8\u91cf\u662f\u5426\u4e3atrue/false\uff0c\u5982\u679c\u662f\u5219\u518d\u5c06\u5b83\u8bbe\u7f6e\u4e3afalse/true\u3002 Linux\u4fe1\u53f7\u91cf\u7684API\u90fd\u5b9a\u4e49\u5728sys/sem.h\u5934\u6587\u4ef6\u4e2d\uff0c\u4e3b\u8981\u5305\u542b3\u4e2a\u7cfb\u7edf\u8c03\u7528\uff1asemget\u3001semop\u548csemctl\u3002\u5b83\u4eec\u90fd\u88ab\u8bbe\u8ba1\u4e3a\u64cd\u4f5c\u4e00\u7ec4\u4fe1\u53f7\u91cf\uff0c\u5373\u4fe1\u53f7\u91cf\u96c6\uff0c\u800c\u4e0d\u662f\u5355\u4e2a\u4fe1\u53f7\u91cf\uff0c\u56e0\u6b64\u8fd9\u4e9b\u63a5\u53e3\u770b\u4e0a\u53bb\u591a\u5c11\u6bd4\u6211\u4eec\u671f\u671b\u7684\u8981\u590d\u6742\u4e00\u70b9\u3002\u6211\u4eec\u5c06\u52063\u5c0f\u8282\u4f9d\u6b21\u8ba8\u8bba\u4e4b\u3002 13.5.2\u3000semget\u7cfb\u7edf\u8c03\u7528 semget\u7cfb\u7edf\u8c03\u7528\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4fe1\u53f7\u91cf\u96c6\uff0c\u6216\u8005\u83b7\u53d6\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u4fe1\u53f7\u91cf\u96c6\u3002\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a","title":"\u4fe1\u53f7\u91cf"},{"location":"linux/process/#includesyssemh","text":"int semget(key_t key,int num_sems,int sem_flags); key\u53c2\u6570\u662f\u4e00\u4e2a\u952e\u503c\uff0c\u7528\u6765\u6807\u8bc6\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684\u4fe1\u53f7\u91cf\u96c6\uff0c\u5c31\u50cf\u6587\u4ef6\u540d\u5168\u5c40\u552f\u4e00\u5730\u6807\u8bc6\u4e00\u4e2a\u6587\u4ef6\u4e00\u6837\u3002\u8981\u901a\u8fc7\u4fe1\u53f7\u91cf\u901a\u4fe1\u7684\u8fdb\u7a0b\u9700\u8981\u4f7f\u7528\u76f8\u540c\u7684\u952e\u503c\u6765\u521b\u5efa/\u83b7\u53d6\u8be5\u4fe1\u53f7\u91cf\u3002 num_sems\u53c2\u6570\u6307\u5b9a\u8981\u521b\u5efa/\u83b7\u53d6\u7684\u4fe1\u53f7\u91cf\u96c6\u4e2d\u4fe1\u53f7\u91cf\u7684\u6570\u76ee\u3002\u5982\u679c\u662f\u521b\u5efa\u4fe1\u53f7\u91cf\uff0c\u5219\u8be5\u503c\u5fc5\u987b\u88ab\u6307\u5b9a\uff1b\u5982\u679c\u662f\u83b7\u53d6\u5df2\u7ecf\u5b58\u5728\u7684\u4fe1\u53f7\u91cf\uff0c\u5219\u53ef\u4ee5\u628a\u5b83\u8bbe\u7f6e\u4e3a0\u3002 sem_flags\u53c2\u6570\u6307\u5b9a\u4e00\u7ec4\u6807\u5fd7\u3002\u5b83\u4f4e\u7aef\u76849\u4e2a\u6bd4\u7279\u662f\u8be5\u4fe1\u53f7\u91cf\u7684\u6743\u9650\uff0c\u5176\u683c\u5f0f\u548c\u542b\u4e49\u90fd\u4e0e\u7cfb\u7edf\u8c03\u7528open\u7684mode\u53c2\u6570\u76f8\u540c\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u53ef\u4ee5\u548cIPC_CREAT\u6807\u5fd7\u505a\u6309\u4f4d\u201c\u6216\u201d\u8fd0\u7b97\u4ee5\u521b\u5efa\u65b0\u7684\u4fe1\u53f7\u91cf\u96c6\u3002\u6b64\u65f6\u5373\u4f7f\u4fe1\u53f7\u91cf\u5df2\u7ecf\u5b58\u5728\uff0csemget\u4e5f\u4e0d\u4f1a\u4ea7\u751f\u9519\u8bef\u3002 semget\u6210\u529f\u65f6\u8fd4\u56de\u4e00\u4e2a\u6b63\u6574\u6570\u503c\uff0c\u5b83\u662f\u4fe1\u53f7\u91cf\u96c6\u7684\u6807\u8bc6\u7b26\uff1bsemget\u5931\u8d25\u65f6\u8fd4\u56de-1\uff0c\u5e76\u8bbe\u7f6eerrno\u3002 unsigned short semval ; /*\u4fe1\u53f7\u91cf\u7684\u503c*/ unsigned short semzcnt ; /*\u7b49\u5f85\u4fe1\u53f7\u91cf\u503c\u53d8\u4e3a0\u7684\u8fdb\u7a0b\u6570\u91cf*/ unsigned short semncnt ; /*\u7b49\u5f85\u4fe1\u53f7\u91cf\u503c\u589e\u52a0\u7684\u8fdb\u7a0b\u6570\u91cf*/ pid_t sempid ; /*\u6700\u540e\u4e00\u6b21\u6267\u884csemop\u64cd\u4f5c\u7684\u8fdb\u7a0bID*/ int semop ( int sem_id , struct sembuf * sem_ops , size_t num_sem_ops ); sem_id\u53c2\u6570\u662f\u7531semget\u8c03\u7528\u8fd4\u56de\u7684\u4fe1\u53f7\u91cf\u96c6\u6807\u8bc6\u7b26\uff0c\u7528\u4ee5\u6307\u5b9a\u88ab\u64cd\u4f5c\u7684\u76ee\u6807\u4fe1\u53f7\u91cf\u96c6\u3002 sem_ops\u53c2\u6570\u6307\u5411\u4e00\u4e2asembuf\u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u6570\u7ec4\uff0csembuf\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49 struct sembuf { unsigned short int sem_num ; short int sem_op ; short int sem_flg ; } sem_num\u6210\u5458\u662f\u4fe1\u53f7\u91cf\u96c6\u4e2d\u4fe1\u53f7\u91cf\u7684\u7f16\u53f7\uff0c0\u8868\u793a\u4fe1\u53f7\u91cf\u96c6\u4e2d\u7684\u7b2c\u4e00\u4e2a\u4fe1\u53f7\u91cf\u3002 sem_op\u6210\u5458\u6307\u5b9a\u64cd\u4f5c\u7c7b\u578b\uff0c\u5176\u53ef\u9009\u503c\u4e3a\u6b63\u6574\u6570\u30010\u548c\u8d1f\u6574\u6570\u3002 sem_flg\u7684\u53ef\u9009\u503c\u662fIPC_NOWAIT\u548cSEM_UNDO\u3002 - IPC_NOWAIT\u7684\u542b\u4e49\u662f\uff0c\u65e0\u8bba\u4fe1\u53f7\u91cf\u64cd\u4f5c\u662f\u5426\u6210\u529f\uff0csemop\u8c03\u7528\u90fd\u5c06\u7acb\u5373\u8fd4\u56de - SEM_UNDO\u7684\u542b\u4e49\u662f\uff0c\u5f53\u8fdb\u7a0b\u9000\u51fa\u65f6\u53d6\u6d88\u6b63\u5728\u8fdb\u884c\u7684semop\u64cd\u4f5c\u3002 \u5982\u679csem_op\u5927\u4e8e0\uff0c\u5219semop\u5c06\u88ab\u64cd\u4f5c\u7684\u4fe1\u53f7\u91cf\u7684\u503csemval\u589e\u52a0sem_op\u3002\u8be5\u64cd\u4f5c\u8981\u6c42\u8c03\u7528\u8fdb\u7a0b\u5bf9\u88ab\u64cd\u4f5c\u4fe1\u53f7\u91cf\u96c6\u62e5\u6709\u5199\u6743\u9650\u3002 \u5982\u679csem_op\u7b49\u4e8e0\uff0c\u5219\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u201c\u7b49\u5f850\u201d\uff08wait-for-zero\uff09\u64cd\u4f5c\u3002\u8be5\u64cd\u4f5c\u8981\u6c42\u8c03\u7528\u8fdb\u7a0b\u5bf9\u88ab\u64cd\u4f5c\u4fe1\u53f7\u91cf\u96c6\u62e5\u6709\u8bfb\u6743\u9650\u3002 \u5982\u679csem_op\u5c0f\u4e8e0\uff0c\u5219\u8868\u793a\u5bf9\u4fe1\u53f7\u91cf\u503c\u8fdb\u884c\u51cf\u64cd\u4f5c\uff0c\u5373\u671f\u671b\u83b7\u5f97\u4fe1\u53f7\u91cf\u3002\u8be5\u64cd\u4f5c\u8981\u6c42\u8c03\u7528\u8fdb\u7a0b\u5bf9\u88ab\u64cd\u4f5c\u4fe1\u53f7\u91cf\u96c6\u62e5\u6709\u5199\u6743\u9650\u3002 semop\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002\u5931\u8d25\u7684\u65f6\u5019\uff0csem_ops\u6570\u7ec4\u4e2d\u6307\u5b9a\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u4e0d\u88ab\u6267\u884c\u3002 #include\uff1csys/sem.h\uff1e int semctl(int sem_id,int sem_num,int command,...); semctl\u7cfb\u7edf\u8c03\u7528\u5141\u8bb8\u8c03\u7528\u8005\u5bf9\u4fe1\u53f7\u91cf\u8fdb\u884c\u76f4\u63a5\u63a7\u5236\u3002 sem_id\u53c2\u6570\u662f\u7531semget\u8c03\u7528\u8fd4\u56de\u7684\u4fe1\u53f7\u91cf\u96c6\u6807\u8bc6\u7b26\uff0c\u7528\u4ee5\u6307\u5b9a\u88ab\u64cd\u4f5c\u7684\u4fe1\u53f7\u91cf\u96c6 sem_num\u53c2\u6570\u6307\u5b9a\u88ab\u64cd\u4f5c\u7684\u4fe1\u53f7\u91cf\u5728\u4fe1\u53f7\u91cf\u96c6\u4e2d\u7684\u7f16\u53f7\u3002 command\u53c2\u6570\u6307\u5b9a\u8981\u6267\u884c\u7684\u547d\u4ee4\u3002\u6709\u7684\u547d\u4ee4\u9700\u8981\u8c03\u7528\u8005\u4f20\u9012\u7b2c4\u4e2a\u53c2\u6570\u3002\u7b2c4\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u7531\u7528\u6237\u81ea\u5df1\u5b9a\u4e49\uff0c\u4f46sys/sem.h\u5934\u6587\u4ef6\u7ed9\u51fa\u4e86\u5b83\u7684\u63a8\u8350\u683c\u5f0f union semun { int val ; /*\u7528\u4e8eSETVAL\u547d\u4ee4*/ struct semid_ds * buf ; /*\u7528\u4e8eIPC_STAT\u548cIPC_SET\u547d\u4ee4*/ unsigned short * array ; /*\u7528\u4e8eGETALL\u548cSETALL\u547d\u4ee4*/ struct seminfo * __buf ; /*\u7528\u4e8eIPC_INFO\u547d\u4ee4*/ }; struct seminfo { int semmap ; /*Linux\u5185\u6838\u6ca1\u6709\u4f7f\u7528*/ int semmni ; /*\u7cfb\u7edf\u6700\u591a\u53ef\u4ee5\u62e5\u6709\u7684\u4fe1\u53f7\u91cf\u96c6\u6570\u76ee*/ int semmns ; /*\u7cfb\u7edf\u6700\u591a\u53ef\u4ee5\u62e5\u6709\u7684\u4fe1\u53f7\u91cf\u6570\u76ee*/ int semmnu ; /*Linux\u5185\u6838\u6ca1\u6709\u4f7f\u7528*/ int semmsl ; /*\u4e00\u4e2a\u4fe1\u53f7\u91cf\u96c6\u6700\u591a\u5141\u8bb8\u5305\u542b\u7684\u4fe1\u53f7\u91cf\u6570\u76ee*/ int semopm ; /*semop\u4e00\u6b21\u6700\u591a\u80fd\u6267\u884c\u7684sem_op\u64cd\u4f5c\u6570\u76ee*/ int semume ; /*Linux\u5185\u6838\u6ca1\u6709\u4f7f\u7528*/ int semusz ; /*sem_undo\u7ed3\u6784\u4f53\u7684\u5927\u5c0f*/ int semvmx ; /*\u6700\u5927\u5141\u8bb8\u7684\u4fe1\u53f7\u91cf\u503c*/ /*\u6700\u591a\u5141\u8bb8\u7684UNDO\u6b21\u6570\uff08\u5e26SEM_UNDO\u6807\u5fd7\u7684semop\u64cd\u4f5c\u7684\u6b21\u6570\uff09*/ int semaem ; }; semctl\u652f\u6301\u7684\u6240\u6709\u547d\u4ee4 GETNCNT\u3001GETPID\u3001GETVAL\u3001GETZCNT\u548cSETVAL\u64cd\u4f5c\u7684\u662f\u5355\u4e2a\u4fe1\u53f7\u91cf\uff0c\u5b83\u662f\u7531\u6807\u8bc6\u7b26sem_id\u6307\u5b9a\u7684\u4fe1\u53f7\u91cf\u96c6\u4e2d\u7684\u7b2csem_num\u4e2a\u4fe1\u53f7\u91cf\uff1b\u800c\u5176\u4ed6\u64cd\u4f5c\u9488\u5bf9\u7684\u662f\u6574\u4e2a\u4fe1\u53f7\u91cf\u96c6\uff0c\u6b64\u65f6semctl\u7684\u53c2\u6570sem_num\u88ab\u5ffd\u7565\u3002","title":"include\uff1csys/sem.h\uff1e"},{"location":"linux/process/#\u5171\u4eab\u5185\u5b58","text":"\u5171\u4eab\u5185\u5b58\u662f\u6700\u9ad8\u6548\u7684IPC\u673a\u5236\uff0c\u56e0\u4e3a\u5b83\u4e0d\u6d89\u53ca\u8fdb\u7a0b\u4e4b\u95f4\u7684\u4efb\u4f55\u6570\u636e\u4f20\u8f93\u3002","title":"\u5171\u4eab\u5185\u5b58"},{"location":"linux/process/#shmget\u7cfb\u7edf\u8c03\u7528","text":"shmget\u7cfb\u7edf\u8c03\u7528\u521b\u5efa\u4e00\u6bb5\u65b0\u7684\u5171\u4eab\u5185\u5b58\uff0c\u6216\u8005\u83b7\u53d6\u4e00\u6bb5\u5df2\u7ecf\u5b58\u5728\u7684\u5171\u4eab\u5185\u5b58\u3002 #include\uff1csys/shm.h\uff1e int shmget ( key_t key , size_t size , int shmflg ); key\u53c2\u6570\u662f\u4e00\u4e2a\u952e\u503c\uff0c\u7528\u6765\u6807\u8bc6\u4e00\u6bb5\u5168\u5c40\u552f\u4e00\u7684\u5171\u4eab\u5185\u5b58\u3002 size\u53c2\u6570\u6307\u5b9a\u5171\u4eab\u5185\u5b58\u7684\u5927\u5c0f\uff0c\u5355\u4f4d\u662f\u5b57\u8282\u3002\u5982\u679c\u662f\u521b\u5efa\u65b0\u7684\u5171\u4eab\u5185\u5b58\uff0c\u5219size\u503c\u5fc5\u987b\u88ab\u6307\u5b9a\u3002\u5982\u679c\u662f\u83b7\u53d6\u5df2\u7ecf\u5b58\u5728\u7684\u5171\u4eab\u5185\u5b58\uff0c\u5219\u53ef\u4ee5\u628asize\u8bbe\u7f6e\u4e3a0\u3002 hmflg\u53c2\u6570\u7684\u4f7f\u7528\u548c\u542b\u4e49\u4e0esemget\u7cfb\u7edf\u8c03\u7528\u7684sem_flags\u53c2\u6570\u76f8\u540c\u3002 \u2751SHM_HUGETLB\uff0c\u7c7b\u4f3c\u4e8emmap\u7684MAP_HUGETLB\u6807\u5fd7\uff0c\u7cfb\u7edf\u5c06\u4f7f\u7528\u201c\u5927\u9875\u9762\u201d\u6765\u4e3a\u5171\u4eab\u5185\u5b58\u5206\u914d\u7a7a\u95f4\u3002 \u2751SHM_NORESERVE\uff0c\u7c7b\u4f3c\u4e8emmap\u7684MAP_NORESERVE\u6807\u5fd7\uff0c\u4e0d\u4e3a\u5171\u4eab\u5185\u5b58\u4fdd\u7559\u4ea4\u6362\u5206\u533a\uff08swap\u7a7a\u95f4\uff09\u3002\u8fd9\u6837\uff0c\u5f53\u7269\u7406\u5185\u5b58\u4e0d\u8db3\u7684\u65f6\u5019\uff0c\u5bf9\u8be5\u5171\u4eab\u5185\u5b58\u6267\u884c\u5199\u64cd\u4f5c\u5c06\u89e6\u53d1SIGSEGV\u4fe1\u53f7\u3002 shmget\u6210\u529f\u65f6\u8fd4\u56de\u4e00\u4e2a\u6b63\u6574\u6570\u503c\uff0c\u5b83\u662f\u5171\u4eab\u5185\u5b58\u7684\u6807\u8bc6\u7b26\u3002shmget\u5931\u8d25\u65f6\u8fd4\u56de-1\uff0c\u5e76\u8bbe\u7f6eerrno\u3002","title":"shmget\u7cfb\u7edf\u8c03\u7528"},{"location":"linux/process/#shmat\u548cshmdt\u7cfb\u7edf\u8c03\u7528","text":"\u5171\u4eab\u5185\u5b58\u88ab\u521b\u5efa/\u83b7\u53d6\u4e4b\u540e\uff0c\u6211\u4eec\u4e0d\u80fd\u7acb\u5373\u8bbf\u95ee\u5b83\uff0c\u800c\u662f\u9700\u8981\u5148\u5c06\u5b83\u5173\u8054\u5230\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u4e2d\u3002\u4f7f\u7528\u5b8c\u5171\u4eab\u5185\u5b58\u4e4b\u540e\uff0c\u6211\u4eec\u4e5f\u9700\u8981\u5c06\u5b83\u4ece\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u4e2d\u5206\u79bb\u3002 #include\uff1csys/shm.h\uff1e void * shmat ( int shm_id , const void * shm_addr , int shmflg ); int shmdt ( const void * shm_addr ); shm_id\u53c2\u6570\u662f\u7531shmget\u8c03\u7528\u8fd4\u56de\u7684\u5171\u4eab\u5185\u5b58\u6807\u8bc6\u7b26\u3002 shm_addr\u53c2\u6570\u6307\u5b9a\u5c06\u5171\u4eab\u5185\u5b58\u5173\u8054\u5230\u8fdb\u7a0b\u7684\u54ea\u5757\u5730\u5740\u7a7a\u95f4 shmflg\u53c2\u6570\u7684\u53ef\u9009\u6807\u5fd7SHM_RND\u7684\u5f71\u54cd\uff1a \u2751\u5982\u679cshm_addr\u4e3aNULL\uff0c\u5219\u88ab\u5173\u8054\u7684\u5730\u5740\u7531\u64cd\u4f5c\u7cfb\u7edf\u9009\u62e9\u3002\u8fd9\u662f\u63a8\u8350\u7684\u505a\u6cd5\uff0c\u4ee5\u786e\u4fdd\u4ee3\u7801\u7684\u53ef\u79fb\u690d\u6027\u3002 \u2751\u5982\u679cshm_addr\u975e\u7a7a\uff0c\u5e76\u4e14SHM_RND\u6807\u5fd7\u672a\u88ab\u8bbe\u7f6e\uff0c\u5219\u5171\u4eab\u5185\u5b58\u88ab\u5173\u8054\u5230addr\u6307\u5b9a\u7684\u5730\u5740\u5904\u3002 \u2751\u5982\u679cshm_addr\u975e\u7a7a\uff0c\u5e76\u4e14\u8bbe\u7f6e\u4e86SHM_RND\u6807\u5fd7\uff0c\u5219\u88ab\u5173\u8054\u7684\u5730\u5740\u662f[shm_addr-(shm_addr%SHMLBA)]\u3002SHMLBA\u7684\u542b\u4e49\u662f\u201c\u6bb5\u4f4e\u7aef\u8fb9\u754c\u5730\u5740\u500d\u6570\u201d\uff08Segment Low Boundary Address Multiple\uff09\uff0c\u5b83\u5fc5\u987b\u662f\u5185\u5b58\u9875\u9762\u5927\u5c0f\uff08PAGE_SIZE\uff09\u7684\u6574\u6570\u500d\u3002 \u2751SHM_RDONLY\u3002\u8fdb\u7a0b\u4ec5\u80fd\u8bfb\u53d6\u5171\u4eab\u5185\u5b58\u4e2d\u7684\u5185\u5bb9\u3002\u82e5\u6ca1\u6709\u6307\u5b9a\u8be5\u6807\u5fd7\uff0c\u5219\u8fdb\u7a0b\u53ef\u540c\u65f6\u5bf9\u5171\u4eab\u5185\u5b58\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\uff08\u5f53\u7136\uff0c\u8fd9\u9700\u8981\u5728\u521b\u5efa\u5171\u4eab\u5185\u5b58\u7684\u65f6\u5019\u6307\u5b9a\u5176\u8bfb\u5199\u6743\u9650\uff09\u3002 \u2751SHM_REMAP\u3002\u5982\u679c\u5730\u5740shmaddr\u5df2\u7ecf\u88ab\u5173\u8054\u5230\u4e00\u6bb5\u5171\u4eab\u5185\u5b58\u4e0a\uff0c\u5219\u91cd\u65b0\u5173\u8054\u3002 \u2751SHM_EXEC\u3002\u5b83\u6307\u5b9a\u5bf9\u5171\u4eab\u5185\u5b58\u6bb5\u7684\u6267\u884c\u6743\u9650\u3002\u5bf9\u5171\u4eab\u5185\u5b58\u800c\u8a00\uff0c\u6267\u884c\u6743\u9650\u5b9e\u9645\u4e0a\u548c\u8bfb\u6743\u9650\u662f\u4e00\u6837\u7684\u3002 shmat\u6210\u529f\u65f6\u8fd4\u56de\u5171\u4eab\u5185\u5b58\u88ab\u5173\u8054\u5230\u7684\u5730\u5740\uff0c\u5931\u8d25\u5219\u8fd4\u56de(void*)-1\u5e76\u8bbe\u7f6eerrno\u3002shmat\u6210\u529f\u65f6\uff0c\u5c06\u4fee\u6539\u5185\u6838\u6570\u636e\u7ed3\u6784shmid_ds\u7684\u90e8\u5206\u5b57\u6bb5\uff0c\u5982\u4e0b\uff1a \u2751\u5c06shm_nattach\u52a01\u3002 \u2751\u5c06shm_lpid\u8bbe\u7f6e\u4e3a\u8c03\u7528\u8fdb\u7a0b\u7684PID\u3002 \u2751\u5c06shm_atime\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7684\u65f6\u95f4\u3002 shmdt\u51fd\u6570\u5c06\u5173\u8054\u5230shm_addr\u5904\u7684\u5171\u4eab\u5185\u5b58\u4ece\u8fdb\u7a0b\u4e2d\u5206\u79bb\u3002\u5b83\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002shmdt\u5728\u6210\u529f\u8c03\u7528\u65f6\u5c06\u4fee\u6539\u5185\u6838\u6570\u636e\u7ed3\u6784shmid_ds\u7684\u90e8\u5206\u5b57\u6bb5\uff0c\u5982\u4e0b\uff1a \u2751\u5c06shm_nattach\u51cf1\u3002 \u2751\u5c06shm_lpid\u8bbe\u7f6e\u4e3a\u8c03\u7528\u8fdb\u7a0b\u7684PID\u3002 \u2751\u5c06shm_dtime\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7684\u65f6\u95f4\u3002","title":"shmat\u548cshmdt\u7cfb\u7edf\u8c03\u7528"},{"location":"linux/process/#shmctl\u7cfb\u7edf\u8c03\u7528","text":"#include\uff1csys/shm.h\uff1e int shmctl ( int shm_id , int command , struct shmid_ds * buf ); shm_id\u53c2\u6570\u662f\u7531shmget\u8c03\u7528\u8fd4\u56de\u7684\u5171\u4eab\u5185\u5b58\u6807\u8bc6\u7b26\u3002 command\u53c2\u6570\u6307\u5b9a\u8981\u6267\u884c\u7684\u547d\u4ee4\u3002 shmctl\u652f\u6301\u7684\u6240\u6709\u547d\u4ee4\u5982\u8868","title":"shmctl\u7cfb\u7edf\u8c03\u7528"},{"location":"linux/process/#\u5171\u4eab\u5185\u5b58\u7684posix\u65b9\u6cd5","text":"#include\uff1csys/mman.h\uff1e #include\uff1csys/stat.h\uff1e #include\uff1cfcntl.h\uff1e int shm_open ( const char * name , int oflag , mode_t mode ); shm_open\u7684\u4f7f\u7528\u65b9\u6cd5\u4e0eopen\u7cfb\u7edf\u8c03\u7528\u5b8c\u5168\u76f8\u540c\u3002 name\u53c2\u6570\u6307\u5b9a\u8981\u521b\u5efa/\u6253\u5f00\u7684\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u3002 oflag\u53c2\u6570\u6307\u5b9a\u521b\u5efa\u65b9\u5f0f\u3002 \u2751O_RDONLY\u3002\u4ee5\u53ea\u8bfb\u65b9\u5f0f\u6253\u5f00\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u3002 \u2751O_RDWR\u3002\u4ee5\u53ef\u8bfb\u3001\u53ef\u5199\u65b9\u5f0f\u6253\u5f00\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u3002 \u2751O_CREAT\u3002\u5982\u679c\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u4e4b\u3002\u6b64\u65f6mode\u53c2\u6570\u7684\u6700\u4f4e9\u4f4d\u5c06\u6307\u5b9a\u8be5\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u7684\u8bbf\u95ee\u6743\u9650\u3002\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u88ab\u521b\u5efa\u7684\u65f6\u5019\uff0c\u5176\u521d\u59cb\u957f\u5ea6\u4e3a0\u3002 \u2751O_EXCL\u3002\u548cO_CREAT\u4e00\u8d77\u4f7f\u7528\uff0c\u5982\u679c\u7531name\u6307\u5b9a\u7684\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u5df2\u7ecf\u5b58\u5728\uff0c\u5219shm_open\u8c03\u7528\u8fd4\u56de\u9519\u8bef\uff0c\u5426\u5219\u5c31\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u3002 \u2751O_TRUNC\u3002\u5982\u679c\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u628a\u5b83\u622a\u65ad\uff0c\u4f7f\u5176\u957f\u5ea6\u4e3a0\u3002 shm_open\u8c03\u7528\u6210\u529f\u65f6\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u8be5\u6587\u4ef6\u63cf\u8ff0\u7b26\u53ef\u7528\u4e8e\u540e\u7eed\u7684mmap\u8c03\u7528\uff0c\u4ece\u800c\u5c06\u5171\u4eab\u5185\u5b58\u5173\u8054\u5230\u8c03\u7528\u8fdb\u7a0b\u3002shm_open\u5931\u8d25\u65f6\u8fd4\u56de-1\uff0c\u5e76\u8bbe\u7f6eerrno\u3002 int shm_unlink ( const char * name ); \u8be5\u51fd\u6570\u5c06name\u53c2\u6570\u6307\u5b9a\u7684\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u6807\u8bb0\u4e3a\u7b49\u5f85\u5220\u9664\u3002\u5f53\u6240\u6709\u4f7f\u7528\u8be5\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u7684\u8fdb\u7a0b\u90fd\u4f7f\u7528ummap\u5c06\u5b83\u4ece\u8fdb\u7a0b\u4e2d\u5206\u79bb\u4e4b\u540e\uff0c\u7cfb\u7edf\u5c06\u9500\u6bc1\u8fd9\u4e2a\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u6240\u5360\u636e\u7684\u8d44\u6e90\u3002 test_shm.cpp","title":"\u5171\u4eab\u5185\u5b58\u7684POSIX\u65b9\u6cd5"},{"location":"linux/process/#\u6d88\u606f\u961f\u5217","text":"\u6d88\u606f\u961f\u5217\u662f\u5728\u4e24\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u4f20\u9012\u4e8c\u8fdb\u5236\u5757\u6570\u636e\u7684\u4e00\u79cd\u7b80\u5355\u6709\u6548\u7684\u65b9\u5f0f\u3002\u6bcf\u4e2a\u6570\u636e\u5757\u90fd\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\u7c7b\u578b\uff0c\u63a5\u6536\u65b9\u53ef\u4ee5\u6839\u636e\u7c7b\u578b\u6765\u6709\u9009\u62e9\u5730\u63a5\u6536\u6570\u636e\uff0c\u800c\u4e0d\u4e00\u5b9a\u50cf\u7ba1\u9053\u548c\u547d\u540d\u7ba1\u9053\u90a3\u6837\u5fc5\u987b\u4ee5\u5148\u8fdb\u5148\u51fa\u7684\u65b9\u5f0f\u63a5\u6536\u6570\u636e\u3002","title":"\u6d88\u606f\u961f\u5217"},{"location":"linux/process/#msgget\u7cfb\u7edf\u8c03\u7528","text":"#include\uff1csys/msg.h\uff1e int msgget ( key_t key , int msgflg ); key\u53c2\u6570\u662f\u4e00\u4e2a\u952e\u503c\uff0c\u7528\u6765\u6807\u8bc6\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684\u6d88\u606f\u961f\u5217\u3002 msgflg\u53c2\u6570\u4f7f\u7528\u548c\u542b\u4e49\u4e0esemget\u7cfb\u7edf\u8c03\u7528\u7684sem_flags\u53c2\u6570\u76f8\u540c\u3002 msgget\u6210\u529f\u65f6\u8fd4\u56de\u4e00\u4e2a\u6b63\u6574\u6570\u503c\uff0c\u5b83\u662f\u6d88\u606f\u961f\u5217\u7684\u6807\u8bc6\u7b26\u3002msgget\u5931\u8d25\u65f6\u8fd4\u56de-1\uff0c\u5e76\u8bbe\u7f6eerrno\u3002 \u5982\u679cmsgget\u7528\u4e8e\u521b\u5efa\u6d88\u606f\u961f\u5217\uff0c\u5219\u4e0e\u4e4b\u5173\u8054\u7684\u5185\u6838\u6570\u636e\u7ed3\u6784msqid_ds\u5c06\u88ab\u521b\u5efa\u5e76\u521d\u59cb\u5316\u3002msqid_ds\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49 struct msqid_ds { struct ipc_perm msg_perm ; /*\u6d88\u606f\u961f\u5217\u7684\u64cd\u4f5c\u6743\u9650*/ time_t msg_stime ; /*\u6700\u540e\u4e00\u6b21\u8c03\u7528msgsnd\u7684\u65f6\u95f4*/ time_t msg_rtime ; /*\u6700\u540e\u4e00\u6b21\u8c03\u7528msgrcv\u7684\u65f6\u95f4*/ time_t msg_ctime ; /*\u6700\u540e\u4e00\u6b21\u88ab\u4fee\u6539\u7684\u65f6\u95f4*/ unsigned long__msg_cbytes ; /*\u6d88\u606f\u961f\u5217\u4e2d\u5df2\u6709\u7684\u5b57\u8282\u6570*/ msgqnum_t msg_qnum ; /*\u6d88\u606f\u961f\u5217\u4e2d\u5df2\u6709\u7684\u6d88\u606f\u6570*/ msglen_t msg_qbytes ; /*\u6d88\u606f\u961f\u5217\u5141\u8bb8\u7684\u6700\u5927\u5b57\u8282\u6570*/ pid_t msg_lspid ; /*\u6700\u540e\u6267\u884cmsgsnd\u7684\u8fdb\u7a0b\u7684PID*/ pid_t msg_lrpid ; /*\u6700\u540e\u6267\u884cmsgrcv\u7684\u8fdb\u7a0b\u7684PID*/ };","title":"msgget\u7cfb\u7edf\u8c03\u7528"},{"location":"linux/process/#msgsnd\u7cfb\u7edf\u8c03\u7528","text":"msgsnd\u7cfb\u7edf\u8c03\u7528\u628a\u4e00\u6761\u6d88\u606f\u6dfb\u52a0\u5230\u6d88\u606f\u961f\u5217\u4e2d\u3002 #include\uff1csys/msg.h\uff1e int msgsnd ( int msqid , const void * msg_ptr , size_t msg_sz , int msgflg ); struct msgbuf { long mtype ; /*\u6d88\u606f\u7c7b\u578b*/ char mtext [ 512 ]; /*\u6d88\u606f\u6570\u636e*/ }; msqid\u53c2\u6570\u662f\u7531msgget\u8c03\u7528\u8fd4\u56de\u7684\u6d88\u606f\u961f\u5217\u6807\u8bc6\u7b26\u3002 msg_ptr\u53c2\u6570\u6307\u5411\u4e00\u4e2a\u51c6\u5907\u53d1\u9001\u7684\u6d88\u606f mtype\u6210\u5458\u6307\u5b9a\u6d88\u606f\u7684\u7c7b\u578b\uff0c\u5b83\u5fc5\u987b\u662f\u4e00\u4e2a\u6b63\u6574\u6570\u3002mtext\u662f\u6d88\u606f\u6570\u636e\u3002 msg_sz\u53c2\u6570\u662f\u6d88\u606f\u7684\u6570\u636e\u90e8\u5206\uff08mtext\uff09\u7684\u957f\u5ea6\u3002\u8fd9\u4e2a\u957f\u5ea6\u53ef\u4ee5\u4e3a0\uff0c\u8868\u793a\u6ca1\u6709\u6d88\u606f\u6570\u636e\u3002 msgflg\u53c2\u6570\u63a7\u5236msgsnd\u7684\u884c\u4e3a\u3002\u5b83\u901a\u5e38\u4ec5\u652f\u6301IPC_NOWAIT\u6807\u5fd7\uff0c\u5373\u4ee5\u975e\u963b\u585e\u7684\u65b9\u5f0f\u53d1\u9001\u6d88\u606f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53d1\u9001\u6d88\u606f\u65f6\u5982\u679c\u6d88\u606f\u961f\u5217\u6ee1\u4e86\uff0c\u5219msgsnd\u5c06\u963b\u585e\u3002\u82e5IPC_NOWAIT\u6807\u5fd7\u88ab\u6307\u5b9a\uff0c\u5219msgsnd\u5c06\u7acb\u5373\u8fd4\u56de\u5e76\u8bbe\u7f6eerrno\u4e3aEAGAIN\u3002","title":"msgsnd\u7cfb\u7edf\u8c03\u7528"},{"location":"linux/process/#msgrcv\u7cfb\u7edf\u8c03\u7528","text":"msgrcv\u7cfb\u7edf\u8c03\u7528\u4ece\u6d88\u606f\u961f\u5217\u4e2d\u83b7\u53d6\u6d88\u606f\u3002 int msgrcv ( int msqid , void * msg_ptr , size_t msg_sz , long int msgtype , int msgflg ); msqid\u53c2\u6570\u662f\u7531msgget\u8c03\u7528\u8fd4\u56de\u7684\u6d88\u606f\u961f\u5217\u6807\u8bc6\u7b26\u3002 msg_ptr\u53c2\u6570\u7528\u4e8e\u5b58\u50a8\u63a5\u6536\u7684\u6d88\u606f\uff0cmsg_sz\u53c2\u6570\u6307\u7684\u662f\u6d88\u606f\u6570\u636e\u90e8\u5206\u7684\u957f\u5ea6\u3002 msgtype\u53c2\u6570\u6307\u5b9a\u63a5\u6536\u4f55\u79cd\u7c7b\u578b\u7684\u6d88\u606f\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u51e0\u79cd\u65b9\u5f0f\u6765\u6307\u5b9a\u6d88\u606f\u7c7b\u578b\uff1a \u2751msgtype\u7b49\u4e8e0\u3002\u8bfb\u53d6\u6d88\u606f\u961f\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6d88\u606f\u3002 \u2751msgtype\u5927\u4e8e0\u3002\u8bfb\u53d6\u6d88\u606f\u961f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u7c7b\u578b\u4e3amsgtype\u7684\u6d88\u606f\uff08\u9664\u975e\u6307\u5b9a\u4e86\u6807\u5fd7MSG_EXCEPT\uff0c\u89c1\u540e\u6587\uff09\u3002 \u2751msgtype\u5c0f\u4e8e0\u3002\u8bfb\u53d6\u6d88\u606f\u961f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u7c7b\u578b\u503c\u6bd4msgtype\u7684\u7edd\u5bf9\u503c\u5c0f\u7684\u6d88\u606f\u3002 \u53c2\u6570msgflg\u63a7\u5236msgrcv\u51fd\u6570\u7684\u884c\u4e3a\u3002\u5b83\u53ef\u4ee5\u662f\u5982\u4e0b\u4e00\u4e9b\u6807\u5fd7\u7684\u6309\u4f4d\u6216\uff1a \u2751IPC_NOWAIT\u3002\u5982\u679c\u6d88\u606f\u961f\u5217\u4e2d\u6ca1\u6709\u6d88\u606f\uff0c\u5219msgrcv\u8c03\u7528\u7acb\u5373\u8fd4\u56de\u5e76\u8bbe\u7f6eerrno\u4e3aENOMSG\u3002 \u2751MSG_EXCEPT\u3002\u5982\u679cmsgtype\u5927\u4e8e0\uff0c\u5219\u63a5\u6536\u6d88\u606f\u961f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u975emsgtype\u7c7b\u578b\u7684\u6d88\u606f\u3002 \u2751MSG_NOERROR\u3002\u5982\u679c\u6d88\u606f\u6570\u636e\u90e8\u5206\u7684\u957f\u5ea6\u8d85\u8fc7\u4e86msg_sz\uff0c\u5c31\u5c06\u5b83\u622a\u65ad\u3002 \u5904\u4e8e\u963b\u585e\u72b6\u6001\u7684msgrcv\u8c03\u7528\u8fd8\u53ef\u80fd\u88ab\u5982\u4e0b\u4e24\u79cd\u5f02\u5e38\u60c5\u51b5\u6240\u4e2d\u65ad\uff1a \u2751\u6d88\u606f\u961f\u5217\u88ab\u79fb\u9664\u3002\u6b64\u65f6msgrcv\u8c03\u7528\u5c06\u7acb\u5373\u8fd4\u56de\u5e76\u8bbe\u7f6eerrno\u4e3aEIDRM\u3002 \u2751\u7a0b\u5e8f\u63a5\u6536\u5230\u4fe1\u53f7\u3002\u6b64\u65f6msgrcv\u8c03\u7528\u5c06\u7acb\u5373\u8fd4\u56de\u5e76\u8bbe\u7f6eerrno\u4e3aEINTR\u3002 msgrcv\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002msgrcv\u6210\u529f\u65f6\u5c06\u4fee\u6539\u5185\u6838\u6570\u636e\u7ed3\u6784msqid_ds\u7684\u90e8\u5206\u5b57\u6bb5\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u2751\u5c06msg_qnum\u51cf1\u3002 \u2751\u5c06msg_lrpid\u8bbe\u7f6e\u4e3a\u8c03\u7528\u8fdb\u7a0b\u7684PID\u3002 \u2751\u5c06msg_rtime\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7684\u65f6\u95f4\u3002","title":"msgrcv\u7cfb\u7edf\u8c03\u7528"},{"location":"linux/process/#msgctl\u7cfb\u7edf\u8c03\u7528","text":"msgctl\u7cfb\u7edf\u8c03\u7528\u63a7\u5236\u6d88\u606f\u961f\u5217\u7684\u67d0\u4e9b\u5c5e\u6027\u3002 #include\uff1csys/msg.h\uff1e int msgctl ( int msqid , int command , struct msqid_ds * buf ); msqid\u53c2\u6570\u662f\u7531msgget\u8c03\u7528\u8fd4\u56de\u7684\u5171\u4eab\u5185\u5b58\u6807\u8bc6\u7b26\u3002 command\u53c2\u6570\u6307\u5b9a\u8981\u6267\u884c\u7684\u547d\u4ee4\u3002 msgctl\u6210\u529f\u65f6\u7684\u8fd4\u56de\u503c\u53d6\u51b3\u4e8ecommand\u53c2\u6570, msgctl\u51fd\u6570\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002","title":"msgctl\u7cfb\u7edf\u8c03\u7528"},{"location":"linux/process/#socket\u4f20\u9012","text":"\u53ef\u4ee5\u5229\u7528UNIX\u57dfsocket\u5728\u8fdb\u7a0b\u95f4\u4f20\u9012\u7279\u6b8a\u7684\u8f85\u52a9\u6570\u636e\uff0c\u4ee5\u5b9e\u73b0\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u4f20\u9012 test_socket_share_process.cpp","title":"socket\u4f20\u9012"},{"location":"linux/quick_script/","text":"random mac # head -n 1 /dev/random|md5sum |awk '{print $1}'|sed 's/^\\(..\\)\\(..\\)\\(..\\)\\(..\\)\\(..\\).*$/00:\\1:\\2:\\3:\\4:\\5/'","title":"Quick script"},{"location":"linux/quick_script/#random-mac","text":"head -n 1 /dev/random|md5sum |awk '{print $1}'|sed 's/^\\(..\\)\\(..\\)\\(..\\)\\(..\\)\\(..\\).*$/00:\\1:\\2:\\3:\\4:\\5/'","title":"random mac"},{"location":"linux/serial_console/","text":"screen # screen /dev/ttyS0 9600 ctrl+A i info ctrl+A k exit","title":"Serial console"},{"location":"linux/serial_console/#screen","text":"screen /dev/ttyS0 9600 ctrl+A i info ctrl+A k exit","title":"screen"},{"location":"linux/socket_api/","text":"API # \u5927\u7aef # \u5b57\u8282\u5e8f\u5206\u4e3a\u5927\u7aef\u5b57\u8282\u5e8f\uff08big endian\uff09\u548c\u5c0f\u7aef\u5b57\u8282\u5e8f\uff08little endian\uff09\u3002\u5927\u7aef\u5b57\u8282\u5e8f\u662f\u6307\u4e00\u4e2a\u6574\u6570\u7684\u9ad8\u4f4d\u5b57\u8282\uff0823\uff5e31 bit\uff09\u5b58\u50a8\u5728\u5185\u5b58\u7684\u4f4e\u5730\u5740\u5904\uff0c\u4f4e\u4f4d\u5b57\u8282\uff080\uff5e7 bit\uff09\u5b58\u50a8\u5728\u5185\u5b58\u7684\u9ad8\u5730\u5740\u5904\u3002\u5c0f\u7aef\u5b57\u8282\u5e8f\u5219\u662f\u6307\u6574\u6570\u7684\u9ad8\u4f4d\u5b57\u8282\u5b58\u50a8\u5728\u5185\u5b58\u7684\u9ad8\u5730\u5740\u5904\uff0c\u800c\u4f4e\u4f4d\u5b57\u8282\u5219\u5b58\u50a8\u5728\u5185\u5b58\u7684\u4f4e\u5730\u5740\u5904\u3002 byteorder.c \u5728\u4e24\u53f0\u4f7f\u7528\u4e0d\u540c\u5b57\u8282\u5e8f\u7684\u4e3b\u673a\u4e4b\u95f4\u76f4\u63a5\u4f20\u9012\u65f6\uff0c\u63a5\u6536\u7aef\u5fc5\u7136\u9519\u8bef\u5730\u89e3\u91ca\u4e4b\u3002\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\u662f\uff1a\u53d1\u9001\u7aef\u603b\u662f\u628a\u8981\u53d1\u9001\u7684\u6570\u636e\u8f6c\u5316\u6210\u5927\u7aef\u5b57\u8282\u5e8f\u6570\u636e\u540e\u518d\u53d1\u9001\uff0c\u800c\u63a5\u6536\u7aef\u77e5\u9053\u5bf9\u65b9\u4f20\u9001\u8fc7\u6765\u7684\u6570\u636e\u603b\u662f\u91c7\u7528\u5927\u7aef\u5b57\u8282\u5e8f\uff0c\u6240\u4ee5\u63a5\u6536\u7aef\u53ef\u4ee5\u6839\u636e\u81ea\u8eab\u91c7\u7528\u7684\u5b57\u8282\u5e8f\u51b3\u5b9a\u662f\u5426\u5bf9\u63a5\u6536\u5230\u7684\u6570\u636e\u8fdb\u884c\u8f6c\u6362(\u5c0f\u7aef\u673a\u8f6c\u6362\uff0c\u5927\u7aef\u673a\u4e0d\u8f6c\u6362). \u5927\u7aef\u5b57\u8282\u5e8f\u4e5f\u79f0\u4e3a\u7f51\u7edc\u5b57\u8282\u5e8f \uff0c\u5b83\u7ed9\u6240\u6709\u63a5\u6536\u6570\u636e\u7684\u4e3b\u673a\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6b63\u786e\u89e3\u91ca\u6536\u5230\u7684\u683c\u5f0f\u5316\u6570\u636e\u7684\u4fdd\u8bc1\u3002 Linux\u63d0\u4f9b\u4e86\u5982\u4e0b4\u4e2a\u51fd\u6570\u6765\u5b8c\u6210\u4e3b\u673a\u5b57\u8282\u5e8f\u548c\u7f51\u7edc\u5b57\u8282\u5e8f\u4e4b\u95f4\u7684\u8f6c\u6362\uff1a #include\uff1cnetinet/in.h\uff1e //host to network long unsigned long int htonl(unsigned long int hostlong); unsigned short int htons(unsigned short int hostshort); unsigned long int ntohl(unsigned long int netlong); unsigned short int ntohs(unsigned short int netshort); socket\u5730\u5740 # #include\uff1cbits/socket.h\uff1e struct sockaddr { sa_family_t sa_family; char sa_data[14]; } sa_family\u6210\u5458\u662f\u5730\u5740\u65cf\u7c7b\u578b\uff08sa_family_t\uff09\u7684\u53d8\u91cf\u3002\u5730\u5740\u65cf\u7c7b\u578b\u901a\u5e38\u4e0e\u534f\u8bae\u65cf\u7c7b\u578b\u5bf9\u5e94\u3002 sa_data\u6210\u5458\u7528\u4e8e\u5b58\u653esocket\u5730\u5740\u503c\u3002 14\u5b57\u8282\u7684sa_data\u6839\u672c\u65e0\u6cd5\u5b8c\u5168\u5bb9\u7eb3\u591a\u6570\u534f\u8bae\u65cf\u7684\u5730\u5740\u503c\u3002\u56e0\u6b64\uff0cLinux\u5b9a\u4e49\u4e86\u4e0b\u9762\u8fd9\u4e2a\u65b0\u7684\u901a\u7528socket\u5730\u5740\u7ed3\u6784\u4f53 #include\uff1cbits/socket.h\uff1e struct sockaddr_storage { sa_family_t sa_family; unsigned long int__ss_align; char__ss_padding[128-sizeof(__ss_align)]; } Linux\u4e3a\u5404\u4e2a\u534f\u8bae\u65cf\u63d0\u4f9b\u4e86\u4e13\u95e8\u7684socket\u5730\u5740\u7ed3\u6784\u4f53\u3002 #include\uff1csys/un.h\uff1e struct sockaddr_un { sa_family_t sin_family;/*\u5730\u5740\u65cf\uff1aAF_UNIX*/ char sun_path[108];/*\u6587\u4ef6\u8def\u5f84\u540d*/ }; struct sockaddr_in { sa_family_t sin_family; /*\u5730\u5740\u65cf\uff1aAF_INET* u_int16_t sin_port; /*\u7aef\u53e3\u53f7\uff0c\u8981\u7528\u7f51\u7edc\u5b57\u8282\u5e8f\u8868\u793a*/ struct in_addr sin_addr; /*IPv4\u5730\u5740\u7ed3\u6784\u4f53\uff0c\u89c1\u4e0b\u9762*/ }; struct in_addr { u_int32_t s_addr; /*IPv4\u5730\u5740\uff0c\u8981\u7528\u7f51\u7edc\u5b57\u8282\u5e8f\u8868\u793a*/ }; struct sockaddr_in6 { sa_family_t sin6_family; /*\u5730\u5740\u65cf\uff1aAF_INET6*/ u_int16_t sin6_port; /*\u7aef\u53e3\u53f7\uff0c\u8981\u7528\u7f51\u7edc\u5b57\u8282\u5e8f\u8868\u793a*/ u_int32_t sin6_flowinfo; /*\u6d41\u4fe1\u606f\uff0c\u5e94\u8bbe\u7f6e\u4e3a0*/ struct in6_addr sin6_addr; /*IPv6\u5730\u5740\u7ed3\u6784\u4f53\uff0c\u89c1\u4e0b\u9762*/ u_int32_t sin6_scope_id; /*scope ID\uff0c\u5c1a\u5904\u4e8e\u5b9e\u9a8c\u9636\u6bb5*/ }; struct in6_addr { unsigned char sa_addr[16]; /*IPv6\u5730\u5740\uff0c\u8981\u7528\u7f51\u7edc\u5b57\u8282\u5e8f\u8868\u793a*/ }; IP\u5730\u5740\u8f6c\u6362\u51fd\u6570 # \u7528\u70b9\u5206\u5341\u8fdb\u5236\u5b57\u7b26\u4e32\u8868\u793aIPv4\u5730\u5740\uff0c\u4ee5\u53ca\u7528\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\u8868\u793aIPv6\u5730\u5740\u3002 \u7528\u4e8e\u7528\u70b9\u5206\u5341\u8fdb\u5236\u5b57\u7b26\u4e32\u8868\u793a\u7684IPv4\u5730\u5740\u548c\u7528\u7f51\u7edc\u5b57\u8282\u5e8f\u6574\u6570\u8868\u793a\u7684IPv4\u5730\u5740\u4e4b\u95f4\u7684\u8f6c\u6362 #include\uff1carpa/inet.h\uff1e in_addr_t inet_addr(const char*strptr); int inet_aton(const char*cp,struct in_addr*inp); char* inet_ntoa(struct in_addr in); int inet_pton(int af,const char*src,void*dst); const char*inet_ntop(int af,const void*src,char*dst,socklen_t cnt); #define INET_ADDRSTRLEN 16 #define INET6_ADDRSTRLEN 46 - inet_addr\u51fd\u6570\u5c06\u7528\u70b9\u5206\u5341\u8fdb\u5236\u5b57\u7b26\u4e32\u8868\u793a\u7684IPv4\u5730\u5740\u8f6c\u5316\u4e3a\u7528\u7f51\u7edc\u5b57\u8282\u5e8f\u6574\u6570\u8868\u793a\u7684IPv4\u5730\u5740\u3002\u5b83\u5931\u8d25\u65f6\u8fd4\u56deINADDR_NONE\u3002 - inet_aton\u51fd\u6570\u5b8c\u6210\u548cinet_addr\u540c\u6837\u7684\u529f\u80fd\uff0c\u4f46\u662f\u5c06\u8f6c\u5316\u7ed3\u679c\u5b58\u50a8\u4e8e\u53c2\u6570inp\u6307\u5411\u7684\u5730\u5740\u7ed3\u6784\u4e2d\u3002\u5b83\u6210\u529f\u65f6\u8fd4\u56de1\uff0c\u5931\u8d25\u5219\u8fd4\u56de0\u3002 - inet_ntoa\u51fd\u6570\u5c06\u7528\u7f51\u7edc\u5b57\u8282\u5e8f\u6574\u6570\u8868\u793a\u7684IPv4\u5730\u5740\u8f6c\u5316\u4e3a\u7528\u70b9\u5206\u5341\u8fdb\u5236\u5b57\u7b26\u4e32\u8868\u793a\u7684IPv4\u5730\u5740\u3002 - inet_pton\u51fd\u6570\u5c06\u7528\u5b57\u7b26\u4e32\u8868\u793a\u7684IP\u5730\u5740src\uff08\u7528\u70b9\u5206\u5341\u8fdb\u5236\u5b57\u7b26\u4e32\u8868\u793a\u7684IPv4\u5730\u5740\u6216\u7528\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\u8868\u793a\u7684IPv6\u5730\u5740\uff09\u8f6c\u6362\u6210\u7528\u7f51\u7edc\u5b57\u8282\u5e8f\u6574\u6570\u8868\u793a\u7684IP\u5730\u5740\uff0c\u5e76\u628a\u8f6c\u6362\u7ed3\u679c\u5b58\u50a8\u4e8edst\u6307\u5411\u7684\u5185\u5b58\u4e2d\u3002 - af\u53c2\u6570\u6307\u5b9a\u5730\u5740\u65cf\uff0c\u53ef\u4ee5\u662fAF_INET\u6216\u8005AF_INET6\u3002 - inet_pton\u6210\u529f\u65f6\u8fd4\u56de1\uff0c\u5931\u8d25\u5219\u8fd4\u56de0\u5e76\u8bbe\u7f6eerrno - net_ntop\u51fd\u6570\u8fdb\u884c\u76f8\u53cd\u7684\u8f6c\u6362\uff0c\u524d\u4e09\u4e2a\u53c2\u6570\u7684\u542b\u4e49\u4e0einet_pton\u7684\u53c2\u6570\u76f8\u540c\uff0c\u6700\u540e\u4e00\u4e2a\u53c2\u6570cnt\u6307\u5b9a\u76ee\u6807\u5b58\u50a8\u5355\u5143\u7684\u5927\u5c0f\u3002 socket # #include\uff1csys/types.h\uff1e #include\uff1csys/socket.h\uff1e int socket(int domain,int type,int protocol); domain\u53c2\u6570\u544a\u8bc9\u7cfb\u7edf\u4f7f\u7528\u54ea\u4e2a\u5e95\u5c42\u534f\u8bae\u65cf\u3002 \u5bf9TCP/IP\u534f\u8bae\u65cf\u800c\u8a00\uff0c\u8be5\u53c2\u6570\u5e94\u8be5\u8bbe\u7f6e\u4e3aPF_INET\uff08Protocol Family of Internet\uff0c\u7528\u4e8eIPv4\uff09\u6216PF_INET6\uff08\u7528\u4e8eIPv6\uff09\uff1b \u5bf9\u4e8eUNIX\u672c\u5730\u57df\u534f\u8bae\u65cf\u800c\u8a00\uff0c\u8be5\u53c2\u6570\u5e94\u8be5\u8bbe\u7f6e\u4e3aPF_UNIX\u3002 type\u53c2\u6570\u6307\u5b9a\u670d\u52a1\u7c7b\u578b\u3002\u670d\u52a1\u7c7b\u578b\u4e3b\u8981\u6709SOCK_STREAM\u670d\u52a1\uff08\u6d41\u670d\u52a1\uff09\u548cSOCK_UGRAM\uff08\u6570\u636e\u62a5\uff09\u670d\u52a1\u3002 \u5bf9TCP/IP\u534f\u8bae\u65cf\u800c\u8a00\uff0c\u5176\u503c\u53d6SOCK_STREAM\u8868\u793a\u4f20\u8f93\u5c42\u4f7f\u7528TCP\u534f\u8bae\uff0c\u53d6SOCK_DGRAM\u8868\u793a\u4f20\u8f93\u5c42\u4f7f\u7528UDP\u534f\u8bae\u3002 type\u53c2\u6570\u53ef\u4ee5\u63a5\u53d7\u4e0a\u8ff0\u670d\u52a1\u7c7b\u578b\u4e0e\u4e0b\u9762\u4e24\u4e2a\u91cd\u8981\u7684\u6807\u5fd7\u76f8\u4e0e\u7684\u503c\uff1aSOCK_NONBLOCK\u548cSOCK_CLOEXEC\u3002\u5b83\u4eec\u5206\u522b\u8868\u793a\u5c06\u65b0\u521b\u5efa\u7684socket\u8bbe\u4e3a\u975e\u963b\u585e\u7684\uff0c\u4ee5\u53ca\u7528fork\u8c03\u7528\u521b\u5efa\u5b50\u8fdb\u7a0b\u65f6\u5728\u5b50\u8fdb\u7a0b\u4e2d\u5173\u95ed\u8be5socket\u3002 protocol\u53c2\u6570\u662f\u5728\u524d\u4e24\u4e2a\u53c2\u6570\u6784\u6210\u7684\u534f\u8bae\u96c6\u5408\u4e0b\uff0c\u518d\u9009\u62e9\u4e00\u4e2a\u5177\u4f53\u7684\u534f\u8bae\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u503c\u901a\u5e38\u90fd\u662f\u552f\u4e00\u7684\uff08\u524d\u4e24\u4e2a\u53c2\u6570\u5df2\u7ecf\u5b8c\u5168\u51b3\u5b9a\u4e86\u5b83\u7684\u503c\uff09\u3002\u51e0\u4e4e\u5728\u6240\u6709\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u90fd\u5e94\u8be5\u628a\u5b83\u8bbe\u7f6e\u4e3a0\uff0c\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u534f\u8bae\u3002 socket\u7cfb\u7edf\u8c03\u7528\u6210\u529f\u65f6\u8fd4\u56de\u4e00\u4e2asocket\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 bind # \u5728\u670d\u52a1\u5668\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u8981\u547d\u540dsocket\uff0c\u56e0\u4e3a\u53ea\u6709\u547d\u540d\u540e\u5ba2\u6237\u7aef\u624d\u80fd\u77e5\u9053\u8be5\u5982\u4f55\u8fde\u63a5\u5b83\u3002\u5ba2\u6237\u7aef\u5219\u901a\u5e38\u4e0d\u9700\u8981\u547d\u540dsocket\uff0c\u800c\u662f\u91c7\u7528\u533f\u540d\u65b9\u5f0f\uff0c\u5373\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u5206\u914d\u7684socket\u5730\u5740\u3002\u547d\u540dsocket\u7684\u7cfb\u7edf\u8c03\u7528\u662fbind\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a #include\uff1csys/types.h\uff1e #include\uff1csys/socket.h\uff1e int bind(int sockfd,const struct sockaddr*my_addr,socklen_t addrlen); bind\u5c06my_addr\u6240\u6307\u7684socket\u5730\u5740\u5206\u914d\u7ed9\u672a\u547d\u540d\u7684sockfd\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0caddrlen\u53c2\u6570\u6307\u51fa\u8be5socket\u5730\u5740\u7684\u957f\u5ea6\u3002 bind\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002\u5176\u4e2d\u4e24\u79cd\u5e38\u89c1\u7684errno\u662fEACCES\u548cEADDRINUSE\uff0c - EACCES\uff0c\u88ab\u7ed1\u5b9a\u7684\u5730\u5740\u662f\u53d7\u4fdd\u62a4\u7684\u5730\u5740\uff0c\u4ec5\u8d85\u7ea7\u7528\u6237\u80fd\u591f\u8bbf\u95ee\u3002\u6bd4\u5982\u666e\u901a\u7528\u6237\u5c06socket\u7ed1\u5b9a\u5230\u77e5\u540d\u670d\u52a1\u7aef\u53e3\uff08\u7aef\u53e3\u53f7\u4e3a0\uff5e1023\uff09\u4e0a\u65f6\uff0cbind\u5c06\u8fd4\u56deEACCES\u9519\u8bef\u3002 - EADDRINUSE\uff0c\u88ab\u7ed1\u5b9a\u7684\u5730\u5740\u6b63\u5728\u4f7f\u7528\u4e2d\u3002\u6bd4\u5982\u5c06socket\u7ed1\u5b9a\u5230\u4e00\u4e2a\u5904\u4e8eTIME_WAIT\u72b6\u6001\u7684socket\u5730\u5740\u3002 listen # \u521b\u5efa\u4e00\u4e2a\u76d1\u542c\u961f\u5217\u4ee5\u5b58\u653e\u5f85\u5904\u7406\u7684\u5ba2\u6237\u8fde\u63a5 #include\uff1csys/socket.h\uff1e int listen(int sockfd,int backlog); sockfd\u53c2\u6570\u6307\u5b9a\u88ab\u76d1\u542c\u7684socket\u3002 backlog\u53c2\u6570\u63d0\u793a\u5185\u6838\u76d1\u542c\u961f\u5217\u7684\u6700\u5927\u957f\u5ea6\u3002 \u76d1\u542c\u961f\u5217\u7684\u957f\u5ea6\u5982\u679c\u8d85\u8fc7backlog\uff0c\u670d\u52a1\u5668\u5c06\u4e0d\u53d7\u7406\u65b0\u7684\u5ba2\u6237\u8fde\u63a5\uff0c\u5ba2\u6237\u7aef\u4e5f\u5c06\u6536\u5230ECONNREFUSED\u9519\u8bef\u4fe1\u606f\u3002 backlog\u53c2\u6570\u662f\u6307\u6240\u6709\u5904\u4e8e\u534a\u8fde\u63a5\u72b6\u6001\uff08SYN_RCVD\uff09\u548c\u5b8c\u5168\u8fde\u63a5\u72b6\u6001\uff08ESTABLISHED\uff09\u7684socket\u7684\u4e0a\u9650\u3002 \u5904\u4e8e\u534a\u8fde\u63a5\u72b6\u6001\u7684socket\u7684\u4e0a\u9650\u5219\u7531/proc/sys/net/ipv4/tcp_max_syn_backlog\u5185\u6838\u53c2\u6570\u5b9a\u4e49\u3002 listen\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 test_listen.cpp accept # \u4ecelisten\u76d1\u542c\u961f\u5217\u4e2d\u63a5\u53d7\u4e00\u4e2a\u8fde\u63a5 #include\uff1csys/types.h\uff1e #include\uff1csys/socket.h\uff1e int accept(int sockfd,struct sockaddr*addr,socklen_t*addrlen); sockfd\u53c2\u6570\u662f\u6267\u884c\u8fc7listen\u7cfb\u7edf\u8c03\u7528\u7684\u76d1\u542csocket addr\u53c2\u6570\u7528\u6765\u83b7\u53d6\u88ab\u63a5\u53d7\u8fde\u63a5\u7684\u8fdc\u7aefsocket\u5730\u5740\uff0c\u8be5socket\u5730\u5740\u7684\u957f\u5ea6\u7531addrlen\u53c2\u6570\u6307\u51fa\u3002 accept\u6210\u529f\u65f6\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u8fde\u63a5socket\uff0c\u8be5socket\u552f\u4e00\u5730\u6807\u8bc6\u4e86\u88ab\u63a5\u53d7\u7684\u8fd9\u4e2a\u8fde\u63a5\uff0c\u670d\u52a1\u5668\u53ef\u901a\u8fc7\u8bfb\u5199\u8be5socket\u6765\u4e0e\u88ab\u63a5\u53d7\u8fde\u63a5\u5bf9\u5e94\u7684\u5ba2\u6237\u7aef\u901a\u4fe1\u3002accept\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 test_accept.cpp connect # \u5ba2\u6237\u7aef\u9700\u8981\u901a\u8fc7\u5982\u4e0b\u7cfb\u7edf\u8c03\u7528\u6765\u4e3b\u52a8\u4e0e\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5 #include\uff1csys/types.h\uff1e #include\uff1csys/socket.h\uff1e int connect(int sockfd,const struct sockaddr*serv_addr,socklen_t addrlen); sockfd\u53c2\u6570\u7531socket\u7cfb\u7edf\u8c03\u7528\u8fd4\u56de\u4e00\u4e2asocket\u3002 serv_addr\u53c2\u6570\u662f\u670d\u52a1\u5668\u76d1\u542c\u7684socket\u5730\u5740\uff0c addrlen\u53c2\u6570\u5219\u6307\u5b9a\u8fd9\u4e2a\u5730\u5740\u7684\u957f\u5ea6\u3002 connect\u6210\u529f\u65f6\u8fd4\u56de0\u3002 connect\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 ECONNREFUSED\uff0c\u76ee\u6807\u7aef\u53e3\u4e0d\u5b58\u5728\uff0c\u8fde\u63a5\u88ab\u62d2\u7edd\u3002 ETIMEDOUT\uff0c\u8fde\u63a5\u8d85\u65f6\u3002 close # #include\uff1cunistd.h\uff1e int close(int fd); fd\u53c2\u6570\u662f\u5f85\u5173\u95ed\u7684socket\u3002\u4e0d\u8fc7\uff0cclose\u7cfb\u7edf\u8c03\u7528\u5e76\u975e\u603b\u662f\u7acb\u5373\u5173\u95ed\u4e00\u4e2a\u8fde\u63a5\uff0c\u800c\u662f\u5c06fd\u7684\u5f15\u7528\u8ba1\u6570\u51cf1\u3002 \u53ea\u6709\u5f53fd\u7684\u5f15\u7528\u8ba1\u6570\u4e3a0\u65f6\uff0c\u624d\u771f\u6b63\u5173\u95ed\u8fde\u63a5 \u3002 \u5982\u679c\u65e0\u8bba\u5982\u4f55\u90fd\u8981\u7acb\u5373\u7ec8\u6b62\u8fde\u63a5\uff08\u800c\u4e0d\u662f\u5c06socket\u7684\u5f15\u7528\u8ba1\u6570\u51cf1\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u7684shutdown\u7cfb\u7edf\u8c03\u7528 #include\uff1csys/socket.h\uff1e int shutdown(int sockfd,int howto); sockfd\u53c2\u6570\u662f\u5f85\u5173\u95ed\u7684socket\u3002howto\u53c2\u6570\u51b3\u5b9a\u4e86shutdown\u7684\u884c\u4e3a shutdown\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 recv_send # #include\uff1csys/types.h\uff1e #include\uff1csys/socket.h\uff1e ssize_t recv(int sockfd,void*buf,size_t len,int flags); ssize_t send(int sockfd,const void*buf,size_t len,int flags); recv\u8bfb\u53d6sockfd\u4e0a\u7684\u6570\u636e\uff0cbuf\u548clen\u53c2\u6570\u5206\u522b\u6307\u5b9a\u8bfb\u7f13\u51b2\u533a\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f\uff0cflags\u53c2\u6570\u7684\u542b\u4e49\u89c1\u540e\u6587\uff0c\u901a\u5e38\u8bbe\u7f6e\u4e3a0\u5373\u53ef\u3002 recv\u6210\u529f\u65f6\u8fd4\u56de\u5b9e\u9645\u8bfb\u53d6\u5230\u7684\u6570\u636e\u7684\u957f\u5ea6\uff0c\u5b83\u53ef\u80fd\u5c0f\u4e8e\u6211\u4eec\u671f\u671b\u7684\u957f\u5ea6len\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u80fd\u8981\u591a\u6b21\u8c03\u7528recv\uff0c\u624d\u80fd\u8bfb\u53d6\u5230\u5b8c\u6574\u7684\u6570\u636e\u3002 recv\u53ef\u80fd\u8fd4\u56de0\uff0c\u8fd9\u610f\u5473\u7740\u901a\u4fe1\u5bf9\u65b9\u5df2\u7ecf\u5173\u95ed\u8fde\u63a5\u4e86\u3002recv\u51fa\u9519\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 send\u5f80sockfd\u4e0a\u5199\u5165\u6570\u636e\uff0cbuf\u548clen\u53c2\u6570\u5206\u522b\u6307\u5b9a\u5199\u7f13\u51b2\u533a\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f\u3002 send\u6210\u529f\u65f6\u8fd4\u56de\u5b9e\u9645\u5199\u5165\u7684\u6570\u636e\u7684\u957f\u5ea6\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 flags\u53c2\u6570\u4e3a\u6570\u636e\u6536\u53d1\u63d0\u4f9b\u4e86\u989d\u5916\u7684\u63a7\u5236 test_oob_recv.cpp test_oob_send.cpp recvfrom_sendto # \u7528\u4e8eUDP\u6570\u636e\u62a5\u8bfb\u5199\u7684\u7cfb\u7edf\u8c03\u7528 #include\uff1csys/types.h\uff1e #include\uff1csys/socket.h\uff1e ssize_t recvfrom(int sockfd,void*buf,size_t len,int flags,struct sockaddr*src_addr,socklen_t *addrlen); ssize_t sendto(int sockfd,const void*buf,size_t len,int flags,const struct sockaddr*dest_addr,socklen_t addrlen); recvfrom\u8bfb\u53d6sockfd\u4e0a\u7684\u6570\u636e\uff0cbuf\u548clen\u53c2\u6570\u5206\u522b\u6307\u5b9a\u8bfb\u7f13\u51b2\u533a\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f\u3002\u56e0\u4e3aUDP\u901a\u4fe1\u6ca1\u6709\u8fde\u63a5\u7684\u6982\u5ff5\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u8bfb\u53d6\u6570\u636e\u90fd\u9700\u8981\u83b7\u53d6\u53d1\u9001\u7aef\u7684socket\u5730\u5740\uff0c\u5373\u53c2\u6570src_addr\u6240\u6307\u7684\u5185\u5bb9\uff0caddrlen\u53c2\u6570\u5219\u6307\u5b9a\u8be5\u5730\u5740\u7684\u957f\u5ea6\u3002 sendto\u5f80sockfd\u4e0a\u5199\u5165\u6570\u636e\uff0cbuf\u548clen\u53c2\u6570\u5206\u522b\u6307\u5b9a\u5199\u7f13\u51b2\u533a\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f\u3002dest_addr\u53c2\u6570\u6307\u5b9a\u63a5\u6536\u7aef\u7684socket\u5730\u5740\uff0caddrlen\u53c2\u6570\u5219\u6307\u5b9a\u8be5\u5730\u5740\u7684\u957f\u5ea6\u3002 flags\u53c2\u6570\u4ee5\u53ca\u8fd4\u56de\u503c\u7684\u542b\u4e49\u5747\u4e0esend/recv\u7cfb\u7edf\u8c03\u7528\u7684flags\u53c2\u6570\u53ca\u8fd4\u56de\u503c\u76f8\u540c\u3002 recvfrom/sendto\u7cfb\u7edf\u8c03\u7528\u4e5f\u53ef\u4ee5\u7528\u4e8e\u9762\u5411\u8fde\u63a5\uff08STREAM\uff09\u7684socket\u7684\u6570\u636e\u8bfb\u5199\uff0c\u53ea\u9700\u8981\u628a\u6700\u540e\u4e24\u4e2a\u53c2\u6570\u90fd\u8bbe\u7f6e\u4e3aNULL\u4ee5\u5ffd\u7565\u53d1\u9001\u7aef/\u63a5\u6536\u7aef\u7684socket\u5730\u5740\uff08\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u548c\u5bf9\u65b9\u5efa\u7acb\u4e86\u8fde\u63a5\uff0c\u6240\u4ee5\u5df2\u7ecf\u77e5\u9053\u5176socket\u5730\u5740\u4e86\uff09 recvmg_sendmfg # socket\u7f16\u7a0b\u63a5\u53e3\u8fd8\u63d0\u4f9b\u4e86\u4e00\u5bf9\u901a\u7528\u7684\u6570\u636e\u8bfb\u5199\u7cfb\u7edf\u8c03\u7528\u3002\u5b83\u4eec\u4e0d\u4ec5\u80fd\u7528\u4e8eTCP\u6d41\u6570\u636e\uff0c\u4e5f\u80fd\u7528\u4e8eUDP\u6570\u636e\u62a5 #include\uff1csys/socket.h\uff1e ssize_t recvmsg(int sockfd,struct msghdr*msg,int flags); ssize_t sendmsg(int sockfd,struct msghdr*msg,int flags); sockfd\u53c2\u6570\u6307\u5b9a\u88ab\u64cd\u4f5c\u7684\u76ee\u6807socket\u3002msg\u53c2\u6570\u662fmsghdr\u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u6307\u9488\uff0c struct msghdr { void *msg_name;/*socket\u5730\u5740*/ socklen_t msg_namelen;/*socket\u5730\u5740\u7684\u957f\u5ea6*/ struct iovec*msg_iov;/*\u5206\u6563\u7684\u5185\u5b58\u5757\uff0c\u89c1\u540e\u6587*/ int msg_iovlen;/*\u5206\u6563\u5185\u5b58\u5757\u7684\u6570\u91cf*/ void *msg_control;/*\u6307\u5411\u8f85\u52a9\u6570\u636e\u7684\u8d77\u59cb\u4f4d\u7f6e*/ socklen_t msg_controllen;/*\u8f85\u52a9\u6570\u636e\u7684\u5927\u5c0f*/ int msg_flags;/*\u590d\u5236\u51fd\u6570\u4e2d\u7684flags\u53c2\u6570\uff0c\u5e76\u5728\u8c03\u7528\u8fc7\u7a0b\u4e2d\u66f4\u65b0*/ }; msg_name\u6210\u5458\u6307\u5411\u4e00\u4e2asocket\u5730\u5740\u7ed3\u6784\u53d8\u91cf\u3002\u5b83\u6307\u5b9a\u901a\u4fe1\u5bf9\u65b9\u7684socket\u5730\u5740\u3002\u5bf9\u4e8e\u9762\u5411\u8fde\u63a5\u7684TCP\u534f\u8bae\uff0c\u8be5\u6210\u5458\u6ca1\u6709\u610f\u4e49\uff0c\u5fc5\u987b\u88ab\u8bbe\u7f6e\u4e3aNULL\u3002 msg_namelen\u6210\u5458\u5219\u6307\u5b9a\u4e86msg_name\u6240\u6307socket\u5730\u5740\u7684\u957f\u5ea6\u3002 msg_iov\u6210\u5458\u662fiovec\u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u6307\u9488,iovec\u7ed3\u6784\u4f53\u5c01\u88c5\u4e86\u4e00\u5757\u5185\u5b58\u7684\u8d77\u59cb\u4f4d\u7f6e\u548c\u957f\u5ea6\u3002 struct iovec { void*iov_base;/*\u5185\u5b58\u8d77\u59cb\u5730\u5740*/ size_t iov_len;/*\u8fd9\u5757\u5185\u5b58\u7684\u957f\u5ea6*/ }; msg_iovlen\u6307\u5b9a\u8fd9\u6837\u7684iovec\u7ed3\u6784\u5bf9\u8c61\u6709\u591a\u5c11\u4e2a\u3002 msg_control\u548cmsg_controllen\u6210\u5458\u7528\u4e8e\u8f85\u52a9\u6570\u636e\u7684\u4f20\u9001\u3002 msg_flags\u6210\u5458\u65e0\u987b\u8bbe\u5b9a\uff0c\u5b83\u4f1a\u590d\u5236recvmsg/sendmsg\u7684flags\u53c2\u6570\u7684\u5185\u5bb9\u4ee5\u5f71\u54cd\u6570\u636e\u8bfb\u5199\u8fc7\u7a0b\u3002 \u5e26\u5916\u6807\u8bb0 # Linux\u5185\u6838\u68c0\u6d4b\u5230TCP\u7d27\u6025\u6807\u5fd7\u65f6\uff0c\u5c06\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u6709\u5e26\u5916\u6570\u636e\u9700\u8981\u63a5\u6536\u3002\u5185\u6838\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u5e26\u5916\u6570\u636e\u5230\u8fbe\u7684\u4e24\u79cd\u5e38\u89c1\u65b9\u5f0f\u662f\uff1aI/O\u590d\u7528\u4ea7\u751f\u7684\u5f02\u5e38\u4e8b\u4ef6\u548cSIGURG\u4fe1\u53f7\u3002 #include\uff1csys/socket.h\uff1e int sockatmark(int sockfd); sockatmark\u5224\u65adsockfd\u662f\u5426\u5904\u4e8e\u5e26\u5916\u6807\u8bb0\uff0c\u5373\u4e0b\u4e00\u4e2a\u88ab\u8bfb\u53d6\u5230\u7684\u6570\u636e\u662f\u5426\u662f\u5e26\u5916\u6570\u636e\u3002 \u5982\u679c\u662f\uff0csockatmark\u8fd4\u56de1\uff0c\u6b64\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u5e26MSG_OOB\u6807\u5fd7\u7684recv\u8c03\u7528\u6765\u63a5\u6536\u5e26\u5916\u6570\u636e\u3002 \u5982\u679c\u4e0d\u662f\uff0c\u5219sockatmark\u8fd4\u56de0\u3002 \u5730\u5740\u4fe1\u606f\u51fd\u6570 # #include\uff1csys/socket.h\uff1e int getsockname(int sockfd,struct sockaddr*address,socklen_t*address_len); int getpeername(int sockfd,struct sockaddr*address,socklen_t*address_len); getsockname\u83b7\u53d6sockfd\u5bf9\u5e94\u7684\u672c\u7aefsocket\u5730\u5740\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u4e8eaddress\u53c2\u6570\u6307\u5b9a\u7684\u5185\u5b58\u4e2d\uff0c\u8be5socket\u5730\u5740\u7684\u957f\u5ea6\u5219\u5b58\u50a8\u4e8eaddress_len\u53c2\u6570\u6307\u5411\u7684\u53d8\u91cf\u4e2d\u3002\u5982\u679c\u5b9e\u9645socket\u5730\u5740\u7684\u957f\u5ea6\u5927\u4e8eaddress\u6240\u6307\u5185\u5b58\u533a\u7684\u5927\u5c0f\uff0c\u90a3\u4e48\u8be5socket\u5730\u5740\u5c06\u88ab\u622a\u65ad\u3002getsockname\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 getpeername\u83b7\u53d6sockfd\u5bf9\u5e94\u7684\u8fdc\u7aefsocket\u5730\u5740\uff0c\u5176\u53c2\u6570\u53ca\u8fd4\u56de\u503c\u7684\u542b\u4e49\u4e0egetsockname\u7684\u53c2\u6570\u53ca\u8fd4\u56de\u503c\u76f8\u540c\u3002 socket\u9009\u9879 # #include\uff1csys/socket.h\uff1e int getsockopt(int sockfd,int level,int option_name,void*option_value,socklen_t*restrict option_len); int setsockopt(int sockfd,int level,int option_name,const void*option_value,socklen_t option_len); sockfd\u53c2\u6570\u6307\u5b9a\u88ab\u64cd\u4f5c\u7684\u76ee\u6807socket\u3002level\u53c2\u6570\u6307\u5b9a\u8981\u64cd\u4f5c\u54ea\u4e2a\u534f\u8bae\u7684\u9009\u9879\uff08\u5373\u5c5e\u6027\uff09\uff0c\u6bd4\u5982IPv4\u3001IPv6\u3001TCP\u7b49\u3002option_name\u53c2\u6570\u5219\u6307\u5b9a\u9009\u9879\u7684\u540d\u5b57\u3002 \u8bbe\u7f6esocket\u9009\u9879SO_REUSEADDR\u6765\u5f3a\u5236\u4f7f\u7528\u88ab\u5904\u4e8eTIME_WAIT\u72b6\u6001\u7684\u8fde\u63a5\u5360\u7528\u7684socket\u5730\u5740\u3002 setsockopt(sock,SOL_SOCKET,SO_REUSEADDR,\uff06reuse,sizeof(reuse)); SO_RCVBUF\u548cSO_SNDBUF\u9009\u9879\u5206\u522b\u8868\u793aTCP\u63a5\u6536\u7f13\u51b2\u533a\u548c\u53d1\u9001\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u3002 TCP\u63a5\u6536\u7f13\u51b2\u533a\u7684\u6700\u5c0f\u503c\u662f256\u5b57\u8282\uff0c\u800c\u53d1\u9001\u7f13\u51b2\u533a\u7684\u6700\u5c0f\u503c\u662f2048\u5b57\u8282 /proc/sys/net/ipv4/tcp_rmem\u548c/proc/sys/net/ipv4/tcp_wmem\u6765\u5f3a\u5236TCP\u63a5\u6536\u7f13\u51b2\u533a\u548c\u53d1\u9001\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u6ca1\u6709\u6700\u5c0f\u503c\u9650\u5236\u3002 setsockopt(sock,SOL_SOCKET,SO_SNDBUF,\uff06sendbuf,sizeof(sendbuf)); setsockopt(sock,SOL_SOCKET,SO_RCVBUF,\uff06recvbuf,sizeof(recvbuf)); getsockopt(sock,SOL_SOCKET,SO_RCVBUF,\uff06recvbuf,(socklen_t*)\uff06len); SO_LINGER\u9009\u9879\u7528\u4e8e\u63a7\u5236close\u7cfb\u7edf\u8c03\u7528\u5728\u5173\u95edTCP\u8fde\u63a5\u65f6\u7684\u884c\u4e3a\u3002 linger\u7c7b\u578b\u7684\u7ed3\u6784\u4f53 l_onoff\u7b49\u4e8e0\u3002\u6b64\u65f6SO_LINGER\u9009\u9879\u4e0d\u8d77\u4f5c\u7528\uff0cclose\u7528\u9ed8\u8ba4\u884c\u4e3a\u6765\u5173\u95edsocket\u3002 l_onoff\u4e0d\u4e3a0\uff0cl_linger\u7b49\u4e8e0\u3002\u6b64\u65f6close\u7cfb\u7edf\u8c03\u7528\u7acb\u5373\u8fd4\u56de\uff0cTCP\u6a21\u5757\u5c06\u4e22\u5f03\u88ab\u5173\u95ed\u7684socket\u5bf9\u5e94\u7684TCP\u53d1\u9001\u7f13\u51b2\u533a\u4e2d\u6b8b\u7559\u7684\u6570\u636e\uff0c\u540c\u65f6\u7ed9\u5bf9\u65b9\u53d1\u9001\u4e00\u4e2a\u590d\u4f4d\u62a5\u6587\u6bb5 l_onoff\u4e0d\u4e3a0\uff0cl_linger\u5927\u4e8e0\u3002\u6b64\u65f6close\u7684\u884c\u4e3a\u53d6\u51b3\u4e8e\u4e24\u4e2a\u6761\u4ef6\uff1a\u4e00\u662f\u88ab\u5173\u95ed\u7684socket\u5bf9\u5e94\u7684TCP\u53d1\u9001\u7f13\u51b2\u533a\u4e2d\u662f\u5426\u8fd8\u6709\u6b8b\u7559\u7684\u6570\u636e\uff1b\u4e8c\u662f\u8be5socket\u662f\u963b\u585e\u7684\uff0c\u8fd8\u662f\u975e\u963b\u585e\u7684\u3002\u5bf9\u4e8e\u963b\u585e\u7684socket\uff0cclose\u5c06\u7b49\u5f85\u4e00\u6bb5\u957f\u4e3al_linger\u7684\u65f6\u95f4\uff0c\u76f4\u5230TCP\u6a21\u5757\u53d1\u9001\u5b8c\u6240\u6709\u6b8b\u7559\u6570\u636e\u5e76\u5f97\u5230\u5bf9\u65b9\u7684\u786e\u8ba4\u3002\u5982\u679c\u8fd9\u6bb5\u65f6\u95f4\u5185TCP\u6a21\u5757\u6ca1\u6709\u53d1\u9001\u5b8c\u6b8b\u7559\u6570\u636e\u5e76\u5f97\u5230\u5bf9\u65b9\u7684\u786e\u8ba4\uff0c\u90a3\u4e48close\u7cfb\u7edf\u8c03\u7528\u5c06\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u4e3aEWOULDBLOCK\u3002\u5982\u679csocket\u662f\u975e\u963b\u585e\u7684\uff0cclose\u5c06\u7acb\u5373\u8fd4\u56de\uff0c\u6b64\u65f6\u6211\u4eec\u9700\u8981\u6839\u636e\u5176\u8fd4\u56de\u503c\u548cerrno\u6765\u5224\u65ad\u6b8b\u7559\u6570\u636e\u662f\u5426\u5df2\u7ecf\u53d1\u9001\u5b8c\u6bd5\u3002 #include\uff1csys/socket.h\uff1e struct linger { int l_onoff;/*\u5f00\u542f\uff08\u975e0\uff09\u8fd8\u662f\u5173\u95ed\uff080\uff09\u8be5\u9009\u9879*/ int l_linger;/*\u6ede\u7559\u65f6\u95f4*/ }; \u7f51\u7edc\u4fe1\u606fAPI # getservbyname\u548cgetservbyport # getservbyname\u51fd\u6570\u6839\u636e\u540d\u79f0\u83b7\u53d6\u67d0\u4e2a\u670d\u52a1\u7684\u5b8c\u6574\u4fe1\u606f\uff0c getservbyport\u51fd\u6570\u6839\u636e\u7aef\u53e3\u53f7\u83b7\u53d6\u67d0\u4e2a\u670d\u52a1\u7684\u5b8c\u6574\u4fe1\u606f\u3002 #include\uff1cnetdb.h\uff1e struct servent* getservbyname(const char*name,const char*proto); struct servent* getservbyport(int port,const char*proto); struct servent { char*s_name;/*\u670d\u52a1\u540d\u79f0*/ char**s_aliases;/*\u670d\u52a1\u7684\u522b\u540d\u5217\u8868\uff0c\u53ef\u80fd\u6709\u591a\u4e2a*/ int s_port;/*\u7aef\u53e3\u53f7*/ char*s_proto;/*\u670d\u52a1\u7c7b\u578b,\u901a\u5e38\u662ftcp\u6216\u8005udp*/ }; name\u53c2\u6570\u6307\u5b9a\u76ee\u6807\u670d\u52a1\u7684\u540d\u5b57\uff0c port\u53c2\u6570\u6307\u5b9a\u76ee\u6807\u670d\u52a1\u5bf9\u5e94\u7684\u7aef\u53e3\u53f7\u3002 proto\u53c2\u6570\u6307\u5b9a\u670d\u52a1\u7c7b\u578b\uff0c\u7ed9\u5b83\u4f20\u9012\u201ctcp\u201d\u8868\u793a\u83b7\u53d6\u6d41\u670d\u52a1\uff0c\u7ed9\u5b83\u4f20\u9012\u201cudp\u201d\u8868\u793a\u83b7\u53d6\u6570\u636e\u62a5\u670d\u52a1\uff0c\u7ed9\u5b83\u4f20\u9012NULL\u5219\u8868\u793a\u83b7\u53d6\u6240\u6709\u7c7b\u578b\u7684\u670d\u52a1\u3002 getaddrinfo # getaddrinfo\u51fd\u6570\u65e2\u80fd\u901a\u8fc7\u4e3b\u673a\u540d\u83b7\u5f97IP\u5730\u5740\uff08\u5185\u90e8\u4f7f\u7528\u7684\u662fgethostbyname\u51fd\u6570\uff09\uff0c\u4e5f\u80fd\u901a\u8fc7\u670d\u52a1\u540d\u83b7\u5f97\u7aef\u53e3\u53f7\uff08\u5185\u90e8\u4f7f\u7528\u7684\u662fgetservbyname\u51fd\u6570\uff09\u3002 #include\uff1cnetdb.h\uff1e int getaddrinfo(const char*hostname,const char*service,const struct addrinfo*hints,struct addrinfo**result); void freeaddrinfo(struct addrinfo*res); struct addrinfo { int ai_flags;/*\u5177\u4f53\u7684\u7f51\u7edc\u534f\u8bae*/ int ai_family;/*\u5730\u5740\u65cf*/ int ai_socktype;/*\u670d\u52a1\u7c7b\u578b\uff0cSOCK_STREAM\u6216SOCK_DGRAM*/ int ai_protocol;/*\u89c1\u540e\u6587*/ socklen_t ai_addrlen;/*socket\u5730\u5740ai_addr\u7684\u957f\u5ea6*/ char*ai_canonname;/*\u4e3b\u673a\u7684\u522b\u540d*/ struct sockaddr*ai_addr;/*\u6307\u5411socket\u5730\u5740*/ struct addrinfo*ai_next;/*\u6307\u5411\u4e0b\u4e00\u4e2asockinfo\u7ed3\u6784\u7684\u5bf9\u8c61*/ }; hostname\u53c2\u6570\u53ef\u4ee5\u63a5\u6536\u4e3b\u673a\u540d\uff0c\u4e5f\u53ef\u4ee5\u63a5\u6536\u5b57\u7b26\u4e32\u8868\u793a\u7684IP\u5730\u5740 service\u53c2\u6570\u53ef\u4ee5\u63a5\u6536\u670d\u52a1\u540d\uff0c\u4e5f\u53ef\u4ee5\u63a5\u6536\u5b57\u7b26\u4e32\u8868\u793a\u7684\u5341\u8fdb\u5236\u7aef\u53e3\u53f7\u3002 hints\u53c2\u6570\u662f\u5e94\u7528\u7a0b\u5e8f\u7ed9getaddrinfo\u7684\u4e00\u4e2a\u63d0\u793a\uff0c\u4ee5\u5bf9getaddrinfo\u7684\u8f93\u51fa\u8fdb\u884c\u66f4\u7cbe\u786e\u7684\u63a7\u5236\u3002hints\u53c2\u6570\u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3aNULL\uff0c\u8868\u793a\u5141\u8bb8getaddrinfo\u53cd\u9988\u4efb\u4f55\u53ef\u7528\u7684\u7ed3\u679c\u3002 result\u53c2\u6570\u6307\u5411\u4e00\u4e2a\u94fe\u8868\uff0c\u8be5\u94fe\u8868\u7528\u4e8e\u5b58\u50a8getaddrinfo\u53cd\u9988\u7684\u7ed3\u679c\u3002 getaddrinfo\u53cd\u9988\u7684\u6bcf\u4e00\u6761\u7ed3\u679c\u90fd\u662faddrinfo\u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u5bf9\u8c61 ai_flags\u6210\u5458\u53ef\u4ee5\u53d6\u88685-6\u4e2d\u7684\u6807\u5fd7\u7684\u6309\u4f4d\u6216 getnameinfo # getnameinfo\u51fd\u6570\u80fd\u901a\u8fc7socket\u5730\u5740\u540c\u65f6\u83b7\u5f97\u4ee5\u5b57\u7b26\u4e32\u8868\u793a\u7684\u4e3b\u673a\u540d\uff08\u5185\u90e8\u4f7f\u7528\u7684\u662fgethostbyaddr\u51fd\u6570\uff09\u548c\u670d\u52a1\u540d\uff08\u5185\u90e8\u4f7f\u7528\u7684\u662fgetservbyport\u51fd\u6570\uff09\u3002 #include\uff1cnetdb.h\uff1e int getnameinfo(const struct sockaddr*sockaddr,socklen_t addrlen,char*host,socklen_t hostlen,char*serv,socklen_t servlen,int flags); \u4e3b\u673a\u540d\u5b58\u50a8\u5728host\u53c2\u6570\u6307\u5411\u7684\u7f13\u5b58\u4e2d\uff0c\u5c06\u670d\u52a1\u540d\u5b58\u50a8\u5728serv\u53c2\u6570\u6307\u5411\u7684\u7f13\u5b58\u4e2d\uff0chostlen\u548cservlen\u53c2\u6570\u5206\u522b\u6307\u5b9a\u8fd9\u4e24\u5757\u7f13\u5b58\u7684\u957f\u5ea6\u3002 flags\u53c2\u6570\u63a7\u5236getnameinfo\u7684\u884c\u4e3a","title":"Socket api"},{"location":"linux/socket_api/#api","text":"","title":"API"},{"location":"linux/socket_api/#\u5927\u7aef","text":"\u5b57\u8282\u5e8f\u5206\u4e3a\u5927\u7aef\u5b57\u8282\u5e8f\uff08big endian\uff09\u548c\u5c0f\u7aef\u5b57\u8282\u5e8f\uff08little endian\uff09\u3002\u5927\u7aef\u5b57\u8282\u5e8f\u662f\u6307\u4e00\u4e2a\u6574\u6570\u7684\u9ad8\u4f4d\u5b57\u8282\uff0823\uff5e31 bit\uff09\u5b58\u50a8\u5728\u5185\u5b58\u7684\u4f4e\u5730\u5740\u5904\uff0c\u4f4e\u4f4d\u5b57\u8282\uff080\uff5e7 bit\uff09\u5b58\u50a8\u5728\u5185\u5b58\u7684\u9ad8\u5730\u5740\u5904\u3002\u5c0f\u7aef\u5b57\u8282\u5e8f\u5219\u662f\u6307\u6574\u6570\u7684\u9ad8\u4f4d\u5b57\u8282\u5b58\u50a8\u5728\u5185\u5b58\u7684\u9ad8\u5730\u5740\u5904\uff0c\u800c\u4f4e\u4f4d\u5b57\u8282\u5219\u5b58\u50a8\u5728\u5185\u5b58\u7684\u4f4e\u5730\u5740\u5904\u3002 byteorder.c \u5728\u4e24\u53f0\u4f7f\u7528\u4e0d\u540c\u5b57\u8282\u5e8f\u7684\u4e3b\u673a\u4e4b\u95f4\u76f4\u63a5\u4f20\u9012\u65f6\uff0c\u63a5\u6536\u7aef\u5fc5\u7136\u9519\u8bef\u5730\u89e3\u91ca\u4e4b\u3002\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\u662f\uff1a\u53d1\u9001\u7aef\u603b\u662f\u628a\u8981\u53d1\u9001\u7684\u6570\u636e\u8f6c\u5316\u6210\u5927\u7aef\u5b57\u8282\u5e8f\u6570\u636e\u540e\u518d\u53d1\u9001\uff0c\u800c\u63a5\u6536\u7aef\u77e5\u9053\u5bf9\u65b9\u4f20\u9001\u8fc7\u6765\u7684\u6570\u636e\u603b\u662f\u91c7\u7528\u5927\u7aef\u5b57\u8282\u5e8f\uff0c\u6240\u4ee5\u63a5\u6536\u7aef\u53ef\u4ee5\u6839\u636e\u81ea\u8eab\u91c7\u7528\u7684\u5b57\u8282\u5e8f\u51b3\u5b9a\u662f\u5426\u5bf9\u63a5\u6536\u5230\u7684\u6570\u636e\u8fdb\u884c\u8f6c\u6362(\u5c0f\u7aef\u673a\u8f6c\u6362\uff0c\u5927\u7aef\u673a\u4e0d\u8f6c\u6362). \u5927\u7aef\u5b57\u8282\u5e8f\u4e5f\u79f0\u4e3a\u7f51\u7edc\u5b57\u8282\u5e8f \uff0c\u5b83\u7ed9\u6240\u6709\u63a5\u6536\u6570\u636e\u7684\u4e3b\u673a\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6b63\u786e\u89e3\u91ca\u6536\u5230\u7684\u683c\u5f0f\u5316\u6570\u636e\u7684\u4fdd\u8bc1\u3002 Linux\u63d0\u4f9b\u4e86\u5982\u4e0b4\u4e2a\u51fd\u6570\u6765\u5b8c\u6210\u4e3b\u673a\u5b57\u8282\u5e8f\u548c\u7f51\u7edc\u5b57\u8282\u5e8f\u4e4b\u95f4\u7684\u8f6c\u6362\uff1a #include\uff1cnetinet/in.h\uff1e //host to network long unsigned long int htonl(unsigned long int hostlong); unsigned short int htons(unsigned short int hostshort); unsigned long int ntohl(unsigned long int netlong); unsigned short int ntohs(unsigned short int netshort);","title":"\u5927\u7aef"},{"location":"linux/socket_api/#socket\u5730\u5740","text":"#include\uff1cbits/socket.h\uff1e struct sockaddr { sa_family_t sa_family; char sa_data[14]; } sa_family\u6210\u5458\u662f\u5730\u5740\u65cf\u7c7b\u578b\uff08sa_family_t\uff09\u7684\u53d8\u91cf\u3002\u5730\u5740\u65cf\u7c7b\u578b\u901a\u5e38\u4e0e\u534f\u8bae\u65cf\u7c7b\u578b\u5bf9\u5e94\u3002 sa_data\u6210\u5458\u7528\u4e8e\u5b58\u653esocket\u5730\u5740\u503c\u3002 14\u5b57\u8282\u7684sa_data\u6839\u672c\u65e0\u6cd5\u5b8c\u5168\u5bb9\u7eb3\u591a\u6570\u534f\u8bae\u65cf\u7684\u5730\u5740\u503c\u3002\u56e0\u6b64\uff0cLinux\u5b9a\u4e49\u4e86\u4e0b\u9762\u8fd9\u4e2a\u65b0\u7684\u901a\u7528socket\u5730\u5740\u7ed3\u6784\u4f53 #include\uff1cbits/socket.h\uff1e struct sockaddr_storage { sa_family_t sa_family; unsigned long int__ss_align; char__ss_padding[128-sizeof(__ss_align)]; } Linux\u4e3a\u5404\u4e2a\u534f\u8bae\u65cf\u63d0\u4f9b\u4e86\u4e13\u95e8\u7684socket\u5730\u5740\u7ed3\u6784\u4f53\u3002 #include\uff1csys/un.h\uff1e struct sockaddr_un { sa_family_t sin_family;/*\u5730\u5740\u65cf\uff1aAF_UNIX*/ char sun_path[108];/*\u6587\u4ef6\u8def\u5f84\u540d*/ }; struct sockaddr_in { sa_family_t sin_family; /*\u5730\u5740\u65cf\uff1aAF_INET* u_int16_t sin_port; /*\u7aef\u53e3\u53f7\uff0c\u8981\u7528\u7f51\u7edc\u5b57\u8282\u5e8f\u8868\u793a*/ struct in_addr sin_addr; /*IPv4\u5730\u5740\u7ed3\u6784\u4f53\uff0c\u89c1\u4e0b\u9762*/ }; struct in_addr { u_int32_t s_addr; /*IPv4\u5730\u5740\uff0c\u8981\u7528\u7f51\u7edc\u5b57\u8282\u5e8f\u8868\u793a*/ }; struct sockaddr_in6 { sa_family_t sin6_family; /*\u5730\u5740\u65cf\uff1aAF_INET6*/ u_int16_t sin6_port; /*\u7aef\u53e3\u53f7\uff0c\u8981\u7528\u7f51\u7edc\u5b57\u8282\u5e8f\u8868\u793a*/ u_int32_t sin6_flowinfo; /*\u6d41\u4fe1\u606f\uff0c\u5e94\u8bbe\u7f6e\u4e3a0*/ struct in6_addr sin6_addr; /*IPv6\u5730\u5740\u7ed3\u6784\u4f53\uff0c\u89c1\u4e0b\u9762*/ u_int32_t sin6_scope_id; /*scope ID\uff0c\u5c1a\u5904\u4e8e\u5b9e\u9a8c\u9636\u6bb5*/ }; struct in6_addr { unsigned char sa_addr[16]; /*IPv6\u5730\u5740\uff0c\u8981\u7528\u7f51\u7edc\u5b57\u8282\u5e8f\u8868\u793a*/ };","title":"socket\u5730\u5740"},{"location":"linux/socket_api/#ip\u5730\u5740\u8f6c\u6362\u51fd\u6570","text":"\u7528\u70b9\u5206\u5341\u8fdb\u5236\u5b57\u7b26\u4e32\u8868\u793aIPv4\u5730\u5740\uff0c\u4ee5\u53ca\u7528\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\u8868\u793aIPv6\u5730\u5740\u3002 \u7528\u4e8e\u7528\u70b9\u5206\u5341\u8fdb\u5236\u5b57\u7b26\u4e32\u8868\u793a\u7684IPv4\u5730\u5740\u548c\u7528\u7f51\u7edc\u5b57\u8282\u5e8f\u6574\u6570\u8868\u793a\u7684IPv4\u5730\u5740\u4e4b\u95f4\u7684\u8f6c\u6362 #include\uff1carpa/inet.h\uff1e in_addr_t inet_addr(const char*strptr); int inet_aton(const char*cp,struct in_addr*inp); char* inet_ntoa(struct in_addr in); int inet_pton(int af,const char*src,void*dst); const char*inet_ntop(int af,const void*src,char*dst,socklen_t cnt); #define INET_ADDRSTRLEN 16 #define INET6_ADDRSTRLEN 46 - inet_addr\u51fd\u6570\u5c06\u7528\u70b9\u5206\u5341\u8fdb\u5236\u5b57\u7b26\u4e32\u8868\u793a\u7684IPv4\u5730\u5740\u8f6c\u5316\u4e3a\u7528\u7f51\u7edc\u5b57\u8282\u5e8f\u6574\u6570\u8868\u793a\u7684IPv4\u5730\u5740\u3002\u5b83\u5931\u8d25\u65f6\u8fd4\u56deINADDR_NONE\u3002 - inet_aton\u51fd\u6570\u5b8c\u6210\u548cinet_addr\u540c\u6837\u7684\u529f\u80fd\uff0c\u4f46\u662f\u5c06\u8f6c\u5316\u7ed3\u679c\u5b58\u50a8\u4e8e\u53c2\u6570inp\u6307\u5411\u7684\u5730\u5740\u7ed3\u6784\u4e2d\u3002\u5b83\u6210\u529f\u65f6\u8fd4\u56de1\uff0c\u5931\u8d25\u5219\u8fd4\u56de0\u3002 - inet_ntoa\u51fd\u6570\u5c06\u7528\u7f51\u7edc\u5b57\u8282\u5e8f\u6574\u6570\u8868\u793a\u7684IPv4\u5730\u5740\u8f6c\u5316\u4e3a\u7528\u70b9\u5206\u5341\u8fdb\u5236\u5b57\u7b26\u4e32\u8868\u793a\u7684IPv4\u5730\u5740\u3002 - inet_pton\u51fd\u6570\u5c06\u7528\u5b57\u7b26\u4e32\u8868\u793a\u7684IP\u5730\u5740src\uff08\u7528\u70b9\u5206\u5341\u8fdb\u5236\u5b57\u7b26\u4e32\u8868\u793a\u7684IPv4\u5730\u5740\u6216\u7528\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\u8868\u793a\u7684IPv6\u5730\u5740\uff09\u8f6c\u6362\u6210\u7528\u7f51\u7edc\u5b57\u8282\u5e8f\u6574\u6570\u8868\u793a\u7684IP\u5730\u5740\uff0c\u5e76\u628a\u8f6c\u6362\u7ed3\u679c\u5b58\u50a8\u4e8edst\u6307\u5411\u7684\u5185\u5b58\u4e2d\u3002 - af\u53c2\u6570\u6307\u5b9a\u5730\u5740\u65cf\uff0c\u53ef\u4ee5\u662fAF_INET\u6216\u8005AF_INET6\u3002 - inet_pton\u6210\u529f\u65f6\u8fd4\u56de1\uff0c\u5931\u8d25\u5219\u8fd4\u56de0\u5e76\u8bbe\u7f6eerrno - net_ntop\u51fd\u6570\u8fdb\u884c\u76f8\u53cd\u7684\u8f6c\u6362\uff0c\u524d\u4e09\u4e2a\u53c2\u6570\u7684\u542b\u4e49\u4e0einet_pton\u7684\u53c2\u6570\u76f8\u540c\uff0c\u6700\u540e\u4e00\u4e2a\u53c2\u6570cnt\u6307\u5b9a\u76ee\u6807\u5b58\u50a8\u5355\u5143\u7684\u5927\u5c0f\u3002","title":"IP\u5730\u5740\u8f6c\u6362\u51fd\u6570"},{"location":"linux/socket_api/#socket","text":"#include\uff1csys/types.h\uff1e #include\uff1csys/socket.h\uff1e int socket(int domain,int type,int protocol); domain\u53c2\u6570\u544a\u8bc9\u7cfb\u7edf\u4f7f\u7528\u54ea\u4e2a\u5e95\u5c42\u534f\u8bae\u65cf\u3002 \u5bf9TCP/IP\u534f\u8bae\u65cf\u800c\u8a00\uff0c\u8be5\u53c2\u6570\u5e94\u8be5\u8bbe\u7f6e\u4e3aPF_INET\uff08Protocol Family of Internet\uff0c\u7528\u4e8eIPv4\uff09\u6216PF_INET6\uff08\u7528\u4e8eIPv6\uff09\uff1b \u5bf9\u4e8eUNIX\u672c\u5730\u57df\u534f\u8bae\u65cf\u800c\u8a00\uff0c\u8be5\u53c2\u6570\u5e94\u8be5\u8bbe\u7f6e\u4e3aPF_UNIX\u3002 type\u53c2\u6570\u6307\u5b9a\u670d\u52a1\u7c7b\u578b\u3002\u670d\u52a1\u7c7b\u578b\u4e3b\u8981\u6709SOCK_STREAM\u670d\u52a1\uff08\u6d41\u670d\u52a1\uff09\u548cSOCK_UGRAM\uff08\u6570\u636e\u62a5\uff09\u670d\u52a1\u3002 \u5bf9TCP/IP\u534f\u8bae\u65cf\u800c\u8a00\uff0c\u5176\u503c\u53d6SOCK_STREAM\u8868\u793a\u4f20\u8f93\u5c42\u4f7f\u7528TCP\u534f\u8bae\uff0c\u53d6SOCK_DGRAM\u8868\u793a\u4f20\u8f93\u5c42\u4f7f\u7528UDP\u534f\u8bae\u3002 type\u53c2\u6570\u53ef\u4ee5\u63a5\u53d7\u4e0a\u8ff0\u670d\u52a1\u7c7b\u578b\u4e0e\u4e0b\u9762\u4e24\u4e2a\u91cd\u8981\u7684\u6807\u5fd7\u76f8\u4e0e\u7684\u503c\uff1aSOCK_NONBLOCK\u548cSOCK_CLOEXEC\u3002\u5b83\u4eec\u5206\u522b\u8868\u793a\u5c06\u65b0\u521b\u5efa\u7684socket\u8bbe\u4e3a\u975e\u963b\u585e\u7684\uff0c\u4ee5\u53ca\u7528fork\u8c03\u7528\u521b\u5efa\u5b50\u8fdb\u7a0b\u65f6\u5728\u5b50\u8fdb\u7a0b\u4e2d\u5173\u95ed\u8be5socket\u3002 protocol\u53c2\u6570\u662f\u5728\u524d\u4e24\u4e2a\u53c2\u6570\u6784\u6210\u7684\u534f\u8bae\u96c6\u5408\u4e0b\uff0c\u518d\u9009\u62e9\u4e00\u4e2a\u5177\u4f53\u7684\u534f\u8bae\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u503c\u901a\u5e38\u90fd\u662f\u552f\u4e00\u7684\uff08\u524d\u4e24\u4e2a\u53c2\u6570\u5df2\u7ecf\u5b8c\u5168\u51b3\u5b9a\u4e86\u5b83\u7684\u503c\uff09\u3002\u51e0\u4e4e\u5728\u6240\u6709\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u90fd\u5e94\u8be5\u628a\u5b83\u8bbe\u7f6e\u4e3a0\uff0c\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u534f\u8bae\u3002 socket\u7cfb\u7edf\u8c03\u7528\u6210\u529f\u65f6\u8fd4\u56de\u4e00\u4e2asocket\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002","title":"socket"},{"location":"linux/socket_api/#bind","text":"\u5728\u670d\u52a1\u5668\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u8981\u547d\u540dsocket\uff0c\u56e0\u4e3a\u53ea\u6709\u547d\u540d\u540e\u5ba2\u6237\u7aef\u624d\u80fd\u77e5\u9053\u8be5\u5982\u4f55\u8fde\u63a5\u5b83\u3002\u5ba2\u6237\u7aef\u5219\u901a\u5e38\u4e0d\u9700\u8981\u547d\u540dsocket\uff0c\u800c\u662f\u91c7\u7528\u533f\u540d\u65b9\u5f0f\uff0c\u5373\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u5206\u914d\u7684socket\u5730\u5740\u3002\u547d\u540dsocket\u7684\u7cfb\u7edf\u8c03\u7528\u662fbind\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a #include\uff1csys/types.h\uff1e #include\uff1csys/socket.h\uff1e int bind(int sockfd,const struct sockaddr*my_addr,socklen_t addrlen); bind\u5c06my_addr\u6240\u6307\u7684socket\u5730\u5740\u5206\u914d\u7ed9\u672a\u547d\u540d\u7684sockfd\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0caddrlen\u53c2\u6570\u6307\u51fa\u8be5socket\u5730\u5740\u7684\u957f\u5ea6\u3002 bind\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002\u5176\u4e2d\u4e24\u79cd\u5e38\u89c1\u7684errno\u662fEACCES\u548cEADDRINUSE\uff0c - EACCES\uff0c\u88ab\u7ed1\u5b9a\u7684\u5730\u5740\u662f\u53d7\u4fdd\u62a4\u7684\u5730\u5740\uff0c\u4ec5\u8d85\u7ea7\u7528\u6237\u80fd\u591f\u8bbf\u95ee\u3002\u6bd4\u5982\u666e\u901a\u7528\u6237\u5c06socket\u7ed1\u5b9a\u5230\u77e5\u540d\u670d\u52a1\u7aef\u53e3\uff08\u7aef\u53e3\u53f7\u4e3a0\uff5e1023\uff09\u4e0a\u65f6\uff0cbind\u5c06\u8fd4\u56deEACCES\u9519\u8bef\u3002 - EADDRINUSE\uff0c\u88ab\u7ed1\u5b9a\u7684\u5730\u5740\u6b63\u5728\u4f7f\u7528\u4e2d\u3002\u6bd4\u5982\u5c06socket\u7ed1\u5b9a\u5230\u4e00\u4e2a\u5904\u4e8eTIME_WAIT\u72b6\u6001\u7684socket\u5730\u5740\u3002","title":"bind"},{"location":"linux/socket_api/#listen","text":"\u521b\u5efa\u4e00\u4e2a\u76d1\u542c\u961f\u5217\u4ee5\u5b58\u653e\u5f85\u5904\u7406\u7684\u5ba2\u6237\u8fde\u63a5 #include\uff1csys/socket.h\uff1e int listen(int sockfd,int backlog); sockfd\u53c2\u6570\u6307\u5b9a\u88ab\u76d1\u542c\u7684socket\u3002 backlog\u53c2\u6570\u63d0\u793a\u5185\u6838\u76d1\u542c\u961f\u5217\u7684\u6700\u5927\u957f\u5ea6\u3002 \u76d1\u542c\u961f\u5217\u7684\u957f\u5ea6\u5982\u679c\u8d85\u8fc7backlog\uff0c\u670d\u52a1\u5668\u5c06\u4e0d\u53d7\u7406\u65b0\u7684\u5ba2\u6237\u8fde\u63a5\uff0c\u5ba2\u6237\u7aef\u4e5f\u5c06\u6536\u5230ECONNREFUSED\u9519\u8bef\u4fe1\u606f\u3002 backlog\u53c2\u6570\u662f\u6307\u6240\u6709\u5904\u4e8e\u534a\u8fde\u63a5\u72b6\u6001\uff08SYN_RCVD\uff09\u548c\u5b8c\u5168\u8fde\u63a5\u72b6\u6001\uff08ESTABLISHED\uff09\u7684socket\u7684\u4e0a\u9650\u3002 \u5904\u4e8e\u534a\u8fde\u63a5\u72b6\u6001\u7684socket\u7684\u4e0a\u9650\u5219\u7531/proc/sys/net/ipv4/tcp_max_syn_backlog\u5185\u6838\u53c2\u6570\u5b9a\u4e49\u3002 listen\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 test_listen.cpp","title":"listen"},{"location":"linux/socket_api/#accept","text":"\u4ecelisten\u76d1\u542c\u961f\u5217\u4e2d\u63a5\u53d7\u4e00\u4e2a\u8fde\u63a5 #include\uff1csys/types.h\uff1e #include\uff1csys/socket.h\uff1e int accept(int sockfd,struct sockaddr*addr,socklen_t*addrlen); sockfd\u53c2\u6570\u662f\u6267\u884c\u8fc7listen\u7cfb\u7edf\u8c03\u7528\u7684\u76d1\u542csocket addr\u53c2\u6570\u7528\u6765\u83b7\u53d6\u88ab\u63a5\u53d7\u8fde\u63a5\u7684\u8fdc\u7aefsocket\u5730\u5740\uff0c\u8be5socket\u5730\u5740\u7684\u957f\u5ea6\u7531addrlen\u53c2\u6570\u6307\u51fa\u3002 accept\u6210\u529f\u65f6\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u8fde\u63a5socket\uff0c\u8be5socket\u552f\u4e00\u5730\u6807\u8bc6\u4e86\u88ab\u63a5\u53d7\u7684\u8fd9\u4e2a\u8fde\u63a5\uff0c\u670d\u52a1\u5668\u53ef\u901a\u8fc7\u8bfb\u5199\u8be5socket\u6765\u4e0e\u88ab\u63a5\u53d7\u8fde\u63a5\u5bf9\u5e94\u7684\u5ba2\u6237\u7aef\u901a\u4fe1\u3002accept\u5931\u8d25\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 test_accept.cpp","title":"accept"},{"location":"linux/socket_api/#connect","text":"\u5ba2\u6237\u7aef\u9700\u8981\u901a\u8fc7\u5982\u4e0b\u7cfb\u7edf\u8c03\u7528\u6765\u4e3b\u52a8\u4e0e\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5 #include\uff1csys/types.h\uff1e #include\uff1csys/socket.h\uff1e int connect(int sockfd,const struct sockaddr*serv_addr,socklen_t addrlen); sockfd\u53c2\u6570\u7531socket\u7cfb\u7edf\u8c03\u7528\u8fd4\u56de\u4e00\u4e2asocket\u3002 serv_addr\u53c2\u6570\u662f\u670d\u52a1\u5668\u76d1\u542c\u7684socket\u5730\u5740\uff0c addrlen\u53c2\u6570\u5219\u6307\u5b9a\u8fd9\u4e2a\u5730\u5740\u7684\u957f\u5ea6\u3002 connect\u6210\u529f\u65f6\u8fd4\u56de0\u3002 connect\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 ECONNREFUSED\uff0c\u76ee\u6807\u7aef\u53e3\u4e0d\u5b58\u5728\uff0c\u8fde\u63a5\u88ab\u62d2\u7edd\u3002 ETIMEDOUT\uff0c\u8fde\u63a5\u8d85\u65f6\u3002","title":"connect"},{"location":"linux/socket_api/#close","text":"#include\uff1cunistd.h\uff1e int close(int fd); fd\u53c2\u6570\u662f\u5f85\u5173\u95ed\u7684socket\u3002\u4e0d\u8fc7\uff0cclose\u7cfb\u7edf\u8c03\u7528\u5e76\u975e\u603b\u662f\u7acb\u5373\u5173\u95ed\u4e00\u4e2a\u8fde\u63a5\uff0c\u800c\u662f\u5c06fd\u7684\u5f15\u7528\u8ba1\u6570\u51cf1\u3002 \u53ea\u6709\u5f53fd\u7684\u5f15\u7528\u8ba1\u6570\u4e3a0\u65f6\uff0c\u624d\u771f\u6b63\u5173\u95ed\u8fde\u63a5 \u3002 \u5982\u679c\u65e0\u8bba\u5982\u4f55\u90fd\u8981\u7acb\u5373\u7ec8\u6b62\u8fde\u63a5\uff08\u800c\u4e0d\u662f\u5c06socket\u7684\u5f15\u7528\u8ba1\u6570\u51cf1\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u7684shutdown\u7cfb\u7edf\u8c03\u7528 #include\uff1csys/socket.h\uff1e int shutdown(int sockfd,int howto); sockfd\u53c2\u6570\u662f\u5f85\u5173\u95ed\u7684socket\u3002howto\u53c2\u6570\u51b3\u5b9a\u4e86shutdown\u7684\u884c\u4e3a shutdown\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002","title":"close"},{"location":"linux/socket_api/#recv_send","text":"#include\uff1csys/types.h\uff1e #include\uff1csys/socket.h\uff1e ssize_t recv(int sockfd,void*buf,size_t len,int flags); ssize_t send(int sockfd,const void*buf,size_t len,int flags); recv\u8bfb\u53d6sockfd\u4e0a\u7684\u6570\u636e\uff0cbuf\u548clen\u53c2\u6570\u5206\u522b\u6307\u5b9a\u8bfb\u7f13\u51b2\u533a\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f\uff0cflags\u53c2\u6570\u7684\u542b\u4e49\u89c1\u540e\u6587\uff0c\u901a\u5e38\u8bbe\u7f6e\u4e3a0\u5373\u53ef\u3002 recv\u6210\u529f\u65f6\u8fd4\u56de\u5b9e\u9645\u8bfb\u53d6\u5230\u7684\u6570\u636e\u7684\u957f\u5ea6\uff0c\u5b83\u53ef\u80fd\u5c0f\u4e8e\u6211\u4eec\u671f\u671b\u7684\u957f\u5ea6len\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u80fd\u8981\u591a\u6b21\u8c03\u7528recv\uff0c\u624d\u80fd\u8bfb\u53d6\u5230\u5b8c\u6574\u7684\u6570\u636e\u3002 recv\u53ef\u80fd\u8fd4\u56de0\uff0c\u8fd9\u610f\u5473\u7740\u901a\u4fe1\u5bf9\u65b9\u5df2\u7ecf\u5173\u95ed\u8fde\u63a5\u4e86\u3002recv\u51fa\u9519\u65f6\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 send\u5f80sockfd\u4e0a\u5199\u5165\u6570\u636e\uff0cbuf\u548clen\u53c2\u6570\u5206\u522b\u6307\u5b9a\u5199\u7f13\u51b2\u533a\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f\u3002 send\u6210\u529f\u65f6\u8fd4\u56de\u5b9e\u9645\u5199\u5165\u7684\u6570\u636e\u7684\u957f\u5ea6\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 flags\u53c2\u6570\u4e3a\u6570\u636e\u6536\u53d1\u63d0\u4f9b\u4e86\u989d\u5916\u7684\u63a7\u5236 test_oob_recv.cpp test_oob_send.cpp","title":"recv_send"},{"location":"linux/socket_api/#recvfrom_sendto","text":"\u7528\u4e8eUDP\u6570\u636e\u62a5\u8bfb\u5199\u7684\u7cfb\u7edf\u8c03\u7528 #include\uff1csys/types.h\uff1e #include\uff1csys/socket.h\uff1e ssize_t recvfrom(int sockfd,void*buf,size_t len,int flags,struct sockaddr*src_addr,socklen_t *addrlen); ssize_t sendto(int sockfd,const void*buf,size_t len,int flags,const struct sockaddr*dest_addr,socklen_t addrlen); recvfrom\u8bfb\u53d6sockfd\u4e0a\u7684\u6570\u636e\uff0cbuf\u548clen\u53c2\u6570\u5206\u522b\u6307\u5b9a\u8bfb\u7f13\u51b2\u533a\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f\u3002\u56e0\u4e3aUDP\u901a\u4fe1\u6ca1\u6709\u8fde\u63a5\u7684\u6982\u5ff5\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u8bfb\u53d6\u6570\u636e\u90fd\u9700\u8981\u83b7\u53d6\u53d1\u9001\u7aef\u7684socket\u5730\u5740\uff0c\u5373\u53c2\u6570src_addr\u6240\u6307\u7684\u5185\u5bb9\uff0caddrlen\u53c2\u6570\u5219\u6307\u5b9a\u8be5\u5730\u5740\u7684\u957f\u5ea6\u3002 sendto\u5f80sockfd\u4e0a\u5199\u5165\u6570\u636e\uff0cbuf\u548clen\u53c2\u6570\u5206\u522b\u6307\u5b9a\u5199\u7f13\u51b2\u533a\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f\u3002dest_addr\u53c2\u6570\u6307\u5b9a\u63a5\u6536\u7aef\u7684socket\u5730\u5740\uff0caddrlen\u53c2\u6570\u5219\u6307\u5b9a\u8be5\u5730\u5740\u7684\u957f\u5ea6\u3002 flags\u53c2\u6570\u4ee5\u53ca\u8fd4\u56de\u503c\u7684\u542b\u4e49\u5747\u4e0esend/recv\u7cfb\u7edf\u8c03\u7528\u7684flags\u53c2\u6570\u53ca\u8fd4\u56de\u503c\u76f8\u540c\u3002 recvfrom/sendto\u7cfb\u7edf\u8c03\u7528\u4e5f\u53ef\u4ee5\u7528\u4e8e\u9762\u5411\u8fde\u63a5\uff08STREAM\uff09\u7684socket\u7684\u6570\u636e\u8bfb\u5199\uff0c\u53ea\u9700\u8981\u628a\u6700\u540e\u4e24\u4e2a\u53c2\u6570\u90fd\u8bbe\u7f6e\u4e3aNULL\u4ee5\u5ffd\u7565\u53d1\u9001\u7aef/\u63a5\u6536\u7aef\u7684socket\u5730\u5740\uff08\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u548c\u5bf9\u65b9\u5efa\u7acb\u4e86\u8fde\u63a5\uff0c\u6240\u4ee5\u5df2\u7ecf\u77e5\u9053\u5176socket\u5730\u5740\u4e86\uff09","title":"recvfrom_sendto"},{"location":"linux/socket_api/#recvmg_sendmfg","text":"socket\u7f16\u7a0b\u63a5\u53e3\u8fd8\u63d0\u4f9b\u4e86\u4e00\u5bf9\u901a\u7528\u7684\u6570\u636e\u8bfb\u5199\u7cfb\u7edf\u8c03\u7528\u3002\u5b83\u4eec\u4e0d\u4ec5\u80fd\u7528\u4e8eTCP\u6d41\u6570\u636e\uff0c\u4e5f\u80fd\u7528\u4e8eUDP\u6570\u636e\u62a5 #include\uff1csys/socket.h\uff1e ssize_t recvmsg(int sockfd,struct msghdr*msg,int flags); ssize_t sendmsg(int sockfd,struct msghdr*msg,int flags); sockfd\u53c2\u6570\u6307\u5b9a\u88ab\u64cd\u4f5c\u7684\u76ee\u6807socket\u3002msg\u53c2\u6570\u662fmsghdr\u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u6307\u9488\uff0c struct msghdr { void *msg_name;/*socket\u5730\u5740*/ socklen_t msg_namelen;/*socket\u5730\u5740\u7684\u957f\u5ea6*/ struct iovec*msg_iov;/*\u5206\u6563\u7684\u5185\u5b58\u5757\uff0c\u89c1\u540e\u6587*/ int msg_iovlen;/*\u5206\u6563\u5185\u5b58\u5757\u7684\u6570\u91cf*/ void *msg_control;/*\u6307\u5411\u8f85\u52a9\u6570\u636e\u7684\u8d77\u59cb\u4f4d\u7f6e*/ socklen_t msg_controllen;/*\u8f85\u52a9\u6570\u636e\u7684\u5927\u5c0f*/ int msg_flags;/*\u590d\u5236\u51fd\u6570\u4e2d\u7684flags\u53c2\u6570\uff0c\u5e76\u5728\u8c03\u7528\u8fc7\u7a0b\u4e2d\u66f4\u65b0*/ }; msg_name\u6210\u5458\u6307\u5411\u4e00\u4e2asocket\u5730\u5740\u7ed3\u6784\u53d8\u91cf\u3002\u5b83\u6307\u5b9a\u901a\u4fe1\u5bf9\u65b9\u7684socket\u5730\u5740\u3002\u5bf9\u4e8e\u9762\u5411\u8fde\u63a5\u7684TCP\u534f\u8bae\uff0c\u8be5\u6210\u5458\u6ca1\u6709\u610f\u4e49\uff0c\u5fc5\u987b\u88ab\u8bbe\u7f6e\u4e3aNULL\u3002 msg_namelen\u6210\u5458\u5219\u6307\u5b9a\u4e86msg_name\u6240\u6307socket\u5730\u5740\u7684\u957f\u5ea6\u3002 msg_iov\u6210\u5458\u662fiovec\u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u6307\u9488,iovec\u7ed3\u6784\u4f53\u5c01\u88c5\u4e86\u4e00\u5757\u5185\u5b58\u7684\u8d77\u59cb\u4f4d\u7f6e\u548c\u957f\u5ea6\u3002 struct iovec { void*iov_base;/*\u5185\u5b58\u8d77\u59cb\u5730\u5740*/ size_t iov_len;/*\u8fd9\u5757\u5185\u5b58\u7684\u957f\u5ea6*/ }; msg_iovlen\u6307\u5b9a\u8fd9\u6837\u7684iovec\u7ed3\u6784\u5bf9\u8c61\u6709\u591a\u5c11\u4e2a\u3002 msg_control\u548cmsg_controllen\u6210\u5458\u7528\u4e8e\u8f85\u52a9\u6570\u636e\u7684\u4f20\u9001\u3002 msg_flags\u6210\u5458\u65e0\u987b\u8bbe\u5b9a\uff0c\u5b83\u4f1a\u590d\u5236recvmsg/sendmsg\u7684flags\u53c2\u6570\u7684\u5185\u5bb9\u4ee5\u5f71\u54cd\u6570\u636e\u8bfb\u5199\u8fc7\u7a0b\u3002","title":"recvmg_sendmfg"},{"location":"linux/socket_api/#\u5e26\u5916\u6807\u8bb0","text":"Linux\u5185\u6838\u68c0\u6d4b\u5230TCP\u7d27\u6025\u6807\u5fd7\u65f6\uff0c\u5c06\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u6709\u5e26\u5916\u6570\u636e\u9700\u8981\u63a5\u6536\u3002\u5185\u6838\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u5e26\u5916\u6570\u636e\u5230\u8fbe\u7684\u4e24\u79cd\u5e38\u89c1\u65b9\u5f0f\u662f\uff1aI/O\u590d\u7528\u4ea7\u751f\u7684\u5f02\u5e38\u4e8b\u4ef6\u548cSIGURG\u4fe1\u53f7\u3002 #include\uff1csys/socket.h\uff1e int sockatmark(int sockfd); sockatmark\u5224\u65adsockfd\u662f\u5426\u5904\u4e8e\u5e26\u5916\u6807\u8bb0\uff0c\u5373\u4e0b\u4e00\u4e2a\u88ab\u8bfb\u53d6\u5230\u7684\u6570\u636e\u662f\u5426\u662f\u5e26\u5916\u6570\u636e\u3002 \u5982\u679c\u662f\uff0csockatmark\u8fd4\u56de1\uff0c\u6b64\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u5e26MSG_OOB\u6807\u5fd7\u7684recv\u8c03\u7528\u6765\u63a5\u6536\u5e26\u5916\u6570\u636e\u3002 \u5982\u679c\u4e0d\u662f\uff0c\u5219sockatmark\u8fd4\u56de0\u3002","title":"\u5e26\u5916\u6807\u8bb0"},{"location":"linux/socket_api/#\u5730\u5740\u4fe1\u606f\u51fd\u6570","text":"#include\uff1csys/socket.h\uff1e int getsockname(int sockfd,struct sockaddr*address,socklen_t*address_len); int getpeername(int sockfd,struct sockaddr*address,socklen_t*address_len); getsockname\u83b7\u53d6sockfd\u5bf9\u5e94\u7684\u672c\u7aefsocket\u5730\u5740\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u4e8eaddress\u53c2\u6570\u6307\u5b9a\u7684\u5185\u5b58\u4e2d\uff0c\u8be5socket\u5730\u5740\u7684\u957f\u5ea6\u5219\u5b58\u50a8\u4e8eaddress_len\u53c2\u6570\u6307\u5411\u7684\u53d8\u91cf\u4e2d\u3002\u5982\u679c\u5b9e\u9645socket\u5730\u5740\u7684\u957f\u5ea6\u5927\u4e8eaddress\u6240\u6307\u5185\u5b58\u533a\u7684\u5927\u5c0f\uff0c\u90a3\u4e48\u8be5socket\u5730\u5740\u5c06\u88ab\u622a\u65ad\u3002getsockname\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 getpeername\u83b7\u53d6sockfd\u5bf9\u5e94\u7684\u8fdc\u7aefsocket\u5730\u5740\uff0c\u5176\u53c2\u6570\u53ca\u8fd4\u56de\u503c\u7684\u542b\u4e49\u4e0egetsockname\u7684\u53c2\u6570\u53ca\u8fd4\u56de\u503c\u76f8\u540c\u3002","title":"\u5730\u5740\u4fe1\u606f\u51fd\u6570"},{"location":"linux/socket_api/#socket\u9009\u9879","text":"#include\uff1csys/socket.h\uff1e int getsockopt(int sockfd,int level,int option_name,void*option_value,socklen_t*restrict option_len); int setsockopt(int sockfd,int level,int option_name,const void*option_value,socklen_t option_len); sockfd\u53c2\u6570\u6307\u5b9a\u88ab\u64cd\u4f5c\u7684\u76ee\u6807socket\u3002level\u53c2\u6570\u6307\u5b9a\u8981\u64cd\u4f5c\u54ea\u4e2a\u534f\u8bae\u7684\u9009\u9879\uff08\u5373\u5c5e\u6027\uff09\uff0c\u6bd4\u5982IPv4\u3001IPv6\u3001TCP\u7b49\u3002option_name\u53c2\u6570\u5219\u6307\u5b9a\u9009\u9879\u7684\u540d\u5b57\u3002 \u8bbe\u7f6esocket\u9009\u9879SO_REUSEADDR\u6765\u5f3a\u5236\u4f7f\u7528\u88ab\u5904\u4e8eTIME_WAIT\u72b6\u6001\u7684\u8fde\u63a5\u5360\u7528\u7684socket\u5730\u5740\u3002 setsockopt(sock,SOL_SOCKET,SO_REUSEADDR,\uff06reuse,sizeof(reuse)); SO_RCVBUF\u548cSO_SNDBUF\u9009\u9879\u5206\u522b\u8868\u793aTCP\u63a5\u6536\u7f13\u51b2\u533a\u548c\u53d1\u9001\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u3002 TCP\u63a5\u6536\u7f13\u51b2\u533a\u7684\u6700\u5c0f\u503c\u662f256\u5b57\u8282\uff0c\u800c\u53d1\u9001\u7f13\u51b2\u533a\u7684\u6700\u5c0f\u503c\u662f2048\u5b57\u8282 /proc/sys/net/ipv4/tcp_rmem\u548c/proc/sys/net/ipv4/tcp_wmem\u6765\u5f3a\u5236TCP\u63a5\u6536\u7f13\u51b2\u533a\u548c\u53d1\u9001\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u6ca1\u6709\u6700\u5c0f\u503c\u9650\u5236\u3002 setsockopt(sock,SOL_SOCKET,SO_SNDBUF,\uff06sendbuf,sizeof(sendbuf)); setsockopt(sock,SOL_SOCKET,SO_RCVBUF,\uff06recvbuf,sizeof(recvbuf)); getsockopt(sock,SOL_SOCKET,SO_RCVBUF,\uff06recvbuf,(socklen_t*)\uff06len); SO_LINGER\u9009\u9879\u7528\u4e8e\u63a7\u5236close\u7cfb\u7edf\u8c03\u7528\u5728\u5173\u95edTCP\u8fde\u63a5\u65f6\u7684\u884c\u4e3a\u3002 linger\u7c7b\u578b\u7684\u7ed3\u6784\u4f53 l_onoff\u7b49\u4e8e0\u3002\u6b64\u65f6SO_LINGER\u9009\u9879\u4e0d\u8d77\u4f5c\u7528\uff0cclose\u7528\u9ed8\u8ba4\u884c\u4e3a\u6765\u5173\u95edsocket\u3002 l_onoff\u4e0d\u4e3a0\uff0cl_linger\u7b49\u4e8e0\u3002\u6b64\u65f6close\u7cfb\u7edf\u8c03\u7528\u7acb\u5373\u8fd4\u56de\uff0cTCP\u6a21\u5757\u5c06\u4e22\u5f03\u88ab\u5173\u95ed\u7684socket\u5bf9\u5e94\u7684TCP\u53d1\u9001\u7f13\u51b2\u533a\u4e2d\u6b8b\u7559\u7684\u6570\u636e\uff0c\u540c\u65f6\u7ed9\u5bf9\u65b9\u53d1\u9001\u4e00\u4e2a\u590d\u4f4d\u62a5\u6587\u6bb5 l_onoff\u4e0d\u4e3a0\uff0cl_linger\u5927\u4e8e0\u3002\u6b64\u65f6close\u7684\u884c\u4e3a\u53d6\u51b3\u4e8e\u4e24\u4e2a\u6761\u4ef6\uff1a\u4e00\u662f\u88ab\u5173\u95ed\u7684socket\u5bf9\u5e94\u7684TCP\u53d1\u9001\u7f13\u51b2\u533a\u4e2d\u662f\u5426\u8fd8\u6709\u6b8b\u7559\u7684\u6570\u636e\uff1b\u4e8c\u662f\u8be5socket\u662f\u963b\u585e\u7684\uff0c\u8fd8\u662f\u975e\u963b\u585e\u7684\u3002\u5bf9\u4e8e\u963b\u585e\u7684socket\uff0cclose\u5c06\u7b49\u5f85\u4e00\u6bb5\u957f\u4e3al_linger\u7684\u65f6\u95f4\uff0c\u76f4\u5230TCP\u6a21\u5757\u53d1\u9001\u5b8c\u6240\u6709\u6b8b\u7559\u6570\u636e\u5e76\u5f97\u5230\u5bf9\u65b9\u7684\u786e\u8ba4\u3002\u5982\u679c\u8fd9\u6bb5\u65f6\u95f4\u5185TCP\u6a21\u5757\u6ca1\u6709\u53d1\u9001\u5b8c\u6b8b\u7559\u6570\u636e\u5e76\u5f97\u5230\u5bf9\u65b9\u7684\u786e\u8ba4\uff0c\u90a3\u4e48close\u7cfb\u7edf\u8c03\u7528\u5c06\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u4e3aEWOULDBLOCK\u3002\u5982\u679csocket\u662f\u975e\u963b\u585e\u7684\uff0cclose\u5c06\u7acb\u5373\u8fd4\u56de\uff0c\u6b64\u65f6\u6211\u4eec\u9700\u8981\u6839\u636e\u5176\u8fd4\u56de\u503c\u548cerrno\u6765\u5224\u65ad\u6b8b\u7559\u6570\u636e\u662f\u5426\u5df2\u7ecf\u53d1\u9001\u5b8c\u6bd5\u3002 #include\uff1csys/socket.h\uff1e struct linger { int l_onoff;/*\u5f00\u542f\uff08\u975e0\uff09\u8fd8\u662f\u5173\u95ed\uff080\uff09\u8be5\u9009\u9879*/ int l_linger;/*\u6ede\u7559\u65f6\u95f4*/ };","title":"socket\u9009\u9879"},{"location":"linux/socket_api/#\u7f51\u7edc\u4fe1\u606fapi","text":"","title":"\u7f51\u7edc\u4fe1\u606fAPI"},{"location":"linux/socket_api/#getservbyname\u548cgetservbyport","text":"getservbyname\u51fd\u6570\u6839\u636e\u540d\u79f0\u83b7\u53d6\u67d0\u4e2a\u670d\u52a1\u7684\u5b8c\u6574\u4fe1\u606f\uff0c getservbyport\u51fd\u6570\u6839\u636e\u7aef\u53e3\u53f7\u83b7\u53d6\u67d0\u4e2a\u670d\u52a1\u7684\u5b8c\u6574\u4fe1\u606f\u3002 #include\uff1cnetdb.h\uff1e struct servent* getservbyname(const char*name,const char*proto); struct servent* getservbyport(int port,const char*proto); struct servent { char*s_name;/*\u670d\u52a1\u540d\u79f0*/ char**s_aliases;/*\u670d\u52a1\u7684\u522b\u540d\u5217\u8868\uff0c\u53ef\u80fd\u6709\u591a\u4e2a*/ int s_port;/*\u7aef\u53e3\u53f7*/ char*s_proto;/*\u670d\u52a1\u7c7b\u578b,\u901a\u5e38\u662ftcp\u6216\u8005udp*/ }; name\u53c2\u6570\u6307\u5b9a\u76ee\u6807\u670d\u52a1\u7684\u540d\u5b57\uff0c port\u53c2\u6570\u6307\u5b9a\u76ee\u6807\u670d\u52a1\u5bf9\u5e94\u7684\u7aef\u53e3\u53f7\u3002 proto\u53c2\u6570\u6307\u5b9a\u670d\u52a1\u7c7b\u578b\uff0c\u7ed9\u5b83\u4f20\u9012\u201ctcp\u201d\u8868\u793a\u83b7\u53d6\u6d41\u670d\u52a1\uff0c\u7ed9\u5b83\u4f20\u9012\u201cudp\u201d\u8868\u793a\u83b7\u53d6\u6570\u636e\u62a5\u670d\u52a1\uff0c\u7ed9\u5b83\u4f20\u9012NULL\u5219\u8868\u793a\u83b7\u53d6\u6240\u6709\u7c7b\u578b\u7684\u670d\u52a1\u3002","title":"getservbyname\u548cgetservbyport"},{"location":"linux/socket_api/#getaddrinfo","text":"getaddrinfo\u51fd\u6570\u65e2\u80fd\u901a\u8fc7\u4e3b\u673a\u540d\u83b7\u5f97IP\u5730\u5740\uff08\u5185\u90e8\u4f7f\u7528\u7684\u662fgethostbyname\u51fd\u6570\uff09\uff0c\u4e5f\u80fd\u901a\u8fc7\u670d\u52a1\u540d\u83b7\u5f97\u7aef\u53e3\u53f7\uff08\u5185\u90e8\u4f7f\u7528\u7684\u662fgetservbyname\u51fd\u6570\uff09\u3002 #include\uff1cnetdb.h\uff1e int getaddrinfo(const char*hostname,const char*service,const struct addrinfo*hints,struct addrinfo**result); void freeaddrinfo(struct addrinfo*res); struct addrinfo { int ai_flags;/*\u5177\u4f53\u7684\u7f51\u7edc\u534f\u8bae*/ int ai_family;/*\u5730\u5740\u65cf*/ int ai_socktype;/*\u670d\u52a1\u7c7b\u578b\uff0cSOCK_STREAM\u6216SOCK_DGRAM*/ int ai_protocol;/*\u89c1\u540e\u6587*/ socklen_t ai_addrlen;/*socket\u5730\u5740ai_addr\u7684\u957f\u5ea6*/ char*ai_canonname;/*\u4e3b\u673a\u7684\u522b\u540d*/ struct sockaddr*ai_addr;/*\u6307\u5411socket\u5730\u5740*/ struct addrinfo*ai_next;/*\u6307\u5411\u4e0b\u4e00\u4e2asockinfo\u7ed3\u6784\u7684\u5bf9\u8c61*/ }; hostname\u53c2\u6570\u53ef\u4ee5\u63a5\u6536\u4e3b\u673a\u540d\uff0c\u4e5f\u53ef\u4ee5\u63a5\u6536\u5b57\u7b26\u4e32\u8868\u793a\u7684IP\u5730\u5740 service\u53c2\u6570\u53ef\u4ee5\u63a5\u6536\u670d\u52a1\u540d\uff0c\u4e5f\u53ef\u4ee5\u63a5\u6536\u5b57\u7b26\u4e32\u8868\u793a\u7684\u5341\u8fdb\u5236\u7aef\u53e3\u53f7\u3002 hints\u53c2\u6570\u662f\u5e94\u7528\u7a0b\u5e8f\u7ed9getaddrinfo\u7684\u4e00\u4e2a\u63d0\u793a\uff0c\u4ee5\u5bf9getaddrinfo\u7684\u8f93\u51fa\u8fdb\u884c\u66f4\u7cbe\u786e\u7684\u63a7\u5236\u3002hints\u53c2\u6570\u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3aNULL\uff0c\u8868\u793a\u5141\u8bb8getaddrinfo\u53cd\u9988\u4efb\u4f55\u53ef\u7528\u7684\u7ed3\u679c\u3002 result\u53c2\u6570\u6307\u5411\u4e00\u4e2a\u94fe\u8868\uff0c\u8be5\u94fe\u8868\u7528\u4e8e\u5b58\u50a8getaddrinfo\u53cd\u9988\u7684\u7ed3\u679c\u3002 getaddrinfo\u53cd\u9988\u7684\u6bcf\u4e00\u6761\u7ed3\u679c\u90fd\u662faddrinfo\u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u5bf9\u8c61 ai_flags\u6210\u5458\u53ef\u4ee5\u53d6\u88685-6\u4e2d\u7684\u6807\u5fd7\u7684\u6309\u4f4d\u6216","title":"getaddrinfo"},{"location":"linux/socket_api/#getnameinfo","text":"getnameinfo\u51fd\u6570\u80fd\u901a\u8fc7socket\u5730\u5740\u540c\u65f6\u83b7\u5f97\u4ee5\u5b57\u7b26\u4e32\u8868\u793a\u7684\u4e3b\u673a\u540d\uff08\u5185\u90e8\u4f7f\u7528\u7684\u662fgethostbyaddr\u51fd\u6570\uff09\u548c\u670d\u52a1\u540d\uff08\u5185\u90e8\u4f7f\u7528\u7684\u662fgetservbyport\u51fd\u6570\uff09\u3002 #include\uff1cnetdb.h\uff1e int getnameinfo(const struct sockaddr*sockaddr,socklen_t addrlen,char*host,socklen_t hostlen,char*serv,socklen_t servlen,int flags); \u4e3b\u673a\u540d\u5b58\u50a8\u5728host\u53c2\u6570\u6307\u5411\u7684\u7f13\u5b58\u4e2d\uff0c\u5c06\u670d\u52a1\u540d\u5b58\u50a8\u5728serv\u53c2\u6570\u6307\u5411\u7684\u7f13\u5b58\u4e2d\uff0chostlen\u548cservlen\u53c2\u6570\u5206\u522b\u6307\u5b9a\u8fd9\u4e24\u5757\u7f13\u5b58\u7684\u957f\u5ea6\u3002 flags\u53c2\u6570\u63a7\u5236getnameinfo\u7684\u884c\u4e3a","title":"getnameinfo"},{"location":"linux/ssh/","text":"remote shell # ssh root@lc-1 \"ls /\"","title":"Ssh"},{"location":"linux/ssh/#remote-shell","text":"ssh root@lc-1 \"ls /\"","title":"remote shell"},{"location":"linux/system_cmds/","text":"ipcs # \u5f53\u7a0b\u5e8f\u8c03\u7528semget\u3001shmget\u6216\u8005msgget\u65f6\uff0c\u5c31\u521b\u5efa\u4e86\u8fd9\u4e9b\u5171\u4eab\u8d44\u6e90\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002Linux\u63d0\u4f9b\u4e86ipcs\u547d\u4ee4\uff0c\u4ee5\u89c2\u5bdf\u5f53\u524d\u7cfb\u7edf\u4e0a\u62e5\u6709\u54ea\u4e9b\u5171\u4eab\u8d44\u6e90\u5b9e\u4f8b\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528**ipcrm**\u547d\u4ee4\u6765\u5220\u9664\u9057\u7559\u5728\u7cfb\u7edf\u4e2d\u7684\u5171\u4eab\u8d44\u6e90 printk_level # echo 5 >/proc/sys/kernel/printk","title":"System cmds"},{"location":"linux/system_cmds/#ipcs","text":"\u5f53\u7a0b\u5e8f\u8c03\u7528semget\u3001shmget\u6216\u8005msgget\u65f6\uff0c\u5c31\u521b\u5efa\u4e86\u8fd9\u4e9b\u5171\u4eab\u8d44\u6e90\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002Linux\u63d0\u4f9b\u4e86ipcs\u547d\u4ee4\uff0c\u4ee5\u89c2\u5bdf\u5f53\u524d\u7cfb\u7edf\u4e0a\u62e5\u6709\u54ea\u4e9b\u5171\u4eab\u8d44\u6e90\u5b9e\u4f8b\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528**ipcrm**\u547d\u4ee4\u6765\u5220\u9664\u9057\u7559\u5728\u7cfb\u7edf\u4e2d\u7684\u5171\u4eab\u8d44\u6e90","title":"ipcs"},{"location":"linux/system_cmds/#printk_level","text":"echo 5 >/proc/sys/kernel/printk","title":"printk_level"},{"location":"linux/thread/","text":"\u6839\u636e\u8fd0\u884c\u73af\u5883\u548c\u8c03\u5ea6\u8005\u7684\u8eab\u4efd\uff0c\u7ebf\u7a0b\u53ef\u5206\u4e3a\u5185\u6838\u7ebf\u7a0b\u548c\u7528\u6237\u7ebf\u7a0b\u3002 \u5185\u6838\u7ebf\u7a0b\uff0c\u5728\u6709\u7684\u7cfb\u7edf\u4e0a\u4e5f\u79f0\u4e3aLWP\uff08Light Weight Process\uff0c\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\uff09\uff0c\u8fd0\u884c\u5728\u5185\u6838\u7a7a\u95f4\uff0c\u7531\u5185\u6838\u6765\u8c03\u5ea6\uff1b\u7528\u6237\u7ebf\u7a0b\u8fd0\u884c\u5728\u7528\u6237\u7a7a\u95f4\uff0c\u7531\u7ebf\u7a0b\u5e93\u6765\u8c03\u5ea6\u3002 Linux\u4e0a\u4e24\u4e2a\u6700\u6709\u540d\u7684\u7ebf\u7a0b\u5e93\u662fLinuxThreads\u548cNPTL\uff0c\u5b83\u4eec\u90fd\u662f\u91c7\u75281:1\u7684\u65b9\u5f0f\u5b9e\u73b0\u7684\u3002 \u73b0\u4ee3Linux\u4e0a\u9ed8\u8ba4\u4f7f\u7528\u7684\u7ebf\u7a0b\u5e93\u662fNPTL, getconf GNU_LIBPTHREAD_VERSION LinuxThreads\u7ebf\u7a0b\u5e93\u7684\u5185\u6838\u7ebf\u7a0b\u662f\u7528clone\u7cfb\u7edf\u8c03\u7528\u521b\u5efa\u7684\u8fdb\u7a0b\u6a21\u62df\u7684\u3002clone\u7cfb\u7edf\u8c03\u7528\u548cfork\u7cfb\u7edf\u8c03\u7528\u7684\u4f5c\u7528\u7c7b\u4f3c\uff1a\u521b\u5efa\u8c03\u7528\u8fdb\u7a0b\u7684\u5b50\u8fdb\u7a0b\u3002 \u6211\u4eec\u53ef\u4ee5\u4e3aclone\u7cfb\u7edf\u8c03\u7528\u6307\u5b9aCLONE_THREAD\u6807\u5fd7\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5b83\u521b\u5efa\u7684\u5b50\u8fdb\u7a0b\u4e0e\u8c03\u7528\u8fdb\u7a0b\u5171\u4eab\u76f8\u540c\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u3001\u6587\u4ef6\u63cf\u8ff0\u7b26\u548c\u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff0c\u8fd9\u4e9b\u90fd\u662f\u7ebf\u7a0b\u7684\u7279\u70b9\u3002 \u521b\u5efa\u7ebf\u7a0b\u548c\u7ed3\u675f\u7ebf\u7a0b # #include\uff1cpthread.h\uff1e int pthread_create ( pthread_t * thread , const pthread_attr_t * attr , void * ( * start_routine )( void * ), void * arg ); #include\uff1cbits/pthreadtypes.h\uff1e typedef unsigned long int pthread_t ; thread\u53c2\u6570\u662f\u65b0\u7ebf\u7a0b\u7684\u6807\u8bc6\u7b26\uff0c\u540e\u7eedpthread_*\u51fd\u6570\u901a\u8fc7\u5b83\u6765\u5f15\u7528\u65b0\u7ebf\u7a0b\u3002 attr\u53c2\u6570\u7528\u4e8e\u8bbe\u7f6e\u65b0\u7ebf\u7a0b\u7684\u5c5e\u6027\u3002\u7ed9\u5b83\u4f20\u9012NULL\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u7ebf\u7a0b\u5c5e\u6027\u3002 start_routine\u548carg\u53c2\u6570\u5206\u522b\u6307\u5b9a\u65b0\u7ebf\u7a0b\u5c06\u8fd0\u884c\u7684\u51fd\u6570\u53ca\u5176\u53c2\u6570\u3002 pthread_create\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u65f6\u8fd4\u56de\u9519\u8bef\u7801\u3002 #include\uff1cpthread.h\uff1e void pthread_exit ( void * retval ); pthread_exit\u51fd\u6570\u901a\u8fc7retval\u53c2\u6570\u5411\u7ebf\u7a0b\u7684\u56de\u6536\u8005\u4f20\u9012\u5176\u9000\u51fa\u4fe1\u606f\u3002 int pthread_join ( pthread_t thread , void ** retval ); \u8fdb\u7a0b\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u90fd\u53ef\u4ee5\u8c03\u7528pthread_join\u51fd\u6570\u6765\u56de\u6536\u5176\u4ed6\u7ebf\u7a0b thread\u53c2\u6570\u662f\u76ee\u6807\u7ebf\u7a0b\u7684\u6807\u8bc6\u7b26\uff0cretval\u53c2\u6570\u5219\u662f\u76ee\u6807\u7ebf\u7a0b\u8fd4\u56de\u7684\u9000\u51fa\u4fe1\u606f\u3002\u8be5\u51fd\u6570\u4f1a\u4e00\u76f4\u963b\u585e\uff0c\u76f4\u5230\u88ab\u56de\u6536\u7684\u7ebf\u7a0b\u7ed3\u675f\u4e3a\u6b62\u3002 \u8be5\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de\u9519\u8bef\u7801\u3002 \u6709\u65f6\u5019\u6211\u4eec\u5e0c\u671b\u5f02\u5e38\u7ec8\u6b62\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5373\u53d6\u6d88\u7ebf\u7a0b int pthread_cancel ( pthread_t thread ); int pthread_setcancelstate ( int state , int * oldstate ); int pthread_setcanceltype ( int type , int * oldtype ); \u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5206\u522b\u7528\u4e8e\u8bbe\u7f6e\u7ebf\u7a0b\u7684\u53d6\u6d88\u72b6\u6001\uff08\u662f\u5426\u5141\u8bb8\u53d6\u6d88\uff09\u548c\u53d6\u6d88\u7c7b\u578b\uff08\u5982\u4f55\u53d6\u6d88\uff09\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5219\u5206\u522b\u8bb0\u5f55\u7ebf\u7a0b\u539f\u6765\u7684\u53d6\u6d88\u72b6\u6001\u548c\u53d6\u6d88\u7c7b\u578b\u3002state\u53c2\u6570\u6709\u4e24\u4e2a\u53ef\u9009\u503c\uff1a \u2751PTHREAD_CANCEL_ENABLE\uff0c\u5141\u8bb8\u7ebf\u7a0b\u88ab\u53d6\u6d88\u3002\u5b83\u662f\u7ebf\u7a0b\u88ab\u521b\u5efa\u65f6\u7684\u9ed8\u8ba4\u53d6\u6d88\u72b6\u6001\u3002 \u2751PTHREAD_CANCEL_DISABLE\uff0c\u7981\u6b62\u7ebf\u7a0b\u88ab\u53d6\u6d88\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u6536\u5230\u53d6\u6d88\u8bf7\u6c42\uff0c\u5219\u5b83\u4f1a\u5c06\u8bf7\u6c42\u6302\u8d77\uff0c\u76f4\u5230\u8be5\u7ebf\u7a0b\u5141\u8bb8\u88ab\u53d6\u6d88\u3002 type\u53c2\u6570\u4e5f\u6709\u4e24\u4e2a\u53ef\u9009\u503c\uff1a \u2751PTHREAD_CANCEL_ASYNCHRONOUS\uff0c\u7ebf\u7a0b\u968f\u65f6\u90fd\u53ef\u4ee5\u88ab\u53d6\u6d88\u3002\u5b83\u5c06\u4f7f\u5f97\u63a5\u6536\u5230\u53d6\u6d88\u8bf7\u6c42\u7684\u76ee\u6807\u7ebf\u7a0b\u7acb\u5373\u91c7\u53d6\u884c\u52a8\u3002 \u2751PTHREAD_CANCEL_DEFERRED\uff0c\u5141\u8bb8\u76ee\u6807\u7ebf\u7a0b\u63a8\u8fdf\u884c\u52a8\uff0c\u76f4\u5230\u5b83\u8c03\u7528\u4e86\u4e0b\u9762\u51e0\u4e2a\u6240\u8c13\u7684\u53d6\u6d88\u70b9\u51fd\u6570\u4e2d\u7684\u4e00\u4e2a\uff1apthread_join\u3001pthread_testcancel\u3001pthread_cond_wait\u3001pthread_cond_timedwait\u3001sem_wait\u548csigwait\u3002\u6839\u636ePOSIX\u6807\u51c6\uff0c\u5176\u4ed6\u53ef\u80fd\u963b\u585e\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u6bd4\u5982read\u3001wait\uff0c\u4e5f\u53ef\u4ee5\u6210\u4e3a\u53d6\u6d88\u70b9\u3002 \u7ebf\u7a0b\u5c5e\u6027 # \u7ebf\u7a0b\u5e93\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u51fd\u6570\u6765\u64cd\u4f5cpthread_attr_t\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u4ee5\u65b9\u4fbf\u6211\u4eec\u83b7\u53d6\u548c\u8bbe\u7f6e\u7ebf\u7a0b\u5c5e\u6027\u3002 #include\uff1cpthread.h\uff1e /*\u521d\u59cb\u5316\u7ebf\u7a0b\u5c5e\u6027\u5bf9\u8c61*/ int pthread_attr_init ( pthread_attr_t * attr ); /*\u9500\u6bc1\u7ebf\u7a0b\u5c5e\u6027\u5bf9\u8c61\u3002\u88ab\u9500\u6bc1\u7684\u7ebf\u7a0b\u5c5e\u6027\u5bf9\u8c61\u53ea\u6709\u518d\u6b21\u521d\u59cb\u5316\u4e4b\u540e\u624d\u80fd\u7ee7\u7eed\u4f7f\u7528*/ int pthread_attr_destroy ( pthread_attr_t * attr ); /*\u4e0b\u9762\u8fd9\u4e9b\u51fd\u6570\u7528\u4e8e\u83b7\u53d6\u548c\u8bbe\u7f6e\u7ebf\u7a0b\u5c5e\u6027\u5bf9\u8c61\u7684\u67d0\u4e2a\u5c5e\u6027*/ int pthread_attr_getdetachstate ( const pthread_attr_t * attr , int * detachstate ); int pthread_attr_setdetachstate ( pthread_attr_t * attr , int detachstate ); int pthread_attr_getstackaddr ( const pthread_attr_t * attr , void ** stackaddr ); int pthread_attr_setstackaddr ( pthread_attr_t * attr , void * stackaddr ); int pthread_attr_getstacksize ( const pthread_attr_t * attr , size_t * stacksize ); int pthread_attr_setstacksize ( pthread_attr_t * attr , size_t stacksize ); int pthread_attr_getstack ( const pthread_attr_t * attr , void ** stackaddr , size_t * stacksize ); int pthread_attr_setstack ( pthread_attr_t * attr , void * stackaddr , size_t stacksize ); int pthread_attr_getguardsize ( const pthread_attr_t * __attr , size_t * guardsize ); int pthread_attr_setguardsize ( pthread_attr_t * attr , size_t guardsize ); int pthread_attr_getschedparam ( const pthread_attr_t * attr , struct sched_param * param ); int pthread_attr_setschedparam ( pthread_attr_t * attr , const struct sched_param * param ); int pthread_attr_getschedpolicy ( const pthread_attr_t * attr , int * policy ); int pthread_attr_setschedpolicy ( pthread_attr_t * attr , int policy ); int pthread_attr_getinheritsched ( const pthread_attr_t * attr , int * inherit ); int pthread_attr_setinheritsched ( pthread_attr_t * attr , int inherit ); int pthread_attr_getscope ( const pthread_attr_t * attr , int * scope ); int pthread_attr_setscope ( pthread_attr_t * attr , int scope ); POSIX\u4fe1\u53f7\u91cf # #include\uff1csemaphore.h\uff1e int sem_init ( sem_t * sem , int pshared , unsigned int value ); int sem_destroy ( sem_t * sem ); int sem_wait ( sem_t * sem ); int sem_trywait ( sem_t * sem ); int sem_post ( sem_t * sem ); sem_init\u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316\u4e00\u4e2a\u672a\u547d\u540d\u7684\u4fe1\u53f7\u91cf\uff08POSIX\u4fe1\u53f7\u91cfAPI\u652f\u6301\u547d\u540d\u4fe1\u53f7\u91cf\uff0c\u4e0d\u8fc7\u672c\u4e66\u4e0d\u8ba8\u8bba\u5b83\uff09\u3002pshared\u53c2\u6570\u6307\u5b9a\u4fe1\u53f7\u91cf\u7684\u7c7b\u578b\u3002\u5982\u679c\u5176\u503c\u4e3a0\uff0c\u5c31\u8868\u793a\u8fd9\u4e2a\u4fe1\u53f7\u91cf\u662f\u5f53\u524d\u8fdb\u7a0b\u7684\u5c40\u90e8\u4fe1\u53f7\u91cf\uff0c\u5426\u5219\u8be5\u4fe1\u53f7\u91cf\u5c31\u53ef\u4ee5\u5728\u591a\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u5171\u4eab\u3002value\u53c2\u6570\u6307\u5b9a\u4fe1\u53f7\u91cf\u7684\u521d\u59cb\u503c\u3002 sem_destroy\u51fd\u6570\u7528\u4e8e\u9500\u6bc1\u4fe1\u53f7\u91cf\uff0c\u4ee5\u91ca\u653e\u5176\u5360\u7528\u7684\u5185\u6838\u8d44\u6e90\u3002 sem_trywait\u4e0esem_wait\u51fd\u6570\u76f8\u4f3c\uff0c\u4e0d\u8fc7\u5b83\u59cb\u7ec8\u7acb\u5373\u8fd4\u56de\uff0c\u800c\u4e0d\u8bba\u88ab\u64cd\u4f5c\u7684\u4fe1\u53f7\u91cf\u662f\u5426\u5177\u6709\u975e0\u503c\uff0c\u76f8\u5f53\u4e8esem_wait\u7684\u975e\u963b\u585e\u7248\u672c\u3002\u5f53\u4fe1\u53f7\u91cf\u7684\u503c\u975e0\u65f6\uff0csem_trywait\u5bf9\u4fe1\u53f7\u91cf\u6267\u884c\u51cf1\u64cd\u4f5c\u3002\u5f53\u4fe1\u53f7\u91cf\u7684\u503c\u4e3a0\u65f6\uff0c\u5b83\u5c06\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u4e3aEAGAIN\u3002 sem_post\u51fd\u6570\u4ee5\u539f\u5b50\u64cd\u4f5c\u7684\u65b9\u5f0f\u5c06\u4fe1\u53f7\u91cf\u7684\u503c\u52a01\u3002\u5f53\u4fe1\u53f7\u91cf\u7684\u503c\u5927\u4e8e0\u65f6\uff0c\u5176\u4ed6\u6b63\u5728\u8c03\u7528sem_wait\u7b49\u5f85\u4fe1\u53f7\u91cf\u7684\u7ebf\u7a0b\u5c06\u88ab\u5524\u9192\u3002 \u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002 \u4e92\u65a5\u9501 # \u4e92\u65a5\u9501\uff08\u4e5f\u79f0\u4e92\u65a5\u91cf\uff09\u53ef\u4ee5\u7528\u4e8e\u4fdd\u62a4\u5173\u952e\u4ee3\u7801\u6bb5\uff0c\u4ee5\u786e\u4fdd\u5176\u72ec\u5360\u5f0f\u7684\u8bbf\u95ee #include\uff1cpthread.h\uff1e int pthread_mutex_init ( pthread_mutex_t * mutex , const pthread_mutexattr_t * mutexattr ); int pthread_mutex_destroy ( pthread_mutex_t * mutex ); int pthread_mutex_lock ( pthread_mutex_t * mutex ); int pthread_mutex_trylock ( pthread_mutex_t * mutex ); int pthread_mutex_unlock ( pthread_mutex_t * mutex ); pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER ; \u7b2c\u4e00\u4e2a\u53c2\u6570mutex\u6307\u5411\u8981\u64cd\u4f5c\u7684\u76ee\u6807\u4e92\u65a5\u9501\uff0c\u4e92\u65a5\u9501\u7684\u7c7b\u578b\u662fpthread_mutex_t\u7ed3\u6784\u4f53\u3002 pthread_mutex_init\u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316\u4e92\u65a5\u9501\u3002 mutexattr\u53c2\u6570\u6307\u5b9a\u4e92\u65a5\u9501\u7684\u5c5e\u6027\u3002\u5982\u679c\u5c06\u5b83\u8bbe\u7f6e\u4e3aNULL\uff0c\u5219\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u5c5e\u6027\u3002 \u5b8fPTHREAD_MUTEX_INITIALIZER\u5b9e\u9645\u4e0a\u53ea\u662f\u628a\u4e92\u65a5\u9501\u7684\u5404\u4e2a\u5b57\u6bb5\u90fd\u521d\u59cb\u5316\u4e3a0\u3002 pthread_mutex_destroy\u51fd\u6570\u7528\u4e8e\u9500\u6bc1\u4e92\u65a5\u9501\uff0c\u4ee5\u91ca\u653e\u5176\u5360\u7528\u7684\u5185\u6838\u8d44\u6e90\u3002\u9500\u6bc1\u4e00\u4e2a\u5df2\u7ecf\u52a0\u9501\u7684\u4e92\u65a5\u9501\u5c06\u5bfc\u81f4\u4e0d\u53ef\u9884\u671f\u7684\u540e\u679c\u3002 pthread_mutex_lock\u51fd\u6570\u4ee5\u539f\u5b50\u64cd\u4f5c\u7684\u65b9\u5f0f\u7ed9\u4e00\u4e2a\u4e92\u65a5\u9501\u52a0\u9501\u3002\u5982\u679c\u76ee\u6807\u4e92\u65a5\u9501\u5df2\u7ecf\u88ab\u9501\u4e0a\uff0c\u5219pthread_mutex_lock\u8c03\u7528\u5c06\u963b\u585e\uff0c\u76f4\u5230\u8be5\u4e92\u65a5\u9501\u7684\u5360\u6709\u8005\u5c06\u5176\u89e3\u9501\u3002 pthread_mutex_trylock\u4e0epthread_mutex_lock\u51fd\u6570\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u5b83\u59cb\u7ec8\u7acb\u5373\u8fd4\u56de\uff0c\u800c\u4e0d\u8bba\u88ab\u64cd\u4f5c\u7684\u4e92\u65a5\u9501\u662f\u5426\u5df2\u7ecf\u88ab\u52a0\u9501\uff0c\u76f8\u5f53\u4e8epthread_mutex_lock\u7684\u975e\u963b\u585e\u7248\u672c\u3002\u5f53\u76ee\u6807\u4e92\u65a5\u9501\u672a\u88ab\u52a0\u9501\u65f6\uff0cpthread_mutex_trylock\u5bf9\u4e92\u65a5\u9501\u6267\u884c\u52a0\u9501\u64cd\u4f5c\u3002\u5f53\u4e92\u65a5\u9501\u5df2\u7ecf\u88ab\u52a0\u9501\u65f6\uff0cpthread_mutex_trylock\u5c06\u8fd4\u56de\u9519\u8bef\u7801EBUSY\u3002 pthread_mutexattr_t\u7ed3\u6784\u4f53\u5b9a\u4e49\u4e86\u4e00\u5957\u5b8c\u6574\u7684\u4e92\u65a5\u9501\u5c5e\u6027\u3002\u7ebf\u7a0b\u5e93\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u51fd\u6570\u6765\u64cd\u4f5cpthread_mutexattr_t\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u4ee5\u65b9\u4fbf\u6211\u4eec\u83b7\u53d6\u548c\u8bbe\u7f6e\u4e92\u65a5\u9501\u5c5e\u6027\u3002 #include\uff1cpthread.h\uff1e /*\u521d\u59cb\u5316\u4e92\u65a5\u9501\u5c5e\u6027\u5bf9\u8c61*/ int pthread_mutexattr_init ( pthread_mutexattr_t * attr ); /*\u9500\u6bc1\u4e92\u65a5\u9501\u5c5e\u6027\u5bf9\u8c61*/ int pthread_mutexattr_destroy ( pthread_mutexattr_t * attr ); /*\u83b7\u53d6\u548c\u8bbe\u7f6e\u4e92\u65a5\u9501\u7684pshared\u5c5e\u6027*/ int pthread_mutexattr_getpshared ( const pthread_mutexattr_t * attr , int * pshared ); int pthread_mutexattr_setpshared ( pthread_mutexattr_t * attr , int pshared ); /*\u83b7\u53d6\u548c\u8bbe\u7f6e\u4e92\u65a5\u9501\u7684type\u5c5e\u6027*/ int pthread_mutexattr_gettype ( const pthread_mutexattr_t * attr , int * type ); int pthread_mutexattr_settype ( pthread_mutexattr_t * attr , int type ); \u2751PTHREAD_PROCESS_SHARED\u3002\u4e92\u65a5\u9501\u53ef\u4ee5\u88ab\u8de8\u8fdb\u7a0b\u5171\u4eab\u3002 \u2751PTHREAD_PROCESS_PRIVATE\u3002\u4e92\u65a5\u9501\u53ea\u80fd\u88ab\u548c\u9501\u7684\u521d\u59cb\u5316\u7ebf\u7a0b\u96b6\u5c5e\u4e8e\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u7ebf\u7a0b\u5171\u4eab\u3002 \u4e92\u65a5\u9501\u5c5e\u6027type\u6307\u5b9a\u4e92\u65a5\u9501\u7684\u7c7b\u578b\u3002Linux\u652f\u6301\u5982\u4e0b4\u79cd\u7c7b\u578b\u7684\u4e92\u65a5\u9501\uff1a \u2751PTHREAD_MUTEX_NORMAL\uff0c\u666e\u901a\u9501\u3002\u8fd9\u662f\u4e92\u65a5\u9501\u9ed8\u8ba4\u7684\u7c7b\u578b\u3002\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u4e00\u4e2a\u666e\u901a\u9501\u52a0\u9501\u4ee5\u540e\uff0c\u5176\u4f59\u8bf7\u6c42\u8be5\u9501\u7684\u7ebf\u7a0b\u5c06\u5f62\u6210\u4e00\u4e2a\u7b49\u5f85\u961f\u5217\uff0c\u5e76\u5728\u8be5\u9501\u89e3\u9501\u540e\u6309\u4f18\u5148\u7ea7\u83b7\u5f97\u5b83\u3002 \u2751PTHREAD_MUTEX_ERRORCHECK\uff0c\u68c0\u9519\u9501\u3002\u4e00\u4e2a\u7ebf\u7a0b\u5982\u679c\u5bf9\u4e00\u4e2a\u5df2\u7ecf\u52a0\u9501\u7684\u68c0\u9519\u9501\u518d\u6b21\u52a0\u9501\uff0c\u5219\u52a0\u9501\u64cd\u4f5c\u8fd4\u56deEDEADLK\u3002 \u2751PTHREAD_MUTEX_RECURSIVE\uff0c\u5d4c\u5957\u9501\u3002\u8fd9\u79cd\u9501\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u5728\u91ca\u653e\u9501\u4e4b\u524d\u591a\u6b21\u5bf9\u5b83\u52a0\u9501\u800c\u4e0d\u53d1\u751f\u6b7b\u9501\u3002 \u2751PTHREAD_MUTEX_DEFAULT\uff0c\u9ed8\u8ba4\u9501\u3002\u4e00\u4e2a\u7ebf\u7a0b\u5982\u679c\u5bf9\u4e00\u4e2a\u5df2\u7ecf\u52a0\u9501\u7684\u9ed8\u8ba4\u9501\u518d\u6b21\u52a0\u9501 **\u6b7b\u9501**\u4f7f\u5f97\u4e00\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\u88ab\u6302\u8d77\u800c\u65e0\u6cd5\u7ee7\u7eed\u6267\u884c\uff0c\u800c\u4e14\u8fd9\u79cd\u60c5\u51b5\u8fd8\u4e0d\u5bb9\u6613\u88ab\u53d1\u73b0\u3002 \u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u5bf9\u4e00\u4e2a\u5df2\u7ecf\u52a0\u9501\u7684\u666e\u901a\u9501\u518d\u6b21\u52a0\u9501\uff0c\u5c06\u5bfc\u81f4\u6b7b\u9501\u3002 \u5982\u679c\u4e24\u4e2a\u7ebf\u7a0b\u6309\u7167\u4e0d\u540c\u7684\u987a\u5e8f\u6765\u7533\u8bf7\u4e24\u4e2a\u4e92\u65a5\u9501\uff0c\u4e5f\u5bb9\u6613\u4ea7\u751f\u6b7b\u9501 \u6761\u4ef6\u53d8\u91cf # \u5982\u679c\u8bf4\u4e92\u65a5\u9501\u662f\u7528\u4e8e\u540c\u6b65\u7ebf\u7a0b\u5bf9\u5171\u4eab\u6570\u636e\u7684\u8bbf\u95ee\u7684\u8bdd\uff0c\u90a3\u4e48\u6761\u4ef6\u53d8\u91cf\u5219\u662f\u7528\u4e8e\u5728\u7ebf\u7a0b\u4e4b\u95f4\u540c\u6b65\u5171\u4eab\u6570\u636e\u7684\u503c\u3002\u6761\u4ef6\u53d8\u91cf\u63d0\u4f9b\u4e86\u4e00\u79cd\u7ebf\u7a0b\u95f4\u7684\u901a\u77e5\u673a\u5236\uff1a\u5f53\u67d0\u4e2a\u5171\u4eab\u6570\u636e\u8fbe\u5230\u67d0\u4e2a\u503c\u7684\u65f6\u5019\uff0c\u5524\u9192\u7b49\u5f85\u8fd9\u4e2a\u5171\u4eab\u6570\u636e\u7684\u7ebf\u7a0b\u3002 #include\uff1cpthread.h\uff1e int pthread_cond_init ( pthread_cond_t * cond , const pthread_condattr_t * cond_attr ); int pthread_cond_destroy ( pthread_cond_t * cond ); int pthread_cond_broadcast ( pthread_cond_t * cond ); int pthread_cond_signal ( pthread_cond_t * cond ); int pthread_cond_wait ( pthread_cond_t * cond , pthread_mutex_t * mutex ); pthread_cond_t cond = PTHREAD_COND_INITIALIZER ; \u8fd9\u4e9b\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570cond\u6307\u5411\u8981\u64cd\u4f5c\u7684\u76ee\u6807\u6761\u4ef6\u53d8\u91cf\uff0c\u6761\u4ef6\u53d8\u91cf\u7684\u7c7b\u578b\u662fpthread_cond_t\u7ed3\u6784\u4f53\u3002 pthread_cond_init\u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316\u6761\u4ef6\u53d8\u91cf\u3002cond_attr\u53c2\u6570\u6307\u5b9a\u6761\u4ef6\u53d8\u91cf\u7684\u5c5e\u6027\u3002\u5982\u679c\u5c06\u5b83\u8bbe\u7f6e\u4e3aNULL\uff0c\u5219\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u5c5e\u6027\u3002\u6761\u4ef6\u53d8\u91cf\u7684\u5c5e\u6027\u4e0d\u591a\uff0c\u800c\u4e14\u548c\u4e92\u65a5\u9501\u7684\u5c5e\u6027\u7c7b\u578b\u76f8\u4f3c test_thread.cpp","title":"Thread"},{"location":"linux/thread/#\u521b\u5efa\u7ebf\u7a0b\u548c\u7ed3\u675f\u7ebf\u7a0b","text":"#include\uff1cpthread.h\uff1e int pthread_create ( pthread_t * thread , const pthread_attr_t * attr , void * ( * start_routine )( void * ), void * arg ); #include\uff1cbits/pthreadtypes.h\uff1e typedef unsigned long int pthread_t ; thread\u53c2\u6570\u662f\u65b0\u7ebf\u7a0b\u7684\u6807\u8bc6\u7b26\uff0c\u540e\u7eedpthread_*\u51fd\u6570\u901a\u8fc7\u5b83\u6765\u5f15\u7528\u65b0\u7ebf\u7a0b\u3002 attr\u53c2\u6570\u7528\u4e8e\u8bbe\u7f6e\u65b0\u7ebf\u7a0b\u7684\u5c5e\u6027\u3002\u7ed9\u5b83\u4f20\u9012NULL\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u7ebf\u7a0b\u5c5e\u6027\u3002 start_routine\u548carg\u53c2\u6570\u5206\u522b\u6307\u5b9a\u65b0\u7ebf\u7a0b\u5c06\u8fd0\u884c\u7684\u51fd\u6570\u53ca\u5176\u53c2\u6570\u3002 pthread_create\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u65f6\u8fd4\u56de\u9519\u8bef\u7801\u3002 #include\uff1cpthread.h\uff1e void pthread_exit ( void * retval ); pthread_exit\u51fd\u6570\u901a\u8fc7retval\u53c2\u6570\u5411\u7ebf\u7a0b\u7684\u56de\u6536\u8005\u4f20\u9012\u5176\u9000\u51fa\u4fe1\u606f\u3002 int pthread_join ( pthread_t thread , void ** retval ); \u8fdb\u7a0b\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u90fd\u53ef\u4ee5\u8c03\u7528pthread_join\u51fd\u6570\u6765\u56de\u6536\u5176\u4ed6\u7ebf\u7a0b thread\u53c2\u6570\u662f\u76ee\u6807\u7ebf\u7a0b\u7684\u6807\u8bc6\u7b26\uff0cretval\u53c2\u6570\u5219\u662f\u76ee\u6807\u7ebf\u7a0b\u8fd4\u56de\u7684\u9000\u51fa\u4fe1\u606f\u3002\u8be5\u51fd\u6570\u4f1a\u4e00\u76f4\u963b\u585e\uff0c\u76f4\u5230\u88ab\u56de\u6536\u7684\u7ebf\u7a0b\u7ed3\u675f\u4e3a\u6b62\u3002 \u8be5\u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de\u9519\u8bef\u7801\u3002 \u6709\u65f6\u5019\u6211\u4eec\u5e0c\u671b\u5f02\u5e38\u7ec8\u6b62\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5373\u53d6\u6d88\u7ebf\u7a0b int pthread_cancel ( pthread_t thread ); int pthread_setcancelstate ( int state , int * oldstate ); int pthread_setcanceltype ( int type , int * oldtype ); \u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5206\u522b\u7528\u4e8e\u8bbe\u7f6e\u7ebf\u7a0b\u7684\u53d6\u6d88\u72b6\u6001\uff08\u662f\u5426\u5141\u8bb8\u53d6\u6d88\uff09\u548c\u53d6\u6d88\u7c7b\u578b\uff08\u5982\u4f55\u53d6\u6d88\uff09\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5219\u5206\u522b\u8bb0\u5f55\u7ebf\u7a0b\u539f\u6765\u7684\u53d6\u6d88\u72b6\u6001\u548c\u53d6\u6d88\u7c7b\u578b\u3002state\u53c2\u6570\u6709\u4e24\u4e2a\u53ef\u9009\u503c\uff1a \u2751PTHREAD_CANCEL_ENABLE\uff0c\u5141\u8bb8\u7ebf\u7a0b\u88ab\u53d6\u6d88\u3002\u5b83\u662f\u7ebf\u7a0b\u88ab\u521b\u5efa\u65f6\u7684\u9ed8\u8ba4\u53d6\u6d88\u72b6\u6001\u3002 \u2751PTHREAD_CANCEL_DISABLE\uff0c\u7981\u6b62\u7ebf\u7a0b\u88ab\u53d6\u6d88\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u6536\u5230\u53d6\u6d88\u8bf7\u6c42\uff0c\u5219\u5b83\u4f1a\u5c06\u8bf7\u6c42\u6302\u8d77\uff0c\u76f4\u5230\u8be5\u7ebf\u7a0b\u5141\u8bb8\u88ab\u53d6\u6d88\u3002 type\u53c2\u6570\u4e5f\u6709\u4e24\u4e2a\u53ef\u9009\u503c\uff1a \u2751PTHREAD_CANCEL_ASYNCHRONOUS\uff0c\u7ebf\u7a0b\u968f\u65f6\u90fd\u53ef\u4ee5\u88ab\u53d6\u6d88\u3002\u5b83\u5c06\u4f7f\u5f97\u63a5\u6536\u5230\u53d6\u6d88\u8bf7\u6c42\u7684\u76ee\u6807\u7ebf\u7a0b\u7acb\u5373\u91c7\u53d6\u884c\u52a8\u3002 \u2751PTHREAD_CANCEL_DEFERRED\uff0c\u5141\u8bb8\u76ee\u6807\u7ebf\u7a0b\u63a8\u8fdf\u884c\u52a8\uff0c\u76f4\u5230\u5b83\u8c03\u7528\u4e86\u4e0b\u9762\u51e0\u4e2a\u6240\u8c13\u7684\u53d6\u6d88\u70b9\u51fd\u6570\u4e2d\u7684\u4e00\u4e2a\uff1apthread_join\u3001pthread_testcancel\u3001pthread_cond_wait\u3001pthread_cond_timedwait\u3001sem_wait\u548csigwait\u3002\u6839\u636ePOSIX\u6807\u51c6\uff0c\u5176\u4ed6\u53ef\u80fd\u963b\u585e\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u6bd4\u5982read\u3001wait\uff0c\u4e5f\u53ef\u4ee5\u6210\u4e3a\u53d6\u6d88\u70b9\u3002","title":"\u521b\u5efa\u7ebf\u7a0b\u548c\u7ed3\u675f\u7ebf\u7a0b"},{"location":"linux/thread/#\u7ebf\u7a0b\u5c5e\u6027","text":"\u7ebf\u7a0b\u5e93\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u51fd\u6570\u6765\u64cd\u4f5cpthread_attr_t\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u4ee5\u65b9\u4fbf\u6211\u4eec\u83b7\u53d6\u548c\u8bbe\u7f6e\u7ebf\u7a0b\u5c5e\u6027\u3002 #include\uff1cpthread.h\uff1e /*\u521d\u59cb\u5316\u7ebf\u7a0b\u5c5e\u6027\u5bf9\u8c61*/ int pthread_attr_init ( pthread_attr_t * attr ); /*\u9500\u6bc1\u7ebf\u7a0b\u5c5e\u6027\u5bf9\u8c61\u3002\u88ab\u9500\u6bc1\u7684\u7ebf\u7a0b\u5c5e\u6027\u5bf9\u8c61\u53ea\u6709\u518d\u6b21\u521d\u59cb\u5316\u4e4b\u540e\u624d\u80fd\u7ee7\u7eed\u4f7f\u7528*/ int pthread_attr_destroy ( pthread_attr_t * attr ); /*\u4e0b\u9762\u8fd9\u4e9b\u51fd\u6570\u7528\u4e8e\u83b7\u53d6\u548c\u8bbe\u7f6e\u7ebf\u7a0b\u5c5e\u6027\u5bf9\u8c61\u7684\u67d0\u4e2a\u5c5e\u6027*/ int pthread_attr_getdetachstate ( const pthread_attr_t * attr , int * detachstate ); int pthread_attr_setdetachstate ( pthread_attr_t * attr , int detachstate ); int pthread_attr_getstackaddr ( const pthread_attr_t * attr , void ** stackaddr ); int pthread_attr_setstackaddr ( pthread_attr_t * attr , void * stackaddr ); int pthread_attr_getstacksize ( const pthread_attr_t * attr , size_t * stacksize ); int pthread_attr_setstacksize ( pthread_attr_t * attr , size_t stacksize ); int pthread_attr_getstack ( const pthread_attr_t * attr , void ** stackaddr , size_t * stacksize ); int pthread_attr_setstack ( pthread_attr_t * attr , void * stackaddr , size_t stacksize ); int pthread_attr_getguardsize ( const pthread_attr_t * __attr , size_t * guardsize ); int pthread_attr_setguardsize ( pthread_attr_t * attr , size_t guardsize ); int pthread_attr_getschedparam ( const pthread_attr_t * attr , struct sched_param * param ); int pthread_attr_setschedparam ( pthread_attr_t * attr , const struct sched_param * param ); int pthread_attr_getschedpolicy ( const pthread_attr_t * attr , int * policy ); int pthread_attr_setschedpolicy ( pthread_attr_t * attr , int policy ); int pthread_attr_getinheritsched ( const pthread_attr_t * attr , int * inherit ); int pthread_attr_setinheritsched ( pthread_attr_t * attr , int inherit ); int pthread_attr_getscope ( const pthread_attr_t * attr , int * scope ); int pthread_attr_setscope ( pthread_attr_t * attr , int scope );","title":"\u7ebf\u7a0b\u5c5e\u6027"},{"location":"linux/thread/#posix\u4fe1\u53f7\u91cf","text":"#include\uff1csemaphore.h\uff1e int sem_init ( sem_t * sem , int pshared , unsigned int value ); int sem_destroy ( sem_t * sem ); int sem_wait ( sem_t * sem ); int sem_trywait ( sem_t * sem ); int sem_post ( sem_t * sem ); sem_init\u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316\u4e00\u4e2a\u672a\u547d\u540d\u7684\u4fe1\u53f7\u91cf\uff08POSIX\u4fe1\u53f7\u91cfAPI\u652f\u6301\u547d\u540d\u4fe1\u53f7\u91cf\uff0c\u4e0d\u8fc7\u672c\u4e66\u4e0d\u8ba8\u8bba\u5b83\uff09\u3002pshared\u53c2\u6570\u6307\u5b9a\u4fe1\u53f7\u91cf\u7684\u7c7b\u578b\u3002\u5982\u679c\u5176\u503c\u4e3a0\uff0c\u5c31\u8868\u793a\u8fd9\u4e2a\u4fe1\u53f7\u91cf\u662f\u5f53\u524d\u8fdb\u7a0b\u7684\u5c40\u90e8\u4fe1\u53f7\u91cf\uff0c\u5426\u5219\u8be5\u4fe1\u53f7\u91cf\u5c31\u53ef\u4ee5\u5728\u591a\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u5171\u4eab\u3002value\u53c2\u6570\u6307\u5b9a\u4fe1\u53f7\u91cf\u7684\u521d\u59cb\u503c\u3002 sem_destroy\u51fd\u6570\u7528\u4e8e\u9500\u6bc1\u4fe1\u53f7\u91cf\uff0c\u4ee5\u91ca\u653e\u5176\u5360\u7528\u7684\u5185\u6838\u8d44\u6e90\u3002 sem_trywait\u4e0esem_wait\u51fd\u6570\u76f8\u4f3c\uff0c\u4e0d\u8fc7\u5b83\u59cb\u7ec8\u7acb\u5373\u8fd4\u56de\uff0c\u800c\u4e0d\u8bba\u88ab\u64cd\u4f5c\u7684\u4fe1\u53f7\u91cf\u662f\u5426\u5177\u6709\u975e0\u503c\uff0c\u76f8\u5f53\u4e8esem_wait\u7684\u975e\u963b\u585e\u7248\u672c\u3002\u5f53\u4fe1\u53f7\u91cf\u7684\u503c\u975e0\u65f6\uff0csem_trywait\u5bf9\u4fe1\u53f7\u91cf\u6267\u884c\u51cf1\u64cd\u4f5c\u3002\u5f53\u4fe1\u53f7\u91cf\u7684\u503c\u4e3a0\u65f6\uff0c\u5b83\u5c06\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u4e3aEAGAIN\u3002 sem_post\u51fd\u6570\u4ee5\u539f\u5b50\u64cd\u4f5c\u7684\u65b9\u5f0f\u5c06\u4fe1\u53f7\u91cf\u7684\u503c\u52a01\u3002\u5f53\u4fe1\u53f7\u91cf\u7684\u503c\u5927\u4e8e0\u65f6\uff0c\u5176\u4ed6\u6b63\u5728\u8c03\u7528sem_wait\u7b49\u5f85\u4fe1\u53f7\u91cf\u7684\u7ebf\u7a0b\u5c06\u88ab\u5524\u9192\u3002 \u51fd\u6570\u6210\u529f\u65f6\u8fd4\u56de0\uff0c\u5931\u8d25\u5219\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\u3002","title":"POSIX\u4fe1\u53f7\u91cf"},{"location":"linux/thread/#\u4e92\u65a5\u9501","text":"\u4e92\u65a5\u9501\uff08\u4e5f\u79f0\u4e92\u65a5\u91cf\uff09\u53ef\u4ee5\u7528\u4e8e\u4fdd\u62a4\u5173\u952e\u4ee3\u7801\u6bb5\uff0c\u4ee5\u786e\u4fdd\u5176\u72ec\u5360\u5f0f\u7684\u8bbf\u95ee #include\uff1cpthread.h\uff1e int pthread_mutex_init ( pthread_mutex_t * mutex , const pthread_mutexattr_t * mutexattr ); int pthread_mutex_destroy ( pthread_mutex_t * mutex ); int pthread_mutex_lock ( pthread_mutex_t * mutex ); int pthread_mutex_trylock ( pthread_mutex_t * mutex ); int pthread_mutex_unlock ( pthread_mutex_t * mutex ); pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER ; \u7b2c\u4e00\u4e2a\u53c2\u6570mutex\u6307\u5411\u8981\u64cd\u4f5c\u7684\u76ee\u6807\u4e92\u65a5\u9501\uff0c\u4e92\u65a5\u9501\u7684\u7c7b\u578b\u662fpthread_mutex_t\u7ed3\u6784\u4f53\u3002 pthread_mutex_init\u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316\u4e92\u65a5\u9501\u3002 mutexattr\u53c2\u6570\u6307\u5b9a\u4e92\u65a5\u9501\u7684\u5c5e\u6027\u3002\u5982\u679c\u5c06\u5b83\u8bbe\u7f6e\u4e3aNULL\uff0c\u5219\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u5c5e\u6027\u3002 \u5b8fPTHREAD_MUTEX_INITIALIZER\u5b9e\u9645\u4e0a\u53ea\u662f\u628a\u4e92\u65a5\u9501\u7684\u5404\u4e2a\u5b57\u6bb5\u90fd\u521d\u59cb\u5316\u4e3a0\u3002 pthread_mutex_destroy\u51fd\u6570\u7528\u4e8e\u9500\u6bc1\u4e92\u65a5\u9501\uff0c\u4ee5\u91ca\u653e\u5176\u5360\u7528\u7684\u5185\u6838\u8d44\u6e90\u3002\u9500\u6bc1\u4e00\u4e2a\u5df2\u7ecf\u52a0\u9501\u7684\u4e92\u65a5\u9501\u5c06\u5bfc\u81f4\u4e0d\u53ef\u9884\u671f\u7684\u540e\u679c\u3002 pthread_mutex_lock\u51fd\u6570\u4ee5\u539f\u5b50\u64cd\u4f5c\u7684\u65b9\u5f0f\u7ed9\u4e00\u4e2a\u4e92\u65a5\u9501\u52a0\u9501\u3002\u5982\u679c\u76ee\u6807\u4e92\u65a5\u9501\u5df2\u7ecf\u88ab\u9501\u4e0a\uff0c\u5219pthread_mutex_lock\u8c03\u7528\u5c06\u963b\u585e\uff0c\u76f4\u5230\u8be5\u4e92\u65a5\u9501\u7684\u5360\u6709\u8005\u5c06\u5176\u89e3\u9501\u3002 pthread_mutex_trylock\u4e0epthread_mutex_lock\u51fd\u6570\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u5b83\u59cb\u7ec8\u7acb\u5373\u8fd4\u56de\uff0c\u800c\u4e0d\u8bba\u88ab\u64cd\u4f5c\u7684\u4e92\u65a5\u9501\u662f\u5426\u5df2\u7ecf\u88ab\u52a0\u9501\uff0c\u76f8\u5f53\u4e8epthread_mutex_lock\u7684\u975e\u963b\u585e\u7248\u672c\u3002\u5f53\u76ee\u6807\u4e92\u65a5\u9501\u672a\u88ab\u52a0\u9501\u65f6\uff0cpthread_mutex_trylock\u5bf9\u4e92\u65a5\u9501\u6267\u884c\u52a0\u9501\u64cd\u4f5c\u3002\u5f53\u4e92\u65a5\u9501\u5df2\u7ecf\u88ab\u52a0\u9501\u65f6\uff0cpthread_mutex_trylock\u5c06\u8fd4\u56de\u9519\u8bef\u7801EBUSY\u3002 pthread_mutexattr_t\u7ed3\u6784\u4f53\u5b9a\u4e49\u4e86\u4e00\u5957\u5b8c\u6574\u7684\u4e92\u65a5\u9501\u5c5e\u6027\u3002\u7ebf\u7a0b\u5e93\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u51fd\u6570\u6765\u64cd\u4f5cpthread_mutexattr_t\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u4ee5\u65b9\u4fbf\u6211\u4eec\u83b7\u53d6\u548c\u8bbe\u7f6e\u4e92\u65a5\u9501\u5c5e\u6027\u3002 #include\uff1cpthread.h\uff1e /*\u521d\u59cb\u5316\u4e92\u65a5\u9501\u5c5e\u6027\u5bf9\u8c61*/ int pthread_mutexattr_init ( pthread_mutexattr_t * attr ); /*\u9500\u6bc1\u4e92\u65a5\u9501\u5c5e\u6027\u5bf9\u8c61*/ int pthread_mutexattr_destroy ( pthread_mutexattr_t * attr ); /*\u83b7\u53d6\u548c\u8bbe\u7f6e\u4e92\u65a5\u9501\u7684pshared\u5c5e\u6027*/ int pthread_mutexattr_getpshared ( const pthread_mutexattr_t * attr , int * pshared ); int pthread_mutexattr_setpshared ( pthread_mutexattr_t * attr , int pshared ); /*\u83b7\u53d6\u548c\u8bbe\u7f6e\u4e92\u65a5\u9501\u7684type\u5c5e\u6027*/ int pthread_mutexattr_gettype ( const pthread_mutexattr_t * attr , int * type ); int pthread_mutexattr_settype ( pthread_mutexattr_t * attr , int type ); \u2751PTHREAD_PROCESS_SHARED\u3002\u4e92\u65a5\u9501\u53ef\u4ee5\u88ab\u8de8\u8fdb\u7a0b\u5171\u4eab\u3002 \u2751PTHREAD_PROCESS_PRIVATE\u3002\u4e92\u65a5\u9501\u53ea\u80fd\u88ab\u548c\u9501\u7684\u521d\u59cb\u5316\u7ebf\u7a0b\u96b6\u5c5e\u4e8e\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u7ebf\u7a0b\u5171\u4eab\u3002 \u4e92\u65a5\u9501\u5c5e\u6027type\u6307\u5b9a\u4e92\u65a5\u9501\u7684\u7c7b\u578b\u3002Linux\u652f\u6301\u5982\u4e0b4\u79cd\u7c7b\u578b\u7684\u4e92\u65a5\u9501\uff1a \u2751PTHREAD_MUTEX_NORMAL\uff0c\u666e\u901a\u9501\u3002\u8fd9\u662f\u4e92\u65a5\u9501\u9ed8\u8ba4\u7684\u7c7b\u578b\u3002\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u4e00\u4e2a\u666e\u901a\u9501\u52a0\u9501\u4ee5\u540e\uff0c\u5176\u4f59\u8bf7\u6c42\u8be5\u9501\u7684\u7ebf\u7a0b\u5c06\u5f62\u6210\u4e00\u4e2a\u7b49\u5f85\u961f\u5217\uff0c\u5e76\u5728\u8be5\u9501\u89e3\u9501\u540e\u6309\u4f18\u5148\u7ea7\u83b7\u5f97\u5b83\u3002 \u2751PTHREAD_MUTEX_ERRORCHECK\uff0c\u68c0\u9519\u9501\u3002\u4e00\u4e2a\u7ebf\u7a0b\u5982\u679c\u5bf9\u4e00\u4e2a\u5df2\u7ecf\u52a0\u9501\u7684\u68c0\u9519\u9501\u518d\u6b21\u52a0\u9501\uff0c\u5219\u52a0\u9501\u64cd\u4f5c\u8fd4\u56deEDEADLK\u3002 \u2751PTHREAD_MUTEX_RECURSIVE\uff0c\u5d4c\u5957\u9501\u3002\u8fd9\u79cd\u9501\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u5728\u91ca\u653e\u9501\u4e4b\u524d\u591a\u6b21\u5bf9\u5b83\u52a0\u9501\u800c\u4e0d\u53d1\u751f\u6b7b\u9501\u3002 \u2751PTHREAD_MUTEX_DEFAULT\uff0c\u9ed8\u8ba4\u9501\u3002\u4e00\u4e2a\u7ebf\u7a0b\u5982\u679c\u5bf9\u4e00\u4e2a\u5df2\u7ecf\u52a0\u9501\u7684\u9ed8\u8ba4\u9501\u518d\u6b21\u52a0\u9501 **\u6b7b\u9501**\u4f7f\u5f97\u4e00\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\u88ab\u6302\u8d77\u800c\u65e0\u6cd5\u7ee7\u7eed\u6267\u884c\uff0c\u800c\u4e14\u8fd9\u79cd\u60c5\u51b5\u8fd8\u4e0d\u5bb9\u6613\u88ab\u53d1\u73b0\u3002 \u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u5bf9\u4e00\u4e2a\u5df2\u7ecf\u52a0\u9501\u7684\u666e\u901a\u9501\u518d\u6b21\u52a0\u9501\uff0c\u5c06\u5bfc\u81f4\u6b7b\u9501\u3002 \u5982\u679c\u4e24\u4e2a\u7ebf\u7a0b\u6309\u7167\u4e0d\u540c\u7684\u987a\u5e8f\u6765\u7533\u8bf7\u4e24\u4e2a\u4e92\u65a5\u9501\uff0c\u4e5f\u5bb9\u6613\u4ea7\u751f\u6b7b\u9501","title":"\u4e92\u65a5\u9501"},{"location":"linux/thread/#\u6761\u4ef6\u53d8\u91cf","text":"\u5982\u679c\u8bf4\u4e92\u65a5\u9501\u662f\u7528\u4e8e\u540c\u6b65\u7ebf\u7a0b\u5bf9\u5171\u4eab\u6570\u636e\u7684\u8bbf\u95ee\u7684\u8bdd\uff0c\u90a3\u4e48\u6761\u4ef6\u53d8\u91cf\u5219\u662f\u7528\u4e8e\u5728\u7ebf\u7a0b\u4e4b\u95f4\u540c\u6b65\u5171\u4eab\u6570\u636e\u7684\u503c\u3002\u6761\u4ef6\u53d8\u91cf\u63d0\u4f9b\u4e86\u4e00\u79cd\u7ebf\u7a0b\u95f4\u7684\u901a\u77e5\u673a\u5236\uff1a\u5f53\u67d0\u4e2a\u5171\u4eab\u6570\u636e\u8fbe\u5230\u67d0\u4e2a\u503c\u7684\u65f6\u5019\uff0c\u5524\u9192\u7b49\u5f85\u8fd9\u4e2a\u5171\u4eab\u6570\u636e\u7684\u7ebf\u7a0b\u3002 #include\uff1cpthread.h\uff1e int pthread_cond_init ( pthread_cond_t * cond , const pthread_condattr_t * cond_attr ); int pthread_cond_destroy ( pthread_cond_t * cond ); int pthread_cond_broadcast ( pthread_cond_t * cond ); int pthread_cond_signal ( pthread_cond_t * cond ); int pthread_cond_wait ( pthread_cond_t * cond , pthread_mutex_t * mutex ); pthread_cond_t cond = PTHREAD_COND_INITIALIZER ; \u8fd9\u4e9b\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570cond\u6307\u5411\u8981\u64cd\u4f5c\u7684\u76ee\u6807\u6761\u4ef6\u53d8\u91cf\uff0c\u6761\u4ef6\u53d8\u91cf\u7684\u7c7b\u578b\u662fpthread_cond_t\u7ed3\u6784\u4f53\u3002 pthread_cond_init\u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316\u6761\u4ef6\u53d8\u91cf\u3002cond_attr\u53c2\u6570\u6307\u5b9a\u6761\u4ef6\u53d8\u91cf\u7684\u5c5e\u6027\u3002\u5982\u679c\u5c06\u5b83\u8bbe\u7f6e\u4e3aNULL\uff0c\u5219\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u5c5e\u6027\u3002\u6761\u4ef6\u53d8\u91cf\u7684\u5c5e\u6027\u4e0d\u591a\uff0c\u800c\u4e14\u548c\u4e92\u65a5\u9501\u7684\u5c5e\u6027\u7c7b\u578b\u76f8\u4f3c test_thread.cpp","title":"\u6761\u4ef6\u53d8\u91cf"},{"location":"sonic/MySonic/","text":"install # redis # # Ubuntu/Debian sudo apt-get install libhiredis-dev redis-server redis-tools # Arch sudo pacman -S hiredis redis-server redis-tools # CentOS/RHEL sudo yum install hiredis-devel git clone https://github.com/redis/hiredis.git cd hiredis make sudo make install sudo sysctl vm.overcommit_memory=1 sudo systemctl status redis-server sudo grep -E '^bind|^port' /etc/redis/redis.conf zmp # sudo apt install libzmq5 libzmq3-dev sudo pacman install zeromq lib # # Ubuntu/Debian\u7cfb\u7edf sudo apt-get install libnl-3-dev libnl-genl-3-dev # CentOS/RHEL\u7cfb\u7edf sudo yum install libnl3-devel sudo pacman -S libnl pacman -Ql libnl | grep netlink.h sudo apt-get install -y make libtool m4 autoconf dh-exec debhelper cmake pkg-config nlohmann-json3-dev \\ libhiredis-dev libnl-3-dev libnl-genl-3-dev libnl-route-3-dev libnl-nf-3-dev swig3.0 \\ libpython2.7-dev libboost-dev libboost-serialization-dev uuid-dev libzmq5 libzmq3-dev sudo apt-get install -y sudo sudo apt-get install -y redis-server redis-tools sudo apt-get install -y python3-pip sudo pip3 install pytest sudo apt-get install -y python sudo apt-get install cmake libgtest-dev libgmock-dev libyang-dev","title":"MySonic"},{"location":"sonic/MySonic/#install","text":"","title":"install"},{"location":"sonic/MySonic/#redis","text":"# Ubuntu/Debian sudo apt-get install libhiredis-dev redis-server redis-tools # Arch sudo pacman -S hiredis redis-server redis-tools # CentOS/RHEL sudo yum install hiredis-devel git clone https://github.com/redis/hiredis.git cd hiredis make sudo make install sudo sysctl vm.overcommit_memory=1 sudo systemctl status redis-server sudo grep -E '^bind|^port' /etc/redis/redis.conf","title":"redis"},{"location":"sonic/MySonic/#zmp","text":"sudo apt install libzmq5 libzmq3-dev sudo pacman install zeromq","title":"zmp"},{"location":"sonic/MySonic/#lib","text":"# Ubuntu/Debian\u7cfb\u7edf sudo apt-get install libnl-3-dev libnl-genl-3-dev # CentOS/RHEL\u7cfb\u7edf sudo yum install libnl3-devel sudo pacman -S libnl pacman -Ql libnl | grep netlink.h sudo apt-get install -y make libtool m4 autoconf dh-exec debhelper cmake pkg-config nlohmann-json3-dev \\ libhiredis-dev libnl-3-dev libnl-genl-3-dev libnl-route-3-dev libnl-nf-3-dev swig3.0 \\ libpython2.7-dev libboost-dev libboost-serialization-dev uuid-dev libzmq5 libzmq3-dev sudo apt-get install -y sudo sudo apt-get install -y redis-server redis-tools sudo apt-get install -y python3-pip sudo pip3 install pytest sudo apt-get install -y python sudo apt-get install cmake libgtest-dev libgmock-dev libyang-dev","title":"lib"},{"location":"sonic/redis_basic/","text":"install_config # Redis \u914d\u7f6e | \u83dc\u9e1f\u6559\u7a0b (runoob.com) sudo apt install redis-server redis-server echo vm.overcommit_memory = 1 >> /etc/sysctl.conf echo madvise >>/etc/sysctl.conf redis-server --bind 0.0.0.0 --port 7777 redis-cli -h 127.0.0.1 -p 7777 data_type # string\uff08\u5b57\u7b26\u4e32\uff09:\u57fa\u672c\u7684\u6570\u636e\u5b58\u50a8\u5355\u5143\uff0c\u53ef\u4ee5\u5b58\u50a8\u5b57\u7b26\u4e32\u3001\u6574\u6570\u6216\u8005\u6d6e\u70b9\u6570\u3002 SET key value \uff1a\u8bbe\u7f6e\u952e\u7684\u503c\u3002 GET key \uff1a\u83b7\u53d6\u952e\u7684\u503c\u3002 INCR key \uff1a\u5c06\u952e\u7684\u503c\u52a0 1\u3002 DECR key \uff1a\u5c06\u952e\u7684\u503c\u51cf 1\u3002 APPEND key value \uff1a\u5c06\u503c\u8ffd\u52a0\u5230\u952e\u7684\u503c\u4e4b\u540e\u3002 hash\uff08\u54c8\u5e0c\uff09:\u4e00\u4e2a\u952e\u503c\u5bf9\u96c6\u5408\uff0c\u53ef\u4ee5\u5b58\u50a8\u591a\u4e2a\u5b57\u6bb5\u3002 HSET key field value \uff1a\u8bbe\u7f6e\u54c8\u5e0c\u8868\u4e2d\u5b57\u6bb5\u7684\u503c\u3002 HMSET \u8bbe\u7f6e\u4e86\u4e24\u4e2a field=>value \u5bf9 HGET key field`\uff1a\u83b7\u53d6\u54c8\u5e0c\u8868\u4e2d\u5b57\u6bb5\u7684\u503c\u3002 HGETALL key \uff1a\u83b7\u53d6\u54c8\u5e0c\u8868\u4e2d\u6240\u6709\u5b57\u6bb5\u548c\u503c\u3002 HDEL key field \uff1a\u5220\u9664\u54c8\u5e0c\u8868\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u5b57\u6bb5\u3002 redis 127.0.0.1:6379> DEL runoob redis 127.0.0.1:6379> HMSET runoob field1 \"Hello\" field2 \"World\" \"OK\" redis 127.0.0.1:6379> HGET runoob field1 \"Hello\" 192.168.2.105:7777> hgetall runoob 1) \"field1\" 2) \"Hello\" 3) \"field2\" 4) \"World\" list\uff08\u5217\u8868\uff09:\u4e00\u4e2a\u7b80\u5355\u7684\u5217\u8868\uff0c\u53ef\u4ee5\u5b58\u50a8\u4e00\u7cfb\u5217\u7684\u5b57\u7b26\u4e32\u5143\u7d20\u3002 LPUSH key value \uff1a\u5c06\u503c\u63d2\u5165\u5230\u5217\u8868\u5934\u90e8\u3002 RPUSH key value \uff1a\u5c06\u503c\u63d2\u5165\u5230\u5217\u8868\u5c3e\u90e8\u3002 LPOP key \uff1a\u79fb\u51fa\u5e76\u83b7\u53d6\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002 RPOP key \uff1a\u79fb\u51fa\u5e76\u83b7\u53d6\u5217\u8868\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002 LRANGE key start stop \uff1a\u83b7\u53d6\u5217\u8868\u5728\u6307\u5b9a\u8303\u56f4\u5185\u7684\u5143\u7d20\u3002 redis 127.0.0.1:6379> DEL runoob redis 127.0.0.1:6379> lpush runoob redis (integer) 1 redis 127.0.0.1:6379> lpush runoob mongodb (integer) 2 redis 127.0.0.1:6379> lpush runoob rabbitmq (integer) 3 redis 127.0.0.1:6379> lrange runoob 0 10 1) \"rabbitmq\" 2) \"mongodb\" 3) \"redis\" redis 127.0.0.1:6379> set\uff08\u96c6\u5408\uff09:\u4e00\u4e2a\u65e0\u5e8f\u96c6\u5408\uff0c\u53ef\u4ee5\u5b58\u50a8\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\u4e32\u5143\u7d20\u3002 SADD key value \uff1a\u5411\u96c6\u5408\u6dfb\u52a0\u4e00\u4e2a\u6216\u591a\u4e2a\u6210\u5458\u3002 SREM key value \uff1a\u79fb\u9664\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u6210\u5458\u3002 SMEMBERS key \uff1a\u8fd4\u56de\u96c6\u5408\u4e2d\u7684\u6240\u6709\u6210\u5458\u3002 SISMEMBER key value \uff1a\u5224\u65ad\u503c\u662f\u5426\u662f\u96c6\u5408\u7684\u6210\u5458\u3002 zset(sorted set\uff1a\u6709\u5e8f\u96c6\u5408): \u7c7b\u4f3c\u4e8e\u96c6\u5408\uff0c\u4f46\u662f\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u5206\u6570\uff08score\uff09\u4e0e\u4e4b\u5173\u8054\u3002 ZADD key score value \uff1a\u5411\u6709\u5e8f\u96c6\u5408\u6dfb\u52a0\u4e00\u4e2a\u6216\u591a\u4e2a\u6210\u5458\uff0c\u6216\u66f4\u65b0\u5df2\u5b58\u5728\u6210\u5458\u7684\u5206\u6570\u3002 ZRANGE key start stop [WITHSCORES] \uff1a\u8fd4\u56de\u6307\u5b9a\u8303\u56f4\u5185\u7684\u6210\u5458\u3002 ZREM key value \uff1a\u79fb\u9664\u6709\u5e8f\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u6210\u5458\u3002 ZSCORE key value \uff1a\u8fd4\u56de\u6709\u5e8f\u96c6\u5408\u4e2d\uff0c\u6210\u5458\u7684\u5206\u6570\u503c\u3002 \u4f4d\u56fe\uff08Bitmaps\uff09\uff1a\u57fa\u4e8e\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u4f4d\u8fdb\u884c\u64cd\u4f5c\u3002 \u8d85\u65e5\u5fd7\uff08HyperLogLogs\uff09\uff1a\u7528\u4e8e\u57fa\u6570\u7edf\u8ba1\uff0c\u53ef\u4ee5\u4f30\u7b97\u96c6\u5408\u4e2d\u7684\u552f\u4e00\u5143\u7d20\u6570\u91cf\u3002 \u5730\u7406\u7a7a\u95f4\uff08Geospatial\uff09\uff1a\u7528\u4e8e\u5b58\u50a8\u5730\u7406\u4f4d\u7f6e\u4fe1\u606f\u3002 \u53d1\u5e03/\u8ba2\u9605\uff08Pub/Sub\uff09\uff1a\u4e00\u79cd\u6d88\u606f\u901a\u4fe1\u6a21\u5f0f\uff0c\u5141\u8bb8\u5ba2\u6237\u7aef\u8ba2\u9605\u6d88\u606f\u901a\u9053\uff0c\u5e76\u63a5\u6536\u53d1\u5e03\u5230\u8be5\u901a\u9053\u7684\u6d88\u606f\u3002 PSUBSCRIBE pattern [pattern ...] \u8ba2\u9605\u4e00\u4e2a\u6216\u591a\u4e2a\u7b26\u5408\u7ed9\u5b9a\u6a21\u5f0f\u7684\u9891\u9053\u3002 PUBSUB subcommand [argument [argument ...]] .\u67e5\u770b\u8ba2\u9605\u4e0e\u53d1\u5e03\u7cfb\u7edf\u72b6\u6001\u3002 PUBLISH channel message \u5c06\u4fe1\u606f\u53d1\u9001\u5230\u6307\u5b9a\u7684\u9891\u9053\u3002 SUBSCRIBE channel \u8ba2\u9605\u7ed9\u5b9a\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u9891\u9053\u7684\u4fe1\u606f\u3002 UNSUBSCRIBE [channel [channel ...]] \u6307\u9000\u8ba2\u7ed9\u5b9a\u7684\u9891\u9053\u3002 \u6d41\uff08Streams\uff09\uff1a\u7528\u4e8e\u6d88\u606f\u961f\u5217\u548c\u65e5\u5fd7\u5b58\u50a8\uff0c\u652f\u6301\u6d88\u606f\u7684\u6301\u4e45\u5316\u548c\u65f6\u95f4\u6392\u5e8f\u3002 \u6a21\u5757\uff08Modules\uff09\uff1aRedis \u652f\u6301\u52a8\u6001\u52a0\u8f7d\u6a21\u5757\uff0c\u53ef\u4ee5\u6269\u5c55 Redis \u7684\u529f\u80fd\u3002 server # auth password echo message ping quit select index \u5207\u6362\u5230\u6307\u5b9a\u7684\u6570\u636e\u5e93 info bgrewriteaof \u5f02\u6b65\u6267\u884c\u4e00\u4e2a AOF\uff08AppendOnly File\uff09 \u6587\u4ef6\u91cd\u5199\u64cd\u4f5c bgsave \u540e\u53f0\u5f02\u6b65\u4fdd\u5b58\u5f53\u524d\u6570\u636e\u5e93\u7684\u6570\u636e\u5230\u78c1\u76d8 client kill [ip:port id] [client-id] \u5173\u95ed\u5ba2\u6237\u7aef\u8fde\u63a5 client list client getname client pause timeout client setname save \u6b65\u4fdd\u5b58\u6570\u636e\u5230\u786c\u76d8 sync \u590d\u5236\u529f\u80fd(replication)\u7684\u5185\u90e8\u547d\u4ee4 CONFIG GET databases INFO keyspace database # Redis \u9ed8\u8ba4\u63d0\u4f9b\u4e86 16 \u4e2a\u6570\u636e\u5e93. \u6bcf\u4e2a\u6570\u636e\u5e93\u90fd\u6709\u4e00\u4e2a id , \u4ece 0 \u5f00\u59cb, [0,15]\u3002 \u4e0d\u540c\u7684\u6570\u636e\u5e93\u4e2d\u6570\u636e\u9694\u79bb\u4fdd\u5b58\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539redis\u7684\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u4fee\u6539\u6570\u636e\u5e93\u7684\u6570\u91cf\u3002 database 32 \u4f7f\u7528 select <ID> \u53ef\u4ee5\u5207\u6362\u6570\u636e\u5e93. \u4f7f\u7528 flushdb \u53ea\u80fd\u5220\u9664 \u8be5\u6570\u636e\u5e93(\u4e00\u4e2a\u5e93) \u4e2d\u7684\u6570\u636e\u3002 \u4f7f\u7528 flushall \u53ef\u4ee5\u5220\u9664 \u6240\u6709\u5e93 \u4e2d\u7684\u6570\u636e\u3002 python3 # Python redis \u4f7f\u7528\u4ecb\u7ecd | \u83dc\u9e1f\u6559\u7a0b (runoob.com) sudo apt install python3-redis pip3 install redis >>> import redis >>> r = redis.StrictRedis(host='localhost', port=6379, db=0) >>> r.set('foo', 'bar') True >>> r.get('foo') 'bar'","title":"Redis basic"},{"location":"sonic/redis_basic/#install_config","text":"Redis \u914d\u7f6e | \u83dc\u9e1f\u6559\u7a0b (runoob.com) sudo apt install redis-server redis-server echo vm.overcommit_memory = 1 >> /etc/sysctl.conf echo madvise >>/etc/sysctl.conf redis-server --bind 0.0.0.0 --port 7777 redis-cli -h 127.0.0.1 -p 7777","title":"install_config"},{"location":"sonic/redis_basic/#data_type","text":"string\uff08\u5b57\u7b26\u4e32\uff09:\u57fa\u672c\u7684\u6570\u636e\u5b58\u50a8\u5355\u5143\uff0c\u53ef\u4ee5\u5b58\u50a8\u5b57\u7b26\u4e32\u3001\u6574\u6570\u6216\u8005\u6d6e\u70b9\u6570\u3002 SET key value \uff1a\u8bbe\u7f6e\u952e\u7684\u503c\u3002 GET key \uff1a\u83b7\u53d6\u952e\u7684\u503c\u3002 INCR key \uff1a\u5c06\u952e\u7684\u503c\u52a0 1\u3002 DECR key \uff1a\u5c06\u952e\u7684\u503c\u51cf 1\u3002 APPEND key value \uff1a\u5c06\u503c\u8ffd\u52a0\u5230\u952e\u7684\u503c\u4e4b\u540e\u3002 hash\uff08\u54c8\u5e0c\uff09:\u4e00\u4e2a\u952e\u503c\u5bf9\u96c6\u5408\uff0c\u53ef\u4ee5\u5b58\u50a8\u591a\u4e2a\u5b57\u6bb5\u3002 HSET key field value \uff1a\u8bbe\u7f6e\u54c8\u5e0c\u8868\u4e2d\u5b57\u6bb5\u7684\u503c\u3002 HMSET \u8bbe\u7f6e\u4e86\u4e24\u4e2a field=>value \u5bf9 HGET key field`\uff1a\u83b7\u53d6\u54c8\u5e0c\u8868\u4e2d\u5b57\u6bb5\u7684\u503c\u3002 HGETALL key \uff1a\u83b7\u53d6\u54c8\u5e0c\u8868\u4e2d\u6240\u6709\u5b57\u6bb5\u548c\u503c\u3002 HDEL key field \uff1a\u5220\u9664\u54c8\u5e0c\u8868\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u5b57\u6bb5\u3002 redis 127.0.0.1:6379> DEL runoob redis 127.0.0.1:6379> HMSET runoob field1 \"Hello\" field2 \"World\" \"OK\" redis 127.0.0.1:6379> HGET runoob field1 \"Hello\" 192.168.2.105:7777> hgetall runoob 1) \"field1\" 2) \"Hello\" 3) \"field2\" 4) \"World\" list\uff08\u5217\u8868\uff09:\u4e00\u4e2a\u7b80\u5355\u7684\u5217\u8868\uff0c\u53ef\u4ee5\u5b58\u50a8\u4e00\u7cfb\u5217\u7684\u5b57\u7b26\u4e32\u5143\u7d20\u3002 LPUSH key value \uff1a\u5c06\u503c\u63d2\u5165\u5230\u5217\u8868\u5934\u90e8\u3002 RPUSH key value \uff1a\u5c06\u503c\u63d2\u5165\u5230\u5217\u8868\u5c3e\u90e8\u3002 LPOP key \uff1a\u79fb\u51fa\u5e76\u83b7\u53d6\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002 RPOP key \uff1a\u79fb\u51fa\u5e76\u83b7\u53d6\u5217\u8868\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002 LRANGE key start stop \uff1a\u83b7\u53d6\u5217\u8868\u5728\u6307\u5b9a\u8303\u56f4\u5185\u7684\u5143\u7d20\u3002 redis 127.0.0.1:6379> DEL runoob redis 127.0.0.1:6379> lpush runoob redis (integer) 1 redis 127.0.0.1:6379> lpush runoob mongodb (integer) 2 redis 127.0.0.1:6379> lpush runoob rabbitmq (integer) 3 redis 127.0.0.1:6379> lrange runoob 0 10 1) \"rabbitmq\" 2) \"mongodb\" 3) \"redis\" redis 127.0.0.1:6379> set\uff08\u96c6\u5408\uff09:\u4e00\u4e2a\u65e0\u5e8f\u96c6\u5408\uff0c\u53ef\u4ee5\u5b58\u50a8\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\u4e32\u5143\u7d20\u3002 SADD key value \uff1a\u5411\u96c6\u5408\u6dfb\u52a0\u4e00\u4e2a\u6216\u591a\u4e2a\u6210\u5458\u3002 SREM key value \uff1a\u79fb\u9664\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u6210\u5458\u3002 SMEMBERS key \uff1a\u8fd4\u56de\u96c6\u5408\u4e2d\u7684\u6240\u6709\u6210\u5458\u3002 SISMEMBER key value \uff1a\u5224\u65ad\u503c\u662f\u5426\u662f\u96c6\u5408\u7684\u6210\u5458\u3002 zset(sorted set\uff1a\u6709\u5e8f\u96c6\u5408): \u7c7b\u4f3c\u4e8e\u96c6\u5408\uff0c\u4f46\u662f\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u5206\u6570\uff08score\uff09\u4e0e\u4e4b\u5173\u8054\u3002 ZADD key score value \uff1a\u5411\u6709\u5e8f\u96c6\u5408\u6dfb\u52a0\u4e00\u4e2a\u6216\u591a\u4e2a\u6210\u5458\uff0c\u6216\u66f4\u65b0\u5df2\u5b58\u5728\u6210\u5458\u7684\u5206\u6570\u3002 ZRANGE key start stop [WITHSCORES] \uff1a\u8fd4\u56de\u6307\u5b9a\u8303\u56f4\u5185\u7684\u6210\u5458\u3002 ZREM key value \uff1a\u79fb\u9664\u6709\u5e8f\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u6210\u5458\u3002 ZSCORE key value \uff1a\u8fd4\u56de\u6709\u5e8f\u96c6\u5408\u4e2d\uff0c\u6210\u5458\u7684\u5206\u6570\u503c\u3002 \u4f4d\u56fe\uff08Bitmaps\uff09\uff1a\u57fa\u4e8e\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u4f4d\u8fdb\u884c\u64cd\u4f5c\u3002 \u8d85\u65e5\u5fd7\uff08HyperLogLogs\uff09\uff1a\u7528\u4e8e\u57fa\u6570\u7edf\u8ba1\uff0c\u53ef\u4ee5\u4f30\u7b97\u96c6\u5408\u4e2d\u7684\u552f\u4e00\u5143\u7d20\u6570\u91cf\u3002 \u5730\u7406\u7a7a\u95f4\uff08Geospatial\uff09\uff1a\u7528\u4e8e\u5b58\u50a8\u5730\u7406\u4f4d\u7f6e\u4fe1\u606f\u3002 \u53d1\u5e03/\u8ba2\u9605\uff08Pub/Sub\uff09\uff1a\u4e00\u79cd\u6d88\u606f\u901a\u4fe1\u6a21\u5f0f\uff0c\u5141\u8bb8\u5ba2\u6237\u7aef\u8ba2\u9605\u6d88\u606f\u901a\u9053\uff0c\u5e76\u63a5\u6536\u53d1\u5e03\u5230\u8be5\u901a\u9053\u7684\u6d88\u606f\u3002 PSUBSCRIBE pattern [pattern ...] \u8ba2\u9605\u4e00\u4e2a\u6216\u591a\u4e2a\u7b26\u5408\u7ed9\u5b9a\u6a21\u5f0f\u7684\u9891\u9053\u3002 PUBSUB subcommand [argument [argument ...]] .\u67e5\u770b\u8ba2\u9605\u4e0e\u53d1\u5e03\u7cfb\u7edf\u72b6\u6001\u3002 PUBLISH channel message \u5c06\u4fe1\u606f\u53d1\u9001\u5230\u6307\u5b9a\u7684\u9891\u9053\u3002 SUBSCRIBE channel \u8ba2\u9605\u7ed9\u5b9a\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u9891\u9053\u7684\u4fe1\u606f\u3002 UNSUBSCRIBE [channel [channel ...]] \u6307\u9000\u8ba2\u7ed9\u5b9a\u7684\u9891\u9053\u3002 \u6d41\uff08Streams\uff09\uff1a\u7528\u4e8e\u6d88\u606f\u961f\u5217\u548c\u65e5\u5fd7\u5b58\u50a8\uff0c\u652f\u6301\u6d88\u606f\u7684\u6301\u4e45\u5316\u548c\u65f6\u95f4\u6392\u5e8f\u3002 \u6a21\u5757\uff08Modules\uff09\uff1aRedis \u652f\u6301\u52a8\u6001\u52a0\u8f7d\u6a21\u5757\uff0c\u53ef\u4ee5\u6269\u5c55 Redis \u7684\u529f\u80fd\u3002","title":"data_type"},{"location":"sonic/redis_basic/#server","text":"auth password echo message ping quit select index \u5207\u6362\u5230\u6307\u5b9a\u7684\u6570\u636e\u5e93 info bgrewriteaof \u5f02\u6b65\u6267\u884c\u4e00\u4e2a AOF\uff08AppendOnly File\uff09 \u6587\u4ef6\u91cd\u5199\u64cd\u4f5c bgsave \u540e\u53f0\u5f02\u6b65\u4fdd\u5b58\u5f53\u524d\u6570\u636e\u5e93\u7684\u6570\u636e\u5230\u78c1\u76d8 client kill [ip:port id] [client-id] \u5173\u95ed\u5ba2\u6237\u7aef\u8fde\u63a5 client list client getname client pause timeout client setname save \u6b65\u4fdd\u5b58\u6570\u636e\u5230\u786c\u76d8 sync \u590d\u5236\u529f\u80fd(replication)\u7684\u5185\u90e8\u547d\u4ee4 CONFIG GET databases INFO keyspace","title":"server"},{"location":"sonic/redis_basic/#database","text":"Redis \u9ed8\u8ba4\u63d0\u4f9b\u4e86 16 \u4e2a\u6570\u636e\u5e93. \u6bcf\u4e2a\u6570\u636e\u5e93\u90fd\u6709\u4e00\u4e2a id , \u4ece 0 \u5f00\u59cb, [0,15]\u3002 \u4e0d\u540c\u7684\u6570\u636e\u5e93\u4e2d\u6570\u636e\u9694\u79bb\u4fdd\u5b58\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539redis\u7684\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u4fee\u6539\u6570\u636e\u5e93\u7684\u6570\u91cf\u3002 database 32 \u4f7f\u7528 select <ID> \u53ef\u4ee5\u5207\u6362\u6570\u636e\u5e93. \u4f7f\u7528 flushdb \u53ea\u80fd\u5220\u9664 \u8be5\u6570\u636e\u5e93(\u4e00\u4e2a\u5e93) \u4e2d\u7684\u6570\u636e\u3002 \u4f7f\u7528 flushall \u53ef\u4ee5\u5220\u9664 \u6240\u6709\u5e93 \u4e2d\u7684\u6570\u636e\u3002","title":"database"},{"location":"sonic/redis_basic/#python3","text":"Python redis \u4f7f\u7528\u4ecb\u7ecd | \u83dc\u9e1f\u6559\u7a0b (runoob.com) sudo apt install python3-redis pip3 install redis >>> import redis >>> r = redis.StrictRedis(host='localhost', port=6379, db=0) >>> r.set('foo', 'bar') True >>> r.get('foo') 'bar'","title":"python3"},{"location":"sonic/sonic-common/","text":"key_value # typedef std::pair<std::string, std::string> FieldValueTuple; #define fvField std::get<0> #define fvValue std::get<1> typedef std::tuple<std::string, std::string, std::vector<FieldValueTuple> > KeyOpFieldsValuesTuple; #define kfvKey std::get<0> #define kfvOp std::get<1> #define kfvFieldsValues std::get<2> redis_databases # use 'select id' to switch name id seperator APPL_DB 0 : ASIC_DB 1 : COUNTERS_DB 2 : LOGLEVEL_DB 3 : CONFIG_DB 4 | PFC_WD_DB 5 : FLEX_COUNTER_DB 5 : STATE_DB 6 | SNMP_OVERLAY_DB 7 | RESTAPI_DB 8 | GB_ASIC_DB 9 | GB_COUNTERS_DB 10 | GB_FLEX_COUNTER_DB 11 | CHASSIS_APP_DB 12 | CHASSIS_STATE_DB 13 | redis_connect # SonicV2Connector_Native::connect(m_db_name, retry_on); auto& client = get_redis_client(m_db_name); redis_commands # publish get hmset set del Evalsha \u547d\u4ee4\u6839\u636e\u7ed9\u5b9a\u7684 sha1 \u6821\u9a8c\u7801\uff0c\u6267\u884c\u7f13\u5b58\u5728\u670d\u52a1\u5668\u4e2d\u7684\u811a\u672c Redis Sadd \u547d\u4ee4\u5c06\u4e00\u4e2a\u6216\u591a\u4e2a\u6210\u5458\u5143\u7d20\u52a0\u5165\u5230\u96c6\u5408\u4e2d table # use redis hashset typedef std::map<std::string,std::string> TableMap; typedef std::map<std::string,TableMap> TableDump; Table(const DBConnector *db, const std::string &tableName); Table(RedisPipeline *pipeline, const std::string &tableName, bool buffered); /* Set an entry in the DB directly (op not in use) */ virtual void set(const std::string &key, const std::vector<FieldValueTuple> &values, const std::string &op = \"\", const std::string &prefix = EMPTY_PREFIX); /* Delete an entry in the table */ virtual void del(const std::string &key, const std::string &op = \"\", const std::string &prefix = EMPTY_PREFIX); json # nlohmann::json buildJson readJson loadJsonFromFile logger # #define SWSS_LOG_ERROR(MSG, ...) swss::Logger::getInstance().write(swss::Logger::SWSS_ERROR, \":- %s: \" MSG, __FUNCTION__, ##__VA_ARGS__) #define SWSS_LOG_WARN(MSG, ...) swss::Logger::getInstance().write(swss::Logger::SWSS_WARN, \":- %s: \" MSG, __FUNCTION__, ##__VA_ARGS__) #define SWSS_LOG_NOTICE(MSG, ...) swss::Logger::getInstance().write(swss::Logger::SWSS_NOTICE, \":- %s: \" MSG, __FUNCTION__, ##__VA_ARGS__) #define SWSS_LOG_INFO(MSG, ...) swss::Logger::getInstance().write(swss::Logger::SWSS_INFO, \":- %s: \" MSG, __FUNCTION__, ##__VA_ARGS__) #define SWSS_LOG_DEBUG(MSG, ...) swss::Logger::getInstance().write(swss::Logger::SWSS_DEBUG, \":- %s: \" MSG, __FUNCTION__, ##__VA_ARGS__) #define SWSS_LOG_ENTER() swss::Logger::ScopeLogger logger ## __LINE__ (__LINE__, __FUNCTION__) #define SWSS_LOG_TIMER(msg, ...) swss::Logger::ScopeTimer scopetimer ## __LINE__ (__LINE__, __FUNCTION__, msg, ##__VA_ARGS__) #define SWSS_LOG_THROW(MSG, ...) swss::Logger::getInstance().wthrow(swss::Logger::SWSS_ERROR, \":- %s: \" MSG, __FUNCTION__, ##__VA_ARGS__) select # Selectable epoll_create1 void Select::addSelectable(Selectable *selectable) SelectableEvent eventfd readData notify SelectableTimer timerfd_create start stop producer # ProducerTable void ProducerTable::set(const string &key, const vector<FieldValueTuple> &values, const string &op, const string &prefix) void ProducerTable::del(const string &key, const string &op, const string &prefix) ProducerStateTable void ProducerStateTable::set(const string &key, const vector<FieldValueTuple> &values,const string &op /*= SET_COMMAND*/, const string &prefix) void ProducerStateTable::del(const string &key, const string &op /*= DEL_COMMAND*/, const string &prefix) clear consumer # ConsumerStateTable void pops(std::deque<KeyOpFieldsValuesTuple> &vkco, const std::string &prefix = EMPTY_PREFIX); ConsumerStateTable pops(std::deque<KeyOpFieldsValuesTuple> &vkco, const std::string& /*prefix*/) notification # NotificationProducer send(const std::string &op, const std::string &data, std::vector<FieldValueTuple> &values) NotificationConsumer subscribe readData processReply pop pops","title":"Sonic common"},{"location":"sonic/sonic-common/#key_value","text":"typedef std::pair<std::string, std::string> FieldValueTuple; #define fvField std::get<0> #define fvValue std::get<1> typedef std::tuple<std::string, std::string, std::vector<FieldValueTuple> > KeyOpFieldsValuesTuple; #define kfvKey std::get<0> #define kfvOp std::get<1> #define kfvFieldsValues std::get<2>","title":"key_value"},{"location":"sonic/sonic-common/#redis_databases","text":"use 'select id' to switch name id seperator APPL_DB 0 : ASIC_DB 1 : COUNTERS_DB 2 : LOGLEVEL_DB 3 : CONFIG_DB 4 | PFC_WD_DB 5 : FLEX_COUNTER_DB 5 : STATE_DB 6 | SNMP_OVERLAY_DB 7 | RESTAPI_DB 8 | GB_ASIC_DB 9 | GB_COUNTERS_DB 10 | GB_FLEX_COUNTER_DB 11 | CHASSIS_APP_DB 12 | CHASSIS_STATE_DB 13 |","title":"redis_databases"},{"location":"sonic/sonic-common/#redis_connect","text":"SonicV2Connector_Native::connect(m_db_name, retry_on); auto& client = get_redis_client(m_db_name);","title":"redis_connect"},{"location":"sonic/sonic-common/#redis_commands","text":"publish get hmset set del Evalsha \u547d\u4ee4\u6839\u636e\u7ed9\u5b9a\u7684 sha1 \u6821\u9a8c\u7801\uff0c\u6267\u884c\u7f13\u5b58\u5728\u670d\u52a1\u5668\u4e2d\u7684\u811a\u672c Redis Sadd \u547d\u4ee4\u5c06\u4e00\u4e2a\u6216\u591a\u4e2a\u6210\u5458\u5143\u7d20\u52a0\u5165\u5230\u96c6\u5408\u4e2d","title":"redis_commands"},{"location":"sonic/sonic-common/#table","text":"use redis hashset typedef std::map<std::string,std::string> TableMap; typedef std::map<std::string,TableMap> TableDump; Table(const DBConnector *db, const std::string &tableName); Table(RedisPipeline *pipeline, const std::string &tableName, bool buffered); /* Set an entry in the DB directly (op not in use) */ virtual void set(const std::string &key, const std::vector<FieldValueTuple> &values, const std::string &op = \"\", const std::string &prefix = EMPTY_PREFIX); /* Delete an entry in the table */ virtual void del(const std::string &key, const std::string &op = \"\", const std::string &prefix = EMPTY_PREFIX);","title":"table"},{"location":"sonic/sonic-common/#json","text":"nlohmann::json buildJson readJson loadJsonFromFile","title":"json"},{"location":"sonic/sonic-common/#logger","text":"#define SWSS_LOG_ERROR(MSG, ...) swss::Logger::getInstance().write(swss::Logger::SWSS_ERROR, \":- %s: \" MSG, __FUNCTION__, ##__VA_ARGS__) #define SWSS_LOG_WARN(MSG, ...) swss::Logger::getInstance().write(swss::Logger::SWSS_WARN, \":- %s: \" MSG, __FUNCTION__, ##__VA_ARGS__) #define SWSS_LOG_NOTICE(MSG, ...) swss::Logger::getInstance().write(swss::Logger::SWSS_NOTICE, \":- %s: \" MSG, __FUNCTION__, ##__VA_ARGS__) #define SWSS_LOG_INFO(MSG, ...) swss::Logger::getInstance().write(swss::Logger::SWSS_INFO, \":- %s: \" MSG, __FUNCTION__, ##__VA_ARGS__) #define SWSS_LOG_DEBUG(MSG, ...) swss::Logger::getInstance().write(swss::Logger::SWSS_DEBUG, \":- %s: \" MSG, __FUNCTION__, ##__VA_ARGS__) #define SWSS_LOG_ENTER() swss::Logger::ScopeLogger logger ## __LINE__ (__LINE__, __FUNCTION__) #define SWSS_LOG_TIMER(msg, ...) swss::Logger::ScopeTimer scopetimer ## __LINE__ (__LINE__, __FUNCTION__, msg, ##__VA_ARGS__) #define SWSS_LOG_THROW(MSG, ...) swss::Logger::getInstance().wthrow(swss::Logger::SWSS_ERROR, \":- %s: \" MSG, __FUNCTION__, ##__VA_ARGS__)","title":"logger"},{"location":"sonic/sonic-common/#select","text":"Selectable epoll_create1 void Select::addSelectable(Selectable *selectable) SelectableEvent eventfd readData notify SelectableTimer timerfd_create start stop","title":"select"},{"location":"sonic/sonic-common/#producer","text":"ProducerTable void ProducerTable::set(const string &key, const vector<FieldValueTuple> &values, const string &op, const string &prefix) void ProducerTable::del(const string &key, const string &op, const string &prefix) ProducerStateTable void ProducerStateTable::set(const string &key, const vector<FieldValueTuple> &values,const string &op /*= SET_COMMAND*/, const string &prefix) void ProducerStateTable::del(const string &key, const string &op /*= DEL_COMMAND*/, const string &prefix) clear","title":"producer"},{"location":"sonic/sonic-common/#consumer","text":"ConsumerStateTable void pops(std::deque<KeyOpFieldsValuesTuple> &vkco, const std::string &prefix = EMPTY_PREFIX); ConsumerStateTable pops(std::deque<KeyOpFieldsValuesTuple> &vkco, const std::string& /*prefix*/)","title":"consumer"},{"location":"sonic/sonic-common/#notification","text":"NotificationProducer send(const std::string &op, const std::string &data, std::vector<FieldValueTuple> &values) NotificationConsumer subscribe readData processReply pop pops","title":"notification"},{"location":"sonic/swss-common-dockerdb11/","text":"git clone --recursive https://github.com/sonic-net/sonic-swss-common apt-get update apt-get install -y make libtool m4 autoconf dh-exec debhelper cmake pkg-config nlohmann-json3-dev \\ libhiredis-dev libnl-3-dev libnl-genl-3-dev libnl-route-3-dev libnl-nf-3-dev swig \\ libpython2.7-dev libboost-dev libboost-serialization-dev uuid-dev libzmq5 libzmq3-dev apt-get install -y redis-server redis-tools apt-get install -y python3-pip pip3 install pytest apt-get install -y python apt-get install cmake libgtest-dev libgmock-dev libyang-dev cd /usr/src/gtest && sudo cmake . && sudo make curl -fsSL -o /usr/local/bin/bazel \\ https://github.com/bazelbuild/bazel/releases/download/7.4.0/bazel-7.4.0-linux-x86_64 chmod 755 /usr/local/bin/bazel apt-get install libnl-3-dev - script: | bazel build //... bazel test //... arm64_lib # sudo dpkg --add-architecture armhf sudo dpkg --add-architecture arm64 apt update card # apt-get install -y libtool nlohmann-json3-dev \\","title":"Swss common dockerdb11"},{"location":"sonic/swss-common-dockerdb11/#arm64_lib","text":"sudo dpkg --add-architecture armhf sudo dpkg --add-architecture arm64 apt update","title":"arm64_lib"},{"location":"sonic/swss-common-dockerdb11/#card","text":"apt-get install -y libtool nlohmann-json3-dev \\","title":"card"},{"location":"tools/cisco_router/","text":"\u69fd\u4f4d _\uff03/ \u5b50\u69fd\u4f4d _\uff03/ \u7aef\u53e3_\uff03 \u8fdb\u5165\u7279\u6743\u6a21\u5f0f Router>enable \u8fdb\u5165\u914d\u7f6e\u6a21\u5f0f Router#configure terminal \u7279\u6743\u6a21\u5f0f\u4e0b\u67e5\u770b\u5168\u5c40\u914d\u7f6e Router#show running-config \u975e\u7279\u6743\u6a21\u5f0f\u4e0b\u67e5\u770b\u5168\u5c40\u914d\u7f6e\uff08+do \u5728\u975e\u7279\u6743\u6a21\u5f0f\u4e0b\u4f7f\u7528do show\u67e5\u770b\u914d\u7f6e\uff09 Router(config)#do show running-config \u91cd\u542f Router#reload \u4fdd\u5b58\u914d\u7f6e Router#write \u6e05\u7a7a\u914d\u7f6e Router#write erase \u5220\u9664\u547d\u4ee4 Router(config-if)#no ip address \u4fee\u6539\u4e3b\u673a\u540d Router(config)#hostname R1 \u8bbe\u7f6e\u8fdb\u5165\u7279\u6743\u6a21\u5f0f\u7684\u5bc6\u7801 Router(config)#enable password cisco@123 \u8bbe\u7f6e\u8fdc\u7a0b\u767b\u5f55 line vty 0 4 password cisco@123 login //\u5141\u8bb8\u767b\u5f55 transport input telnet //\u5141\u8bb8\u901a\u8fc7\u7684\u534f\u8bae \u8fdc\u7a0b\u767b\u5f55\u65f6\u67e5\u770b\u65e5\u5fd7\u4fe1\u606f Router#terminal monitor \u8def\u7531\u529f\u80fd Switch(config)#ip routing //\u5f00\u542f\u8def\u7531\u529f\u80fd Switch(config)#no ip routing //\u5173\u95ed\u8def\u7531\u529f\u80fd Switch(config)#ip default-gateway 192.168.1.254 //\u8bbe\u7f6e\u9ed8\u8ba4\u7f51\u5173 \u67e5\u770bMAC\u5730\u5740\u8868 Switch#show mac address-table \u8bbe\u7f6e\u5168/\u534a\u53cc\u5de5 Router(config-if)#duplex full/half \u8def\u7531\u7ba1\u7406\u8ddd\u79bb\uff08\u7c7b\u4f3cHuawei \u4f18\u5148\u7ea7\uff09 Router(config)#ip route 0.0.0.0 0.0.0.0 1.1.1.1 ? <1-255> Distance metric for this route Protocol Distance Direct 0 Static 1 Rip 120 OSPF 110 Eigrp 90\uff08170\uff09 CDP\u534f\u8bae\uff08\u601d\u79d1\u79c1\u6709\uff0c\u4e0eLLDP\u76f8\u540c\uff09 Router#show cdp neighbors VLAN\uff0c\u63a5\u53e3 Switch(config)#vlan 10,20,30 //\u540c\u65f6\u521b\u5efa\u591a\u4e2avlan interface Ethernet0/1 switchport access vlan 10 switchport mode access interface Ethernet0/2 switchport trunk encapsulation dot1q //\u914d\u7f6e\u5c01\u88c5\u6a21\u5f0f\uff08Cisco\u9ed8\u8ba4\u79c1\u6709\u6a21\u5f0fISL\uff09 switchport trunk native vlan 10 //\u672c\u5f81vlan\uff08\u7c7b\u4f3c\u534e\u4e3apvid\uff09 switchport mode trunk switchport trunk allowed vlan all switchport trunk allowed vlan 10,20 switchport trunk allowed vlan remove 10//\u4e0d\u5141\u8bb8\u67d0\u4e2avlan\u901a\u8fc7 \u5b50\u63a5\u53e3 interface Ethernet0/1.10 //\u521b\u5efa\u5b50\u63a5\u53e3 encapsulation dot1Q 10 //\u5c01\u88c5vlan10 ip address 192.168.10.1 255.255.255.0 DHCP ip dhcp excluded-address 192.168.10.250 192.168.10.254 ip dhcp pool dhcp-pool network 192.168.10.0 255.255.255.0 default-router 192.168.10.254 dns-server 114.114.114.114 Switch(config-if)#ip helper-address 192.168.20.254 //dhcp\u4e2d\u7ee7 Router#show ip dhcp conflict //\u67e5\u770b\u5730\u5740\u51b2\u7a81 Router#clear ip dhcp conflict * //\u6e05\u9664dhcp\u51b2\u7a81\u5730\u5740 Router#show dhcp server ACL Router(config)#access-list 1 permit 192.168.10.1 0.0.0.0 //\u57fa\u672cacl Router(config)#access-list 100 permit tcp 192.168.10.1 0.0.0.0 eq 80 1.1.1.1 0.0.0.0 eq 8000 //\u6269\u5c55acl //\u57fa\u4e8e\u540d\u79f0\u7684acl\uff08\u53ef\u4ee5\u8bbe\u7f6e\u89c4\u5219\u5e8f\u53f7\uff09 Router(config)#ip access-list standard ciaco-acl Router(config-std-nacl)#11 permit 192.168.1.1 0.0.0.0 Router(config-if)#ip access-group 1 in/out //\u5728\u63a5\u53e3\u4e0a\u5e94\u7528acl NAT interface Ethernet0/0 ip address 192.168.10.1 255.255.255.0 ip nat inside //\u5185\u7f51\u4eba\u53e3 interface Ethernet0/1 ip address 200.1.1.1 255.255.255.0 ip nat outside //\u5916\u7f51\u51fa\u53e3 access-list 10 permit 192.168.10.0 0.0.0.255 ip nat inside source list 10 interface Ethernet0/1 //nat\u8f6c\u6362 ip nat inside source static tcp 192.168.10.23 23 200.1.1.1 23 //\u7aef\u53e3\u6620\u5c04 \u94fe\u8def\u805a\u5408 Switch(config)#interface range ethernet 0/2 - 3 //\u521b\u5efa\u63a5\u53e3\u7ec4\uff08\u7c7b\u4f3cport-group\uff09 Switch(config-if-range)#channel-group 12 mode active //\u521b\u5efachannel id\uff08\u4e24\u7aefid\u4e0d\u9700\u8981\u76f8\u540c\uff09\uff0c\u8bbe\u7f6e\u6a21\u5f0f // shutdown\u72b6\u6001\u4e0b\u914d\u7f6e\uff0c\u5982\u679c\u4e0d\u6210\u529f\u66f4\u6362channel id Switch#show etherchannel summary //\u67e5\u770b\u547d\u4ee4 STP Switch(config)#spanning-tree mode ? mst Multiple spanning tree mode //\u591a\u751f\u6210\u6811\uff08802.1s\uff09 pvst Per-Vlan spanning tree mode //\u4f20\u7edf\u6a21\u5f0f(802.1D) rapid-pvst Per-Vlan rapid spanning tree mode //\u5feb\u901f\u751f\u6210\u6811(802.1w) Switch(config)#spanning-tree vlan 10 priority 0 //\u8bbe\u7f6e\u4f18\u5148\u7ea7 VTP\uff08\u601d\u79d1\u79c1\u6709\u7528\u4e8evlan\u540c\u6b65\uff0c\u53ea\u7528\u4e8e\u4ea4\u6362\u673a\u95f4\u7684\u63a5\u53e3\u662ftrunk\u53e3\uff09 {vtp\u662f\u5371\u9669\u534f\u8bae\uff0c\u63a8\u8350\u4fee\u6539\u4e3a\u900f\u660e\u6a21\u5f0f} Switch(config)#vtp mode ? client Set the device to client mode. //\u5ba2\u6237\u7aef\u6a21\u5f0f\uff08\u7528\u4e8e\u540c\u6b65\u914d\u7f6e\uff0c\u4e0d\u80fd\u521b\u5efa\u4fee\u6539\u5220\u9664vlan\uff09 off Set the device to off mode. //\u5173\u95ed server Set the device to server mode. //\u670d\u52a1\u5668\u6a21\u5f0f\uff08\u540c\u6b65\u914d\u7f6e\uff0c\u53ef\u4ee5\u521b\u5efa\u4fee\u6539\u5220\u9664vlan\uff09 transparent Set the device to transparent mode. //\u900f\u660e\u6a21\u5f0f\uff08\u63a8\u8350\u914d\u7f6e\uff0c\u4e0d\u4f1a\u88ab\u540c\u6b65\uff09 vtp domain cisco //\u521b\u5efavtp\u57df\u540d vtp version 2 //\u4fee\u6539\u7248\u672c\uff08v1,v2,v3\u5b58\u5728\u7248\u672c\u517c\u5bb9\u95ee\u9898\uff09 vtp password cisco@123 //\u8bbe\u7f6e\u8ba4\u8bc1\u5bc6\u7801 HSRP\uff08\u601d\u79d1\u79c1\u6709\uff0c\u7c7b\u4f3cvrrp\uff09 interface Ethernet0/1 ip address 192.168.1.2 255.255.255.0 standby 12 ip 192.168.1.254 //\u8bbe\u7f6e\u865a\u62dfIP\uff08standby id \u4e24\u7aef\u5fc5\u987b\u4e00\u81f4\uff09 standby 12 priority 110 //\u8bbe\u7f6e\u4f18\u5148\u7ea7\uff08\u9ed8\u8ba4100\uff0c\u8d8a\u5927\u8d8a\u4f18\uff09 standby 12 preempt //\u5f00\u542f\u62a2\u5360 PPP username admin password 0 cisco@123 //\u8bbe\u7f6e\u7528\u6237\uff0c\u5bc6\u7801 interface Serial1/0 ip address 192.168.10.1 255.255.255.0 encapsulation ppp //\u5c01\u88c5\u4e3aPPP ppp authentication chap/pap //\u8ba4\u8bc1\u6a21\u5f0f\u4e3achap\u6216pap interface Serial1/0 ip address 192.168.10.2 255.255.255.0 encapsulation ppp ppp chap hostname admin ppp chap password ciaco@123 ppp pap sent-username admin password ciaco@123 PPPoE Server\uff1a bba-group pppoe Cisco virtual-template 1 interface Ethernet0/1 no ip address pppoe enable group Cisco username admin password 0 cisco@123 ip local pool pppoe-pool 200.1.1.2 200.1.1.10 //\u521b\u5efa\u53ef\u5206\u914d\u7684\u5730\u5740\u6c60 interface Virtual-Template1 ip address 200.1.1.1 255.255.255.0 peer default ip address pool pppoe-pool ppp authentication chap Client\uff1a interface Ethernet0/1 no ip address pppoe enable pppoe-client dial-pool-number 1 interface Dialer1 ip address negotiated ip mtu 1492 //1500-ppp\u5934\u90e8 encapsulation ppp ip tcp adjust-mss 1452 //1500-(ppp\u5934\u90e8+ip\u5934\u90e8+tcp\u5934\u90e8) dialer pool 1 ppp authentication chap callin //\u542f\u7528chap\u9a8c\u8bc1 ppp chap hostname admin ppp chap password 0 cisco@123 GRE interface Tunnel10 ip address 10.1.1.1 255.255.255.0 tunnel source 1.1.1.1 //\u672c\u7aef\u516c\u7f51IP tunnel destination 2.2.2.2 //\u5bf9\u7aef\u516c\u7f51IP","title":"Cisco router"},{"location":"tools/clang-format/","text":"wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add - sudo apt update sudo apt install clang-format-13 vscode clang-format plugin .clangformat --- Language: Cpp BasedOnStyle: Microsoft ... ```","title":"Clang format"},{"location":"tools/express/","text":"install # sudo apt update && sudo apt upgrade -y && sudo apt install -y nodejs npm && sudo npm config set registry https://registry.npmmirror.com && sudo npm install -g n && sudo apt remove nodejs npm -y && sudo apt autoremove -y && sudo n latest","title":"Express"},{"location":"tools/express/#install","text":"sudo apt update && sudo apt upgrade -y && sudo apt install -y nodejs npm && sudo npm config set registry https://registry.npmmirror.com && sudo npm install -g n && sudo apt remove nodejs npm -y && sudo apt autoremove -y && sudo n latest","title":"install"},{"location":"tools/git/","text":"git commit hook # Cron\u8868\u8fbe\u5f0f\u75316\u4e2a\u5b57\u6bb5\u7ec4\u6210\uff0c\u5206\u522b\u8868\u793a\u5206\u949f\u3001\u5c0f\u65f6\u3001\u65e5\u3001\u6708\u3001\u5468\u3001\u547d\u4ee4 [ Minute ] [ hour ] [ Day_of_the_Month ] [ Day_of_the_Year ] [ Day_of_the_Week ] [ command ] crontab -e // ` 0 1 * * * ` \u8868\u793a\u6bcf\u5929\u7684\u7b2c1\u5c0f\u65f6\uff08\u51cc\u66681\u70b9\uff09\u6267\u884c\u3002 0 1 * * * cd /path/to/repository && git push origin master sudo systemctl restart cron \u5c06\u201dprepare-commit-msg.sample\u201d\u6587\u4ef6\u590d\u5236\u4e3a\u201dprepare-commit-msg\u201d\uff0c\u53bb\u6389\u6587\u4ef6\u540d\u4e2d\u7684\u201d.sample\u201d\u540e\u7f00\uff0c\u8fd9\u6837Git\u5c31\u4f1a\u5728\u6bcf\u6b21\u63d0\u4ea4\u4e4b\u524d\u8fd0\u884c\u8be5\u811a\u672c\u3002\u786e\u4fdd\u811a\u672c\u5177\u6709\u53ef\u6267\u884c\u6743\u9650\uff0c\u53ef\u4ee5\u4f7f\u7528chmod\u547d\u4ee4\u7ed9\u811a\u672c\u6dfb\u52a0\u6743\u9650\u3002 \u7136\u540e\uff0c\u6253\u5f00\u811a\u672c\u6587\u4ef6\uff0c\u5728\u6587\u4ef6\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff1a #!/bin/bash # Add date to git commit message automatically git status --short > $1 Git \u81ea\u52a8\u5c06\u65e5\u671f\u6dfb\u52a0\u5230git\u63d0\u4ea4\u6d88\u606f\u4e2d|\u6781\u5ba2\u6559\u7a0b (geek-docs.com) Git \u5b9a\u65f6\u4efb\u52a1\u4e2d\u8fdb\u884c Git push|\u6781\u5ba2\u6559\u7a0b (geek-docs.com) show_single_file_log # git log -p --follow -- <filename> $ git log -- divLhsSkyAd.scala.html # one-line summary info $ git log -p divLhsSkyAd.scala.html # detail about each \u201cpatch\u201d git diff --cached Show git changes that has been added but not committed git diff --cached src/main/scala/agt/Main.scala update submoudle # // idea 1 git submodule foreach --recursive git checkout . idea2 rm submodule git submodule update --init --recursive idea3 git submodule update --remote --merge rm_submodule # # \u9006\u521d\u59cb\u5316\u6a21\u5757\uff0c\u5176\u4e2d{MOD_NAME}\u4e3a\u6a21\u5757\u76ee\u5f55\uff0c\u6267\u884c\u540e\u53ef\u53d1\u73b0\u6a21\u5757\u76ee\u5f55\u88ab\u6e05\u7a7a git submodule deinit {MOD_NAME} # \u5220\u9664.gitmodules\u4e2d\u8bb0\u5f55\u7684\u6a21\u5757\u4fe1\u606f\uff08--cached\u9009\u9879\u6e05\u9664.git/modules\u4e2d\u7684\u7f13\u5b58\uff09 git rm --cached {MOD_NAME} # \u63d0\u4ea4\u66f4\u6539\u5230\u4ee3\u7801\u5e93\uff0c\u53ef\u89c2\u5bdf\u5230'.gitmodules'\u5185\u5bb9\u53d1\u751f\u53d8\u66f4 git commit -am \"Remove a submodule.\" delet_change # \u5220\u9664\u5df2\u6709\u6587\u4ef6\u4e0a\u7684\u66f4\u6539 git reset --hard \u5220\u9664\u6dfb\u52a0\u7684\u6587\u4ef6 git clean -f git_workflow # # commit change git add . git commit -m \"changes\" # \u5207\u6362\u5230\u4e3b\u5206\u652f git checkout master # \u66f4\u65b0\u4e3b\u5206\u652f git pull origin master # \u5207\u6362\u56de\u4f60\u7684\u5de5\u4f5c\u5206\u652f git checkout your-branch # \u5408\u5e76\u4e3b\u5206\u652f\u7684\u66f4\u6539\u5230\u4f60\u7684\u5de5\u4f5c\u5206\u652f git merge master # \u89e3\u51b3\u4efb\u4f55\u51b2\u7a81\u5e76\u63d0\u4ea4 git commit -m \"Resolved merge conflicts\" # \u63a8\u9001\u66f4\u6539\u5230\u8fdc\u7a0b\u4e3b\u5206\u652f git push origin your-branch # \u6682\u5b58\u66f4\u6539 git stash # \u5207\u6362\u5230\u4e3b\u5206\u652f git checkout master # \u66f4\u65b0\u4e3b\u5206\u652f git pull origin master # \u5207\u6362\u56de\u4f60\u7684\u5de5\u4f5c\u5206\u652f git checkout your-branch # \u5408\u5e76\u4e3b\u5206\u652f\u7684\u66f4\u6539\u5230\u4f60\u7684\u5de5\u4f5c\u5206\u652f git merge master # \u5e94\u7528\u6682\u5b58\u7684\u66f4\u6539 git stash pop # \u89e3\u51b3\u4efb\u4f55\u51b2\u7a81\u5e76\u63d0\u4ea4 git commit -m \"Resolved merge conflicts\" # \u63a8\u9001\u66f4\u6539\u5230\u8fdc\u7a0b\u4e3b\u5206\u652f git push origin your-branch git restrore # git ver > 2.3, debian10 git not support 1\u3001\u6587\u4ef6\u5728\u6682\u5b58\u533a\u4e14\u672a\u4f5c\u4fee\u6539\u7684\u60c5\u51b5 \u4f7f\u7528git restore --staged <file> \u628a\u6587\u4ef6\u4ece\u6682\u5b58\u533a\u79fb\u52a8\u5230\u5de5\u4f5c\u533a\uff0c\u5373\u6587\u4ef6\u4e0d\u88ab\u8ffd\u8e2a\uff1b 2\u3001\u6587\u4ef6\u5728\u6682\u5b58\u533a\u4e14\u5df2\u7ecf\u4fee\u6539\u7684\u60c5\u51b5 \u4f7f\u7528git restore --staged <file> \u628a\u6587\u4ef6\u4ece\u6682\u5b58\u533a\u79fb\u52a8\u5230\u5de5\u4f5c\u533a\uff0c\u4e14\u4e0d\u4f1a\u64a4\u9500\u4fee\u6539\u7684\u5185\u5bb9\uff1b \u4f7f\u7528git restore <file> \u6587\u4ef6\u4ecd\u5728\u6682\u5b58\u533a\u4e14\u4f1a\u64a4\u9500\u6587\u4ef6\u4fee\u6539\u7684\u5185\u5bb9\uff1b 3\u3001\u6587\u4ef6\u5728\u672c\u5730\u4ee3\u7801\u5e93\u5df2\u7ecf\u4fee\u6539\u7684\u60c5\u51b5 \u4f7f\u7528git add <file> \u628a\u6587\u4ef6\u91cd\u65b0\u653e\u5230\u6682\u5b58\u533a\uff0c\u4e14\u4fdd\u7559\u6587\u4ef6\u7684\u4fee\u6539\uff1b \u4f7f\u7528git restore <file> \u6587\u4ef6\u4ecd\u5728\u672c\u5730\u4ee3\u7801\u5e93\u4e14\u4f1a\u64a4\u9500\u6587\u4ef6\u7684\u4fee\u6539 git tag # # Create an annotated tag git tag -a v1.0 -m \"First stable release\" # Push the specific tag to GitHub git push origin v1.0 # Or push all tags to GitHub git push --tags git diff # Using git diff with two dots: This compares the tips of both branches. git diff branch1..branch2 This command will show you all the commits that branch2 has that are not in branch11. Using git diff with three dots: This compares the tip of the right branch with the common ancestor of the two branches. git diff branch1...branch2 This method is useful when you want to see the changes in branch2 since it diverged from branch11. Comparing specific files between branches: If you want to compare a specific file between two branches, you can specify the file path. git diff branch1 branch2 -- path/to/file","title":"Git"},{"location":"tools/git/#git-commit-hook","text":"Cron\u8868\u8fbe\u5f0f\u75316\u4e2a\u5b57\u6bb5\u7ec4\u6210\uff0c\u5206\u522b\u8868\u793a\u5206\u949f\u3001\u5c0f\u65f6\u3001\u65e5\u3001\u6708\u3001\u5468\u3001\u547d\u4ee4 [ Minute ] [ hour ] [ Day_of_the_Month ] [ Day_of_the_Year ] [ Day_of_the_Week ] [ command ] crontab -e // ` 0 1 * * * ` \u8868\u793a\u6bcf\u5929\u7684\u7b2c1\u5c0f\u65f6\uff08\u51cc\u66681\u70b9\uff09\u6267\u884c\u3002 0 1 * * * cd /path/to/repository && git push origin master sudo systemctl restart cron \u5c06\u201dprepare-commit-msg.sample\u201d\u6587\u4ef6\u590d\u5236\u4e3a\u201dprepare-commit-msg\u201d\uff0c\u53bb\u6389\u6587\u4ef6\u540d\u4e2d\u7684\u201d.sample\u201d\u540e\u7f00\uff0c\u8fd9\u6837Git\u5c31\u4f1a\u5728\u6bcf\u6b21\u63d0\u4ea4\u4e4b\u524d\u8fd0\u884c\u8be5\u811a\u672c\u3002\u786e\u4fdd\u811a\u672c\u5177\u6709\u53ef\u6267\u884c\u6743\u9650\uff0c\u53ef\u4ee5\u4f7f\u7528chmod\u547d\u4ee4\u7ed9\u811a\u672c\u6dfb\u52a0\u6743\u9650\u3002 \u7136\u540e\uff0c\u6253\u5f00\u811a\u672c\u6587\u4ef6\uff0c\u5728\u6587\u4ef6\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff1a #!/bin/bash # Add date to git commit message automatically git status --short > $1 Git \u81ea\u52a8\u5c06\u65e5\u671f\u6dfb\u52a0\u5230git\u63d0\u4ea4\u6d88\u606f\u4e2d|\u6781\u5ba2\u6559\u7a0b (geek-docs.com) Git \u5b9a\u65f6\u4efb\u52a1\u4e2d\u8fdb\u884c Git push|\u6781\u5ba2\u6559\u7a0b (geek-docs.com)","title":"git commit hook"},{"location":"tools/git/#show_single_file_log","text":"git log -p --follow -- <filename> $ git log -- divLhsSkyAd.scala.html # one-line summary info $ git log -p divLhsSkyAd.scala.html # detail about each \u201cpatch\u201d git diff --cached Show git changes that has been added but not committed git diff --cached src/main/scala/agt/Main.scala","title":"show_single_file_log"},{"location":"tools/git/#update-submoudle","text":"// idea 1 git submodule foreach --recursive git checkout . idea2 rm submodule git submodule update --init --recursive idea3 git submodule update --remote --merge","title":"update submoudle"},{"location":"tools/git/#rm_submodule","text":"# \u9006\u521d\u59cb\u5316\u6a21\u5757\uff0c\u5176\u4e2d{MOD_NAME}\u4e3a\u6a21\u5757\u76ee\u5f55\uff0c\u6267\u884c\u540e\u53ef\u53d1\u73b0\u6a21\u5757\u76ee\u5f55\u88ab\u6e05\u7a7a git submodule deinit {MOD_NAME} # \u5220\u9664.gitmodules\u4e2d\u8bb0\u5f55\u7684\u6a21\u5757\u4fe1\u606f\uff08--cached\u9009\u9879\u6e05\u9664.git/modules\u4e2d\u7684\u7f13\u5b58\uff09 git rm --cached {MOD_NAME} # \u63d0\u4ea4\u66f4\u6539\u5230\u4ee3\u7801\u5e93\uff0c\u53ef\u89c2\u5bdf\u5230'.gitmodules'\u5185\u5bb9\u53d1\u751f\u53d8\u66f4 git commit -am \"Remove a submodule.\"","title":"rm_submodule"},{"location":"tools/git/#delet_change","text":"\u5220\u9664\u5df2\u6709\u6587\u4ef6\u4e0a\u7684\u66f4\u6539 git reset --hard \u5220\u9664\u6dfb\u52a0\u7684\u6587\u4ef6 git clean -f","title":"delet_change"},{"location":"tools/git/#git_workflow","text":"# commit change git add . git commit -m \"changes\" # \u5207\u6362\u5230\u4e3b\u5206\u652f git checkout master # \u66f4\u65b0\u4e3b\u5206\u652f git pull origin master # \u5207\u6362\u56de\u4f60\u7684\u5de5\u4f5c\u5206\u652f git checkout your-branch # \u5408\u5e76\u4e3b\u5206\u652f\u7684\u66f4\u6539\u5230\u4f60\u7684\u5de5\u4f5c\u5206\u652f git merge master # \u89e3\u51b3\u4efb\u4f55\u51b2\u7a81\u5e76\u63d0\u4ea4 git commit -m \"Resolved merge conflicts\" # \u63a8\u9001\u66f4\u6539\u5230\u8fdc\u7a0b\u4e3b\u5206\u652f git push origin your-branch # \u6682\u5b58\u66f4\u6539 git stash # \u5207\u6362\u5230\u4e3b\u5206\u652f git checkout master # \u66f4\u65b0\u4e3b\u5206\u652f git pull origin master # \u5207\u6362\u56de\u4f60\u7684\u5de5\u4f5c\u5206\u652f git checkout your-branch # \u5408\u5e76\u4e3b\u5206\u652f\u7684\u66f4\u6539\u5230\u4f60\u7684\u5de5\u4f5c\u5206\u652f git merge master # \u5e94\u7528\u6682\u5b58\u7684\u66f4\u6539 git stash pop # \u89e3\u51b3\u4efb\u4f55\u51b2\u7a81\u5e76\u63d0\u4ea4 git commit -m \"Resolved merge conflicts\" # \u63a8\u9001\u66f4\u6539\u5230\u8fdc\u7a0b\u4e3b\u5206\u652f git push origin your-branch","title":"git_workflow"},{"location":"tools/git/#git-restrore","text":"git ver > 2.3, debian10 git not support 1\u3001\u6587\u4ef6\u5728\u6682\u5b58\u533a\u4e14\u672a\u4f5c\u4fee\u6539\u7684\u60c5\u51b5 \u4f7f\u7528git restore --staged <file> \u628a\u6587\u4ef6\u4ece\u6682\u5b58\u533a\u79fb\u52a8\u5230\u5de5\u4f5c\u533a\uff0c\u5373\u6587\u4ef6\u4e0d\u88ab\u8ffd\u8e2a\uff1b 2\u3001\u6587\u4ef6\u5728\u6682\u5b58\u533a\u4e14\u5df2\u7ecf\u4fee\u6539\u7684\u60c5\u51b5 \u4f7f\u7528git restore --staged <file> \u628a\u6587\u4ef6\u4ece\u6682\u5b58\u533a\u79fb\u52a8\u5230\u5de5\u4f5c\u533a\uff0c\u4e14\u4e0d\u4f1a\u64a4\u9500\u4fee\u6539\u7684\u5185\u5bb9\uff1b \u4f7f\u7528git restore <file> \u6587\u4ef6\u4ecd\u5728\u6682\u5b58\u533a\u4e14\u4f1a\u64a4\u9500\u6587\u4ef6\u4fee\u6539\u7684\u5185\u5bb9\uff1b 3\u3001\u6587\u4ef6\u5728\u672c\u5730\u4ee3\u7801\u5e93\u5df2\u7ecf\u4fee\u6539\u7684\u60c5\u51b5 \u4f7f\u7528git add <file> \u628a\u6587\u4ef6\u91cd\u65b0\u653e\u5230\u6682\u5b58\u533a\uff0c\u4e14\u4fdd\u7559\u6587\u4ef6\u7684\u4fee\u6539\uff1b \u4f7f\u7528git restore <file> \u6587\u4ef6\u4ecd\u5728\u672c\u5730\u4ee3\u7801\u5e93\u4e14\u4f1a\u64a4\u9500\u6587\u4ef6\u7684\u4fee\u6539","title":"git restrore"},{"location":"tools/git/#git-tag","text":"# Create an annotated tag git tag -a v1.0 -m \"First stable release\" # Push the specific tag to GitHub git push origin v1.0 # Or push all tags to GitHub git push --tags","title":"git tag"},{"location":"tools/git/#git-diff","text":"Using git diff with two dots: This compares the tips of both branches. git diff branch1..branch2 This command will show you all the commits that branch2 has that are not in branch11. Using git diff with three dots: This compares the tip of the right branch with the common ancestor of the two branches. git diff branch1...branch2 This method is useful when you want to see the changes in branch2 since it diverged from branch11. Comparing specific files between branches: If you want to compare a specific file between two branches, you can specify the file path. git diff branch1 branch2 -- path/to/file","title":"git diff"},{"location":"tools/grep_sed_ack/","text":"Linux\u6587\u672c\u4e09\u5251\u5ba2\u8d85\u8be6\u7ec6\u6559\u7a0b---grep\u3001sed\u3001awk - alonghub - \u535a\u5ba2\u56ed (cnblogs.com) grep # grep\u547d\u4ee4\u662f\u4e00\u79cd\u5f3a\u5927\u7684\u6587\u672c\u641c\u7d22\u5de5\u5177\uff0c\u5b83\u80fd\u4f7f\u7528**\u6b63\u5219\u8868\u8fbe\u5f0f**\u641c\u7d22\u6587\u672c\uff0c\u5e76\u628a\u5339\u914d\u7684\u884c\u6253\u5370\u51fa\u6765\uff08\u5339\u914d\u5230\u7684\u6807\u7ea2\uff09\u3002grep\u5168\u79f0\u662fGlobal Regular Expression Print egrep = grep -E\uff1a\u6269\u5c55\u7684\u6b63\u5219\u8868\u8fbe\u5f0f \uff08\u9664\u4e86**\\< , > , \\b** \u4f7f\u7528\u5176\u4ed6\u6b63\u5219\u90fd\u53ef\u4ee5\u53bb\u6389\\\uff09 grep [option] pattern file -A<\u663e\u793a\u884c\u6570>\uff1a\u9664\u4e86\u663e\u793a\u7b26\u5408\u8303\u672c\u6837\u5f0f\u7684\u90a3\u4e00\u5217\u4e4b\u5916\uff0c\u5e76\u663e\u793a\u8be5\u884c\u4e4b\u540e\u7684\u5185\u5bb9\u3002 -B<\u663e\u793a\u884c\u6570>\uff1a\u9664\u4e86\u663e\u793a\u7b26\u5408\u6837\u5f0f\u7684\u90a3\u4e00\u884c\u4e4b\u5916\uff0c\u5e76\u663e\u793a\u8be5\u884c\u4e4b\u524d\u7684\u5185\u5bb9\u3002 -C<\u663e\u793a\u884c\u6570>\uff1a\u9664\u4e86\u663e\u793a\u7b26\u5408\u6837\u5f0f\u7684\u90a3\u4e00\u884c\u4e4b\u5916\uff0c\u5e76\u663e\u793a\u8be5\u884c\u4e4b\u524d\u540e\u7684\u5185\u5bb9\u3002 -c\uff1a\u7edf\u8ba1\u5339\u914d\u7684\u884c\u6570 -e \uff1a\u5b9e\u73b0\u591a\u4e2a\u9009\u9879\u95f4\u7684\u903b\u8f91or \u5173\u7cfb -E\uff1a\u6269\u5c55\u7684\u6b63\u5219\u8868\u8fbe\u5f0f -f FILE\uff1a\u4eceFILE\u83b7\u53d6PATTERN\u5339\u914d -F \uff1a\u76f8\u5f53\u4e8efgrep -i --ignore-case #\u5ffd\u7565\u5b57\u7b26\u5927\u5c0f\u5199\u7684\u5dee\u522b\u3002 -n\uff1a\u663e\u793a\u5339\u914d\u7684\u884c\u53f7 -o\uff1a\u4ec5\u663e\u793a\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32 -q\uff1a \u9759\u9ed8\u6a21\u5f0f\uff0c\u4e0d\u8f93\u51fa\u4efb\u4f55\u4fe1\u606f -s\uff1a\u4e0d\u663e\u793a\u9519\u8bef\u4fe1\u606f\u3002 -v\uff1a\u663e\u793a\u4e0d\u88abpattern \u5339\u914d\u5230\u7684\u884c\uff0c\u76f8\u5f53\u4e8e[^] \u53cd\u5411\u5339\u914d -w \uff1a\u5339\u914d \u6574\u4e2a\u5355\u8bcd \u6b63\u5219\u8868\u8fbe\u5f0f # \u683c\u5f0f . \u5339\u914d\u4efb\u610f\u5355\u4e2a\u5b57\u7b26\uff0c\u4e0d\u80fd\u5339\u914d\u7a7a\u884c [] \u5339\u914d\u6307\u5b9a\u8303\u56f4\u5185\u7684\u4efb\u610f\u5355\u4e2a\u5b57\u7b26 [^] \u53d6\u53cd [:alnum:] \u6216 [0-9a-zA-Z] [:alpha:] \u6216 [a-zA-Z] [:upper:] \u6216 [A-Z] [:lower:] \u6216 [a-z] [:blank:] \u7a7a\u767d\u5b57\u7b26\uff08\u7a7a\u683c\u548c\u5236\u8868\u7b26\uff09 [:space:] \u6c34\u5e73\u548c\u5782\u76f4\u7684\u7a7a\u767d\u5b57\u7b26\uff08\u6bd4[:blank:]\u5305\u542b\u7684\u8303\u56f4\u5e7f\uff09 [:cntrl:] \u4e0d\u53ef\u6253\u5370\u7684\u63a7\u5236\u5b57\u7b26\uff08\u9000\u683c\u3001\u5220\u9664\u3001\u8b66\u94c3...\uff09 [:digit:] \u5341\u8fdb\u5236\u6570\u5b57 \u6216[0-9] [:xdigit:]\u5341\u516d\u8fdb\u5236\u6570\u5b57 [:graph:] \u53ef\u6253\u5370\u7684\u975e\u7a7a\u767d\u5b57\u7b26 [:print:] \u53ef\u6253\u5370\u5b57\u7b26 [:punct:] \u6807\u70b9\u7b26\u53f7 \u914d\u7f6e\u6b21\u6570 - \u5339\u914d\u524d\u9762\u7684\u5b57\u7b26\u4efb\u610f\u6b21\uff0c \u5305\u62ec0\u6b21 \uff0c\u8d2a\u5a6a\u6a21\u5f0f\uff1a\u5c3d\u53ef\u80fd\u957f\u7684\u5339\u914d - .* \u4efb\u610f\u957f\u5ea6\u7684\u4efb\u610f\u5b57\u7b26\uff0c \u4e0d\u5305\u62ec0\u6b21 - \\? \u5339\u914d\u5176\u524d\u9762\u7684\u5b57\u7b26**0 \u6216 1\u6b21** - + \u5339\u914d\u5176\u524d\u9762\u7684\u5b57\u7b26**\u81f3\u5c111\u6b21** - {n} \u5339\u914d\u524d\u9762\u7684\u5b57\u7b26n\u6b21 - {m,n} \u5339\u914d\u524d\u9762\u7684\u5b57\u7b26\u81f3\u5c11m \u6b21\uff0c\u81f3\u591an\u6b21 - {,n} \u5339\u914d\u524d\u9762\u7684\u5b57\u7b26\u81f3\u591an\u6b21 - {n,} \u5339\u914d\u524d\u9762\u7684\u5b57\u7b26\u81f3\u5c11n\u6b21 \u4f4d\u7f6e - ^ \u884c\u9996\u951a\u5b9a\uff0c\u7528\u4e8e\u6a21\u5f0f\u7684\u6700\u5de6\u4fa7 - $ \u884c\u5c3e\u951a\u5b9a\uff0c\u7528\u4e8e\u6a21\u5f0f\u7684\u6700\u53f3\u4fa7 - ^PATTERN \uff0c\u7528\u4e8e\u6a21\u5f0f\u5339\u914d\u6574\u884c - ^ \uff0c\u7528\u4e8e\u6a21\u5f0f\u5339\u914d\u6574\u884c - ^ \u7a7a\u884c - ^[[:space:]].*$ \u7a7a\u767d\u884c - \\< \u6216 \\b \u8bcd\u9996\u951a\u5b9a\uff0c\u7528\u4e8e\u5355\u8bcd\u6a21\u5f0f\u7684\u5de6\u4fa7 - > \u6216 \\b \u8bcd\u5c3e\u951a\u5b9a\uff1b\u7528\u4e8e\u5355\u8bcd\u6a21\u5f0f\u7684\u53f3\u4fa7 - \\<PATTERN> \u5f15\u7528 \u5206\u7ec4\uff1a() \u5c06\u4e00\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u6346\u7ed1\u5728\u4e00\u8d77\uff0c\u5f53\u4f5c\u4e00\u4e2a\u6574\u4f53\u8fdb\u884c\u5904\u7406 \u540e\u5411\u5f15\u7528 \u5f15\u7528\u524d\u9762\u7684\u5206\u7ec4\u62ec\u53f7\u4e2d\u7684\u6a21\u5f0f\u6240\u5339\u914d\u5b57\u7b26\uff0c\u800c\u975e\u6a21\u5f0f\u672c\u8eab \\1 \u8868\u793a\u4ece\u5de6\u4fa7\u8d77\u7b2c\u4e00\u4e2a\u5de6\u62ec\u53f7\u4ee5\u53ca\u4e0e\u4e4b\u5339\u914d\u53f3\u62ec\u53f7\u4e4b\u95f4\u7684\u6a21\u5f0f\u6240\u5339\u914d\u5230\u7684\u5b57\u7b26 \\2 \u8868\u793a\u4ece\u5de6\u4fa7\u8d77\u7b2c2\u4e2a\u5de6\u62ec\u53f7\u4ee5\u53ca\u4e0e\u4e4b\u5339\u914d\u53f3\u62ec\u53f7\u4e4b\u95f4\u7684\u6a21\u5f0f\u6240\u5339\u914d\u5230\u7684\u5b57\u7b26\uff0c\u4ee5\u6b64\u7c7b\u63a8 \\& \u8868\u793a\u524d\u9762\u7684\u5206\u7ec4\u4e2d\u6240\u6709\u5b57\u7b26 \u6269\u5c55 \uff081\uff09\u5b57\u7b26\u5339\u914d\uff1a . \u4efb\u610f\u5355\u4e2a\u5b57\u7b26 [] \u6307\u5b9a\u8303\u56f4\u7684\u5b57\u7b26 [^] \u4e0d\u5728\u6307\u5b9a\u8303\u56f4\u7684\u5b57\u7b26 \u6b21\u6570\u5339\u914d\uff1a * \uff1a\u5339\u914d\u524d\u9762\u5b57\u7b26\u4efb\u610f\u6b21 ? : 0 \u62161\u6b21 + \uff1a1 \u6b21\u6216\u591a\u6b21 {m} \uff1a\u5339\u914dm\u6b21 \u6b21 {m,n} \uff1a\u81f3\u5c11m \uff0c\u81f3\u591an\u6b21 \uff082\uff09\u4f4d\u7f6e\u951a\u5b9a\uff1a ^ : \u884c\u9996 $ : \u884c\u5c3e \\<, \\b : \u8bed\u9996 >, \\b : \u8bed\u5c3e \u5206\u7ec4\uff1a() \u540e\u5411\u5f15\u7528\uff1a\\1, \\2, ... sed # sed \u662f\u4e00\u79cd\u6d41\u7f16\u8f91\u5668\uff0c\u5b83\u4e00\u6b21\u5904\u7406\u4e00**\u884c**\u5185\u5bb9\u3002\u5904\u7406\u65f6\uff0c\u628a\u5f53\u524d\u5904\u7406\u7684\u884c\u5b58\u50a8\u5728\u4e34\u65f6\u7f13\u51b2\u533a\u4e2d\uff0c\u79f0\u4e3a\u201c \u6a21\u5f0f\u7a7a\u95f4 \u201d\uff08patternspace \uff09\uff0c\u63a5\u7740\u7528sed \u547d\u4ee4\u5904\u7406\u7f13\u51b2\u533a\u4e2d\u7684\u5185\u5bb9\uff0c\u5904\u7406\u5b8c\u6210\u540e\uff0c\u628a\u7f13\u51b2\u533a\u7684\u5185\u5bb9\u9001\u5f80\u5c4f\u5e55\u3002\u7136\u540e\u8bfb\u5165\u4e0b\u884c\uff0c\u6267\u884c\u4e0b\u4e00\u4e2a\u5faa\u73af\u3002\u5982\u679c\u6ca1\u6709\u4f7f\u8bf8\u5982\u2018D\u2019 \u7684\u7279\u6b8a\u547d\u4ee4\uff0c\u90a3\u4f1a\u5728\u4e24\u4e2a\u5faa\u73af\u4e4b\u95f4\u6e05\u7a7a\u6a21\u5f0f\u7a7a\u95f4\uff0c\u4f46\u4e0d\u4f1a\u6e05\u7a7a**\u4fdd\u7559\u7a7a\u95f4**\u3002\u8fd9\u6837\u4e0d\u65ad\u91cd\u590d\uff0c\u76f4\u5230\u6587\u4ef6\u672b\u5c3e\u3002 \u6587\u4ef6\u5185\u5bb9\u5e76\u6ca1\u6709\u6539\u53d8 \uff0c\u9664\u975e\u4f60\u4f7f\u7528**\u91cd\u5b9a\u5411\u5b58\u50a8\u8f93\u51fa\u6216-i**\u3002 sed [options] '[\u5730\u5740\u5b9a\u754c] command' file``(s) -n \uff1a\u4e0d\u8f93\u51fa\u6a21\u5f0f\u7a7a\u95f4\u5185\u5bb9\u5230\u5c4f\u5e55\uff0c\u5373\u4e0d\u81ea\u52a8\u6253\u5370\uff0c\u53ea\u6253\u5370\u5339\u914d\u5230\u7684\u884c -e\uff1a\u591a\u70b9\u7f16\u8f91\uff0c\u5bf9\u6bcf\u884c\u5904\u7406\u65f6\uff0c\u53ef\u4ee5\u6709\u591a\u4e2aScript -f \uff1a\u628aScript\u5199\u5230\u6587\u4ef6\u5f53\u4e2d\uff0c\u5728\u6267\u884csed\u65f6-f \u6307\u5b9a\u6587\u4ef6\u8def\u5f84\uff0c\u5982\u679c\u662f\u591a\u4e2aScript\uff0c\u6362\u884c\u5199 -r \uff1a\u652f\u6301**\u6269\u5c55\u7684\u6b63\u5219**\u8868\u8fbe\u5f0f -i \uff1a\u76f4\u63a5\u5c06\u5904\u7406\u7684\u7ed3\u679c\u5199\u5165\u6587\u4ef6 -i.bak \uff1a\u5728\u5c06\u5904\u7406\u7684\u7ed3\u679c\u5199\u5165\u6587\u4ef6\u4e4b\u524d\u5907\u4efd\u4e00\u4efd \u5730\u5740\u5b9a\u754c - \u4e0d\u7ed9\u5730\u5740\uff1a\u5bf9\u5168\u6587\u8fdb\u884c\u5904\u7406 - \u5355\u5730\u5740\uff1a - #: \u6307\u5b9a\u7684\u884c - /pattern/\uff1a\u88ab\u6b64\u5904\u6a21\u5f0f\u6240\u80fd\u591f\u5339\u914d\u5230\u7684\u6bcf\u4e00\u884c - \u5730\u5740\u8303\u56f4\uff1a - #,# - #,+# - /pat1/,/pat2/ - #,/pat1/ - ~\uff1a\u6b65\u8fdb - sed -n '1~2p' \u53ea\u6253\u5370\u5947\u6570\u884c \uff081~2 \u4ece\u7b2c1\u884c\uff0c\u4e00\u6b21\u52a02\u884c\uff09 - sed -n '2~2p' \u53ea\u6253\u5370\u5076\u6570\u884c \u7f16\u8f91 **d\uff1a\u5220\u9664**\u6a21\u5f0f\u7a7a\u95f4\u5339\u914d\u7684\u884c\uff0c\u5e76\u7acb\u5373\u542f\u7528\u4e0b\u4e00\u8f6e\u5faa\u73af **p\uff1a\u6253\u5370**\u5f53\u524d\u6a21\u5f0f\u7a7a\u95f4\u5185\u5bb9\uff0c\u8ffd\u52a0\u5230\u9ed8\u8ba4\u8f93\u51fa\u4e4b\u540e a \uff1a\u5728\u6307\u5b9a\u884c**\u540e\u9762\u8ffd\u52a0**\u6587\u672c\uff0c\u652f\u6301\u4f7f\u7528\\n\u5b9e\u73b0\u591a\u884c\u8ffd\u52a0 i \uff1a\u5728\u884c**\u524d\u9762\u63d2\u5165**\u6587\u672c\uff0c\u652f\u6301\u4f7f\u7528\\n\u5b9e\u73b0\u591a\u884c\u8ffd\u52a0 c \uff1a**\u66ff\u6362**\u884c\u4e3a\u5355\u884c\u6216\u591a\u884c\u6587\u672c\uff0c\u652f\u6301\u4f7f\u7528\\n\u5b9e\u73b0\u591a\u884c\u8ffd\u52a0 w\uff1a\u4fdd\u5b58\u6a21\u5f0f\u5339\u914d\u7684\u884c\u81f3\u6307\u5b9a\u6587\u4ef6 r\uff1a\u8bfb\u53d6\u6307\u5b9a\u6587\u4ef6\u7684\u6587\u672c\u81f3\u6a21\u5f0f\u7a7a\u95f4\u4e2d\u5339\u914d\u5230\u7684\u884c\u540e =\uff1a\u4e3a\u6a21\u5f0f\u7a7a\u95f4\u4e2d\u7684\u884c\u6253\u5370\u884c\u53f7 ! \uff1a\u6a21\u5f0f\u7a7a\u95f4\u4e2d\u5339\u914d\u884c**\u53d6\u53cd**\u5904\u7406 s/// \uff1a \u67e5\u627e\u66ff\u6362 \uff0c\u652f\u6301\u4f7f\u7528\u5176\u5b83\u5206\u9694\u7b26\uff0c\u5982\uff1as@@@\uff0cs###\uff1b \u52a0g\u8868\u793a\u884c\u5185\u5168\u5c40\u66ff\u6362\uff1b \u5728\u66ff\u6362\u65f6\uff0c\u53ef\u4ee5\u52a0\u4e00\u4e0b\u547d\u4ee4\uff0c\u5b9e\u73b0\u5927\u5c0f\u5199\u8f6c\u6362 \\l\uff1a\u628a\u4e0b\u4e2a\u5b57\u7b26\u8f6c\u6362\u6210\u5c0f\u5199\u3002 \\L\uff1a\u628areplacement\u5b57\u6bcd\u8f6c\u6362\u6210\u5c0f\u5199\uff0c\u76f4\u5230\\U\u6216\\E\u51fa\u73b0\u3002 \\u\uff1a\u628a\u4e0b\u4e2a\u5b57\u7b26\u8f6c\u6362\u6210\u5927\u5199\u3002 \\U\uff1a\u628areplacement\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\uff0c\u76f4\u5230\\L\u6216\\E\u51fa\u73b0\u3002 \\E\uff1a\u505c\u6b62\u4ee5\\L\u6216\\U\u5f00\u59cb\u7684\u5927\u5c0f\u5199\u8f6c\u6362 awk # awk\u662f\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u7528\u4e8e\u5728linux/unix\u4e0b\u5bf9\u6587\u672c\u548c\u6570\u636e\u8fdb\u884c\u5904\u7406\u3002\u6570\u636e\u53ef\u4ee5\u6765\u81ea\u6807\u51c6\u8f93\u5165(stdin)\u3001\u4e00\u4e2a\u6216\u591a\u4e2a\u6587\u4ef6\uff0c\u6216\u5176\u5b83\u547d\u4ee4\u7684\u8f93\u51fa\u3002\u5b83**\u652f\u6301\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570**\u548c\u52a8\u6001\u6b63\u5219\u8868\u8fbe\u5f0f\u7b49\u5148\u8fdb\u529f\u80fd\uff0c\u662flinux/unix\u4e0b\u7684\u4e00\u4e2a\u5f3a\u5927\u7f16\u7a0b\u5de5\u5177\u3002","title":"Grep sed ack"},{"location":"tools/grep_sed_ack/#grep","text":"grep\u547d\u4ee4\u662f\u4e00\u79cd\u5f3a\u5927\u7684\u6587\u672c\u641c\u7d22\u5de5\u5177\uff0c\u5b83\u80fd\u4f7f\u7528**\u6b63\u5219\u8868\u8fbe\u5f0f**\u641c\u7d22\u6587\u672c\uff0c\u5e76\u628a\u5339\u914d\u7684\u884c\u6253\u5370\u51fa\u6765\uff08\u5339\u914d\u5230\u7684\u6807\u7ea2\uff09\u3002grep\u5168\u79f0\u662fGlobal Regular Expression Print egrep = grep -E\uff1a\u6269\u5c55\u7684\u6b63\u5219\u8868\u8fbe\u5f0f \uff08\u9664\u4e86**\\< , > , \\b** \u4f7f\u7528\u5176\u4ed6\u6b63\u5219\u90fd\u53ef\u4ee5\u53bb\u6389\\\uff09 grep [option] pattern file -A<\u663e\u793a\u884c\u6570>\uff1a\u9664\u4e86\u663e\u793a\u7b26\u5408\u8303\u672c\u6837\u5f0f\u7684\u90a3\u4e00\u5217\u4e4b\u5916\uff0c\u5e76\u663e\u793a\u8be5\u884c\u4e4b\u540e\u7684\u5185\u5bb9\u3002 -B<\u663e\u793a\u884c\u6570>\uff1a\u9664\u4e86\u663e\u793a\u7b26\u5408\u6837\u5f0f\u7684\u90a3\u4e00\u884c\u4e4b\u5916\uff0c\u5e76\u663e\u793a\u8be5\u884c\u4e4b\u524d\u7684\u5185\u5bb9\u3002 -C<\u663e\u793a\u884c\u6570>\uff1a\u9664\u4e86\u663e\u793a\u7b26\u5408\u6837\u5f0f\u7684\u90a3\u4e00\u884c\u4e4b\u5916\uff0c\u5e76\u663e\u793a\u8be5\u884c\u4e4b\u524d\u540e\u7684\u5185\u5bb9\u3002 -c\uff1a\u7edf\u8ba1\u5339\u914d\u7684\u884c\u6570 -e \uff1a\u5b9e\u73b0\u591a\u4e2a\u9009\u9879\u95f4\u7684\u903b\u8f91or \u5173\u7cfb -E\uff1a\u6269\u5c55\u7684\u6b63\u5219\u8868\u8fbe\u5f0f -f FILE\uff1a\u4eceFILE\u83b7\u53d6PATTERN\u5339\u914d -F \uff1a\u76f8\u5f53\u4e8efgrep -i --ignore-case #\u5ffd\u7565\u5b57\u7b26\u5927\u5c0f\u5199\u7684\u5dee\u522b\u3002 -n\uff1a\u663e\u793a\u5339\u914d\u7684\u884c\u53f7 -o\uff1a\u4ec5\u663e\u793a\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32 -q\uff1a \u9759\u9ed8\u6a21\u5f0f\uff0c\u4e0d\u8f93\u51fa\u4efb\u4f55\u4fe1\u606f -s\uff1a\u4e0d\u663e\u793a\u9519\u8bef\u4fe1\u606f\u3002 -v\uff1a\u663e\u793a\u4e0d\u88abpattern \u5339\u914d\u5230\u7684\u884c\uff0c\u76f8\u5f53\u4e8e[^] \u53cd\u5411\u5339\u914d -w \uff1a\u5339\u914d \u6574\u4e2a\u5355\u8bcd","title":"grep"},{"location":"tools/grep_sed_ack/#\u6b63\u5219\u8868\u8fbe\u5f0f","text":"\u683c\u5f0f . \u5339\u914d\u4efb\u610f\u5355\u4e2a\u5b57\u7b26\uff0c\u4e0d\u80fd\u5339\u914d\u7a7a\u884c [] \u5339\u914d\u6307\u5b9a\u8303\u56f4\u5185\u7684\u4efb\u610f\u5355\u4e2a\u5b57\u7b26 [^] \u53d6\u53cd [:alnum:] \u6216 [0-9a-zA-Z] [:alpha:] \u6216 [a-zA-Z] [:upper:] \u6216 [A-Z] [:lower:] \u6216 [a-z] [:blank:] \u7a7a\u767d\u5b57\u7b26\uff08\u7a7a\u683c\u548c\u5236\u8868\u7b26\uff09 [:space:] \u6c34\u5e73\u548c\u5782\u76f4\u7684\u7a7a\u767d\u5b57\u7b26\uff08\u6bd4[:blank:]\u5305\u542b\u7684\u8303\u56f4\u5e7f\uff09 [:cntrl:] \u4e0d\u53ef\u6253\u5370\u7684\u63a7\u5236\u5b57\u7b26\uff08\u9000\u683c\u3001\u5220\u9664\u3001\u8b66\u94c3...\uff09 [:digit:] \u5341\u8fdb\u5236\u6570\u5b57 \u6216[0-9] [:xdigit:]\u5341\u516d\u8fdb\u5236\u6570\u5b57 [:graph:] \u53ef\u6253\u5370\u7684\u975e\u7a7a\u767d\u5b57\u7b26 [:print:] \u53ef\u6253\u5370\u5b57\u7b26 [:punct:] \u6807\u70b9\u7b26\u53f7 \u914d\u7f6e\u6b21\u6570 - \u5339\u914d\u524d\u9762\u7684\u5b57\u7b26\u4efb\u610f\u6b21\uff0c \u5305\u62ec0\u6b21 \uff0c\u8d2a\u5a6a\u6a21\u5f0f\uff1a\u5c3d\u53ef\u80fd\u957f\u7684\u5339\u914d - .* \u4efb\u610f\u957f\u5ea6\u7684\u4efb\u610f\u5b57\u7b26\uff0c \u4e0d\u5305\u62ec0\u6b21 - \\? \u5339\u914d\u5176\u524d\u9762\u7684\u5b57\u7b26**0 \u6216 1\u6b21** - + \u5339\u914d\u5176\u524d\u9762\u7684\u5b57\u7b26**\u81f3\u5c111\u6b21** - {n} \u5339\u914d\u524d\u9762\u7684\u5b57\u7b26n\u6b21 - {m,n} \u5339\u914d\u524d\u9762\u7684\u5b57\u7b26\u81f3\u5c11m \u6b21\uff0c\u81f3\u591an\u6b21 - {,n} \u5339\u914d\u524d\u9762\u7684\u5b57\u7b26\u81f3\u591an\u6b21 - {n,} \u5339\u914d\u524d\u9762\u7684\u5b57\u7b26\u81f3\u5c11n\u6b21 \u4f4d\u7f6e - ^ \u884c\u9996\u951a\u5b9a\uff0c\u7528\u4e8e\u6a21\u5f0f\u7684\u6700\u5de6\u4fa7 - $ \u884c\u5c3e\u951a\u5b9a\uff0c\u7528\u4e8e\u6a21\u5f0f\u7684\u6700\u53f3\u4fa7 - ^PATTERN \uff0c\u7528\u4e8e\u6a21\u5f0f\u5339\u914d\u6574\u884c - ^ \uff0c\u7528\u4e8e\u6a21\u5f0f\u5339\u914d\u6574\u884c - ^ \u7a7a\u884c - ^[[:space:]].*$ \u7a7a\u767d\u884c - \\< \u6216 \\b \u8bcd\u9996\u951a\u5b9a\uff0c\u7528\u4e8e\u5355\u8bcd\u6a21\u5f0f\u7684\u5de6\u4fa7 - > \u6216 \\b \u8bcd\u5c3e\u951a\u5b9a\uff1b\u7528\u4e8e\u5355\u8bcd\u6a21\u5f0f\u7684\u53f3\u4fa7 - \\<PATTERN> \u5f15\u7528 \u5206\u7ec4\uff1a() \u5c06\u4e00\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u6346\u7ed1\u5728\u4e00\u8d77\uff0c\u5f53\u4f5c\u4e00\u4e2a\u6574\u4f53\u8fdb\u884c\u5904\u7406 \u540e\u5411\u5f15\u7528 \u5f15\u7528\u524d\u9762\u7684\u5206\u7ec4\u62ec\u53f7\u4e2d\u7684\u6a21\u5f0f\u6240\u5339\u914d\u5b57\u7b26\uff0c\u800c\u975e\u6a21\u5f0f\u672c\u8eab \\1 \u8868\u793a\u4ece\u5de6\u4fa7\u8d77\u7b2c\u4e00\u4e2a\u5de6\u62ec\u53f7\u4ee5\u53ca\u4e0e\u4e4b\u5339\u914d\u53f3\u62ec\u53f7\u4e4b\u95f4\u7684\u6a21\u5f0f\u6240\u5339\u914d\u5230\u7684\u5b57\u7b26 \\2 \u8868\u793a\u4ece\u5de6\u4fa7\u8d77\u7b2c2\u4e2a\u5de6\u62ec\u53f7\u4ee5\u53ca\u4e0e\u4e4b\u5339\u914d\u53f3\u62ec\u53f7\u4e4b\u95f4\u7684\u6a21\u5f0f\u6240\u5339\u914d\u5230\u7684\u5b57\u7b26\uff0c\u4ee5\u6b64\u7c7b\u63a8 \\& \u8868\u793a\u524d\u9762\u7684\u5206\u7ec4\u4e2d\u6240\u6709\u5b57\u7b26 \u6269\u5c55 \uff081\uff09\u5b57\u7b26\u5339\u914d\uff1a . \u4efb\u610f\u5355\u4e2a\u5b57\u7b26 [] \u6307\u5b9a\u8303\u56f4\u7684\u5b57\u7b26 [^] \u4e0d\u5728\u6307\u5b9a\u8303\u56f4\u7684\u5b57\u7b26 \u6b21\u6570\u5339\u914d\uff1a * \uff1a\u5339\u914d\u524d\u9762\u5b57\u7b26\u4efb\u610f\u6b21 ? : 0 \u62161\u6b21 + \uff1a1 \u6b21\u6216\u591a\u6b21 {m} \uff1a\u5339\u914dm\u6b21 \u6b21 {m,n} \uff1a\u81f3\u5c11m \uff0c\u81f3\u591an\u6b21 \uff082\uff09\u4f4d\u7f6e\u951a\u5b9a\uff1a ^ : \u884c\u9996 $ : \u884c\u5c3e \\<, \\b : \u8bed\u9996 >, \\b : \u8bed\u5c3e \u5206\u7ec4\uff1a() \u540e\u5411\u5f15\u7528\uff1a\\1, \\2, ...","title":"\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"tools/grep_sed_ack/#sed","text":"sed \u662f\u4e00\u79cd\u6d41\u7f16\u8f91\u5668\uff0c\u5b83\u4e00\u6b21\u5904\u7406\u4e00**\u884c**\u5185\u5bb9\u3002\u5904\u7406\u65f6\uff0c\u628a\u5f53\u524d\u5904\u7406\u7684\u884c\u5b58\u50a8\u5728\u4e34\u65f6\u7f13\u51b2\u533a\u4e2d\uff0c\u79f0\u4e3a\u201c \u6a21\u5f0f\u7a7a\u95f4 \u201d\uff08patternspace \uff09\uff0c\u63a5\u7740\u7528sed \u547d\u4ee4\u5904\u7406\u7f13\u51b2\u533a\u4e2d\u7684\u5185\u5bb9\uff0c\u5904\u7406\u5b8c\u6210\u540e\uff0c\u628a\u7f13\u51b2\u533a\u7684\u5185\u5bb9\u9001\u5f80\u5c4f\u5e55\u3002\u7136\u540e\u8bfb\u5165\u4e0b\u884c\uff0c\u6267\u884c\u4e0b\u4e00\u4e2a\u5faa\u73af\u3002\u5982\u679c\u6ca1\u6709\u4f7f\u8bf8\u5982\u2018D\u2019 \u7684\u7279\u6b8a\u547d\u4ee4\uff0c\u90a3\u4f1a\u5728\u4e24\u4e2a\u5faa\u73af\u4e4b\u95f4\u6e05\u7a7a\u6a21\u5f0f\u7a7a\u95f4\uff0c\u4f46\u4e0d\u4f1a\u6e05\u7a7a**\u4fdd\u7559\u7a7a\u95f4**\u3002\u8fd9\u6837\u4e0d\u65ad\u91cd\u590d\uff0c\u76f4\u5230\u6587\u4ef6\u672b\u5c3e\u3002 \u6587\u4ef6\u5185\u5bb9\u5e76\u6ca1\u6709\u6539\u53d8 \uff0c\u9664\u975e\u4f60\u4f7f\u7528**\u91cd\u5b9a\u5411\u5b58\u50a8\u8f93\u51fa\u6216-i**\u3002 sed [options] '[\u5730\u5740\u5b9a\u754c] command' file``(s) -n \uff1a\u4e0d\u8f93\u51fa\u6a21\u5f0f\u7a7a\u95f4\u5185\u5bb9\u5230\u5c4f\u5e55\uff0c\u5373\u4e0d\u81ea\u52a8\u6253\u5370\uff0c\u53ea\u6253\u5370\u5339\u914d\u5230\u7684\u884c -e\uff1a\u591a\u70b9\u7f16\u8f91\uff0c\u5bf9\u6bcf\u884c\u5904\u7406\u65f6\uff0c\u53ef\u4ee5\u6709\u591a\u4e2aScript -f \uff1a\u628aScript\u5199\u5230\u6587\u4ef6\u5f53\u4e2d\uff0c\u5728\u6267\u884csed\u65f6-f \u6307\u5b9a\u6587\u4ef6\u8def\u5f84\uff0c\u5982\u679c\u662f\u591a\u4e2aScript\uff0c\u6362\u884c\u5199 -r \uff1a\u652f\u6301**\u6269\u5c55\u7684\u6b63\u5219**\u8868\u8fbe\u5f0f -i \uff1a\u76f4\u63a5\u5c06\u5904\u7406\u7684\u7ed3\u679c\u5199\u5165\u6587\u4ef6 -i.bak \uff1a\u5728\u5c06\u5904\u7406\u7684\u7ed3\u679c\u5199\u5165\u6587\u4ef6\u4e4b\u524d\u5907\u4efd\u4e00\u4efd \u5730\u5740\u5b9a\u754c - \u4e0d\u7ed9\u5730\u5740\uff1a\u5bf9\u5168\u6587\u8fdb\u884c\u5904\u7406 - \u5355\u5730\u5740\uff1a - #: \u6307\u5b9a\u7684\u884c - /pattern/\uff1a\u88ab\u6b64\u5904\u6a21\u5f0f\u6240\u80fd\u591f\u5339\u914d\u5230\u7684\u6bcf\u4e00\u884c - \u5730\u5740\u8303\u56f4\uff1a - #,# - #,+# - /pat1/,/pat2/ - #,/pat1/ - ~\uff1a\u6b65\u8fdb - sed -n '1~2p' \u53ea\u6253\u5370\u5947\u6570\u884c \uff081~2 \u4ece\u7b2c1\u884c\uff0c\u4e00\u6b21\u52a02\u884c\uff09 - sed -n '2~2p' \u53ea\u6253\u5370\u5076\u6570\u884c \u7f16\u8f91 **d\uff1a\u5220\u9664**\u6a21\u5f0f\u7a7a\u95f4\u5339\u914d\u7684\u884c\uff0c\u5e76\u7acb\u5373\u542f\u7528\u4e0b\u4e00\u8f6e\u5faa\u73af **p\uff1a\u6253\u5370**\u5f53\u524d\u6a21\u5f0f\u7a7a\u95f4\u5185\u5bb9\uff0c\u8ffd\u52a0\u5230\u9ed8\u8ba4\u8f93\u51fa\u4e4b\u540e a \uff1a\u5728\u6307\u5b9a\u884c**\u540e\u9762\u8ffd\u52a0**\u6587\u672c\uff0c\u652f\u6301\u4f7f\u7528\\n\u5b9e\u73b0\u591a\u884c\u8ffd\u52a0 i \uff1a\u5728\u884c**\u524d\u9762\u63d2\u5165**\u6587\u672c\uff0c\u652f\u6301\u4f7f\u7528\\n\u5b9e\u73b0\u591a\u884c\u8ffd\u52a0 c \uff1a**\u66ff\u6362**\u884c\u4e3a\u5355\u884c\u6216\u591a\u884c\u6587\u672c\uff0c\u652f\u6301\u4f7f\u7528\\n\u5b9e\u73b0\u591a\u884c\u8ffd\u52a0 w\uff1a\u4fdd\u5b58\u6a21\u5f0f\u5339\u914d\u7684\u884c\u81f3\u6307\u5b9a\u6587\u4ef6 r\uff1a\u8bfb\u53d6\u6307\u5b9a\u6587\u4ef6\u7684\u6587\u672c\u81f3\u6a21\u5f0f\u7a7a\u95f4\u4e2d\u5339\u914d\u5230\u7684\u884c\u540e =\uff1a\u4e3a\u6a21\u5f0f\u7a7a\u95f4\u4e2d\u7684\u884c\u6253\u5370\u884c\u53f7 ! \uff1a\u6a21\u5f0f\u7a7a\u95f4\u4e2d\u5339\u914d\u884c**\u53d6\u53cd**\u5904\u7406 s/// \uff1a \u67e5\u627e\u66ff\u6362 \uff0c\u652f\u6301\u4f7f\u7528\u5176\u5b83\u5206\u9694\u7b26\uff0c\u5982\uff1as@@@\uff0cs###\uff1b \u52a0g\u8868\u793a\u884c\u5185\u5168\u5c40\u66ff\u6362\uff1b \u5728\u66ff\u6362\u65f6\uff0c\u53ef\u4ee5\u52a0\u4e00\u4e0b\u547d\u4ee4\uff0c\u5b9e\u73b0\u5927\u5c0f\u5199\u8f6c\u6362 \\l\uff1a\u628a\u4e0b\u4e2a\u5b57\u7b26\u8f6c\u6362\u6210\u5c0f\u5199\u3002 \\L\uff1a\u628areplacement\u5b57\u6bcd\u8f6c\u6362\u6210\u5c0f\u5199\uff0c\u76f4\u5230\\U\u6216\\E\u51fa\u73b0\u3002 \\u\uff1a\u628a\u4e0b\u4e2a\u5b57\u7b26\u8f6c\u6362\u6210\u5927\u5199\u3002 \\U\uff1a\u628areplacement\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\uff0c\u76f4\u5230\\L\u6216\\E\u51fa\u73b0\u3002 \\E\uff1a\u505c\u6b62\u4ee5\\L\u6216\\U\u5f00\u59cb\u7684\u5927\u5c0f\u5199\u8f6c\u6362","title":"sed"},{"location":"tools/grep_sed_ack/#awk","text":"awk\u662f\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u7528\u4e8e\u5728linux/unix\u4e0b\u5bf9\u6587\u672c\u548c\u6570\u636e\u8fdb\u884c\u5904\u7406\u3002\u6570\u636e\u53ef\u4ee5\u6765\u81ea\u6807\u51c6\u8f93\u5165(stdin)\u3001\u4e00\u4e2a\u6216\u591a\u4e2a\u6587\u4ef6\uff0c\u6216\u5176\u5b83\u547d\u4ee4\u7684\u8f93\u51fa\u3002\u5b83**\u652f\u6301\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570**\u548c\u52a8\u6001\u6b63\u5219\u8868\u8fbe\u5f0f\u7b49\u5148\u8fdb\u529f\u80fd\uff0c\u662flinux/unix\u4e0b\u7684\u4e00\u4e2a\u5f3a\u5927\u7f16\u7a0b\u5de5\u5177\u3002","title":"awk"},{"location":"tools/helix/","text":"Type w to select forward until the next word. Type e to select to the end of the current word. Type b to select backward to the start of the current word. Use uppercase counterparts, W,E,B, to traverse WORDS. Type d to delete the entire selection. Type c to delete the selection and enter Insert mode. Type a number before a motion to repeat it that many times. Type v to enter Select mode, where all motions extend the selection. Type x to select the entire current line. Type x again to select the next line. Type semicolon ( ; ) to collapse selection. Use Space + y and Space + p to yank / paste on the system clipboard. Type C to duplicate the cursor to the next suitable line and Alt-C for previous suitable line. Type s to select all instances of a regex pattern inside the current selection. Type & to align selections. Press Alt-s to split the selection into lines. Type f / F to extend selection up to & including a character. Type t / T to extend selection until a character. Type r to replace selected characters. Type . to repeat the last insertion. Press Alt-. to repeat the last f / t selection. Type R to replace the selection with yanked text. Type J to join lines in selection. Type > and < to indent / unindent lines. Press Ctrl-a to increment the selected number. Press Ctrl-x to decrement the selected number. Type n / N in Select mode to add selections on each search match. Type gw to enable 2-character labels, and any 2 characters to jump to the corresponding label, or ESC to drop the labels. Use Ctrl-c to comment a line under your cursor. Press Ctrl-c again to uncomment. To comment multiple lines, use the selections and multi-cursors before typing Ctrl-c. Commented lines cannot be uncommented but commented again. You can enter the match mode with the m key; this will show the actions available in a popup. This will allow you to: * jump to matching pair of delimiters with mm (you must have a delimiter belonging to a pair under your cursor) * select inside a pair of delimiters surrounding your cursor (i.e. select the content but not the delimiters) with mi( and similar * select around a pair of delimiters surrounding your cursor (i.e. select the content and the delimiters) with ma( and similar * delete surrounding delimiters with md( and similar * add surrounding delimiters around the selection with ms( * replace a pair of delimiters surrounding your selection with mr([ to replace for example surrounding () with []","title":"Helix"},{"location":"tools/lsyncd/","text":"create id ssh-keygen cope to dst then don't need password ssh-copy-id test@ip install lsyncd basic command lsyncd -nodaemon -rsync /home/jcai/tmp/src root@192.168.2.104:/mnt/dst -delay 0 .01 -pidfile lsy ncd.pid kill $( cat ../lsyncd.pid ) use file to sync, lsyncd test.lua , kill $(cat ../lsyncd.pid) settings { pidfile = \"/home/jcai/tmp/lsyncd.pid\" , logfile = \"/home/jcai/tmp/lsyncd.log\" , nodaemon = true , } sync { default . rsync , source = \"/home/jcai/tmp/src\" , target = \"root@192.168.2.104:/mnt/dst\" , maxDelays = 1 , delay = 0.001 , -- init = true, rsync = { binary = \"/usr/bin/rsync\" , archive = true , compress = true , bwlimit = 2000 } } - referece Lsyncd - Invoking #","title":"Lsyncd"},{"location":"tools/lsyncd/#--referece-lsyncd---invoking","text":"","title":"- referece Lsyncd - Invoking"},{"location":"tools/sqlite/","text":"install # sudo apt install libsqlite3-dev sqlite3","title":"Sqlite"},{"location":"tools/sqlite/#install","text":"sudo apt install libsqlite3-dev sqlite3","title":"install"},{"location":"tools/vim/","text":"\u65e0\u63d2\u4ef6Vim\u7f16\u7a0b\u6280\u5de7 # \u76ee\u5f55 # \u3010 :E \u3011 \u6d4f\u89c8\u76ee\u5f55 \u3010 \u2013 \u3011 \u5230\u4e0a\u7ea7\u76ee\u5f55 \u3010D\u3011\u5220\u9664\u6587\u4ef6\uff08\u5927\u5199\uff09 \u3010R\u3011\u6539\u6587\u4ef6\u540d\uff08\u5927\u5199\uff09 \u3010s\u3011\u5bf9\u6587\u4ef6\u6392\u5e8f\uff08\u5c0f\u5199\uff09 \u3010x\u3011\u6267\u884c\u6587\u4ef6 \u7f13\u51b2\u533a # \u3010:ls\u3011\u67e5\u770b\u7f13\u51b2\u533a :bnext \u7f29\u5199 :bn :bprevious \u7f29\u5199 :bp :blast \u7f29\u5199 :bl :bfirst \u7f29\u5199 :bf \u7a97\u53e3\u5206\u5c4f\u6d4f\u89c8 # :He \u5168\u79f0\u4e3a :Hexplore \uff08\u5728\u4e0b\u8fb9\u5206\u5c4f\u6d4f\u89c8\u76ee\u5f55\uff09 :Ve \u5168\u79f0\u4e3a :Vexplore \uff08\u5728\u5de6\u8fb9\u5206\u5c4f\u95f4\u6d4f\u89c8\u76ee\u5f55\uff0c\u8981\u5728\u53f3\u8fb9\u5219\u662f :Ve!\uff09 Tab\u9875\u6d4f\u89c8\u76ee\u5f55 # :Te \u5168\u79f0\u662f :Texplorer gt \u2013 \u5230\u4e0b\u4e00\u4e2a\u9875 gT \u2013 \u5230\u524d\u4e00\u4e2a\u9875 {i} gt \u2013 i\u662f\u6570\u5b57\uff0c\u5230\u6307\u5b9a\u9875\uff0c\u6bd4\u5982\uff1a5 gt \u5c31\u662f\u5230\u7b2c5\u9875 :tabclose [i] \u2013 \u5982\u679c\u540e\u9762\u6307\u5b9a\u4e86\u6570\u5b57\uff0c\u90a3\u5c31\u5173\u95ed\u6307\u5b9a\u9875\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u5173\u95ed\u5f53\u524d\u9875 vim \u7684 -p \u53c2\u6570\u6765\u7528Tab\u9875\u7684\u65b9\u5f0f\u6253\u5f00\u591a\u4e2a\u6587\u4ef6 Quickfix # \u6bd4\u5982\u6211\u4eec\u6b63\u5728\u6d4f\u89c8nginx\u7684\u4ee3\u7801\uff0c\u8fd9\u65f6\uff0c\u6211\u60f3\u770b\u770b\u54ea\u91cc\u7528\u5230\u4e86nginx\u7684NGX_HTTP_VAR_INDEXED\u5b8f\u3002\u4e8e\u662f\uff0c\u6211\u53ef\u4ee5\u5728vim\u91cc\u8f93\u5165\u5982\u4e0b\u7684\u547d\u4ee4\uff1a :grep -r \u2013include=\u201d*.[ch]\u201d NGX_HTTP_VAR_INDEXED src/ \u6309\u56de\u8f66\u8fd4\u56devim\u540e\uff0c\u7528 \u3010:cw \u3011\u628agrep\u7684\u8f93\u51fa\u53d6\u56de \u5173\u952e\u5b57\u8865\u5168 # \u3010 Ctrl +N \u3011 \u2013 \u5f53\u4f60\u6309\u4e0b\u8fd9\u5b83\u65f6\uff0c\u4f60\u4f1a\u53d1\u73b0Vim\u5c31\u5f00\u59cb\u641c\u7d22\u4f60\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u7684\u4ee3\u7801\uff0c\u641c\u7d22\u5b8c\u6210\u4e86\u5c31\u4f1a\u51fa\u73b0\u4e00\u4e2a\u4e0b\u62c9\u5217\u8868 \u3010 Ctrl + P \u3011 \u2013 \u63a5\u4e0b\u6765\u4f60\u53ef\u4ee5\u6309\u8fd9\u4e2a\u952e\uff0c\u4e8e\u662f\u56de\u5230\u539f\u70b9\uff0c\u7136\u540e\u4f60\u53ef\u4ee5\u6309\u4e0a\u4e0b\u5149\u6807\u952e\u6765\u9009\u62e9\u76f8\u5e94\u7684Word\u3002 \u5b57\u7b26\u76f8\u5173 # \u3010ga\u3011 \u2013 \u67e5\u770b\u5149\u6807\u5904\u5b57\u7b26\u7684ascii\u7801 \u3010g8\u3011 \u2013 \u67e5\u770b\u5149\u6807\u5904\u5b57\u7b26\u7684utf-8\u7f16\u7801 \u3010gf\u3011 \u2013 \u6253\u5f00\u5149\u6807\u5904\u6240\u6307\u7684\u6587\u4ef6 \uff08\u8fd9\u4e2a\u547d\u4ee4\u5728\u6253\u5230#include\u5934\u6587\u4ef6\u65f6\u633a\u597d\u7528\u7684\uff0c\u5f53\u7136\uff0c\u4ec5\u9650\u4e8e\u6709\u8def\u5f84\u7684\uff09 \u3010*\u3011\u6216\u3010#\u3011\u5728\u5f53\u524d\u6587\u4ef6\u4e2d\u641c\u7d22\u5f53\u524d\u5149\u6807\u7684\u5355\u8bcd \u7f29\u8fdb\u76f8\u5173 # \u3010>>\u3011\u5411\u53f3\u7ed9\u5b83\u8fdb\u5f53\u524d\u884c \u3010<<\u3011\u5411\u5de6\u7f29\u8fdb\u5f53\u524d\u884c \u3010=\u3011 \u2013 \u7f29\u8fdb\u5f53\u524d\u884c \uff08\u548c\u4e0a\u9762\u4e0d\u4e00\u6837\u7684\u662f\uff0c\u5b83\u4f1a\u5bf9\u9f50\u7f29\u8fdb\uff09 \u8bfb\u53d6Shell\u547d\u4ee4\u76f8\u5173 # \u3010:r!date\u3011 \u63d2\u5165\u65e5\u671f indent\u6298\u53e0\u547d\u4ee4 # \u64cd\u4f5c\uff1aza\uff0c\u6253\u5f00\u6216\u5173\u95ed\u5f53\u524d\u6298\u53e0\uff1bzM\uff0c\u5173\u95ed\u6240\u6709\u6298\u53e0\uff1bzR\uff0c\u6253\u5f00\u6240\u6709\u6298\u53e0 set foldmethod=indent indent\u65b9\u5f0f\uff0cvim\u4f1a\u81ea\u52a8\u5229\u7528\u7f29\u8fdb\u8fdb\u884c\u6298\u53e0\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u73b0\u6210\u7684\u6298\u53e0\u6210\u679c\uff0e \u6211\u4eec\u53ef\u4ee5\u5728(\u62ec\u53f7)\u6298\u53e0\u5904\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a zc \u6298\u53e0 zC \u5bf9\u6240\u5728\u8303\u56f4\u5185\u6240\u6709\u5d4c\u5957\u7684\u6298\u53e0\u70b9\u8fdb\u884c\u6298\u53e0 zo \u5c55\u5f00\u6298\u53e0 zO \u5bf9\u6240\u5728\u8303\u56f4\u5185\u6240\u6709\u5d4c\u5957\u7684\u6298\u53e0\u70b9\u5c55\u5f00 [z \u5230\u5f53\u524d\u6253\u5f00\u7684\u6298\u53e0\u7684\u5f00\u59cb\u5904\u3002 ]z \u5230\u5f53\u524d\u6253\u5f00\u7684\u6298\u53e0\u7684\u672b\u5c3e\u5904\u3002 zj \u5411\u4e0b\u79fb\u52a8\u3002\u5230\u8fbe\u4e0b\u4e00\u4e2a\u6298\u53e0\u7684\u5f00\u59cb\u5904\u3002\u5173\u95ed\u7684\u6298\u53e0\u4e5f\u88ab\u8ba1\u5165\u3002 zk \u5411\u4e0a\u79fb\u52a8\u5230\u524d\u4e00\u6298\u53e0\u7684\u7ed3\u675f\u5904\u3002\u5173\u95ed\u7684\u6298\u53e0\u4e5f\u88ab\u8ba1\u5165\u3002 \u65e0\u63d2\u4ef6Vim\u7f16\u7a0b\u6280\u5de7 | \u9177 \u58f3 - CoolShell","title":"Vim"},{"location":"tools/vim/#\u65e0\u63d2\u4ef6vim\u7f16\u7a0b\u6280\u5de7","text":"","title":"\u65e0\u63d2\u4ef6Vim\u7f16\u7a0b\u6280\u5de7"},{"location":"tools/vim/#\u76ee\u5f55","text":"\u3010 :E \u3011 \u6d4f\u89c8\u76ee\u5f55 \u3010 \u2013 \u3011 \u5230\u4e0a\u7ea7\u76ee\u5f55 \u3010D\u3011\u5220\u9664\u6587\u4ef6\uff08\u5927\u5199\uff09 \u3010R\u3011\u6539\u6587\u4ef6\u540d\uff08\u5927\u5199\uff09 \u3010s\u3011\u5bf9\u6587\u4ef6\u6392\u5e8f\uff08\u5c0f\u5199\uff09 \u3010x\u3011\u6267\u884c\u6587\u4ef6","title":"\u76ee\u5f55"},{"location":"tools/vim/#\u7f13\u51b2\u533a","text":"\u3010:ls\u3011\u67e5\u770b\u7f13\u51b2\u533a :bnext \u7f29\u5199 :bn :bprevious \u7f29\u5199 :bp :blast \u7f29\u5199 :bl :bfirst \u7f29\u5199 :bf","title":"\u7f13\u51b2\u533a"},{"location":"tools/vim/#\u7a97\u53e3\u5206\u5c4f\u6d4f\u89c8","text":":He \u5168\u79f0\u4e3a :Hexplore \uff08\u5728\u4e0b\u8fb9\u5206\u5c4f\u6d4f\u89c8\u76ee\u5f55\uff09 :Ve \u5168\u79f0\u4e3a :Vexplore \uff08\u5728\u5de6\u8fb9\u5206\u5c4f\u95f4\u6d4f\u89c8\u76ee\u5f55\uff0c\u8981\u5728\u53f3\u8fb9\u5219\u662f :Ve!\uff09","title":"\u7a97\u53e3\u5206\u5c4f\u6d4f\u89c8"},{"location":"tools/vim/#tab\u9875\u6d4f\u89c8\u76ee\u5f55","text":":Te \u5168\u79f0\u662f :Texplorer gt \u2013 \u5230\u4e0b\u4e00\u4e2a\u9875 gT \u2013 \u5230\u524d\u4e00\u4e2a\u9875 {i} gt \u2013 i\u662f\u6570\u5b57\uff0c\u5230\u6307\u5b9a\u9875\uff0c\u6bd4\u5982\uff1a5 gt \u5c31\u662f\u5230\u7b2c5\u9875 :tabclose [i] \u2013 \u5982\u679c\u540e\u9762\u6307\u5b9a\u4e86\u6570\u5b57\uff0c\u90a3\u5c31\u5173\u95ed\u6307\u5b9a\u9875\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u5173\u95ed\u5f53\u524d\u9875 vim \u7684 -p \u53c2\u6570\u6765\u7528Tab\u9875\u7684\u65b9\u5f0f\u6253\u5f00\u591a\u4e2a\u6587\u4ef6","title":"Tab\u9875\u6d4f\u89c8\u76ee\u5f55"},{"location":"tools/vim/#quickfix","text":"\u6bd4\u5982\u6211\u4eec\u6b63\u5728\u6d4f\u89c8nginx\u7684\u4ee3\u7801\uff0c\u8fd9\u65f6\uff0c\u6211\u60f3\u770b\u770b\u54ea\u91cc\u7528\u5230\u4e86nginx\u7684NGX_HTTP_VAR_INDEXED\u5b8f\u3002\u4e8e\u662f\uff0c\u6211\u53ef\u4ee5\u5728vim\u91cc\u8f93\u5165\u5982\u4e0b\u7684\u547d\u4ee4\uff1a :grep -r \u2013include=\u201d*.[ch]\u201d NGX_HTTP_VAR_INDEXED src/ \u6309\u56de\u8f66\u8fd4\u56devim\u540e\uff0c\u7528 \u3010:cw \u3011\u628agrep\u7684\u8f93\u51fa\u53d6\u56de","title":"Quickfix"},{"location":"tools/vim/#\u5173\u952e\u5b57\u8865\u5168","text":"\u3010 Ctrl +N \u3011 \u2013 \u5f53\u4f60\u6309\u4e0b\u8fd9\u5b83\u65f6\uff0c\u4f60\u4f1a\u53d1\u73b0Vim\u5c31\u5f00\u59cb\u641c\u7d22\u4f60\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u7684\u4ee3\u7801\uff0c\u641c\u7d22\u5b8c\u6210\u4e86\u5c31\u4f1a\u51fa\u73b0\u4e00\u4e2a\u4e0b\u62c9\u5217\u8868 \u3010 Ctrl + P \u3011 \u2013 \u63a5\u4e0b\u6765\u4f60\u53ef\u4ee5\u6309\u8fd9\u4e2a\u952e\uff0c\u4e8e\u662f\u56de\u5230\u539f\u70b9\uff0c\u7136\u540e\u4f60\u53ef\u4ee5\u6309\u4e0a\u4e0b\u5149\u6807\u952e\u6765\u9009\u62e9\u76f8\u5e94\u7684Word\u3002","title":"\u5173\u952e\u5b57\u8865\u5168"},{"location":"tools/vim/#\u5b57\u7b26\u76f8\u5173","text":"\u3010ga\u3011 \u2013 \u67e5\u770b\u5149\u6807\u5904\u5b57\u7b26\u7684ascii\u7801 \u3010g8\u3011 \u2013 \u67e5\u770b\u5149\u6807\u5904\u5b57\u7b26\u7684utf-8\u7f16\u7801 \u3010gf\u3011 \u2013 \u6253\u5f00\u5149\u6807\u5904\u6240\u6307\u7684\u6587\u4ef6 \uff08\u8fd9\u4e2a\u547d\u4ee4\u5728\u6253\u5230#include\u5934\u6587\u4ef6\u65f6\u633a\u597d\u7528\u7684\uff0c\u5f53\u7136\uff0c\u4ec5\u9650\u4e8e\u6709\u8def\u5f84\u7684\uff09 \u3010*\u3011\u6216\u3010#\u3011\u5728\u5f53\u524d\u6587\u4ef6\u4e2d\u641c\u7d22\u5f53\u524d\u5149\u6807\u7684\u5355\u8bcd","title":"\u5b57\u7b26\u76f8\u5173"},{"location":"tools/vim/#\u7f29\u8fdb\u76f8\u5173","text":"\u3010>>\u3011\u5411\u53f3\u7ed9\u5b83\u8fdb\u5f53\u524d\u884c \u3010<<\u3011\u5411\u5de6\u7f29\u8fdb\u5f53\u524d\u884c \u3010=\u3011 \u2013 \u7f29\u8fdb\u5f53\u524d\u884c \uff08\u548c\u4e0a\u9762\u4e0d\u4e00\u6837\u7684\u662f\uff0c\u5b83\u4f1a\u5bf9\u9f50\u7f29\u8fdb\uff09","title":"\u7f29\u8fdb\u76f8\u5173"},{"location":"tools/vim/#\u8bfb\u53d6shell\u547d\u4ee4\u76f8\u5173","text":"\u3010:r!date\u3011 \u63d2\u5165\u65e5\u671f","title":"\u8bfb\u53d6Shell\u547d\u4ee4\u76f8\u5173"},{"location":"tools/vim/#indent\u6298\u53e0\u547d\u4ee4","text":"\u64cd\u4f5c\uff1aza\uff0c\u6253\u5f00\u6216\u5173\u95ed\u5f53\u524d\u6298\u53e0\uff1bzM\uff0c\u5173\u95ed\u6240\u6709\u6298\u53e0\uff1bzR\uff0c\u6253\u5f00\u6240\u6709\u6298\u53e0 set foldmethod=indent indent\u65b9\u5f0f\uff0cvim\u4f1a\u81ea\u52a8\u5229\u7528\u7f29\u8fdb\u8fdb\u884c\u6298\u53e0\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u73b0\u6210\u7684\u6298\u53e0\u6210\u679c\uff0e \u6211\u4eec\u53ef\u4ee5\u5728(\u62ec\u53f7)\u6298\u53e0\u5904\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a zc \u6298\u53e0 zC \u5bf9\u6240\u5728\u8303\u56f4\u5185\u6240\u6709\u5d4c\u5957\u7684\u6298\u53e0\u70b9\u8fdb\u884c\u6298\u53e0 zo \u5c55\u5f00\u6298\u53e0 zO \u5bf9\u6240\u5728\u8303\u56f4\u5185\u6240\u6709\u5d4c\u5957\u7684\u6298\u53e0\u70b9\u5c55\u5f00 [z \u5230\u5f53\u524d\u6253\u5f00\u7684\u6298\u53e0\u7684\u5f00\u59cb\u5904\u3002 ]z \u5230\u5f53\u524d\u6253\u5f00\u7684\u6298\u53e0\u7684\u672b\u5c3e\u5904\u3002 zj \u5411\u4e0b\u79fb\u52a8\u3002\u5230\u8fbe\u4e0b\u4e00\u4e2a\u6298\u53e0\u7684\u5f00\u59cb\u5904\u3002\u5173\u95ed\u7684\u6298\u53e0\u4e5f\u88ab\u8ba1\u5165\u3002 zk \u5411\u4e0a\u79fb\u52a8\u5230\u524d\u4e00\u6298\u53e0\u7684\u7ed3\u675f\u5904\u3002\u5173\u95ed\u7684\u6298\u53e0\u4e5f\u88ab\u8ba1\u5165\u3002 \u65e0\u63d2\u4ef6Vim\u7f16\u7a0b\u6280\u5de7 | \u9177 \u58f3 - CoolShell","title":"indent\u6298\u53e0\u547d\u4ee4"},{"location":"tools/vscode/","text":"comment # control + / alt+shit+A makefile_project # apt install bear bear make generate compile_json clangd will use this json to route folder \u4f7f\u7528\u5feb\u6377\u952e Ctrl + K, Ctrl + 0 \uff08Windows\uff09\u6216 Cmd + K, Cmd + 0 \uff08Mac\uff09\u6765\u6298\u53e0\u6240\u6709\u4ee3\u7801\u3002 \u4f7f\u7528 Ctrl + Shift + [ \uff08Windows\uff09\u6216 Cmd + Option + [ \uff08Mac\uff09\u6765\u6298\u53e0\u9009\u4e2d\u7684\u4ee3\u7801\u5757\u3002","title":"Vscode"},{"location":"tools/vscode/#comment","text":"control + / alt+shit+A","title":"comment"},{"location":"tools/vscode/#makefile_project","text":"apt install bear bear make generate compile_json clangd will use this json to route folder \u4f7f\u7528\u5feb\u6377\u952e Ctrl + K, Ctrl + 0 \uff08Windows\uff09\u6216 Cmd + K, Cmd + 0 \uff08Mac\uff09\u6765\u6298\u53e0\u6240\u6709\u4ee3\u7801\u3002 \u4f7f\u7528 Ctrl + Shift + [ \uff08Windows\uff09\u6216 Cmd + Option + [ \uff08Mac\uff09\u6765\u6298\u53e0\u9009\u4e2d\u7684\u4ee3\u7801\u5757\u3002","title":"makefile_project"},{"location":"tools/windowterminal/","text":"win terminal split left/right alt+shift+plus/minus copy/past ctrl+shift+c/v change focus alt + left/right up/down win termianl duplicate tab/panel ctrl+shift+d alt+shift+d win terminal panel change size alt+shift+left/right up/down scroll ctrl+shift +up/down","title":"Windowterminal"},{"location":"wiki/100G_KP4_KR4/","text":"zr_openroadm # 400G ZR sets a standard for transferring 400 Gigabit Ethernet over a single optical wavelength, utilizing technologies like DWDM (dense wavelength division multiplexing) and higher-order modulation such as 16 QAM. Developed by the Optical Interoperability Forum (OIF), this cost-effective solution establishes an interoperable interface for 400G data transmission, marking one of the initial standards in this domain. Open ROADM is a 400G pluggable solution that establishes interoperability standards for Reconfigurable Optical Add/Drop Multiplexers (ROADM) , responsible for managing and routing data traffic over high-capacity fiber-optic lines. Initially developed in response to the surge in wireless network traffic from 2007 to 2015, Open ROADM consists of key components including ROADM switches, transponders, and pluggable optics. These components are controllable via an open standards-based API accessed through an SDN Controller using the NETCONF protocol.","title":"100G KP4 KR4"},{"location":"wiki/100G_KP4_KR4/#zr_openroadm","text":"400G ZR sets a standard for transferring 400 Gigabit Ethernet over a single optical wavelength, utilizing technologies like DWDM (dense wavelength division multiplexing) and higher-order modulation such as 16 QAM. Developed by the Optical Interoperability Forum (OIF), this cost-effective solution establishes an interoperable interface for 400G data transmission, marking one of the initial standards in this domain. Open ROADM is a 400G pluggable solution that establishes interoperability standards for Reconfigurable Optical Add/Drop Multiplexers (ROADM) , responsible for managing and routing data traffic over high-capacity fiber-optic lines. Initially developed in response to the surge in wireless network traffic from 2007 to 2015, Open ROADM consists of key components including ROADM switches, transponders, and pluggable optics. These components are controllable via an open standards-based API accessed through an SDN Controller using the NETCONF protocol.","title":"zr_openroadm"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/","text":"\ud83d\udcd1 \u76ee\u5f55 # \u2795 C/C++ \u2b50\ufe0f Effective \ud83d\udce6 STL \u303d\ufe0f \u6570\u636e\u7ed3\u6784 \u26a1\ufe0f \u7b97\u6cd5 \u2753 Problems \ud83d\udcbb \u64cd\u4f5c\u7cfb\u7edf \u2601\ufe0f \u8ba1\u7b97\u673a\u7f51\u7edc \ud83c\udf29 \u7f51\u7edc\u7f16\u7a0b \ud83d\udcbe \u6570\u636e\u5e93 \ud83d\udccf \u8bbe\u8ba1\u6a21\u5f0f \u2699\ufe0f \u94fe\u63a5\u88c5\u8f7d\u5e93 \ud83d\udcda \u4e66\u7c4d \ud83d\udd31 C/C++ \u53d1\u5c55\u65b9\u5411 \ud83d\udcaf \u590d\u4e60\u5237\u9898\u7f51\u7ad9 \ud83d\udcdd \u9762\u8bd5\u9898\u76ee\u7ecf\u9a8c \ud83d\udcc6 \u62db\u8058\u65f6\u95f4\u5c97\u4f4d \ud83d\udc4d \u5185\u63a8 \ud83d\udc6c \u8d21\u732e\u8005 \ud83d\udcdc License \u2795 C/C++ # const # \u4f5c\u7528 # \u4fee\u9970\u53d8\u91cf\uff0c\u8bf4\u660e\u8be5\u53d8\u91cf\u4e0d\u53ef\u4ee5\u88ab\u6539\u53d8\uff1b \u4fee\u9970\u6307\u9488\uff0c\u5206\u4e3a\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff08pointer to const\uff09\u548c\u81ea\u8eab\u662f\u5e38\u91cf\u7684\u6307\u9488\uff08\u5e38\u91cf\u6307\u9488\uff0cconst pointer\uff09\uff1b \u4fee\u9970\u5f15\u7528\uff0c\u6307\u5411\u5e38\u91cf\u7684\u5f15\u7528\uff08reference to const\uff09\uff0c\u7528\u4e8e\u5f62\u53c2\u7c7b\u578b\uff0c\u5373\u907f\u514d\u4e86\u62f7\u8d1d\uff0c\u53c8\u907f\u514d\u4e86\u51fd\u6570\u5bf9\u503c\u7684\u4fee\u6539\uff1b \u4fee\u9970\u6210\u5458\u51fd\u6570\uff0c\u8bf4\u660e\u8be5\u6210\u5458\u51fd\u6570\u5185\u4e0d\u80fd\u4fee\u6539\u6210\u5458\u53d8\u91cf\u3002 const \u7684\u6307\u9488\u4e0e\u5f15\u7528 # \u6307\u9488 \u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff08pointer to const\uff09 \u81ea\u8eab\u662f\u5e38\u91cf\u7684\u6307\u9488\uff08\u5e38\u91cf\u6307\u9488\uff0cconst pointer\uff09 \u5f15\u7528 \u6307\u5411\u5e38\u91cf\u7684\u5f15\u7528\uff08reference to const\uff09 \u6ca1\u6709 const reference\uff0c\u56e0\u4e3a\u5f15\u7528\u53ea\u662f\u5bf9\u8c61\u7684\u522b\u540d\uff0c\u5f15\u7528\u4e0d\u662f\u5bf9\u8c61\uff0c\u4e0d\u80fd\u7528 const \u4fee\u9970 \uff08\u4e3a\u4e86\u65b9\u4fbf\u8bb0\u5fc6\u53ef\u4ee5\u60f3\u6210\uff09\u88ab const \u4fee\u9970\uff08\u5728 const \u540e\u9762\uff09\u7684\u503c\u4e0d\u53ef\u6539\u53d8\uff0c\u5982\u4e0b\u6587\u4f7f\u7528\u4f8b\u5b50\u4e2d\u7684 p2 \u3001 p3 \u4f7f\u7528 # const \u4f7f\u7528 // \u7c7b class A { private : const int a ; // \u5e38\u5bf9\u8c61\u6210\u5458\uff0c\u53ef\u4ee5\u4f7f\u7528\u521d\u59cb\u5316\u5217\u8868\u6216\u8005\u7c7b\u5185\u521d\u59cb\u5316 public : // \u6784\u9020\u51fd\u6570 A () : a ( 0 ) { }; A ( int x ) : a ( x ) { }; // \u521d\u59cb\u5316\u5217\u8868 // const\u53ef\u7528\u4e8e\u5bf9\u91cd\u8f7d\u51fd\u6570\u7684\u533a\u5206 int getValue (); // \u666e\u901a\u6210\u5458\u51fd\u6570 int getValue () const ; // \u5e38\u6210\u5458\u51fd\u6570\uff0c\u4e0d\u5f97\u4fee\u6539\u7c7b\u4e2d\u7684\u4efb\u4f55\u6570\u636e\u6210\u5458\u7684\u503c }; void function () { // \u5bf9\u8c61 A b ; // \u666e\u901a\u5bf9\u8c61\uff0c\u53ef\u4ee5\u8c03\u7528\u5168\u90e8\u6210\u5458\u51fd\u6570 const A a ; // \u5e38\u5bf9\u8c61\uff0c\u53ea\u80fd\u8c03\u7528\u5e38\u6210\u5458\u51fd\u6570 const A * p = & a ; // \u6307\u9488\u53d8\u91cf\uff0c\u6307\u5411\u5e38\u5bf9\u8c61 const A & q = a ; // \u6307\u5411\u5e38\u5bf9\u8c61\u7684\u5f15\u7528 // \u6307\u9488 char greeting [] = \"Hello\" ; char * p1 = greeting ; // \u6307\u9488\u53d8\u91cf\uff0c\u6307\u5411\u5b57\u7b26\u6570\u7ec4\u53d8\u91cf const char * p2 = greeting ; // \u6307\u9488\u53d8\u91cf\uff0c\u6307\u5411\u5b57\u7b26\u6570\u7ec4\u5e38\u91cf\uff08const \u540e\u9762\u662f char\uff0c\u8bf4\u660e\u6307\u5411\u7684\u5b57\u7b26\uff08char\uff09\u4e0d\u53ef\u6539\u53d8\uff09 char * const p3 = greeting ; // \u81ea\u8eab\u662f\u5e38\u91cf\u7684\u6307\u9488\uff0c\u6307\u5411\u5b57\u7b26\u6570\u7ec4\u53d8\u91cf\uff08const \u540e\u9762\u662f p3\uff0c\u8bf4\u660e p3 \u6307\u9488\u81ea\u8eab\u4e0d\u53ef\u6539\u53d8\uff09 const char * const p4 = greeting ; // \u81ea\u8eab\u662f\u5e38\u91cf\u7684\u6307\u9488\uff0c\u6307\u5411\u5b57\u7b26\u6570\u7ec4\u5e38\u91cf } // \u51fd\u6570 void function1 ( const int Var ); // \u4f20\u9012\u8fc7\u6765\u7684\u53c2\u6570\u5728\u51fd\u6570\u5185\u4e0d\u53ef\u53d8 void function2 ( const char * Var ); // \u53c2\u6570\u6307\u9488\u6240\u6307\u5185\u5bb9\u4e3a\u5e38\u91cf void function3 ( char * const Var ); // \u53c2\u6570\u6307\u9488\u4e3a\u5e38\u91cf void function4 ( const int & Var ); // \u5f15\u7528\u53c2\u6570\u5728\u51fd\u6570\u5185\u4e3a\u5e38\u91cf // \u51fd\u6570\u8fd4\u56de\u503c const int function5 (); // \u8fd4\u56de\u4e00\u4e2a\u5e38\u6570 const int * function6 (); // \u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\u53d8\u91cf\uff0c\u4f7f\u7528\uff1aconst int *p = function6(); int * const function7 (); // \u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u53d8\u91cf\u7684\u5e38\u6307\u9488\uff0c\u4f7f\u7528\uff1aint* const p = function7(); \u5b8f\u5b9a\u4e49 #define \u548c const \u5e38\u91cf # \u5b8f\u5b9a\u4e49 #define const \u5e38\u91cf \u5b8f\u5b9a\u4e49\uff0c\u76f8\u5f53\u4e8e\u5b57\u7b26\u66ff\u6362 \u5e38\u91cf\u58f0\u660e \u9884\u5904\u7406\u5668\u5904\u7406 \u7f16\u8bd1\u5668\u5904\u7406 \u65e0\u7c7b\u578b\u5b89\u5168\u68c0\u67e5 \u6709\u7c7b\u578b\u5b89\u5168\u68c0\u67e5 \u4e0d\u5206\u914d\u5185\u5b58 \u8981\u5206\u914d\u5185\u5b58 \u5b58\u50a8\u5728\u4ee3\u7801\u6bb5 \u5b58\u50a8\u5728\u6570\u636e\u6bb5 \u53ef\u901a\u8fc7 #undef \u53d6\u6d88 \u4e0d\u53ef\u53d6\u6d88 static # \u4f5c\u7528 # \u4fee\u9970\u666e\u901a\u53d8\u91cf\uff0c\u4fee\u6539\u53d8\u91cf\u7684\u5b58\u50a8\u533a\u57df\u548c\u751f\u547d\u5468\u671f\uff0c\u4f7f\u53d8\u91cf\u5b58\u50a8\u5728\u9759\u6001\u533a\uff0c\u5728 main \u51fd\u6570\u8fd0\u884c\u524d\u5c31\u5206\u914d\u4e86\u7a7a\u95f4\uff0c\u5982\u679c\u6709\u521d\u59cb\u503c\u5c31\u7528\u521d\u59cb\u503c\u521d\u59cb\u5316\u5b83\uff0c\u5982\u679c\u6ca1\u6709\u521d\u59cb\u503c\u7cfb\u7edf\u7528\u9ed8\u8ba4\u503c\u521d\u59cb\u5316\u5b83\u3002 \u4fee\u9970\u666e\u901a\u51fd\u6570\uff0c\u8868\u660e\u51fd\u6570\u7684\u4f5c\u7528\u8303\u56f4\uff0c\u4ec5\u5728\u5b9a\u4e49\u8be5\u51fd\u6570\u7684\u6587\u4ef6\u5185\u624d\u80fd\u4f7f\u7528\u3002\u5728\u591a\u4eba\u5f00\u53d1\u9879\u76ee\u65f6\uff0c\u4e3a\u4e86\u9632\u6b62\u4e0e\u4ed6\u4eba\u547d\u540d\u7a7a\u95f4\u91cc\u7684\u51fd\u6570\u91cd\u540d\uff0c\u53ef\u4ee5\u5c06\u51fd\u6570\u5b9a\u4f4d\u4e3a static\u3002 \u4fee\u9970\u6210\u5458\u53d8\u91cf\uff0c\u4fee\u9970\u6210\u5458\u53d8\u91cf\u4f7f\u6240\u6709\u7684\u5bf9\u8c61\u53ea\u4fdd\u5b58\u4e00\u4e2a\u8be5\u53d8\u91cf\uff0c\u800c\u4e14\u4e0d\u9700\u8981\u751f\u6210\u5bf9\u8c61\u5c31\u53ef\u4ee5\u8bbf\u95ee\u8be5\u6210\u5458\u3002 \u4fee\u9970\u6210\u5458\u51fd\u6570\uff0c\u4fee\u9970\u6210\u5458\u51fd\u6570\u4f7f\u5f97\u4e0d\u9700\u8981\u751f\u6210\u5bf9\u8c61\u5c31\u53ef\u4ee5\u8bbf\u95ee\u8be5\u51fd\u6570\uff0c\u4f46\u662f\u5728 static \u51fd\u6570\u5185\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u3002 this \u6307\u9488 # this \u6307\u9488\u662f\u4e00\u4e2a\u9690\u542b\u4e8e\u6bcf\u4e00\u4e2a\u975e\u9759\u6001\u6210\u5458\u51fd\u6570\u4e2d\u7684\u7279\u6b8a\u6307\u9488\u3002\u5b83\u6307\u5411\u8c03\u7528\u8be5\u6210\u5458\u51fd\u6570\u7684\u90a3\u4e2a\u5bf9\u8c61\u3002 \u5f53\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8c03\u7528\u6210\u5458\u51fd\u6570\u65f6\uff0c\u7f16\u8bd1\u7a0b\u5e8f\u5148\u5c06\u5bf9\u8c61\u7684\u5730\u5740\u8d4b\u7ed9 this \u6307\u9488\uff0c\u7136\u540e\u8c03\u7528\u6210\u5458\u51fd\u6570\uff0c\u6bcf\u6b21\u6210\u5458\u51fd\u6570\u5b58\u53d6\u6570\u636e\u6210\u5458\u65f6\uff0c\u90fd\u9690\u5f0f\u4f7f\u7528 this \u6307\u9488\u3002 \u5f53\u4e00\u4e2a\u6210\u5458\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u81ea\u52a8\u5411\u5b83\u4f20\u9012\u4e00\u4e2a\u9690\u542b\u7684\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u662f\u4e00\u4e2a\u6307\u5411\u8fd9\u4e2a\u6210\u5458\u51fd\u6570\u6240\u5728\u7684\u5bf9\u8c61\u7684\u6307\u9488\u3002 this \u6307\u9488\u88ab\u9690\u542b\u5730\u58f0\u660e\u4e3a: ClassName *const this \uff0c\u8fd9\u610f\u5473\u7740\u4e0d\u80fd\u7ed9 this \u6307\u9488\u8d4b\u503c\uff1b\u5728 ClassName \u7c7b\u7684 const \u6210\u5458\u51fd\u6570\u4e2d\uff0c this \u6307\u9488\u7684\u7c7b\u578b\u4e3a\uff1a const ClassName* const \uff0c\u8fd9\u8bf4\u660e\u4e0d\u80fd\u5bf9 this \u6307\u9488\u6240\u6307\u5411\u7684\u8fd9\u79cd\u5bf9\u8c61\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff08\u5373\u4e0d\u80fd\u5bf9\u8fd9\u79cd\u5bf9\u8c61\u7684\u6570\u636e\u6210\u5458\u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff09\uff1b this \u5e76\u4e0d\u662f\u4e00\u4e2a\u5e38\u89c4\u53d8\u91cf\uff0c\u800c\u662f\u4e2a\u53f3\u503c\uff0c\u6240\u4ee5\u4e0d\u80fd\u53d6\u5f97 this \u7684\u5730\u5740\uff08\u4e0d\u80fd &this \uff09\u3002 \u5728\u4ee5\u4e0b\u573a\u666f\u4e2d\uff0c\u7ecf\u5e38\u9700\u8981\u663e\u5f0f\u5f15\u7528 this \u6307\u9488\uff1a \u4e3a\u5b9e\u73b0\u5bf9\u8c61\u7684\u94fe\u5f0f\u5f15\u7528\uff1b \u4e3a\u907f\u514d\u5bf9\u540c\u4e00\u5bf9\u8c61\u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1b \u5728\u5b9e\u73b0\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\u65f6\uff0c\u5982 list \u3002 inline \u5185\u8054\u51fd\u6570 # \u7279\u5f81 # \u76f8\u5f53\u4e8e\u628a\u5185\u8054\u51fd\u6570\u91cc\u9762\u7684\u5185\u5bb9\u5199\u5728\u8c03\u7528\u5185\u8054\u51fd\u6570\u5904\uff1b \u76f8\u5f53\u4e8e\u4e0d\u7528\u6267\u884c\u8fdb\u5165\u51fd\u6570\u7684\u6b65\u9aa4\uff0c\u76f4\u63a5\u6267\u884c\u51fd\u6570\u4f53\uff1b \u76f8\u5f53\u4e8e\u5b8f\uff0c\u5374\u6bd4\u5b8f\u591a\u4e86\u7c7b\u578b\u68c0\u67e5\uff0c\u771f\u6b63\u5177\u6709\u51fd\u6570\u7279\u6027\uff1b \u7f16\u8bd1\u5668\u4e00\u822c\u4e0d\u5185\u8054\u5305\u542b\u5faa\u73af\u3001\u9012\u5f52\u3001switch \u7b49\u590d\u6742\u64cd\u4f5c\u7684\u5185\u8054\u51fd\u6570\uff1b \u5728\u7c7b\u58f0\u660e\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u9664\u4e86\u865a\u51fd\u6570\u7684\u5176\u4ed6\u51fd\u6570\u90fd\u4f1a\u81ea\u52a8\u9690\u5f0f\u5730\u5f53\u6210\u5185\u8054\u51fd\u6570\u3002 \u4f7f\u7528 # inline \u4f7f\u7528 // \u58f0\u660e1\uff08\u52a0 inline\uff0c\u5efa\u8bae\u4f7f\u7528\uff09 inline int functionName ( int first , int second ,...); // \u58f0\u660e2\uff08\u4e0d\u52a0 inline\uff09 int functionName ( int first , int second ,...); // \u5b9a\u4e49 inline int functionName ( int first , int second ,...) { /****/ }; // \u7c7b\u5185\u5b9a\u4e49\uff0c\u9690\u5f0f\u5185\u8054 class A { int doA () { return 0 ; } // \u9690\u5f0f\u5185\u8054 } // \u7c7b\u5916\u5b9a\u4e49\uff0c\u9700\u8981\u663e\u5f0f\u5185\u8054 class A { int doA (); } inline int A :: doA () { return 0 ; } // \u9700\u8981\u663e\u5f0f\u5185\u8054 \u7f16\u8bd1\u5668\u5bf9 inline \u51fd\u6570\u7684\u5904\u7406\u6b65\u9aa4 # \u5c06 inline \u51fd\u6570\u4f53\u590d\u5236\u5230 inline \u51fd\u6570\u8c03\u7528\u70b9\u5904\uff1b \u4e3a\u6240\u7528 inline \u51fd\u6570\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff1b \u5c06 inline \u51fd\u6570\u7684\u7684\u8f93\u5165\u53c2\u6570\u548c\u8fd4\u56de\u503c\u6620\u5c04\u5230\u8c03\u7528\u65b9\u6cd5\u7684\u5c40\u90e8\u53d8\u91cf\u7a7a\u95f4\u4e2d\uff1b \u5982\u679c inline \u51fd\u6570\u6709\u591a\u4e2a\u8fd4\u56de\u70b9\uff0c\u5c06\u5176\u8f6c\u53d8\u4e3a inline \u51fd\u6570\u4ee3\u7801\u5757\u672b\u5c3e\u7684\u5206\u652f\uff08\u4f7f\u7528 GOTO\uff09\u3002 \u4f18\u7f3a\u70b9 # \u4f18\u70b9 \u5185\u8054\u51fd\u6570\u540c\u5b8f\u51fd\u6570\u4e00\u6837\u5c06\u5728\u88ab\u8c03\u7528\u5904\u8fdb\u884c\u4ee3\u7801\u5c55\u5f00\uff0c\u7701\u53bb\u4e86\u53c2\u6570\u538b\u6808\u3001\u6808\u5e27\u5f00\u8f9f\u4e0e\u56de\u6536\uff0c\u7ed3\u679c\u8fd4\u56de\u7b49\uff0c\u4ece\u800c\u63d0\u9ad8\u7a0b\u5e8f\u8fd0\u884c\u901f\u5ea6\u3002 \u5185\u8054\u51fd\u6570\u76f8\u6bd4\u5b8f\u51fd\u6570\u6765\u8bf4\uff0c\u5728\u4ee3\u7801\u5c55\u5f00\u65f6\uff0c\u4f1a\u505a\u5b89\u5168\u68c0\u67e5\u6216\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\uff08\u540c\u666e\u901a\u51fd\u6570\uff09\uff0c\u800c\u5b8f\u5b9a\u4e49\u5219\u4e0d\u4f1a\u3002 \u5728\u7c7b\u4e2d\u58f0\u660e\u540c\u65f6\u5b9a\u4e49\u7684\u6210\u5458\u51fd\u6570\uff0c\u81ea\u52a8\u8f6c\u5316\u4e3a\u5185\u8054\u51fd\u6570\uff0c\u56e0\u6b64\u5185\u8054\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u5b8f\u5b9a\u4e49\u5219\u4e0d\u80fd\u3002 \u5185\u8054\u51fd\u6570\u5728\u8fd0\u884c\u65f6\u53ef\u8c03\u8bd5\uff0c\u800c\u5b8f\u5b9a\u4e49\u4e0d\u53ef\u4ee5\u3002 \u7f3a\u70b9 \u4ee3\u7801\u81a8\u80c0\u3002\u5185\u8054\u662f\u4ee5\u4ee3\u7801\u81a8\u80c0\uff08\u590d\u5236\uff09\u4e3a\u4ee3\u4ef7\uff0c\u6d88\u9664\u51fd\u6570\u8c03\u7528\u5e26\u6765\u7684\u5f00\u9500\u3002\u5982\u679c\u6267\u884c\u51fd\u6570\u4f53\u5185\u4ee3\u7801\u7684\u65f6\u95f4\uff0c\u76f8\u6bd4\u4e8e\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500\u8f83\u5927\uff0c\u90a3\u4e48\u6548\u7387\u7684\u6536\u83b7\u4f1a\u5f88\u5c11\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6bcf\u4e00\u5904\u5185\u8054\u51fd\u6570\u7684\u8c03\u7528\u90fd\u8981\u590d\u5236\u4ee3\u7801\uff0c\u5c06\u4f7f\u7a0b\u5e8f\u7684\u603b\u4ee3\u7801\u91cf\u589e\u5927\uff0c\u6d88\u8017\u66f4\u591a\u7684\u5185\u5b58\u7a7a\u95f4\u3002 inline \u51fd\u6570\u65e0\u6cd5\u968f\u7740\u51fd\u6570\u5e93\u5347\u7ea7\u800c\u5347\u7ea7\u3002inline\u51fd\u6570\u7684\u6539\u53d8\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\uff0c\u4e0d\u50cf non-inline \u53ef\u4ee5\u76f4\u63a5\u94fe\u63a5\u3002 \u662f\u5426\u5185\u8054\uff0c\u7a0b\u5e8f\u5458\u4e0d\u53ef\u63a7\u3002\u5185\u8054\u51fd\u6570\u53ea\u662f\u5bf9\u7f16\u8bd1\u5668\u7684\u5efa\u8bae\uff0c\u662f\u5426\u5bf9\u51fd\u6570\u5185\u8054\uff0c\u51b3\u5b9a\u6743\u5728\u4e8e\u7f16\u8bd1\u5668\u3002 \u865a\u51fd\u6570\uff08virtual\uff09\u53ef\u4ee5\u662f\u5185\u8054\u51fd\u6570\uff08inline\uff09\u5417\uff1f # Are \"inline virtual\" member functions ever actually \"inlined\"? \u865a\u51fd\u6570\u53ef\u4ee5\u662f\u5185\u8054\u51fd\u6570\uff0c\u5185\u8054\u662f\u53ef\u4ee5\u4fee\u9970\u865a\u51fd\u6570\u7684\uff0c\u4f46\u662f\u5f53\u865a\u51fd\u6570\u8868\u73b0\u591a\u6001\u6027\u7684\u65f6\u5019\u4e0d\u80fd\u5185\u8054\u3002 \u5185\u8054\u662f\u5728\u7f16\u8bd1\u671f\u5efa\u8bae\u7f16\u8bd1\u5668\u5185\u8054\uff0c\u800c\u865a\u51fd\u6570\u7684\u591a\u6001\u6027\u5728\u8fd0\u884c\u671f\uff0c\u7f16\u8bd1\u5668\u65e0\u6cd5\u77e5\u9053\u8fd0\u884c\u671f\u8c03\u7528\u54ea\u4e2a\u4ee3\u7801\uff0c\u56e0\u6b64\u865a\u51fd\u6570\u8868\u73b0\u4e3a\u591a\u6001\u6027\u65f6\uff08\u8fd0\u884c\u671f\uff09\u4e0d\u53ef\u4ee5\u5185\u8054\u3002 inline virtual \u552f\u4e00\u53ef\u4ee5\u5185\u8054\u7684\u65f6\u5019\u662f\uff1a\u7f16\u8bd1\u5668\u77e5\u9053\u6240\u8c03\u7528\u7684\u5bf9\u8c61\u662f\u54ea\u4e2a\u7c7b\uff08\u5982 Base::who() \uff09\uff0c\u8fd9\u53ea\u6709\u5728\u7f16\u8bd1\u5668\u5177\u6709\u5b9e\u9645\u5bf9\u8c61\u800c\u4e0d\u662f\u5bf9\u8c61\u7684\u6307\u9488\u6216\u5f15\u7528\u65f6\u624d\u4f1a\u53d1\u751f\u3002 \u865a\u51fd\u6570\u5185\u8054\u4f7f\u7528 #include <iostream> using namespace std ; class Base { public : inline virtual void who () { cout << \"I am Base \\n \" ; } virtual ~ Base () {} }; class Derived : public Base { public : inline void who () // \u4e0d\u5199inline\u65f6\u9690\u5f0f\u5185\u8054 { cout << \"I am Derived \\n \" ; } }; int main () { // \u6b64\u5904\u7684\u865a\u51fd\u6570 who()\uff0c\u662f\u901a\u8fc7\u7c7b\uff08Base\uff09\u7684\u5177\u4f53\u5bf9\u8c61\uff08b\uff09\u6765\u8c03\u7528\u7684\uff0c\u7f16\u8bd1\u671f\u95f4\u5c31\u80fd\u786e\u5b9a\u4e86\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u662f\u5185\u8054\u7684\uff0c\u4f46\u6700\u7ec8\u662f\u5426\u5185\u8054\u53d6\u51b3\u4e8e\u7f16\u8bd1\u5668\u3002 Base b ; b . who (); // \u6b64\u5904\u7684\u865a\u51fd\u6570\u662f\u901a\u8fc7\u6307\u9488\u8c03\u7528\u7684\uff0c\u5448\u73b0\u591a\u6001\u6027\uff0c\u9700\u8981\u5728\u8fd0\u884c\u65f6\u671f\u95f4\u624d\u80fd\u786e\u5b9a\uff0c\u6240\u4ee5\u4e0d\u80fd\u4e3a\u5185\u8054\u3002 Base * ptr = new Derived (); ptr -> who (); // \u56e0\u4e3aBase\u6709\u865a\u6790\u6784\u51fd\u6570\uff08virtual ~Base() {}\uff09\uff0c\u6240\u4ee5 delete \u65f6\uff0c\u4f1a\u5148\u8c03\u7528\u6d3e\u751f\u7c7b\uff08Derived\uff09\u6790\u6784\u51fd\u6570\uff0c\u518d\u8c03\u7528\u57fa\u7c7b\uff08Base\uff09\u6790\u6784\u51fd\u6570\uff0c\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f\u3002 delete ptr ; ptr = nullptr ; system ( \"pause\" ); return 0 ; } volatile # volatile int i = 10 ; volatile \u5173\u952e\u5b57\u662f\u4e00\u79cd\u7c7b\u578b\u4fee\u9970\u7b26\uff0c\u7528\u5b83\u58f0\u660e\u7684\u7c7b\u578b\u53d8\u91cf\u8868\u793a\u53ef\u4ee5\u88ab\u67d0\u4e9b\u7f16\u8bd1\u5668\u672a\u77e5\u7684\u56e0\u7d20\uff08\u64cd\u4f5c\u7cfb\u7edf\u3001\u786c\u4ef6\u3001\u5176\u5b83\u7ebf\u7a0b\u7b49\uff09\u66f4\u6539\u3002\u6240\u4ee5\u4f7f\u7528 volatile \u544a\u8bc9\u7f16\u8bd1\u5668\u4e0d\u5e94\u5bf9\u8fd9\u6837\u7684\u5bf9\u8c61\u8fdb\u884c\u4f18\u5316\u3002 volatile \u5173\u952e\u5b57\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u6bcf\u6b21\u8bbf\u95ee\u65f6\u90fd\u5fc5\u987b\u4ece\u5185\u5b58\u4e2d\u53d6\u51fa\u503c\uff08\u6ca1\u6709\u88ab volatile \u4fee\u9970\u7684\u53d8\u91cf\uff0c\u53ef\u80fd\u7531\u4e8e\u7f16\u8bd1\u5668\u7684\u4f18\u5316\uff0c\u4ece CPU \u5bc4\u5b58\u5668\u4e2d\u53d6\u503c\uff09 const \u53ef\u4ee5\u662f volatile \uff08\u5982\u53ea\u8bfb\u7684\u72b6\u6001\u5bc4\u5b58\u5668\uff09 \u6307\u9488\u53ef\u4ee5\u662f volatile assert() # \u65ad\u8a00\uff0c\u662f\u5b8f\uff0c\u800c\u975e\u51fd\u6570\u3002assert \u5b8f\u7684\u539f\u578b\u5b9a\u4e49\u5728 <assert.h> \uff08C\uff09\u3001 <cassert> \uff08C++\uff09\u4e2d\uff0c\u5176\u4f5c\u7528\u662f\u5982\u679c\u5b83\u7684\u6761\u4ef6\u8fd4\u56de\u9519\u8bef\uff0c\u5219\u7ec8\u6b62\u7a0b\u5e8f\u6267\u884c\u3002\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49 NDEBUG \u6765\u5173\u95ed assert\uff0c\u4f46\u662f\u9700\u8981\u5728\u6e90\u4ee3\u7801\u7684\u5f00\u5934\uff0c include <assert.h> \u4e4b\u524d\u3002 assert() \u4f7f\u7528 #define NDEBUG // \u52a0\u4e0a\u8fd9\u884c\uff0c\u5219 assert \u4e0d\u53ef\u7528 #include <assert.h> assert ( p != NULL ); // assert \u4e0d\u53ef\u7528 sizeof() # sizeof \u5bf9\u6570\u7ec4\uff0c\u5f97\u5230\u6574\u4e2a\u6570\u7ec4\u6240\u5360\u7a7a\u95f4\u5927\u5c0f\u3002 sizeof \u5bf9\u6307\u9488\uff0c\u5f97\u5230\u6307\u9488\u672c\u8eab\u6240\u5360\u7a7a\u95f4\u5927\u5c0f\u3002 #pragma pack(n) # \u8bbe\u5b9a\u7ed3\u6784\u4f53\u3001\u8054\u5408\u4ee5\u53ca\u7c7b\u6210\u5458\u53d8\u91cf\u4ee5 n \u5b57\u8282\u65b9\u5f0f\u5bf9\u9f50 pragma pack(n) \u4f7f\u7528 # #pragma pack(push) // \u4fdd\u5b58\u5bf9\u9f50\u72b6\u6001 #pragma pack(4) // \u8bbe\u5b9a\u4e3a 4 \u5b57\u8282\u5bf9\u9f50 struct test { char m1 ; double m4 ; int m3 ; }; #pragma pack(pop) // \u6062\u590d\u5bf9\u9f50\u72b6\u6001 \u4f4d\u57df # Bit mode : 2 ; // mode \u5360 2 \u4f4d \u7c7b\u53ef\u4ee5\u5c06\u5176\uff08\u975e\u9759\u6001\uff09\u6570\u636e\u6210\u5458\u5b9a\u4e49\u4e3a\u4f4d\u57df\uff08bit-field\uff09\uff0c\u5728\u4e00\u4e2a\u4f4d\u57df\u4e2d\u542b\u6709\u4e00\u5b9a\u6570\u91cf\u7684\u4e8c\u8fdb\u5236\u4f4d\u3002\u5f53\u4e00\u4e2a\u7a0b\u5e8f\u9700\u8981\u5411\u5176\u4ed6\u7a0b\u5e8f\u6216\u786c\u4ef6\u8bbe\u5907\u4f20\u9012\u4e8c\u8fdb\u5236\u6570\u636e\u65f6\uff0c\u901a\u5e38\u4f1a\u7528\u5230\u4f4d\u57df\u3002 \u4f4d\u57df\u5728\u5185\u5b58\u4e2d\u7684\u5e03\u5c40\u662f\u4e0e\u673a\u5668\u6709\u5173\u7684 \u4f4d\u57df\u7684\u7c7b\u578b\u5fc5\u987b\u662f\u6574\u578b\u6216\u679a\u4e3e\u7c7b\u578b\uff0c\u5e26\u7b26\u53f7\u7c7b\u578b\u4e2d\u7684\u4f4d\u57df\u7684\u884c\u4e3a\u5c06\u56e0\u5177\u4f53\u5b9e\u73b0\u800c\u5b9a \u53d6\u5730\u5740\u8fd0\u7b97\u7b26\uff08&\uff09\u4e0d\u80fd\u4f5c\u7528\u4e8e\u4f4d\u57df\uff0c\u4efb\u4f55\u6307\u9488\u90fd\u65e0\u6cd5\u6307\u5411\u7c7b\u7684\u4f4d\u57df extern \"C\" # \u88ab extern \u9650\u5b9a\u7684\u51fd\u6570\u6216\u53d8\u91cf\u662f extern \u7c7b\u578b\u7684 \u88ab extern \"C\" \u4fee\u9970\u7684\u53d8\u91cf\u548c\u51fd\u6570\u662f\u6309\u7167 C \u8bed\u8a00\u65b9\u5f0f\u7f16\u8bd1\u548c\u94fe\u63a5\u7684 extern \"C\" \u7684\u4f5c\u7528\u662f\u8ba9 C++ \u7f16\u8bd1\u5668\u5c06 extern \"C\" \u58f0\u660e\u7684\u4ee3\u7801\u5f53\u4f5c C \u8bed\u8a00\u4ee3\u7801\u5904\u7406\uff0c\u53ef\u4ee5\u907f\u514d C++ \u56e0\u7b26\u53f7\u4fee\u9970\u5bfc\u81f4\u4ee3\u7801\u4e0d\u80fd\u548cC\u8bed\u8a00\u5e93\u4e2d\u7684\u7b26\u53f7\u8fdb\u884c\u94fe\u63a5\u7684\u95ee\u9898\u3002 extern \"C\" \u4f7f\u7528 #ifdef __cplusplus extern \"C\" { #endif void * memset ( void * , int , size_t ); #ifdef __cplusplus } #endif struct \u548c typedef struct # C \u4e2d # // c typedef struct Student { int age ; } S ; \u7b49\u4ef7\u4e8e // c struct Student { int age ; }; typedef struct Student S ; \u6b64\u65f6 S \u7b49\u4ef7\u4e8e struct Student \uff0c\u4f46\u4e24\u4e2a\u6807\u8bc6\u7b26\u540d\u79f0\u7a7a\u95f4\u4e0d\u76f8\u540c\u3002 \u53e6\u5916\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u4e0e struct Student \u4e0d\u51b2\u7a81\u7684 void Student() {} \u3002 C++ \u4e2d # \u7531\u4e8e\u7f16\u8bd1\u5668\u5b9a\u4f4d\u7b26\u53f7\u7684\u89c4\u5219\uff08\u641c\u7d22\u89c4\u5219\uff09\u6539\u53d8\uff0c\u5bfc\u81f4\u4e0d\u540c\u4e8eC\u8bed\u8a00\u3002 \u4e00\u3001\u5982\u679c\u5728\u7c7b\u6807\u8bc6\u7b26\u7a7a\u95f4\u5b9a\u4e49\u4e86 struct Student {...}; \uff0c\u4f7f\u7528 Student me; \u65f6\uff0c\u7f16\u8bd1\u5668\u5c06\u641c\u7d22\u5168\u5c40\u6807\u8bc6\u7b26\u8868\uff0c Student \u672a\u627e\u5230\uff0c\u5219\u5728\u7c7b\u6807\u8bc6\u7b26\u5185\u641c\u7d22\u3002 \u5373\u8868\u73b0\u4e3a\u53ef\u4ee5\u4f7f\u7528 Student \u4e5f\u53ef\u4ee5\u4f7f\u7528 struct Student \uff0c\u5982\u4e0b\uff1a // cpp struct Student { int age ; }; void f ( Student me ); // \u6b63\u786e\uff0c\"struct\" \u5173\u952e\u5b57\u53ef\u7701\u7565 \u4e8c\u3001\u82e5\u5b9a\u4e49\u4e86\u4e0e Student \u540c\u540d\u51fd\u6570\u4e4b\u540e\uff0c\u5219 Student \u53ea\u4ee3\u8868\u51fd\u6570\uff0c\u4e0d\u4ee3\u8868\u7ed3\u6784\u4f53\uff0c\u5982\u4e0b\uff1a typedef struct Student { int age ; } S ; void Student () {} // \u6b63\u786e\uff0c\u5b9a\u4e49\u540e \"Student\" \u53ea\u4ee3\u8868\u6b64\u51fd\u6570 //void S() {} // \u9519\u8bef\uff0c\u7b26\u53f7 \"S\" \u5df2\u7ecf\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a \"struct Student\" \u7684\u522b\u540d int main () { Student (); struct Student me ; // \u6216\u8005 \"S me\"; return 0 ; } C++ \u4e2d struct \u548c class # \u603b\u7684\u6765\u8bf4\uff0cstruct \u66f4\u9002\u5408\u770b\u6210\u662f\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u5b9e\u73b0\u4f53\uff0cclass \u66f4\u9002\u5408\u770b\u6210\u662f\u4e00\u4e2a\u5bf9\u8c61\u7684\u5b9e\u73b0\u4f53\u3002 \u533a\u522b # \u6700\u672c\u8d28\u7684\u4e00\u4e2a\u533a\u522b\u5c31\u662f\u9ed8\u8ba4\u7684\u8bbf\u95ee\u63a7\u5236 \u9ed8\u8ba4\u7684\u7ee7\u627f\u8bbf\u95ee\u6743\u9650\u3002struct \u662f public \u7684\uff0cclass \u662f private \u7684\u3002 struct \u4f5c\u4e3a\u6570\u636e\u7ed3\u6784\u7684\u5b9e\u73b0\u4f53\uff0c\u5b83\u9ed8\u8ba4\u7684\u6570\u636e\u8bbf\u95ee\u63a7\u5236\u662f public \u7684\uff0c\u800c class \u4f5c\u4e3a\u5bf9\u8c61\u7684\u5b9e\u73b0\u4f53\uff0c\u5b83\u9ed8\u8ba4\u7684\u6210\u5458\u53d8\u91cf\u8bbf\u95ee\u63a7\u5236\u662f private \u7684\u3002 union \u8054\u5408 # \u8054\u5408\uff08union\uff09\u662f\u4e00\u79cd\u8282\u7701\u7a7a\u95f4\u7684\u7279\u6b8a\u7684\u7c7b\uff0c\u4e00\u4e2a union \u53ef\u4ee5\u6709\u591a\u4e2a\u6570\u636e\u6210\u5458\uff0c\u4f46\u662f\u5728\u4efb\u610f\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u6570\u636e\u6210\u5458\u53ef\u4ee5\u6709\u503c\u3002\u5f53\u67d0\u4e2a\u6210\u5458\u88ab\u8d4b\u503c\u540e\u5176\u4ed6\u6210\u5458\u53d8\u4e3a\u672a\u5b9a\u4e49\u72b6\u6001\u3002\u8054\u5408\u6709\u5982\u4e0b\u7279\u70b9\uff1a \u9ed8\u8ba4\u8bbf\u95ee\u63a7\u5236\u7b26\u4e3a public \u53ef\u4ee5\u542b\u6709\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570 \u4e0d\u80fd\u542b\u6709\u5f15\u7528\u7c7b\u578b\u7684\u6210\u5458 \u4e0d\u80fd\u7ee7\u627f\u81ea\u5176\u4ed6\u7c7b\uff0c\u4e0d\u80fd\u4f5c\u4e3a\u57fa\u7c7b \u4e0d\u80fd\u542b\u6709\u865a\u51fd\u6570 \u533f\u540d union \u5728\u5b9a\u4e49\u6240\u5728\u4f5c\u7528\u57df\u53ef\u76f4\u63a5\u8bbf\u95ee union \u6210\u5458 \u533f\u540d union \u4e0d\u80fd\u5305\u542b protected \u6210\u5458\u6216 private \u6210\u5458 \u5168\u5c40\u533f\u540d\u8054\u5408\u5fc5\u987b\u662f\u9759\u6001\uff08static\uff09\u7684 union \u4f7f\u7528 #include <iostream> union UnionTest { UnionTest () : i ( 10 ) {}; int i ; double d ; }; static union { int i ; double d ; }; int main () { UnionTest u ; union { int i ; double d ; }; std :: cout << u . i << std :: endl ; // \u8f93\u51fa UnionTest \u8054\u5408\u7684 10 :: i = 20 ; std :: cout << :: i << std :: endl ; // \u8f93\u51fa\u5168\u5c40\u9759\u6001\u533f\u540d\u8054\u5408\u7684 20 i = 30 ; std :: cout << i << std :: endl ; // \u8f93\u51fa\u5c40\u90e8\u533f\u540d\u8054\u5408\u7684 30 return 0 ; } C \u5b9e\u73b0 C++ \u7c7b # C \u5b9e\u73b0 C++ \u7684\u9762\u5411\u5bf9\u8c61\u7279\u6027\uff08\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001\uff09 \u5c01\u88c5\uff1a\u4f7f\u7528\u51fd\u6570\u6307\u9488\u628a\u5c5e\u6027\u4e0e\u65b9\u6cd5\u5c01\u88c5\u5230\u7ed3\u6784\u4f53\u4e2d \u7ee7\u627f\uff1a\u7ed3\u6784\u4f53\u5d4c\u5957 \u591a\u6001\uff1a\u7236\u7c7b\u4e0e\u5b50\u7c7b\u65b9\u6cd5\u7684\u51fd\u6570\u6307\u9488\u4e0d\u540c Can you write object-oriented code in C? [closed] explicit\uff08\u663e\u5f0f\uff09\u5173\u952e\u5b57 # explicit \u4fee\u9970\u6784\u9020\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u9632\u6b62\u9690\u5f0f\u8f6c\u6362\u548c\u590d\u5236\u521d\u59cb\u5316 explicit \u4fee\u9970\u8f6c\u6362\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u9632\u6b62\u9690\u5f0f\u8f6c\u6362\uff0c\u4f46 \u6309\u8bed\u5883\u8f6c\u6362 \u9664\u5916 explicit \u4f7f\u7528 struct A { A ( int ) { } operator bool () const { return true ; } }; struct B { explicit B ( int ) {} explicit operator bool () const { return true ; } }; void doA ( A a ) {} void doB ( B b ) {} int main () { A a1 ( 1 ); // OK\uff1a\u76f4\u63a5\u521d\u59cb\u5316 A a2 = 1 ; // OK\uff1a\u590d\u5236\u521d\u59cb\u5316 A a3 { 1 }; // OK\uff1a\u76f4\u63a5\u5217\u8868\u521d\u59cb\u5316 A a4 = { 1 }; // OK\uff1a\u590d\u5236\u5217\u8868\u521d\u59cb\u5316 A a5 = ( A ) 1 ; // OK\uff1a\u5141\u8bb8 static_cast \u7684\u663e\u5f0f\u8f6c\u6362 doA ( 1 ); // OK\uff1a\u5141\u8bb8\u4ece int \u5230 A \u7684\u9690\u5f0f\u8f6c\u6362 if ( a1 ); // OK\uff1a\u4f7f\u7528\u8f6c\u6362\u51fd\u6570 A::operator bool() \u7684\u4ece A \u5230 bool \u7684\u9690\u5f0f\u8f6c\u6362 bool a6 ( a1 ); // OK\uff1a\u4f7f\u7528\u8f6c\u6362\u51fd\u6570 A::operator bool() \u7684\u4ece A \u5230 bool \u7684\u9690\u5f0f\u8f6c\u6362 bool a7 = a1 ; // OK\uff1a\u4f7f\u7528\u8f6c\u6362\u51fd\u6570 A::operator bool() \u7684\u4ece A \u5230 bool \u7684\u9690\u5f0f\u8f6c\u6362 bool a8 = static_cast < bool > ( a1 ); // OK \uff1astatic_cast \u8fdb\u884c\u76f4\u63a5\u521d\u59cb\u5316 B b1 ( 1 ); // OK\uff1a\u76f4\u63a5\u521d\u59cb\u5316 B b2 = 1 ; // \u9519\u8bef\uff1a\u88ab explicit \u4fee\u9970\u6784\u9020\u51fd\u6570\u7684\u5bf9\u8c61\u4e0d\u53ef\u4ee5\u590d\u5236\u521d\u59cb\u5316 B b3 { 1 }; // OK\uff1a\u76f4\u63a5\u5217\u8868\u521d\u59cb\u5316 B b4 = { 1 }; // \u9519\u8bef\uff1a\u88ab explicit \u4fee\u9970\u6784\u9020\u51fd\u6570\u7684\u5bf9\u8c61\u4e0d\u53ef\u4ee5\u590d\u5236\u5217\u8868\u521d\u59cb\u5316 B b5 = ( B ) 1 ; // OK\uff1a\u5141\u8bb8 static_cast \u7684\u663e\u5f0f\u8f6c\u6362 doB ( 1 ); // \u9519\u8bef\uff1a\u88ab explicit \u4fee\u9970\u6784\u9020\u51fd\u6570\u7684\u5bf9\u8c61\u4e0d\u53ef\u4ee5\u4ece int \u5230 B \u7684\u9690\u5f0f\u8f6c\u6362 if ( b1 ); // OK\uff1a\u88ab explicit \u4fee\u9970\u8f6c\u6362\u51fd\u6570 B::operator bool() \u7684\u5bf9\u8c61\u53ef\u4ee5\u4ece B \u5230 bool \u7684\u6309\u8bed\u5883\u8f6c\u6362 bool b6 ( b1 ); // OK\uff1a\u88ab explicit \u4fee\u9970\u8f6c\u6362\u51fd\u6570 B::operator bool() \u7684\u5bf9\u8c61\u53ef\u4ee5\u4ece B \u5230 bool \u7684\u6309\u8bed\u5883\u8f6c\u6362 bool b7 = b1 ; // \u9519\u8bef\uff1a\u88ab explicit \u4fee\u9970\u8f6c\u6362\u51fd\u6570 B::operator bool() \u7684\u5bf9\u8c61\u4e0d\u53ef\u4ee5\u9690\u5f0f\u8f6c\u6362 bool b8 = static_cast < bool > ( b1 ); // OK\uff1astatic_cast \u8fdb\u884c\u76f4\u63a5\u521d\u59cb\u5316 return 0 ; } friend \u53cb\u5143\u7c7b\u548c\u53cb\u5143\u51fd\u6570 # \u80fd\u8bbf\u95ee\u79c1\u6709\u6210\u5458 \u7834\u574f\u5c01\u88c5\u6027 \u53cb\u5143\u5173\u7cfb\u4e0d\u53ef\u4f20\u9012 \u53cb\u5143\u5173\u7cfb\u7684\u5355\u5411\u6027 \u53cb\u5143\u58f0\u660e\u7684\u5f62\u5f0f\u53ca\u6570\u91cf\u4e0d\u53d7\u9650\u5236 using # using \u58f0\u660e # \u4e00\u6761 using \u58f0\u660e \u8bed\u53e5\u4e00\u6b21\u53ea\u5f15\u5165\u547d\u540d\u7a7a\u95f4\u7684\u4e00\u4e2a\u6210\u5458\u3002\u5b83\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u6e05\u695a\u77e5\u9053\u7a0b\u5e8f\u4e2d\u6240\u5f15\u7528\u7684\u5230\u5e95\u662f\u54ea\u4e2a\u540d\u5b57\u3002\u5982\uff1a using namespace_name :: name ; \u6784\u9020\u51fd\u6570\u7684 using \u58f0\u660e # \u5728 C++11 \u4e2d\uff0c\u6d3e\u751f\u7c7b\u80fd\u591f\u91cd\u7528\u5176\u76f4\u63a5\u57fa\u7c7b\u5b9a\u4e49\u7684\u6784\u9020\u51fd\u6570\u3002 class Derived : Base { public : using Base :: Base ; /* ... */ }; \u5982\u4e0a using \u58f0\u660e\uff0c\u5bf9\u4e8e\u57fa\u7c7b\u7684\u6bcf\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u90fd\u751f\u6210\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94\uff08\u5f62\u53c2\u5217\u8868\u5b8c\u5168\u76f8\u540c\uff09\u7684\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u3002\u751f\u6210\u5982\u4e0b\u7c7b\u578b\u6784\u9020\u51fd\u6570\uff1a Derived ( parms ) : Base ( args ) { } using \u6307\u793a # using \u6307\u793a \u4f7f\u5f97\u67d0\u4e2a\u7279\u5b9a\u547d\u540d\u7a7a\u95f4\u4e2d\u6240\u6709\u540d\u5b57\u90fd\u53ef\u89c1\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u65e0\u9700\u518d\u4e3a\u5b83\u4eec\u6dfb\u52a0\u4efb\u4f55\u524d\u7f00\u9650\u5b9a\u7b26\u4e86\u3002\u5982\uff1a using namespace_name name ; \u5c3d\u91cf\u5c11\u4f7f\u7528 using \u6307\u793a \u6c61\u67d3\u547d\u540d\u7a7a\u95f4 # \u4e00\u822c\u8bf4\u6765\uff0c\u4f7f\u7528 using \u547d\u4ee4\u6bd4\u4f7f\u7528 using \u7f16\u8bd1\u547d\u4ee4\u66f4\u5b89\u5168\uff0c\u8fd9\u662f\u7531\u4e8e\u5b83**\u53ea\u5bfc\u5165\u4e86\u6307\u5b9a\u7684\u540d\u79f0**\u3002\u5982\u679c\u8be5\u540d\u79f0\u4e0e\u5c40\u90e8\u540d\u79f0\u53d1\u751f\u51b2\u7a81\uff0c\u7f16\u8bd1\u5668\u5c06**\u53d1\u51fa\u6307\u793a**\u3002using\u7f16\u8bd1\u547d\u4ee4\u5bfc\u5165\u6240\u6709\u7684\u540d\u79f0\uff0c\u5305\u62ec\u53ef\u80fd\u5e76\u4e0d\u9700\u8981\u7684\u540d\u79f0\u3002\u5982\u679c\u4e0e\u5c40\u90e8\u540d\u79f0\u53d1\u751f\u51b2\u7a81\uff0c\u5219**\u5c40\u90e8\u540d\u79f0\u5c06\u8986\u76d6\u540d\u79f0\u7a7a\u95f4\u7248\u672c**\uff0c\u800c\u7f16\u8bd1\u5668**\u5e76\u4e0d\u4f1a\u53d1\u51fa\u8b66\u544a**\u3002\u53e6\u5916\uff0c\u540d\u79f0\u7a7a\u95f4\u7684\u5f00\u653e\u6027\u610f\u5473\u7740\u540d\u79f0\u7a7a\u95f4\u7684\u540d\u79f0\u53ef\u80fd\u5206\u6563\u5728\u591a\u4e2a\u5730\u65b9\uff0c\u8fd9\u4f7f\u5f97\u96be\u4ee5\u51c6\u786e\u77e5\u9053\u6dfb\u52a0\u4e86\u54ea\u4e9b\u540d\u79f0\u3002 using \u4f7f\u7528 \u5c3d\u91cf\u5c11\u4f7f\u7528 using \u6307\u793a using namespace std ; \u5e94\u8be5\u591a\u4f7f\u7528 using \u58f0\u660e int x ; std :: cin >> x ; std :: cout << x << std :: endl ; \u6216\u8005 using std :: cin ; using std :: cout ; using std :: endl ; int x ; cin >> x ; cout << x << endl ; :: \u8303\u56f4\u89e3\u6790\u8fd0\u7b97\u7b26 # \u5206\u7c7b # \u5168\u5c40\u4f5c\u7528\u57df\u7b26\uff08 ::name \uff09\uff1a\u7528\u4e8e\u7c7b\u578b\u540d\u79f0\uff08\u7c7b\u3001\u7c7b\u6210\u5458\u3001\u6210\u5458\u51fd\u6570\u3001\u53d8\u91cf\u7b49\uff09\u524d\uff0c\u8868\u793a\u4f5c\u7528\u57df\u4e3a\u5168\u5c40\u547d\u540d\u7a7a\u95f4 \u7c7b\u4f5c\u7528\u57df\u7b26\uff08 class::name \uff09\uff1a\u7528\u4e8e\u8868\u793a\u6307\u5b9a\u7c7b\u578b\u7684\u4f5c\u7528\u57df\u8303\u56f4\u662f\u5177\u4f53\u67d0\u4e2a\u7c7b\u7684 \u547d\u540d\u7a7a\u95f4\u4f5c\u7528\u57df\u7b26\uff08 namespace::name \uff09:\u7528\u4e8e\u8868\u793a\u6307\u5b9a\u7c7b\u578b\u7684\u4f5c\u7528\u57df\u8303\u56f4\u662f\u5177\u4f53\u67d0\u4e2a\u547d\u540d\u7a7a\u95f4\u7684 :: \u4f7f\u7528 int count = 11 ; // \u5168\u5c40\uff08::\uff09\u7684 count class A { public : static int count ; // \u7c7b A \u7684 count\uff08A::count\uff09 }; int A :: count = 21 ; void fun () { int count = 31 ; // \u521d\u59cb\u5316\u5c40\u90e8\u7684 count \u4e3a 31 count = 32 ; // \u8bbe\u7f6e\u5c40\u90e8\u7684 count \u7684\u503c\u4e3a 32 } int main () { :: count = 12 ; // \u6d4b\u8bd5 1\uff1a\u8bbe\u7f6e\u5168\u5c40\u7684 count \u7684\u503c\u4e3a 12 A :: count = 22 ; // \u6d4b\u8bd5 2\uff1a\u8bbe\u7f6e\u7c7b A \u7684 count \u4e3a 22 fun (); // \u6d4b\u8bd5 3 return 0 ; } enum \u679a\u4e3e\u7c7b\u578b # \u9650\u5b9a\u4f5c\u7528\u57df\u7684\u679a\u4e3e\u7c7b\u578b # enum class open_modes { input , output , append }; \u4e0d\u9650\u5b9a\u4f5c\u7528\u57df\u7684\u679a\u4e3e\u7c7b\u578b # enum color { red , yellow , green }; enum { floatPrec = 6 , doublePrec = 10 }; decltype # decltype \u5173\u952e\u5b57\u7528\u4e8e\u68c0\u67e5\u5b9e\u4f53\u7684\u58f0\u660e\u7c7b\u578b\u6216\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u53ca\u503c\u5206\u7c7b\u3002\u8bed\u6cd5\uff1a decltype ( expression ) decltype \u4f7f\u7528 // \u5c3e\u7f6e\u8fd4\u56de\u5141\u8bb8\u6211\u4eec\u5728\u53c2\u6570\u5217\u8868\u4e4b\u540e\u58f0\u660e\u8fd4\u56de\u7c7b\u578b template < typename It > auto fcn ( It beg , It end ) -> decltype ( * beg ) { // \u5904\u7406\u5e8f\u5217 return * beg ; // \u8fd4\u56de\u5e8f\u5217\u4e2d\u4e00\u4e2a\u5143\u7d20\u7684\u5f15\u7528 } // \u4e3a\u4e86\u4f7f\u7528\u6a21\u677f\u53c2\u6570\u6210\u5458\uff0c\u5fc5\u987b\u7528 typename template < typename It > auto fcn2 ( It beg , It end ) -> typename remove_reference < decltype ( * beg ) >:: type { // \u5904\u7406\u5e8f\u5217 return * beg ; // \u8fd4\u56de\u5e8f\u5217\u4e2d\u4e00\u4e2a\u5143\u7d20\u7684\u62f7\u8d1d } \u5f15\u7528 # \u5de6\u503c\u5f15\u7528 # \u5e38\u89c4\u5f15\u7528\uff0c\u4e00\u822c\u8868\u793a\u5bf9\u8c61\u7684\u8eab\u4efd\u3002 \u53f3\u503c\u5f15\u7528 # \u53f3\u503c\u5f15\u7528\u5c31\u662f\u5fc5\u987b\u7ed1\u5b9a\u5230\u53f3\u503c\uff08\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\u3001\u5c06\u8981\u9500\u6bc1\u7684\u5bf9\u8c61\uff09\u7684\u5f15\u7528\uff0c\u4e00\u822c\u8868\u793a\u5bf9\u8c61\u7684\u503c\u3002 \u53f3\u503c\u5f15\u7528\u53ef\u5b9e\u73b0\u8f6c\u79fb\u8bed\u4e49\uff08Move Sementics\uff09\u548c\u7cbe\u786e\u4f20\u9012\uff08Perfect Forwarding\uff09\uff0c\u5b83\u7684\u4e3b\u8981\u76ee\u7684\u6709\u4e24\u4e2a\u65b9\u9762\uff1a \u6d88\u9664\u4e24\u4e2a\u5bf9\u8c61\u4ea4\u4e92\u65f6\u4e0d\u5fc5\u8981\u7684\u5bf9\u8c61\u62f7\u8d1d\uff0c\u8282\u7701\u8fd0\u7b97\u5b58\u50a8\u8d44\u6e90\uff0c\u63d0\u9ad8\u6548\u7387\u3002 \u80fd\u591f\u66f4\u7b80\u6d01\u660e\u786e\u5730\u5b9a\u4e49\u6cdb\u578b\u51fd\u6570\u3002 \u5f15\u7528\u6298\u53e0 # X& & \u3001 X& && \u3001 X&& & \u53ef\u6298\u53e0\u6210 X& X&& && \u53ef\u6298\u53e0\u6210 X&& \u5b8f # \u5b8f\u5b9a\u4e49\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u4e8e\u51fd\u6570\u7684\u529f\u80fd\uff0c\u4f46\u662f\u5b83\u7ec8\u5f52\u4e0d\u662f\u51fd\u6570\uff0c\u800c\u5b8f\u5b9a\u4e49\u4e2d\u62ec\u5f27\u4e2d\u7684\u201c\u53c2\u6570\u201d\u4e5f\u4e0d\u662f\u771f\u7684\u53c2\u6570\uff0c\u5728\u5b8f\u5c55\u5f00\u7684\u65f6\u5019\u5bf9 \u201c\u53c2\u6570\u201d \u8fdb\u884c\u7684\u662f\u4e00\u5bf9\u4e00\u7684\u66ff\u6362\u3002 \u6210\u5458\u521d\u59cb\u5316\u5217\u8868 # \u597d\u5904 \u66f4\u9ad8\u6548\uff1a\u5c11\u4e86\u4e00\u6b21\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u7684\u8fc7\u7a0b\u3002 \u6709\u4e9b\u573a\u5408\u5fc5\u987b\u8981\u7528\u521d\u59cb\u5316\u5217\u8868\uff1a \u5e38\u91cf\u6210\u5458\uff0c\u56e0\u4e3a\u5e38\u91cf\u53ea\u80fd\u521d\u59cb\u5316\u4e0d\u80fd\u8d4b\u503c\uff0c\u6240\u4ee5\u5fc5\u987b\u653e\u5728\u521d\u59cb\u5316\u5217\u8868\u91cc\u9762 \u5f15\u7528\u7c7b\u578b\uff0c\u5f15\u7528\u5fc5\u987b\u5728\u5b9a\u4e49\u7684\u65f6\u5019\u521d\u59cb\u5316\uff0c\u5e76\u4e14\u4e0d\u80fd\u91cd\u65b0\u8d4b\u503c\uff0c\u6240\u4ee5\u4e5f\u8981\u5199\u5728\u521d\u59cb\u5316\u5217\u8868\u91cc\u9762 \u6ca1\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u7684\u7c7b\u7c7b\u578b\uff0c\u56e0\u4e3a\u4f7f\u7528\u521d\u59cb\u5316\u5217\u8868\u53ef\u4ee5\u4e0d\u5fc5\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u6765\u521d\u59cb\u5316 initializer_list \u5217\u8868\u521d\u59cb\u5316 # \u7528\u82b1\u62ec\u53f7\u521d\u59cb\u5316\u5668\u5217\u8868\u521d\u59cb\u5316\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5176\u4e2d\u5bf9\u5e94\u6784\u9020\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a std::initializer_list \u53c2\u6570. initializer_list \u4f7f\u7528 #include <iostream> #include <vector> #include <initializer_list> template < class T > struct S { std :: vector < T > v ; S ( std :: initializer_list < T > l ) : v ( l ) { std :: cout << \"constructed with a \" << l . size () << \"-element list \\n \" ; } void append ( std :: initializer_list < T > l ) { v . insert ( v . end (), l . begin (), l . end ()); } std :: pair < const T * , std :: size_t > c_arr () const { return { & v [ 0 ], v . size ()}; // \u5728 return \u8bed\u53e5\u4e2d\u590d\u5236\u5217\u8868\u521d\u59cb\u5316 // \u8fd9\u4e0d\u4f7f\u7528 std::initializer_list } }; template < typename T > void templated_fn ( T ) {} int main () { S < int > s = { 1 , 2 , 3 , 4 , 5 }; // \u590d\u5236\u521d\u59cb\u5316 s . append ({ 6 , 7 , 8 }); // \u51fd\u6570\u8c03\u7528\u4e2d\u7684\u5217\u8868\u521d\u59cb\u5316 std :: cout << \"The vector size is now \" << s . c_arr (). second << \" ints: \\n \" ; for ( auto n : s . v ) std :: cout << n << ' ' ; std :: cout << '\\n' ; std :: cout << \"Range-for over brace-init-list: \\n \" ; for ( int x : { -1 , -2 , -3 }) // auto \u7684\u89c4\u5219\u4ee4\u6b64\u5e26\u8303\u56f4 for \u5de5\u4f5c std :: cout << x << ' ' ; std :: cout << '\\n' ; auto al = { 10 , 11 , 12 }; // auto \u7684\u7279\u6b8a\u89c4\u5219 std :: cout << \"The list bound to auto has size() = \" << al . size () << '\\n' ; // templated_fn({1, 2, 3}); // \u7f16\u8bd1\u9519\u8bef\uff01\u201c {1, 2, 3} \u201d\u4e0d\u662f\u8868\u8fbe\u5f0f\uff0c // \u5b83\u65e0\u7c7b\u578b\uff0c\u6545 T \u65e0\u6cd5\u63a8\u5bfc templated_fn < std :: initializer_list < int >> ({ 1 , 2 , 3 }); // OK templated_fn < std :: vector < int >> ({ 1 , 2 , 3 }); // \u4e5f OK } \u9762\u5411\u5bf9\u8c61 # \u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\uff08Object-oriented programming\uff0cOOP\uff09\u662f\u79cd\u5177\u6709\u5bf9\u8c61\u6982\u5ff5\u7684\u7a0b\u5e8f\u7f16\u7a0b\u5178\u8303\uff0c\u540c\u65f6\u4e5f\u662f\u4e00\u79cd\u7a0b\u5e8f\u5f00\u53d1\u7684\u62bd\u8c61\u65b9\u9488\u3002 \u9762\u5411\u5bf9\u8c61\u4e09\u5927\u7279\u5f81 \u2014\u2014 \u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001 \u5c01\u88c5 # \u628a\u5ba2\u89c2\u4e8b\u7269\u5c01\u88c5\u6210\u62bd\u8c61\u7684\u7c7b\uff0c\u5e76\u4e14\u7c7b\u53ef\u4ee5\u628a\u81ea\u5df1\u7684\u6570\u636e\u548c\u65b9\u6cd5\u53ea\u8ba9\u53ef\u4fe1\u7684\u7c7b\u6216\u8005\u5bf9\u8c61\u64cd\u4f5c\uff0c\u5bf9\u4e0d\u53ef\u4fe1\u7684\u8fdb\u884c\u4fe1\u606f\u9690\u85cf\u3002\u5173\u952e\u5b57\uff1apublic, protected, private\u3002\u4e0d\u5199\u9ed8\u8ba4\u4e3a private\u3002 public \u6210\u5458\uff1a\u53ef\u4ee5\u88ab\u4efb\u610f\u5b9e\u4f53\u8bbf\u95ee protected \u6210\u5458\uff1a\u53ea\u5141\u8bb8\u88ab\u5b50\u7c7b\u53ca\u672c\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee private \u6210\u5458\uff1a\u53ea\u5141\u8bb8\u88ab\u672c\u7c7b\u7684\u6210\u5458\u51fd\u6570\u3001\u53cb\u5143\u7c7b\u6216\u53cb\u5143\u51fd\u6570\u8bbf\u95ee \u7ee7\u627f # \u57fa\u7c7b\uff08\u7236\u7c7b\uff09\u2014\u2014> \u6d3e\u751f\u7c7b\uff08\u5b50\u7c7b\uff09 \u591a\u6001 # \u591a\u6001\uff0c\u5373\u591a\u79cd\u72b6\u6001\uff08\u5f62\u6001\uff09\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u591a\u6001\u5b9a\u4e49\u4e3a\u6d88\u606f\u4ee5\u591a\u79cd\u5f62\u5f0f\u663e\u793a\u7684\u80fd\u529b\u3002 \u591a\u6001\u662f\u4ee5\u5c01\u88c5\u548c\u7ee7\u627f\u4e3a\u57fa\u7840\u7684\u3002 C++ \u591a\u6001\u5206\u7c7b\u53ca\u5b9e\u73b0\uff1a \u91cd\u8f7d\u591a\u6001\uff08Ad-hoc Polymorphism\uff0c\u7f16\u8bd1\u671f\uff09\uff1a\u51fd\u6570\u91cd\u8f7d\u3001\u8fd0\u7b97\u7b26\u91cd\u8f7d \u5b50\u7c7b\u578b\u591a\u6001\uff08Subtype Polymorphism\uff0c\u8fd0\u884c\u671f\uff09\uff1a\u865a\u51fd\u6570 \u53c2\u6570\u591a\u6001\u6027\uff08Parametric Polymorphism\uff0c\u7f16\u8bd1\u671f\uff09\uff1a\u7c7b\u6a21\u677f\u3001\u51fd\u6570\u6a21\u677f \u5f3a\u5236\u591a\u6001\uff08Coercion Polymorphism\uff0c\u7f16\u8bd1\u671f/\u8fd0\u884c\u671f\uff09\uff1a\u57fa\u672c\u7c7b\u578b\u8f6c\u6362\u3001\u81ea\u5b9a\u4e49\u7c7b\u578b\u8f6c\u6362 The Four Polymorphisms in C++ \u9759\u6001\u591a\u6001\uff08\u7f16\u8bd1\u671f/\u65e9\u7ed1\u5b9a\uff09 # \u51fd\u6570\u91cd\u8f7d class A { public : void do ( int a ); void do ( int a , int b ); }; \u52a8\u6001\u591a\u6001\uff08\u8fd0\u884c\u671f\u671f/\u665a\u7ed1\u5b9a\uff09 # \u865a\u51fd\u6570\uff1a\u7528 virtual \u4fee\u9970\u6210\u5458\u51fd\u6570\uff0c\u4f7f\u5176\u6210\u4e3a\u865a\u51fd\u6570 \u52a8\u6001\u7ed1\u5b9a\uff1a\u5f53\u4f7f\u7528\u57fa\u7c7b\u7684\u5f15\u7528\u6216\u6307\u9488\u8c03\u7528\u4e00\u4e2a\u865a\u51fd\u6570\u65f6\u5c06\u53d1\u751f\u52a8\u6001\u7ed1\u5b9a \u6ce8\u610f\uff1a \u53ef\u4ee5\u5c06\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u8d4b\u503c\u7ed9\u57fa\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\uff0c\u53cd\u4e4b\u4e0d\u53ef \u666e\u901a\u51fd\u6570\uff08\u975e\u7c7b\u6210\u5458\u51fd\u6570\uff09\u4e0d\u80fd\u662f\u865a\u51fd\u6570 \u9759\u6001\u51fd\u6570\uff08static\uff09\u4e0d\u80fd\u662f\u865a\u51fd\u6570 \u6784\u9020\u51fd\u6570\u4e0d\u80fd\u662f\u865a\u51fd\u6570\uff08\u56e0\u4e3a\u5728\u8c03\u7528\u6784\u9020\u51fd\u6570\u65f6\uff0c\u865a\u8868\u6307\u9488\u5e76\u6ca1\u6709\u5728\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\uff0c\u5fc5\u987b\u8981\u6784\u9020\u51fd\u6570\u8c03\u7528\u5b8c\u6210\u540e\u624d\u4f1a\u5f62\u6210\u865a\u8868\u6307\u9488\uff09 \u5185\u8054\u51fd\u6570\u4e0d\u80fd\u662f\u8868\u73b0\u591a\u6001\u6027\u65f6\u7684\u865a\u51fd\u6570\uff0c\u89e3\u91ca\u89c1\uff1a \u865a\u51fd\u6570\uff08virtual\uff09\u53ef\u4ee5\u662f\u5185\u8054\u51fd\u6570\uff08inline\uff09\u5417\uff1f \u52a8\u6001\u591a\u6001\u4f7f\u7528 class Shape // \u5f62\u72b6\u7c7b { public : virtual double calcArea () { ... } virtual ~ Shape (); }; class Circle : public Shape // \u5706\u5f62\u7c7b { public : virtual double calcArea (); ... }; class Rect : public Shape // \u77e9\u5f62\u7c7b { public : virtual double calcArea (); ... }; int main () { Shape * shape1 = new Circle ( 4.0 ); Shape * shape2 = new Rect ( 5.0 , 6.0 ); shape1 -> calcArea (); // \u8c03\u7528\u5706\u5f62\u7c7b\u91cc\u9762\u7684\u65b9\u6cd5 shape2 -> calcArea (); // \u8c03\u7528\u77e9\u5f62\u7c7b\u91cc\u9762\u7684\u65b9\u6cd5 delete shape1 ; shape1 = nullptr ; delete shape2 ; shape2 = nullptr ; return 0 ; } \u865a\u6790\u6784\u51fd\u6570 # \u865a\u6790\u6784\u51fd\u6570\u662f\u4e3a\u4e86\u89e3\u51b3\u57fa\u7c7b\u7684\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u5e76\u7528\u57fa\u7c7b\u7684\u6307\u9488\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u3002 \u865a\u6790\u6784\u51fd\u6570\u4f7f\u7528 class Shape { public : Shape (); // \u6784\u9020\u51fd\u6570\u4e0d\u80fd\u662f\u865a\u51fd\u6570 virtual double calcArea (); virtual ~ Shape (); // \u865a\u6790\u6784\u51fd\u6570 }; class Circle : public Shape // \u5706\u5f62\u7c7b { public : virtual double calcArea (); ... }; int main () { Shape * shape1 = new Circle ( 4.0 ); shape1 -> calcArea (); delete shape1 ; // \u56e0\u4e3aShape\u6709\u865a\u6790\u6784\u51fd\u6570\uff0c\u6240\u4ee5delete\u91ca\u653e\u5185\u5b58\u65f6\uff0c\u5148\u8c03\u7528\u5b50\u7c7b\u6790\u6784\u51fd\u6570\uff0c\u518d\u8c03\u7528\u57fa\u7c7b\u6790\u6784\u51fd\u6570\uff0c\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f\u3002 shape1 = NULL ; return 0 \uff1b } \u7eaf\u865a\u51fd\u6570 # \u7eaf\u865a\u51fd\u6570\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u865a\u51fd\u6570\uff0c\u5728\u57fa\u7c7b\u4e2d\u4e0d\u80fd\u5bf9\u865a\u51fd\u6570\u7ed9\u51fa\u6709\u610f\u4e49\u7684\u5b9e\u73b0\uff0c\u800c\u628a\u5b83\u58f0\u660e\u4e3a\u7eaf\u865a\u51fd\u6570\uff0c\u5b83\u7684\u5b9e\u73b0\u7559\u7ed9\u8be5\u57fa\u7c7b\u7684\u6d3e\u751f\u7c7b\u53bb\u505a\u3002 virtual int A () = 0 ; \u865a\u51fd\u6570\u3001\u7eaf\u865a\u51fd\u6570 # \u7c7b\u91cc\u5982\u679c\u58f0\u660e\u4e86\u865a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u662f\u5b9e\u73b0\u7684\uff0c\u54ea\u6015\u662f\u7a7a\u5b9e\u73b0\uff0c\u5b83\u7684\u4f5c\u7528\u5c31\u662f\u4e3a\u4e86\u80fd\u8ba9\u8fd9\u4e2a\u51fd\u6570\u5728\u5b83\u7684\u5b50\u7c7b\u91cc\u9762\u53ef\u4ee5\u88ab\u8986\u76d6\uff08override\uff09\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u7f16\u8bd1\u5668\u5c31\u53ef\u4ee5\u4f7f\u7528\u540e\u671f\u7ed1\u5b9a\u6765\u8fbe\u5230\u591a\u6001\u4e86\u3002\u7eaf\u865a\u51fd\u6570\u53ea\u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u662f\u4e2a\u51fd\u6570\u7684\u58f0\u660e\u800c\u5df2\uff0c\u5b83\u8981\u7559\u5230\u5b50\u7c7b\u91cc\u53bb\u5b9e\u73b0\u3002 \u865a\u51fd\u6570\u5728\u5b50\u7c7b\u91cc\u9762\u53ef\u4ee5\u4e0d\u91cd\u5199\uff1b\u4f46\u7eaf\u865a\u51fd\u6570\u5fc5\u987b\u5728\u5b50\u7c7b\u5b9e\u73b0\u624d\u53ef\u4ee5\u5b9e\u4f8b\u5316\u5b50\u7c7b\u3002 \u865a\u51fd\u6570\u7684\u7c7b\u7528\u4e8e \u201c\u5b9e\u4f5c\u7ee7\u627f\u201d\uff0c\u7ee7\u627f\u63a5\u53e3\u7684\u540c\u65f6\u4e5f\u7ee7\u627f\u4e86\u7236\u7c7b\u7684\u5b9e\u73b0\u3002\u7eaf\u865a\u51fd\u6570\u5173\u6ce8\u7684\u662f\u63a5\u53e3\u7684\u7edf\u4e00\u6027\uff0c\u5b9e\u73b0\u7531\u5b50\u7c7b\u5b8c\u6210\u3002 \u5e26\u7eaf\u865a\u51fd\u6570\u7684\u7c7b\u53eb\u62bd\u8c61\u7c7b\uff0c\u8fd9\u79cd\u7c7b\u4e0d\u80fd\u76f4\u63a5\u751f\u6210\u5bf9\u8c61\uff0c\u800c\u53ea\u6709\u88ab\u7ee7\u627f\uff0c\u5e76\u91cd\u5199\u5176\u865a\u51fd\u6570\u540e\uff0c\u624d\u80fd\u4f7f\u7528\u3002\u62bd\u8c61\u7c7b\u88ab\u7ee7\u627f\u540e\uff0c\u5b50\u7c7b\u53ef\u4ee5\u7ee7\u7eed\u662f\u62bd\u8c61\u7c7b\uff0c\u4e5f\u53ef\u4ee5\u662f\u666e\u901a\u7c7b\u3002 \u865a\u57fa\u7c7b\u662f\u865a\u7ee7\u627f\u4e2d\u7684\u57fa\u7c7b\uff0c\u5177\u4f53\u89c1\u4e0b\u6587\u865a\u7ee7\u627f\u3002 CSDN . C++ \u4e2d\u7684\u865a\u51fd\u6570\u3001\u7eaf\u865a\u51fd\u6570\u533a\u522b\u548c\u8054\u7cfb \u865a\u51fd\u6570\u6307\u9488\u3001\u865a\u51fd\u6570\u8868 # \u865a\u51fd\u6570\u6307\u9488\uff1a\u5728\u542b\u6709\u865a\u51fd\u6570\u7c7b\u7684\u5bf9\u8c61\u4e2d\uff0c\u6307\u5411\u865a\u51fd\u6570\u8868\uff0c\u5728\u8fd0\u884c\u65f6\u786e\u5b9a\u3002 \u865a\u51fd\u6570\u8868\uff1a\u5728\u7a0b\u5e8f\u53ea\u8bfb\u6570\u636e\u6bb5\uff08 .rodata section \uff0c\u89c1\uff1a \u76ee\u6807\u6587\u4ef6\u5b58\u50a8\u7ed3\u6784 \uff09\uff0c\u5b58\u653e\u865a\u51fd\u6570\u6307\u9488\uff0c\u5982\u679c\u6d3e\u751f\u7c7b\u5b9e\u73b0\u4e86\u57fa\u7c7b\u7684\u67d0\u4e2a\u865a\u51fd\u6570\uff0c\u5219\u5728\u865a\u8868\u4e2d\u8986\u76d6\u539f\u672c\u57fa\u7c7b\u7684\u90a3\u4e2a\u865a\u51fd\u6570\u6307\u9488\uff0c\u5728\u7f16\u8bd1\u65f6\u6839\u636e\u7c7b\u7684\u58f0\u660e\u521b\u5efa\u3002 C++\u4e2d\u7684\u865a\u51fd\u6570(\u8868)\u5b9e\u73b0\u673a\u5236\u4ee5\u53ca\u7528C\u8bed\u8a00\u5bf9\u5176\u8fdb\u884c\u7684\u6a21\u62df\u5b9e\u73b0 \u865a\u7ee7\u627f # \u865a\u7ee7\u627f\u7528\u4e8e\u89e3\u51b3\u591a\u7ee7\u627f\u6761\u4ef6\u4e0b\u7684\u83f1\u5f62\u7ee7\u627f\u95ee\u9898\uff08\u6d6a\u8d39\u5b58\u50a8\u7a7a\u95f4\u3001\u5b58\u5728\u4e8c\u4e49\u6027\uff09\u3002 \u5e95\u5c42\u5b9e\u73b0\u539f\u7406\u4e0e\u7f16\u8bd1\u5668\u76f8\u5173\uff0c\u4e00\u822c\u901a\u8fc7**\u865a\u57fa\u7c7b\u6307\u9488**\u548c**\u865a\u57fa\u7c7b\u8868**\u5b9e\u73b0\uff0c\u6bcf\u4e2a\u865a\u7ee7\u627f\u7684\u5b50\u7c7b\u90fd\u6709\u4e00\u4e2a\u865a\u57fa\u7c7b\u6307\u9488\uff08\u5360\u7528\u4e00\u4e2a\u6307\u9488\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c4\u5b57\u8282\uff09\u548c\u865a\u57fa\u7c7b\u8868\uff08\u4e0d\u5360\u7528\u7c7b\u5bf9\u8c61\u7684\u5b58\u50a8\u7a7a\u95f4\uff09\uff08\u9700\u8981\u5f3a\u8c03\u7684\u662f\uff0c\u865a\u57fa\u7c7b\u4f9d\u65e7\u4f1a\u5728\u5b50\u7c7b\u91cc\u9762\u5b58\u5728\u62f7\u8d1d\uff0c\u53ea\u662f\u4ec5\u4ec5\u6700\u591a\u5b58\u5728\u4e00\u4efd\u800c\u5df2\uff0c\u5e76\u4e0d\u662f\u4e0d\u5728\u5b50\u7c7b\u91cc\u9762\u4e86\uff09\uff1b\u5f53\u865a\u7ee7\u627f\u7684\u5b50\u7c7b\u88ab\u5f53\u505a\u7236\u7c7b\u7ee7\u627f\u65f6\uff0c\u865a\u57fa\u7c7b\u6307\u9488\u4e5f\u4f1a\u88ab\u7ee7\u627f\u3002 \u5b9e\u9645\u4e0a\uff0cvbptr \u6307\u7684\u662f\u865a\u57fa\u7c7b\u8868\u6307\u9488\uff08virtual base table pointer\uff09\uff0c\u8be5\u6307\u9488\u6307\u5411\u4e86\u4e00\u4e2a\u865a\u57fa\u7c7b\u8868\uff08virtual table\uff09\uff0c\u865a\u8868\u4e2d\u8bb0\u5f55\u4e86\u865a\u57fa\u7c7b\u4e0e\u672c\u7c7b\u7684\u504f\u79fb\u5730\u5740\uff1b\u901a\u8fc7\u504f\u79fb\u5730\u5740\uff0c\u8fd9\u6837\u5c31\u627e\u5230\u4e86\u865a\u57fa\u7c7b\u6210\u5458\uff0c\u800c\u865a\u7ee7\u627f\u4e5f\u4e0d\u7528\u50cf\u666e\u901a\u591a\u7ee7\u627f\u90a3\u6837\u7ef4\u6301\u7740\u516c\u5171\u57fa\u7c7b\uff08\u865a\u57fa\u7c7b\uff09\u7684\u4e24\u4efd\u540c\u6837\u7684\u62f7\u8d1d\uff0c\u8282\u7701\u4e86\u5b58\u50a8\u7a7a\u95f4\u3002 \u865a\u7ee7\u627f\u3001\u865a\u51fd\u6570 # \u76f8\u540c\u4e4b\u5904\uff1a\u90fd\u5229\u7528\u4e86\u865a\u6307\u9488\uff08\u5747\u5360\u7528\u7c7b\u7684\u5b58\u50a8\u7a7a\u95f4\uff09\u548c\u865a\u8868\uff08\u5747\u4e0d\u5360\u7528\u7c7b\u7684\u5b58\u50a8\u7a7a\u95f4\uff09 \u4e0d\u540c\u4e4b\u5904\uff1a \u865a\u7ee7\u627f \u865a\u57fa\u7c7b\u4f9d\u65e7\u5b58\u5728\u7ee7\u627f\u7c7b\u4e2d\uff0c\u53ea\u5360\u7528\u5b58\u50a8\u7a7a\u95f4 \u865a\u57fa\u7c7b\u8868\u5b58\u50a8\u7684\u662f\u865a\u57fa\u7c7b\u76f8\u5bf9\u76f4\u63a5\u7ee7\u627f\u7c7b\u7684\u504f\u79fb \u865a\u51fd\u6570 \u865a\u51fd\u6570\u4e0d\u5360\u7528\u5b58\u50a8\u7a7a\u95f4 \u865a\u51fd\u6570\u8868\u5b58\u50a8\u7684\u662f\u865a\u51fd\u6570\u5730\u5740 \u7c7b\u6a21\u677f\u3001\u6210\u5458\u6a21\u677f\u3001\u865a\u51fd\u6570 # \u7c7b\u6a21\u677f\u4e2d\u53ef\u4ee5\u4f7f\u7528\u865a\u51fd\u6570 \u4e00\u4e2a\u7c7b\uff08\u65e0\u8bba\u662f\u666e\u901a\u7c7b\u8fd8\u662f\u7c7b\u6a21\u677f\uff09\u7684\u6210\u5458\u6a21\u677f\uff08\u672c\u8eab\u662f\u6a21\u677f\u7684\u6210\u5458\u51fd\u6570\uff09\u4e0d\u80fd\u662f\u865a\u51fd\u6570 \u62bd\u8c61\u7c7b\u3001\u63a5\u53e3\u7c7b\u3001\u805a\u5408\u7c7b # \u62bd\u8c61\u7c7b\uff1a\u542b\u6709\u7eaf\u865a\u51fd\u6570\u7684\u7c7b \u63a5\u53e3\u7c7b\uff1a\u4ec5\u542b\u6709\u7eaf\u865a\u51fd\u6570\u7684\u62bd\u8c61\u7c7b \u805a\u5408\u7c7b\uff1a\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5176\u6210\u5458\uff0c\u5e76\u4e14\u5177\u6709\u7279\u6b8a\u7684\u521d\u59cb\u5316\u8bed\u6cd5\u5f62\u5f0f\u3002\u6ee1\u8db3\u5982\u4e0b\u7279\u70b9\uff1a \u6240\u6709\u6210\u5458\u90fd\u662f public \u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u6784\u9020\u51fd\u6570 \u6ca1\u6709\u7c7b\u5185\u521d\u59cb\u5316 \u6ca1\u6709\u57fa\u7c7b\uff0c\u4e5f\u6ca1\u6709 virtual \u51fd\u6570 \u5185\u5b58\u5206\u914d\u548c\u7ba1\u7406 # malloc\u3001calloc\u3001realloc\u3001alloca # malloc\uff1a\u7533\u8bf7\u6307\u5b9a\u5b57\u8282\u6570\u7684\u5185\u5b58\u3002\u7533\u8bf7\u5230\u7684\u5185\u5b58\u4e2d\u7684\u521d\u59cb\u503c\u4e0d\u786e\u5b9a\u3002 calloc\uff1a\u4e3a\u6307\u5b9a\u957f\u5ea6\u7684\u5bf9\u8c61\uff0c\u5206\u914d\u80fd\u5bb9\u7eb3\u5176\u6307\u5b9a\u4e2a\u6570\u7684\u5185\u5b58\u3002\u7533\u8bf7\u5230\u7684\u5185\u5b58\u7684\u6bcf\u4e00\u4f4d\uff08bit\uff09\u90fd\u521d\u59cb\u5316\u4e3a 0\u3002 realloc\uff1a\u66f4\u6539\u4ee5\u524d\u5206\u914d\u7684\u5185\u5b58\u957f\u5ea6\uff08\u589e\u52a0\u6216\u51cf\u5c11\uff09\u3002\u5f53\u589e\u52a0\u957f\u5ea6\u65f6\uff0c\u53ef\u80fd\u9700\u5c06\u4ee5\u524d\u5206\u914d\u533a\u7684\u5185\u5bb9\u79fb\u5230\u53e6\u4e00\u4e2a\u8db3\u591f\u5927\u7684\u533a\u57df\uff0c\u800c\u65b0\u589e\u533a\u57df\u5185\u7684\u521d\u59cb\u503c\u5219\u4e0d\u786e\u5b9a\u3002 alloca\uff1a\u5728\u6808\u4e0a\u7533\u8bf7\u5185\u5b58\u3002\u7a0b\u5e8f\u5728\u51fa\u6808\u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u91ca\u653e\u5185\u5b58\u3002\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0calloca \u4e0d\u5177\u53ef\u79fb\u690d\u6027, \u800c\u4e14\u5728\u6ca1\u6709\u4f20\u7edf\u5806\u6808\u7684\u673a\u5668\u4e0a\u5f88\u96be\u5b9e\u73b0\u3002alloca \u4e0d\u5b9c\u4f7f\u7528\u5728\u5fc5\u987b\u5e7f\u6cdb\u79fb\u690d\u7684\u7a0b\u5e8f\u4e2d\u3002C99 \u4e2d\u652f\u6301\u53d8\u957f\u6570\u7ec4 (VLA)\uff0c\u53ef\u4ee5\u7528\u6765\u66ff\u4ee3 alloca\u3002 malloc\u3001free # \u7528\u4e8e\u5206\u914d\u3001\u91ca\u653e\u5185\u5b58 malloc\u3001free \u4f7f\u7528 \u7533\u8bf7\u5185\u5b58\uff0c\u786e\u8ba4\u662f\u5426\u7533\u8bf7\u6210\u529f char * str = ( char * ) malloc ( 100 ); assert ( str != nullptr ); \u91ca\u653e\u5185\u5b58\u540e\u6307\u9488\u7f6e\u7a7a free ( p ); p = nullptr ; new\u3001delete # new / new[]\uff1a\u5b8c\u6210\u4e24\u4ef6\u4e8b\uff0c\u5148\u5e95\u5c42\u8c03\u7528 malloc \u5206\u914d\u4e86\u5185\u5b58\uff0c\u7136\u540e\u8c03\u7528\u6784\u9020\u51fd\u6570\uff08\u521b\u5efa\u5bf9\u8c61\uff09\u3002 delete/delete[]\uff1a\u4e5f\u5b8c\u6210\u4e24\u4ef6\u4e8b\uff0c\u5148\u8c03\u7528\u6790\u6784\u51fd\u6570\uff08\u6e05\u7406\u8d44\u6e90\uff09\uff0c\u7136\u540e\u5e95\u5c42\u8c03\u7528 free \u91ca\u653e\u7a7a\u95f4\u3002 new \u5728\u7533\u8bf7\u5185\u5b58\u65f6\u4f1a\u81ea\u52a8\u8ba1\u7b97\u6240\u9700\u5b57\u8282\u6570\uff0c\u800c malloc \u5219\u9700\u6211\u4eec\u81ea\u5df1\u8f93\u5165\u7533\u8bf7\u5185\u5b58\u7a7a\u95f4\u7684\u5b57\u8282\u6570\u3002 new\u3001delete \u4f7f\u7528 \u7533\u8bf7\u5185\u5b58\uff0c\u786e\u8ba4\u662f\u5426\u7533\u8bf7\u6210\u529f int main () { T * t = new T (); // \u5148\u5185\u5b58\u5206\u914d \uff0c\u518d\u6784\u9020\u51fd\u6570 delete t ; // \u5148\u6790\u6784\u51fd\u6570\uff0c\u518d\u5185\u5b58\u91ca\u653e return 0 ; } \u5b9a\u4f4d new # \u5b9a\u4f4d new\uff08placement new\uff09\u5141\u8bb8\u6211\u4eec\u5411 new \u4f20\u9012\u989d\u5916\u7684\u5730\u5740\u53c2\u6570\uff0c\u4ece\u800c\u5728\u9884\u5148\u6307\u5b9a\u7684\u5185\u5b58\u533a\u57df\u521b\u5efa\u5bf9\u8c61\u3002 new ( place_address ) type new ( place_address ) type ( initializers ) new ( place_address ) type [ size ] new ( place_address ) type [ size ] { braced initializer list } place_address \u662f\u4e2a\u6307\u9488 initializers \u63d0\u4f9b\u4e00\u4e2a\uff08\u53ef\u80fd\u4e3a\u7a7a\u7684\uff09\u4ee5\u9017\u53f7\u5206\u9694\u7684\u521d\u59cb\u503c\u5217\u8868 delete this \u5408\u6cd5\u5417\uff1f # Is it legal (and moral) for a member function to say delete this? \u5408\u6cd5\uff0c\u4f46\uff1a \u5fc5\u987b\u4fdd\u8bc1 this \u5bf9\u8c61\u662f\u901a\u8fc7 new \uff08\u4e0d\u662f new[] \u3001\u4e0d\u662f placement new\u3001\u4e0d\u662f\u6808\u4e0a\u3001\u4e0d\u662f\u5168\u5c40\u3001\u4e0d\u662f\u5176\u4ed6\u5bf9\u8c61\u6210\u5458\uff09\u5206\u914d\u7684 \u5fc5\u987b\u4fdd\u8bc1\u8c03\u7528 delete this \u7684\u6210\u5458\u51fd\u6570\u662f\u6700\u540e\u4e00\u4e2a\u8c03\u7528 this \u7684\u6210\u5458\u51fd\u6570 \u5fc5\u987b\u4fdd\u8bc1\u6210\u5458\u51fd\u6570\u7684 delete this \u540e\u9762\u6ca1\u6709\u8c03\u7528 this \u4e86 \u5fc5\u987b\u4fdd\u8bc1 delete this \u540e\u6ca1\u6709\u4eba\u4f7f\u7528\u4e86 \u5982\u4f55\u5b9a\u4e49\u4e00\u4e2a\u53ea\u80fd\u5728\u5806\u4e0a\uff08\u6808\u4e0a\uff09\u751f\u6210\u5bf9\u8c61\u7684\u7c7b\uff1f # \u5982\u4f55\u5b9a\u4e49\u4e00\u4e2a\u53ea\u80fd\u5728\u5806\u4e0a\uff08\u6808\u4e0a\uff09\u751f\u6210\u5bf9\u8c61\u7684\u7c7b? \u53ea\u80fd\u5728\u5806\u4e0a # \u65b9\u6cd5\uff1a\u5c06\u6790\u6784\u51fd\u6570\u8bbe\u7f6e\u4e3a\u79c1\u6709 \u539f\u56e0\uff1aC++ \u662f\u9759\u6001\u7ed1\u5b9a\u8bed\u8a00\uff0c\u7f16\u8bd1\u5668\u7ba1\u7406\u6808\u4e0a\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\uff0c\u7f16\u8bd1\u5668\u5728\u4e3a\u7c7b\u5bf9\u8c61\u5206\u914d\u6808\u7a7a\u95f4\u65f6\uff0c\u4f1a\u5148\u68c0\u67e5\u7c7b\u7684\u6790\u6784\u51fd\u6570\u7684\u8bbf\u95ee\u6027\u3002\u82e5\u6790\u6784\u51fd\u6570\u4e0d\u53ef\u8bbf\u95ee\uff0c\u5219\u4e0d\u80fd\u5728\u6808\u4e0a\u521b\u5efa\u5bf9\u8c61\u3002 \u53ea\u80fd\u5728\u6808\u4e0a # \u65b9\u6cd5\uff1a\u5c06 new \u548c delete \u91cd\u8f7d\u4e3a\u79c1\u6709 \u539f\u56e0\uff1a\u5728\u5806\u4e0a\u751f\u6210\u5bf9\u8c61\uff0c\u4f7f\u7528 new \u5173\u952e\u8bcd\u64cd\u4f5c\uff0c\u5176\u8fc7\u7a0b\u5206\u4e3a\u4e24\u9636\u6bb5\uff1a\u7b2c\u4e00\u9636\u6bb5\uff0c\u4f7f\u7528 new \u5728\u5806\u4e0a\u5bfb\u627e\u53ef\u7528\u5185\u5b58\uff0c\u5206\u914d\u7ed9\u5bf9\u8c61\uff1b\u7b2c\u4e8c\u9636\u6bb5\uff0c\u8c03\u7528\u6784\u9020\u51fd\u6570\u751f\u6210\u5bf9\u8c61\u3002\u5c06 new \u64cd\u4f5c\u8bbe\u7f6e\u4e3a\u79c1\u6709\uff0c\u90a3\u4e48\u7b2c\u4e00\u9636\u6bb5\u5c31\u65e0\u6cd5\u5b8c\u6210\uff0c\u5c31\u4e0d\u80fd\u591f\u5728\u5806\u4e0a\u751f\u6210\u5bf9\u8c61\u3002 \u667a\u80fd\u6307\u9488 # C++ \u6807\u51c6\u5e93\uff08STL\uff09\u4e2d # \u5934\u6587\u4ef6\uff1a #include <memory> C++ 98 # std :: auto_ptr < std :: string > ps ( new std :: string ( str )) \uff1b C++ 11 # shared_ptr unique_ptr weak_ptr auto_ptr\uff08\u88ab C++11 \u5f03\u7528\uff09 Class shared_ptr \u5b9e\u73b0\u5171\u4eab\u5f0f\u62e5\u6709\uff08shared ownership\uff09\u6982\u5ff5\u3002\u591a\u4e2a\u667a\u80fd\u6307\u9488\u6307\u5411\u76f8\u540c\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u548c\u5176\u76f8\u5173\u8d44\u6e90\u4f1a\u5728 \u201c\u6700\u540e\u4e00\u4e2a reference \u88ab\u9500\u6bc1\u201d \u65f6\u88ab\u91ca\u653e\u3002\u4e3a\u4e86\u5728\u7ed3\u6784\u8f83\u590d\u6742\u7684\u60c5\u666f\u4e2d\u6267\u884c\u4e0a\u8ff0\u5de5\u4f5c\uff0c\u6807\u51c6\u5e93\u63d0\u4f9b weak_ptr\u3001bad_weak_ptr \u548c enable_shared_from_this \u7b49\u8f85\u52a9\u7c7b\u3002 Class unique_ptr \u5b9e\u73b0\u72ec\u5360\u5f0f\u62e5\u6709\uff08exclusive ownership\uff09\u6216\u4e25\u683c\u62e5\u6709\uff08strict ownership\uff09\u6982\u5ff5\uff0c\u4fdd\u8bc1\u540c\u4e00\u65f6\u95f4\u5185\u53ea\u6709\u4e00\u4e2a\u667a\u80fd\u6307\u9488\u53ef\u4ee5\u6307\u5411\u8be5\u5bf9\u8c61\u3002\u4f60\u53ef\u4ee5\u79fb\u4ea4\u62e5\u6709\u6743\u3002\u5b83\u5bf9\u4e8e\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\uff08resource leak\uff09\u2014\u2014\u5982 new \u540e\u5fd8\u8bb0 delete \u2014\u2014\u7279\u522b\u6709\u7528\u3002 shared_ptr # \u591a\u4e2a\u667a\u80fd\u6307\u9488\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5bf9\u8c61\u7684\u6700\u672b\u4e00\u4e2a\u62e5\u6709\u7740\u6709\u8d23\u4efb\u9500\u6bc1\u5bf9\u8c61\uff0c\u5e76\u6e05\u7406\u4e0e\u8be5\u5bf9\u8c61\u76f8\u5173\u7684\u6240\u6709\u8d44\u6e90\u3002 \u652f\u6301\u5b9a\u5236\u578b\u5220\u9664\u5668\uff08custom deleter\uff09\uff0c\u53ef\u9632\u8303 Cross-DLL \u95ee\u9898\uff08\u5bf9\u8c61\u5728\u52a8\u6001\u94fe\u63a5\u5e93\uff08DLL\uff09\u4e2d\u88ab new \u521b\u5efa\uff0c\u5374\u5728\u53e6\u4e00\u4e2a DLL \u5185\u88ab delete \u9500\u6bc1\uff09\u3001\u81ea\u52a8\u89e3\u9664\u4e92\u65a5\u9501 weak_ptr # weak_ptr \u5141\u8bb8\u4f60\u5171\u4eab\u4f46\u4e0d\u62e5\u6709\u67d0\u5bf9\u8c61\uff0c\u4e00\u65e6\u6700\u672b\u4e00\u4e2a\u62e5\u6709\u8be5\u5bf9\u8c61\u7684\u667a\u80fd\u6307\u9488\u5931\u53bb\u4e86\u6240\u6709\u6743\uff0c\u4efb\u4f55 weak_ptr \u90fd\u4f1a\u81ea\u52a8\u6210\u7a7a\uff08empty\uff09\u3002\u56e0\u6b64\uff0c\u5728 default \u548c copy \u6784\u9020\u51fd\u6570\u4e4b\u5916\uff0cweak_ptr \u53ea\u63d0\u4f9b \u201c\u63a5\u53d7\u4e00\u4e2a shared_ptr\u201d \u7684\u6784\u9020\u51fd\u6570\u3002 \u53ef\u6253\u7834\u73af\u72b6\u5f15\u7528\uff08cycles of references\uff0c\u4e24\u4e2a\u5176\u5b9e\u5df2\u7ecf\u6ca1\u6709\u88ab\u4f7f\u7528\u7684\u5bf9\u8c61\u5f7c\u6b64\u4e92\u6307\uff0c\u4f7f\u4e4b\u770b\u4f3c\u8fd8\u5728 \u201c\u88ab\u4f7f\u7528\u201d \u7684\u72b6\u6001\uff09\u7684\u95ee\u9898 unique_ptr # unique_ptr \u662f C++11 \u624d\u5f00\u59cb\u63d0\u4f9b\u7684\u7c7b\u578b\uff0c\u662f\u4e00\u79cd\u5728\u5f02\u5e38\u65f6\u53ef\u4ee5\u5e2e\u52a9\u907f\u514d\u8d44\u6e90\u6cc4\u6f0f\u7684\u667a\u80fd\u6307\u9488\u3002\u91c7\u7528\u72ec\u5360\u5f0f\u62e5\u6709\uff0c\u610f\u5473\u7740\u53ef\u4ee5\u786e\u4fdd\u4e00\u4e2a\u5bf9\u8c61\u548c\u5176\u76f8\u5e94\u7684\u8d44\u6e90\u540c\u4e00\u65f6\u95f4\u53ea\u88ab\u4e00\u4e2a pointer \u62e5\u6709\u3002\u4e00\u65e6\u62e5\u6709\u7740\u88ab\u9500\u6bc1\u6216\u7f16\u7a0b empty\uff0c\u6216\u5f00\u59cb\u62e5\u6709\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5148\u524d\u62e5\u6709\u7684\u90a3\u4e2a\u5bf9\u8c61\u5c31\u4f1a\u88ab\u9500\u6bc1\uff0c\u5176\u4efb\u4f55\u76f8\u5e94\u8d44\u6e90\u4ea6\u4f1a\u88ab\u91ca\u653e\u3002 unique_ptr \u7528\u4e8e\u53d6\u4ee3 auto_ptr auto_ptr # \u88ab c++11 \u5f03\u7528\uff0c\u539f\u56e0\u662f\u7f3a\u4e4f\u8bed\u8a00\u7279\u6027\u5982 \u201c\u9488\u5bf9\u6784\u9020\u548c\u8d4b\u503c\u201d \u7684 std::move \u8bed\u4e49\uff0c\u4ee5\u53ca\u5176\u4ed6\u7455\u75b5\u3002 auto_ptr \u4e0e unique_ptr \u6bd4\u8f83 # auto_ptr \u53ef\u4ee5\u8d4b\u503c\u62f7\u8d1d\uff0c\u590d\u5236\u62f7\u8d1d\u540e\u6240\u6709\u6743\u8f6c\u79fb\uff1bunqiue_ptr \u65e0\u62f7\u8d1d\u8d4b\u503c\u8bed\u4e49\uff0c\u4f46\u5b9e\u73b0\u4e86 move \u8bed\u4e49\uff1b auto_ptr \u5bf9\u8c61\u4e0d\u80fd\u7ba1\u7406\u6570\u7ec4\uff08\u6790\u6784\u8c03\u7528 delete \uff09\uff0cunique_ptr \u53ef\u4ee5\u7ba1\u7406\u6570\u7ec4\uff08\u6790\u6784\u8c03\u7528 delete[] \uff09\uff1b \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26 # MSDN . \u5f3a\u5236\u8f6c\u6362\u8fd0\u7b97\u7b26 static_cast # \u7528\u4e8e\u975e\u591a\u6001\u7c7b\u578b\u7684\u8f6c\u6362 \u4e0d\u6267\u884c\u8fd0\u884c\u65f6\u7c7b\u578b\u68c0\u67e5\uff08\u8f6c\u6362\u5b89\u5168\u6027\u4e0d\u5982 dynamic_cast\uff09 \u901a\u5e38\u7528\u4e8e\u8f6c\u6362\u6570\u503c\u6570\u636e\u7c7b\u578b\uff08\u5982 float -> int\uff09 \u53ef\u4ee5\u5728\u6574\u4e2a\u7c7b\u5c42\u6b21\u7ed3\u6784\u4e2d\u79fb\u52a8\u6307\u9488\uff0c\u5b50\u7c7b\u8f6c\u5316\u4e3a\u7236\u7c7b\u5b89\u5168\uff08\u5411\u4e0a\u8f6c\u6362\uff09\uff0c\u7236\u7c7b\u8f6c\u5316\u4e3a\u5b50\u7c7b\u4e0d\u5b89\u5168\uff08\u56e0\u4e3a\u5b50\u7c7b\u53ef\u80fd\u6709\u4e0d\u5728\u7236\u7c7b\u7684\u5b57\u6bb5\u6216\u65b9\u6cd5\uff09 \u5411\u4e0a\u8f6c\u6362\u662f\u4e00\u79cd\u9690\u5f0f\u8f6c\u6362\u3002 dynamic_cast # \u7528\u4e8e\u591a\u6001\u7c7b\u578b\u7684\u8f6c\u6362 \u6267\u884c\u884c\u8fd0\u884c\u65f6\u7c7b\u578b\u68c0\u67e5 \u53ea\u9002\u7528\u4e8e\u6307\u9488\u6216\u5f15\u7528 \u5bf9\u4e0d\u660e\u786e\u7684\u6307\u9488\u7684\u8f6c\u6362\u5c06\u5931\u8d25\uff08\u8fd4\u56de nullptr\uff09\uff0c\u4f46\u4e0d\u5f15\u53d1\u5f02\u5e38 \u53ef\u4ee5\u5728\u6574\u4e2a\u7c7b\u5c42\u6b21\u7ed3\u6784\u4e2d\u79fb\u52a8\u6307\u9488\uff0c\u5305\u62ec\u5411\u4e0a\u8f6c\u6362\u3001\u5411\u4e0b\u8f6c\u6362 const_cast # \u7528\u4e8e\u5220\u9664 const\u3001volatile \u548c __unaligned \u7279\u6027\uff08\u5982\u5c06 const int \u7c7b\u578b\u8f6c\u6362\u4e3a int \u7c7b\u578b \uff09 reinterpret_cast # \u7528\u4e8e\u4f4d\u7684\u7b80\u5355\u91cd\u65b0\u89e3\u91ca \u6ee5\u7528 reinterpret_cast \u8fd0\u7b97\u7b26\u53ef\u80fd\u5f88\u5bb9\u6613\u5e26\u6765\u98ce\u9669\u3002 \u9664\u975e\u6240\u9700\u8f6c\u6362\u672c\u8eab\u662f\u4f4e\u7ea7\u522b\u7684\uff0c\u5426\u5219\u5e94\u4f7f\u7528\u5176\u4ed6\u5f3a\u5236\u8f6c\u6362\u8fd0\u7b97\u7b26\u4e4b\u4e00\u3002 \u5141\u8bb8\u5c06\u4efb\u4f55\u6307\u9488\u8f6c\u6362\u4e3a\u4efb\u4f55\u5176\u4ed6\u6307\u9488\u7c7b\u578b\uff08\u5982 char* \u5230 int* \u6216 One_class* \u5230 Unrelated_class* \u4e4b\u7c7b\u7684\u8f6c\u6362\uff0c\u4f46\u5176\u672c\u8eab\u5e76\u4e0d\u5b89\u5168\uff09 \u4e5f\u5141\u8bb8\u5c06\u4efb\u4f55\u6574\u6570\u7c7b\u578b\u8f6c\u6362\u4e3a\u4efb\u4f55\u6307\u9488\u7c7b\u578b\u4ee5\u53ca\u53cd\u5411\u8f6c\u6362\u3002 reinterpret_cast \u8fd0\u7b97\u7b26\u4e0d\u80fd\u4e22\u6389 const\u3001volatile \u6216 __unaligned \u7279\u6027\u3002 reinterpret_cast \u7684\u4e00\u4e2a\u5b9e\u9645\u7528\u9014\u662f\u5728\u54c8\u5e0c\u51fd\u6570\u4e2d\uff0c\u5373\uff0c\u901a\u8fc7\u8ba9\u4e24\u4e2a\u4e0d\u540c\u7684\u503c\u51e0\u4e4e\u4e0d\u4ee5\u76f8\u540c\u7684\u7d22\u5f15\u7ed3\u5c3e\u7684\u65b9\u5f0f\u5c06\u503c\u6620\u5c04\u5230\u7d22\u5f15\u3002 bad_cast # \u7531\u4e8e\u5f3a\u5236\u8f6c\u6362\u4e3a\u5f15\u7528\u7c7b\u578b\u5931\u8d25\uff0cdynamic_cast \u8fd0\u7b97\u7b26\u5f15\u53d1 bad_cast \u5f02\u5e38\u3002 bad_cast \u4f7f\u7528 try { Circle & ref_circle = dynamic_cast < Circle &> ( ref_shape ); } catch ( bad_cast b ) { cout << \"Caught: \" << b . what (); } \u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f (RTTI) # dynamic_cast # \u7528\u4e8e\u591a\u6001\u7c7b\u578b\u7684\u8f6c\u6362 typeid # typeid \u8fd0\u7b97\u7b26\u5141\u8bb8\u5728\u8fd0\u884c\u65f6\u786e\u5b9a\u5bf9\u8c61\u7684\u7c7b\u578b type_id \u8fd4\u56de\u4e00\u4e2a type_info \u5bf9\u8c61\u7684\u5f15\u7528 \u5982\u679c\u60f3\u901a\u8fc7\u57fa\u7c7b\u7684\u6307\u9488\u83b7\u5f97\u6d3e\u751f\u7c7b\u7684\u6570\u636e\u7c7b\u578b\uff0c\u57fa\u7c7b\u5fc5\u987b\u5e26\u6709\u865a\u51fd\u6570 \u53ea\u80fd\u83b7\u53d6\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b type_info # type_info \u7c7b\u63cf\u8ff0\u7f16\u8bd1\u5668\u5728\u7a0b\u5e8f\u4e2d\u751f\u6210\u7684\u7c7b\u578b\u4fe1\u606f\u3002 \u6b64\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u6709\u6548\u5b58\u50a8\u6307\u5411\u7c7b\u578b\u7684\u540d\u79f0\u7684\u6307\u9488\u3002 type_info \u7c7b\u8fd8\u53ef\u5b58\u50a8\u9002\u5408\u6bd4\u8f83\u4e24\u4e2a\u7c7b\u578b\u662f\u5426\u76f8\u7b49\u6216\u6bd4\u8f83\u5176\u6392\u5217\u987a\u5e8f\u7684\u7f16\u7801\u503c\u3002 \u7c7b\u578b\u7684\u7f16\u7801\u89c4\u5219\u548c\u6392\u5217\u987a\u5e8f\u662f\u672a\u6307\u5b9a\u7684\uff0c\u5e76\u4e14\u53ef\u80fd\u56e0\u7a0b\u5e8f\u800c\u5f02\u3002 \u5934\u6587\u4ef6\uff1a typeinfo typeid\u3001type_info \u4f7f\u7528 #include <iostream> using namespace std ; class Flyable // \u80fd\u98de\u7684 { public : virtual void takeoff () = 0 ; // \u8d77\u98de virtual void land () = 0 ; // \u964d\u843d }; class Bird : public Flyable // \u9e1f { public : void foraging () {...} // \u89c5\u98df virtual void takeoff () {...} virtual void land () {...} virtual ~ Bird (){} }; class Plane : public Flyable // \u98de\u673a { public : void carry () {...} // \u8fd0\u8f93 virtual void takeoff () {...} virtual void land () {...} }; class type_info { public : const char * name () const ; bool operator == ( const type_info & rhs ) const ; bool operator != ( const type_info & rhs ) const ; int before ( const type_info & rhs ) const ; virtual ~ type_info (); private : ... }; void doSomething ( Flyable * obj ) // \u505a\u4e9b\u4e8b\u60c5 { obj -> takeoff (); cout << typeid ( * obj ). name () << endl ; // \u8f93\u51fa\u4f20\u5165\u5bf9\u8c61\u7c7b\u578b\uff08\"class Bird\" or \"class Plane\"\uff09 if ( typeid ( * obj ) == typeid ( Bird )) // \u5224\u65ad\u5bf9\u8c61\u7c7b\u578b { Bird * bird = dynamic_cast < Bird *> ( obj ); // \u5bf9\u8c61\u8f6c\u5316 bird -> foraging (); } obj -> land (); } int main (){ Bird * b = new Bird (); doSomething ( b ); delete b ; b = nullptr ; return 0 ; } \u2b50\ufe0f Effective # Effective C++ # \u89c6 C++ \u4e3a\u4e00\u4e2a\u8bed\u8a00\u8054\u90a6\uff08C\u3001Object-Oriented C++\u3001Template C++\u3001STL\uff09 \u5b81\u53ef\u4ee5\u7f16\u8bd1\u5668\u66ff\u6362\u9884\u5904\u7406\u5668\uff08\u5c3d\u91cf\u4ee5 const \u3001 enum \u3001 inline \u66ff\u6362 #define \uff09 \u5c3d\u53ef\u80fd\u4f7f\u7528 const \u786e\u5b9a\u5bf9\u8c61\u88ab\u4f7f\u7528\u524d\u5df2\u5148\u88ab\u521d\u59cb\u5316\uff08\u6784\u9020\u65f6\u8d4b\u503c\uff08copy \u6784\u9020\u51fd\u6570\uff09\u6bd4 default \u6784\u9020\u540e\u8d4b\u503c\uff08copy assignment\uff09\u6548\u7387\u9ad8\uff09 \u4e86\u89e3 C++ \u9ed8\u9ed8\u7f16\u5199\u5e76\u8c03\u7528\u54ea\u4e9b\u51fd\u6570\uff08\u7f16\u8bd1\u5668\u6697\u81ea\u4e3a class \u521b\u5efa default \u6784\u9020\u51fd\u6570\u3001copy \u6784\u9020\u51fd\u6570\u3001copy assignment \u64cd\u4f5c\u7b26\u3001\u6790\u6784\u51fd\u6570\uff09 \u82e5\u4e0d\u60f3\u4f7f\u7528\u7f16\u8bd1\u5668\u81ea\u52a8\u751f\u6210\u7684\u51fd\u6570\uff0c\u5c31\u5e94\u8be5\u660e\u786e\u62d2\u7edd\uff08\u5c06\u4e0d\u60f3\u4f7f\u7528\u7684\u6210\u5458\u51fd\u6570\u58f0\u660e\u4e3a private\uff0c\u5e76\u4e14\u4e0d\u4e88\u5b9e\u73b0\uff09 \u4e3a\u591a\u6001\u57fa\u7c7b\u58f0\u660e virtual \u6790\u6784\u51fd\u6570\uff08\u5982\u679c class \u5e26\u6709\u4efb\u4f55 virtual \u51fd\u6570\uff0c\u5b83\u5c31\u5e94\u8be5\u62e5\u6709\u4e00\u4e2a virtual \u6790\u6784\u51fd\u6570\uff09 \u522b\u8ba9\u5f02\u5e38\u9003\u79bb\u6790\u6784\u51fd\u6570\uff08\u6790\u6784\u51fd\u6570\u5e94\u8be5\u541e\u4e0b\u4e0d\u4f20\u64ad\u5f02\u5e38\uff0c\u6216\u8005\u7ed3\u675f\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u5410\u51fa\u5f02\u5e38\uff1b\u5982\u679c\u8981\u5904\u7406\u5f02\u5e38\u5e94\u8be5\u5728\u975e\u6790\u6784\u7684\u666e\u901a\u51fd\u6570\u5904\u7406\uff09 \u7edd\u4e0d\u5728\u6784\u9020\u548c\u6790\u6784\u8fc7\u7a0b\u4e2d\u8c03\u7528 virtual \u51fd\u6570\uff08\u56e0\u4e3a\u8fd9\u7c7b\u8c03\u7528\u4ece\u4e0d\u4e0b\u964d\u81f3 derived class\uff09 \u4ee4 operator= \u8fd4\u56de\u4e00\u4e2a reference to *this \uff08\u7528\u4e8e\u8fde\u9501\u8d4b\u503c\uff09 \u5728 operator= \u4e2d\u5904\u7406 \u201c\u81ea\u6211\u8d4b\u503c\u201d \u8d4b\u503c\u5bf9\u8c61\u65f6\u5e94\u786e\u4fdd\u590d\u5236 \u201c\u5bf9\u8c61\u5185\u7684\u6240\u6709\u6210\u5458\u53d8\u91cf\u201d \u53ca \u201c\u6240\u6709 base class \u6210\u5206\u201d\uff08\u8c03\u7528\u57fa\u7c7b\u590d\u5236\u6784\u9020\u51fd\u6570\uff09 \u4ee5\u5bf9\u8c61\u7ba1\u7406\u8d44\u6e90\uff08\u8d44\u6e90\u5728\u6784\u9020\u51fd\u6570\u83b7\u5f97\uff0c\u5728\u6790\u6784\u51fd\u6570\u91ca\u653e\uff0c\u5efa\u8bae\u4f7f\u7528\u667a\u80fd\u6307\u9488\uff0c\u8d44\u6e90\u53d6\u5f97\u65f6\u673a\u4fbf\u662f\u521d\u59cb\u5316\u65f6\u673a\uff08Resource Acquisition Is Initialization\uff0cRAII\uff09\uff09 \u5728\u8d44\u6e90\u7ba1\u7406\u7c7b\u4e2d\u5c0f\u5fc3 copying \u884c\u4e3a\uff08\u666e\u904d\u7684 RAII class copying \u884c\u4e3a\u662f\uff1a\u6291\u5236 copying\u3001\u5f15\u7528\u8ba1\u6570\u3001\u6df1\u5ea6\u62f7\u8d1d\u3001\u8f6c\u79fb\u5e95\u90e8\u8d44\u6e90\u62e5\u6709\u6743\uff08\u7c7b\u4f3c auto_ptr\uff09\uff09 \u5728\u8d44\u6e90\u7ba1\u7406\u7c7b\u4e2d\u63d0\u4f9b\u5bf9\u539f\u59cb\u8d44\u6e90\uff08raw resources\uff09\u7684\u8bbf\u95ee\uff08\u5bf9\u539f\u59cb\u8d44\u6e90\u7684\u8bbf\u95ee\u53ef\u80fd\u7ecf\u8fc7\u663e\u5f0f\u8f6c\u6362\u6216\u9690\u5f0f\u8f6c\u6362\uff0c\u4e00\u822c\u800c\u8a00\u663e\u793a\u8f6c\u6362\u6bd4\u8f83\u5b89\u5168\uff0c\u9690\u5f0f\u8f6c\u6362\u5bf9\u5ba2\u6237\u6bd4\u8f83\u65b9\u4fbf\uff09 \u6210\u5bf9\u4f7f\u7528 new \u548c delete \u65f6\u8981\u91c7\u53d6\u76f8\u540c\u5f62\u5f0f\uff08 new \u4e2d\u4f7f\u7528 [] \u5219 delete [] \uff0c new \u4e2d\u4e0d\u4f7f\u7528 [] \u5219 delete \uff09 \u4ee5\u72ec\u7acb\u8bed\u53e5\u5c06 newed \u5bf9\u8c61\u5b58\u50a8\u4e8e\uff08\u7f6e\u5165\uff09\u667a\u80fd\u6307\u9488\uff08\u5982\u679c\u4e0d\u8fd9\u6837\u505a\uff0c\u53ef\u80fd\u4f1a\u56e0\u4e3a\u7f16\u8bd1\u5668\u4f18\u5316\uff0c\u5bfc\u81f4\u96be\u4ee5\u5bdf\u89c9\u7684\u8d44\u6e90\u6cc4\u6f0f\uff09 \u8ba9\u63a5\u53e3\u5bb9\u6613\u88ab\u6b63\u786e\u4f7f\u7528\uff0c\u4e0d\u6613\u88ab\u8bef\u7528\uff08\u4fc3\u8fdb\u6b63\u5e38\u4f7f\u7528\u7684\u529e\u6cd5\uff1a\u63a5\u53e3\u7684\u4e00\u81f4\u6027\u3001\u5185\u7f6e\u7c7b\u578b\u7684\u884c\u4e3a\u517c\u5bb9\uff1b\u963b\u6b62\u8bef\u7528\u7684\u529e\u6cd5\uff1a\u5efa\u7acb\u65b0\u7c7b\u578b\uff0c\u9650\u5236\u7c7b\u578b\u4e0a\u7684\u64cd\u4f5c\uff0c\u7ea6\u675f\u5bf9\u8c61\u503c\u3001\u6d88\u9664\u5ba2\u6237\u7684\u8d44\u6e90\u7ba1\u7406\u8d23\u4efb\uff09 \u8bbe\u8ba1 class \u72b9\u5982\u8bbe\u8ba1 type\uff0c\u9700\u8981\u8003\u8651\u5bf9\u8c61\u521b\u5efa\u3001\u9500\u6bc1\u3001\u521d\u59cb\u5316\u3001\u8d4b\u503c\u3001\u503c\u4f20\u9012\u3001\u5408\u6cd5\u503c\u3001\u7ee7\u627f\u5173\u7cfb\u3001\u8f6c\u6362\u3001\u4e00\u822c\u5316\u7b49\u7b49\u3002 \u5b81\u4ee5 pass-by-reference-to-const \u66ff\u6362 pass-by-value \uff08\u524d\u8005\u901a\u5e38\u66f4\u9ad8\u6548\u3001\u907f\u514d\u5207\u5272\u95ee\u9898\uff08slicing problem\uff09\uff0c\u4f46\u4e0d\u9002\u7528\u4e8e\u5185\u7f6e\u7c7b\u578b\u3001STL\u8fed\u4ee3\u5668\u3001\u51fd\u6570\u5bf9\u8c61\uff09 \u5fc5\u987b\u8fd4\u56de\u5bf9\u8c61\u65f6\uff0c\u522b\u5984\u60f3\u8fd4\u56de\u5176 reference\uff08\u7edd\u4e0d\u8fd4\u56de pointer \u6216 reference \u6307\u5411\u4e00\u4e2a local stack \u5bf9\u8c61\uff0c\u6216\u8fd4\u56de reference \u6307\u5411\u4e00\u4e2a heap-allocated \u5bf9\u8c61\uff0c\u6216\u8fd4\u56de pointer \u6216 reference \u6307\u5411\u4e00\u4e2a local static \u5bf9\u8c61\u800c\u6709\u53ef\u80fd\u540c\u65f6\u9700\u8981\u591a\u4e2a\u8fd9\u6837\u7684\u5bf9\u8c61\u3002\uff09 \u5c06\u6210\u5458\u53d8\u91cf\u58f0\u660e\u4e3a private\uff08\u4e3a\u4e86\u5c01\u88c5\u3001\u4e00\u81f4\u6027\u3001\u5bf9\u5176\u8bfb\u5199\u7cbe\u786e\u63a7\u5236\u7b49\uff09 \u5b81\u4ee5 non-member\u3001non-friend \u66ff\u6362 member \u51fd\u6570\uff08\u53ef\u589e\u52a0\u5c01\u88c5\u6027\u3001\u5305\u88f9\u5f39\u6027\uff08packaging flexibility\uff09\u3001\u673a\u80fd\u6269\u5145\u6027\uff09 \u82e5\u6240\u6709\u53c2\u6570\uff08\u5305\u62ec\u88abthis\u6307\u9488\u6240\u6307\u7684\u90a3\u4e2a\u9690\u55bb\u53c2\u6570\uff09\u7686\u987b\u8981\u7c7b\u578b\u8f6c\u6362\uff0c\u8bf7\u4e3a\u6b64\u91c7\u7528 non-member \u51fd\u6570 \u8003\u8651\u5199\u4e00\u4e2a\u4e0d\u629b\u5f02\u5e38\u7684 swap \u51fd\u6570 \u5c3d\u53ef\u80fd\u5ef6\u540e\u53d8\u91cf\u5b9a\u4e49\u5f0f\u7684\u51fa\u73b0\u65f6\u95f4\uff08\u53ef\u589e\u52a0\u7a0b\u5e8f\u6e05\u6670\u5ea6\u5e76\u6539\u5584\u7a0b\u5e8f\u6548\u7387\uff09 \u5c3d\u91cf\u5c11\u505a\u8f6c\u578b\u52a8\u4f5c\uff08\u65e7\u5f0f\uff1a (T)expression \u3001 T(expression) \uff1b\u65b0\u5f0f\uff1a const_cast<T>(expression) \u3001 dynamic_cast<T>(expression) \u3001 reinterpret_cast<T>(expression) \u3001 static_cast<T>(expression) \u3001\uff1b\u5c3d\u91cf\u907f\u514d\u8f6c\u578b\u3001\u6ce8\u91cd\u6548\u7387\u907f\u514d dynamic_casts\u3001\u5c3d\u91cf\u8bbe\u8ba1\u6210\u65e0\u9700\u8f6c\u578b\u3001\u53ef\u628a\u8f6c\u578b\u5c01\u88c5\u6210\u51fd\u6570\u3001\u5b81\u53ef\u7528\u65b0\u5f0f\u8f6c\u578b\uff09 \u907f\u514d\u4f7f\u7528 handles\uff08\u5305\u62ec \u5f15\u7528\u3001\u6307\u9488\u3001\u8fed\u4ee3\u5668\uff09\u6307\u5411\u5bf9\u8c61\u5185\u90e8\uff08\u4ee5\u589e\u52a0\u5c01\u88c5\u6027\u3001\u4f7f const \u6210\u5458\u51fd\u6570\u7684\u884c\u4e3a\u66f4\u50cf const\u3001\u964d\u4f4e \u201c\u865a\u540a\u53f7\u7801\u724c\u201d\uff08dangling handles\uff0c\u5982\u60ac\u7a7a\u6307\u9488\u7b49\uff09\u7684\u53ef\u80fd\u6027\uff09 \u4e3a \u201c\u5f02\u5e38\u5b89\u5168\u201d \u800c\u52aa\u529b\u662f\u503c\u5f97\u7684\uff08\u5f02\u5e38\u5b89\u5168\u51fd\u6570\uff08Exception-safe functions\uff09\u5373\u4f7f\u53d1\u751f\u5f02\u5e38\u4e5f\u4e0d\u4f1a\u6cc4\u9732\u8d44\u6e90\u6216\u5141\u8bb8\u4efb\u4f55\u6570\u636e\u7ed3\u6784\u8d25\u574f\uff0c\u5206\u4e3a\u4e09\u79cd\u53ef\u80fd\u7684\u4fdd\u8bc1\uff1a\u57fa\u672c\u578b\u3001\u5f3a\u5217\u578b\u3001\u4e0d\u629b\u5f02\u5e38\u578b\uff09 \u900f\u5f7b\u4e86\u89e3 inlining \u7684\u91cc\u91cc\u5916\u5916\uff08inlining \u5728\u5927\u591a\u6570 C++ \u7a0b\u5e8f\u4e2d\u662f\u7f16\u8bd1\u671f\u7684\u884c\u4e3a\uff1binline \u51fd\u6570\u662f\u5426\u771f\u6b63 inline\uff0c\u53d6\u51b3\u4e8e\u7f16\u8bd1\u5668\uff1b\u5927\u90e8\u5206\u7f16\u8bd1\u5668\u62d2\u7edd\u592a\u8fc7\u590d\u6742\uff08\u5982\u5e26\u6709\u5faa\u73af\u6216\u9012\u5f52\uff09\u7684\u51fd\u6570 inlining\uff0c\u800c\u6240\u6709\u5bf9 virtual \u51fd\u6570\u7684\u8c03\u7528\uff08\u9664\u975e\u662f\u6700\u5e73\u6de1\u65e0\u5947\u7684\uff09\u4e5f\u90fd\u4f1a\u4f7f inlining \u843d\u7a7a\uff1binline \u9020\u6210\u7684\u4ee3\u7801\u81a8\u80c0\u53ef\u80fd\u5e26\u6765\u6548\u7387\u635f\u5931\uff1binline \u51fd\u6570\u65e0\u6cd5\u968f\u7740\u7a0b\u5e8f\u5e93\u7684\u5347\u7ea7\u800c\u5347\u7ea7\uff09 \u5c06\u6587\u4ef6\u95f4\u7684\u7f16\u8bd1\u4f9d\u5b58\u5173\u7cfb\u964d\u81f3\u6700\u4f4e\uff08\u5982\u679c\u4f7f\u7528 object references \u6216 object pointers \u53ef\u4ee5\u5b8c\u6210\u4efb\u52a1\uff0c\u5c31\u4e0d\u8981\u4f7f\u7528 objects\uff1b\u5982\u679c\u80fd\u591f\uff0c\u5c3d\u91cf\u4ee5 class \u58f0\u660e\u5f0f\u66ff\u6362 class \u5b9a\u4e49\u5f0f\uff1b\u4e3a\u58f0\u660e\u5f0f\u548c\u5b9a\u4e49\u5f0f\u63d0\u4f9b\u4e0d\u540c\u7684\u5934\u6587\u4ef6\uff09 \u786e\u5b9a\u4f60\u7684 public \u7ee7\u627f\u5851\u6a21\u51fa is-a\uff08\u662f\u4e00\u79cd\uff09\u5173\u7cfb\uff08\u9002\u7528\u4e8e base classes \u8eab\u4e0a\u7684\u6bcf\u4e00\u4ef6\u4e8b\u60c5\u4e00\u5b9a\u9002\u7528\u4e8e derived classes \u8eab\u4e0a\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a derived class \u5bf9\u8c61\u4e5f\u90fd\u662f\u4e00\u4e2a base class \u5bf9\u8c61\uff09 \u907f\u514d\u906e\u63a9\u7ee7\u627f\u800c\u6765\u7684\u540d\u5b57\uff08\u53ef\u4f7f\u7528 using \u58f0\u660e\u5f0f\u6216\u8f6c\u4ea4\u51fd\u6570\uff08forwarding functions\uff09\u6765\u8ba9\u88ab\u906e\u63a9\u7684\u540d\u5b57\u518d\u89c1\u5929\u65e5\uff09 \u533a\u5206\u63a5\u53e3\u7ee7\u627f\u548c\u5b9e\u73b0\u7ee7\u627f\uff08\u5728 public \u7ee7\u627f\u4e4b\u4e0b\uff0cderived classes \u603b\u662f\u7ee7\u627f base class \u7684\u63a5\u53e3\uff1bpure virtual \u51fd\u6570\u53ea\u5177\u4f53\u6307\u5b9a\u63a5\u53e3\u7ee7\u627f\uff1b\u975e\u7eaf impure virtual \u51fd\u6570\u5177\u4f53\u6307\u5b9a\u63a5\u53e3\u7ee7\u627f\u53ca\u7f3a\u7701\u5b9e\u73b0\u7ee7\u627f\uff1bnon-virtual \u51fd\u6570\u5177\u4f53\u6307\u5b9a\u63a5\u53e3\u7ee7\u627f\u4ee5\u53ca\u5f3a\u5236\u6027\u5b9e\u73b0\u7ee7\u627f\uff09 \u8003\u8651 virtual \u51fd\u6570\u4ee5\u5916\u7684\u5176\u4ed6\u9009\u62e9\uff08\u5982 Template Method \u8bbe\u8ba1\u6a21\u5f0f\u7684 non-virtual interface\uff08NVI\uff09\u624b\u6cd5\uff0c\u5c06 virtual \u51fd\u6570\u66ff\u6362\u4e3a \u201c\u51fd\u6570\u6307\u9488\u6210\u5458\u53d8\u91cf\u201d\uff0c\u4ee5 tr1::function \u6210\u5458\u53d8\u91cf\u66ff\u6362 virtual \u51fd\u6570\uff0c\u5c06\u7ee7\u627f\u4f53\u7cfb\u5185\u7684 virtual \u51fd\u6570\u66ff\u6362\u4e3a\u53e6\u4e00\u4e2a\u7ee7\u627f\u4f53\u7cfb\u5185\u7684 virtual \u51fd\u6570\uff09 \u7edd\u4e0d\u91cd\u65b0\u5b9a\u4e49\u7ee7\u627f\u800c\u6765\u7684 non-virtual \u51fd\u6570 \u7edd\u4e0d\u91cd\u65b0\u5b9a\u4e49\u7ee7\u627f\u800c\u6765\u7684\u7f3a\u7701\u53c2\u6570\u503c\uff0c\u56e0\u4e3a\u7f3a\u7701\u53c2\u6570\u503c\u662f\u9759\u6001\u7ed1\u5b9a\uff08statically bound\uff09\uff0c\u800c virtual \u51fd\u6570\u5374\u662f\u52a8\u6001\u7ed1\u5b9a\uff08dynamically bound\uff09 \u901a\u8fc7\u590d\u5408\u5851\u6a21 has-a\uff08\u6709\u4e00\u4e2a\uff09\u6216 \u201c\u6839\u636e\u67d0\u7269\u5b9e\u73b0\u51fa\u201d\uff08\u5728\u5e94\u7528\u57df\uff08application domain\uff09\uff0c\u590d\u5408\u610f\u5473 has-a\uff08\u6709\u4e00\u4e2a\uff09\uff1b\u5728\u5b9e\u73b0\u57df\uff08implementation domain\uff09\uff0c\u590d\u5408\u610f\u5473\u7740 is-implemented-in-terms-of\uff08\u6839\u636e\u67d0\u7269\u5b9e\u73b0\u51fa\uff09\uff09 \u660e\u667a\u800c\u5ba1\u614e\u5730\u4f7f\u7528 private \u7ee7\u627f\uff08private \u7ee7\u627f\u610f\u5473\u7740 is-implemented-in-terms-of\uff08\u6839\u636e\u67d0\u7269\u5b9e\u73b0\u51fa\uff09\uff0c\u5c3d\u53ef\u80fd\u4f7f\u7528\u590d\u5408\uff0c\u5f53 derived class \u9700\u8981\u8bbf\u95ee protected base class \u7684\u6210\u5458\uff0c\u6216\u9700\u8981\u91cd\u65b0\u5b9a\u4e49\u7ee7\u627f\u800c\u6765\u7684\u65f6\u5019 virtual \u51fd\u6570\uff0c\u6216\u9700\u8981 empty base \u6700\u4f18\u5316\u65f6\uff0c\u624d\u4f7f\u7528 private \u7ee7\u627f\uff09 \u660e\u667a\u800c\u5ba1\u614e\u5730\u4f7f\u7528\u591a\u91cd\u7ee7\u627f\uff08\u591a\u7ee7\u627f\u6bd4\u5355\u4e00\u7ee7\u627f\u590d\u6742\uff0c\u53ef\u80fd\u5bfc\u81f4\u65b0\u7684\u6b67\u4e49\u6027\uff0c\u4ee5\u53ca\u5bf9 virtual \u7ee7\u627f\u7684\u9700\u8981\uff0c\u4f46\u786e\u6709\u6b63\u5f53\u7528\u9014\uff0c\u5982 \u201cpublic \u7ee7\u627f\u67d0\u4e2a interface class\u201d \u548c \u201cprivate \u7ee7\u627f\u67d0\u4e2a\u534f\u52a9\u5b9e\u73b0\u7684 class\u201d\uff1bvirtual \u7ee7\u627f\u53ef\u89e3\u51b3\u591a\u7ee7\u627f\u4e0b\u83f1\u5f62\u7ee7\u627f\u7684\u4e8c\u4e49\u6027\u95ee\u9898\uff0c\u4f46\u4f1a\u589e\u52a0\u5927\u5c0f\u3001\u901f\u5ea6\u3001\u521d\u59cb\u5316\u53ca\u8d4b\u503c\u7684\u590d\u6742\u5ea6\u7b49\u7b49\u6210\u672c\uff09 \u4e86\u89e3\u9690\u5f0f\u63a5\u53e3\u548c\u7f16\u8bd1\u671f\u591a\u6001\uff08class \u548c templates \u90fd\u652f\u6301\u63a5\u53e3\uff08interfaces\uff09\u548c\u591a\u6001\uff08polymorphism\uff09\uff1bclass \u7684\u63a5\u53e3\u662f\u4ee5\u7b7e\u540d\u4e3a\u4e2d\u5fc3\u7684\u663e\u5f0f\u7684\uff08explicit\uff09\uff0c\u591a\u6001\u5219\u662f\u901a\u8fc7 virtual \u51fd\u6570\u53d1\u751f\u4e8e\u8fd0\u884c\u671f\uff1btemplate \u7684\u63a5\u53e3\u662f\u5960\u57fa\u4e8e\u6709\u6548\u8868\u8fbe\u5f0f\u7684\u9690\u5f0f\u7684\uff08implicit\uff09\uff0c\u591a\u6001\u5219\u662f\u901a\u8fc7 template \u5177\u73b0\u5316\u548c\u51fd\u6570\u91cd\u8f7d\u89e3\u6790\uff08function overloading resolution\uff09\u53d1\u751f\u4e8e\u7f16\u8bd1\u671f\uff09 \u4e86\u89e3 typename \u7684\u53cc\u91cd\u610f\u4e49\uff08\u58f0\u660e template \u7c7b\u578b\u53c2\u6570\u662f\uff0c\u524d\u7f00\u5173\u952e\u5b57 class \u548c typename \u7684\u610f\u4e49\u5b8c\u5168\u76f8\u540c\uff1b\u8bf7\u4f7f\u7528\u5173\u952e\u5b57 typename \u6807\u8bc6\u5d4c\u5957\u4ece\u5c5e\u7c7b\u578b\u540d\u79f0\uff0c\u4f46\u4e0d\u5f97\u5728\u57fa\u7c7b\u5217\uff08base class lists\uff09\u6216\u6210\u5458\u521d\u503c\u5217\uff08member initialization list\uff09\u5185\u4ee5\u5b83\u4f5c\u4e3a base class \u4fee\u9970\u7b26\uff09 \u5b66\u4e60\u5904\u7406\u6a21\u677f\u5316\u57fa\u7c7b\u5185\u7684\u540d\u79f0\uff08\u53ef\u5728 derived class templates \u5185\u901a\u8fc7 this-> \u6307\u6d89 base class templates \u5185\u7684\u6210\u5458\u540d\u79f0\uff0c\u6216\u85c9\u7531\u4e00\u4e2a\u660e\u767d\u5199\u51fa\u7684 \u201cbase class \u8d44\u683c\u4fee\u9970\u7b26\u201d \u5b8c\u6210\uff09 \u5c06\u4e0e\u53c2\u6570\u65e0\u5173\u7684\u4ee3\u7801\u62bd\u79bb templates\uff08\u56e0\u7c7b\u578b\u6a21\u677f\u53c2\u6570\uff08non-type template parameters\uff09\u800c\u9020\u6210\u4ee3\u7801\u81a8\u80c0\u5f80\u5f80\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\u53c2\u6570\u6216 class \u6210\u5458\u53d8\u91cf\u66ff\u6362 template \u53c2\u6570\u6765\u6d88\u9664\uff1b\u56e0\u7c7b\u578b\u53c2\u6570\uff08type parameters\uff09\u800c\u9020\u6210\u7684\u4ee3\u7801\u81a8\u80c0\u5f80\u5f80\u53ef\u4ee5\u901a\u8fc7\u8ba9\u5e26\u6709\u5b8c\u5168\u76f8\u540c\u4e8c\u8fdb\u5236\u8868\u8ff0\uff08binary representations\uff09\u7684\u5b9e\u73b0\u7c7b\u578b\uff08instantiation types\uff09\u5171\u4eab\u5b9e\u73b0\u7801\uff09 \u8fd0\u7528\u6210\u5458\u51fd\u6570\u6a21\u677f\u63a5\u53d7\u6240\u6709\u517c\u5bb9\u7c7b\u578b\uff08\u8bf7\u4f7f\u7528\u6210\u5458\u51fd\u6570\u6a21\u677f\uff08member function templates\uff09\u751f\u6210 \u201c\u53ef\u63a5\u53d7\u6240\u6709\u517c\u5bb9\u7c7b\u578b\u201d \u7684\u51fd\u6570\uff1b\u58f0\u660e member templates \u7528\u4e8e \u201c\u6cdb\u5316 copy \u6784\u9020\u201d \u6216 \u201c\u6cdb\u5316 assignment \u64cd\u4f5c\u201d \u65f6\u8fd8\u9700\u8981\u58f0\u660e\u6b63\u5e38\u7684 copy \u6784\u9020\u51fd\u6570\u548c copy assignment \u64cd\u4f5c\u7b26\uff09 \u9700\u8981\u7c7b\u578b\u8f6c\u6362\u65f6\u8bf7\u4e3a\u6a21\u677f\u5b9a\u4e49\u975e\u6210\u5458\u51fd\u6570\uff08\u5f53\u6211\u4eec\u7f16\u5199\u4e00\u4e2a class template\uff0c\u800c\u5b83\u6240\u63d0\u4f9b\u4e4b \u201c\u4e0e\u6b64 template \u76f8\u5173\u7684\u201d \u51fd\u6570\u652f\u6301 \u201c\u6240\u6709\u53c2\u6570\u4e4b\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u201d \u65f6\uff0c\u8bf7\u5c06\u90a3\u4e9b\u51fd\u6570\u5b9a\u4e49\u4e3a \u201cclass template \u5185\u90e8\u7684 friend \u51fd\u6570\u201d\uff09 \u8bf7\u4f7f\u7528 traits classes \u8868\u73b0\u7c7b\u578b\u4fe1\u606f\uff08traits classes \u901a\u8fc7 templates \u548c \u201ctemplates \u7279\u5316\u201d \u4f7f\u5f97 \u201c\u7c7b\u578b\u76f8\u5173\u4fe1\u606f\u201d \u5728\u7f16\u8bd1\u671f\u53ef\u7528\uff0c\u901a\u8fc7\u91cd\u8f7d\u6280\u672f\uff08overloading\uff09\u5b9e\u73b0\u5728\u7f16\u8bd1\u671f\u5bf9\u7c7b\u578b\u6267\u884c if...else \u6d4b\u8bd5\uff09 \u8ba4\u8bc6 template \u5143\u7f16\u7a0b\uff08\u6a21\u677f\u5143\u7f16\u7a0b\uff08TMP\uff0ctemplate metaprogramming\uff09\u53ef\u5c06\u5de5\u4f5c\u7531\u8fd0\u884c\u671f\u79fb\u5f80\u7f16\u8bd1\u671f\uff0c\u56e0\u6b64\u5f97\u4ee5\u5b9e\u73b0\u65e9\u671f\u9519\u8bef\u4fa6\u6d4b\u548c\u66f4\u9ad8\u7684\u6267\u884c\u6548\u7387\uff1bTMP \u53ef\u88ab\u7528\u6765\u751f\u6210 \u201c\u7ed9\u4e88\u653f\u7b56\u9009\u62e9\u7ec4\u5408\u201d\uff08based on combinations of policy choices\uff09\u7684\u5ba2\u6237\u5b9a\u5236\u4ee3\u7801\uff0c\u4e5f\u53ef\u7528\u6765\u907f\u514d\u751f\u6210\u5bf9\u67d0\u4e9b\u7279\u6b8a\u7c7b\u578b\u5e76\u4e0d\u9002\u5408\u7684\u4ee3\u7801\uff09 \u4e86\u89e3 new-handler \u7684\u884c\u4e3a\uff08set_new_handler \u5141\u8bb8\u5ba2\u6237\u6307\u5b9a\u4e00\u4e2a\u5728\u5185\u5b58\u5206\u914d\u65e0\u6cd5\u83b7\u5f97\u6ee1\u8db3\u65f6\u88ab\u8c03\u7528\u7684\u51fd\u6570\uff1bnothrow new \u662f\u4e00\u4e2a\u9887\u5177\u5c40\u9650\u7684\u5de5\u5177\uff0c\u56e0\u4e3a\u5b83\u53ea\u9002\u7528\u4e8e\u5185\u5b58\u5206\u914d\uff08operator new\uff09\uff0c\u540e\u7ee7\u7684\u6784\u9020\u51fd\u6570\u8c03\u7528\u8fd8\u662f\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\uff09 \u4e86\u89e3 new \u548c delete \u7684\u5408\u7406\u66ff\u6362\u65f6\u673a\uff08\u4e3a\u4e86\u68c0\u6d4b\u8fd0\u7528\u9519\u8bef\u3001\u6536\u96c6\u52a8\u6001\u5206\u914d\u5185\u5b58\u4e4b\u4f7f\u7528\u7edf\u8ba1\u4fe1\u606f\u3001\u589e\u52a0\u5206\u914d\u548c\u5f52\u8fd8\u901f\u5ea6\u3001\u964d\u4f4e\u7f3a\u7701\u5185\u5b58\u7ba1\u7406\u5668\u5e26\u6765\u7684\u7a7a\u95f4\u989d\u5916\u5f00\u9500\u3001\u5f25\u8865\u7f3a\u7701\u5206\u914d\u5668\u4e2d\u7684\u975e\u6700\u4f73\u9f50\u4f4d\u3001\u5c06\u76f8\u5173\u5bf9\u8c61\u6210\u7c07\u96c6\u4e2d\u3001\u83b7\u5f97\u975e\u4f20\u7edf\u7684\u884c\u4e3a\uff09 \u7f16\u5199 new \u548c delete \u65f6\u9700\u56fa\u5b88\u5e38\u89c4\uff08operator new \u5e94\u8be5\u5185\u6db5\u4e00\u4e2a\u65e0\u7a77\u5faa\u73af\uff0c\u5e76\u5728\u5176\u4e2d\u5c1d\u8bd5\u5206\u914d\u5185\u5b58\uff0c\u5982\u679c\u5b83\u65e0\u6cd5\u6ee1\u8db3\u5185\u5b58\u9700\u6c42\uff0c\u5c31\u5e94\u8be5\u8c03\u7528 new-handler\uff0c\u5b83\u4e5f\u5e94\u8be5\u6709\u80fd\u529b\u5904\u7406 0 bytes \u7533\u8bf7\uff0cclass \u4e13\u5c5e\u7248\u672c\u5219\u8fd8\u5e94\u8be5\u5904\u7406 \u201c\u6bd4\u6b63\u786e\u5927\u5c0f\u66f4\u5927\u7684\uff08\u9519\u8bef\uff09\u7533\u8bf7\u201d\uff1boperator delete \u5e94\u8be5\u5728\u6536\u5230 null \u6307\u9488\u65f6\u4e0d\u505a\u4efb\u4f55\u4e8b\uff0cclass \u4e13\u5c5e\u7248\u672c\u5219\u8fd8\u5e94\u8be5\u5904\u7406 \u201c\u6bd4\u6b63\u786e\u5927\u5c0f\u66f4\u5927\u7684\uff08\u9519\u8bef\uff09\u7533\u8bf7\u201d\uff09 \u5199\u4e86 placement new \u4e5f\u8981\u5199 placement delete\uff08\u5f53\u4f60\u5199\u4e00\u4e2a placement operator new\uff0c\u8bf7\u786e\u5b9a\u4e5f\u5199\u51fa\u4e86\u5bf9\u5e94\u7684 placement operator delete\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u53d1\u751f\u9690\u5fae\u800c\u65f6\u65ad\u65f6\u7eed\u7684\u5185\u5b58\u6cc4\u6f0f\uff1b\u5f53\u4f60\u58f0\u660e placement new \u548c placement delete\uff0c\u8bf7\u786e\u5b9a\u4e0d\u8981\u65e0\u610f\u8bc6\uff08\u975e\u6545\u610f\uff09\u5730\u906e\u63a9\u4e86\u5b83\u4eec\u5730\u6b63\u5e38\u7248\u672c\uff09 \u4e0d\u8981\u8f7b\u5ffd\u7f16\u8bd1\u5668\u7684\u8b66\u544a \u8ba9\u81ea\u5df1\u719f\u6089\u5305\u62ec TR1 \u5728\u5185\u7684\u6807\u51c6\u7a0b\u5e8f\u5e93\uff08TR1\uff0cC++ Technical Report 1\uff0cC++11 \u6807\u51c6\u7684\u8349\u7a3f\u6587\u4ef6\uff09 \u8ba9\u81ea\u5df1\u719f\u6089 Boost\uff08\u51c6\u6807\u51c6\u5e93\uff09 More Effective c++ # \u4ed4\u7ec6\u533a\u522b pointers \u548c references\uff08\u5f53\u4f60\u77e5\u9053\u4f60\u9700\u8981\u6307\u5411\u67d0\u4e2a\u4e1c\u897f\uff0c\u800c\u4e14\u7edd\u4e0d\u4f1a\u6539\u53d8\u6307\u5411\u5176\u4ed6\u4e1c\u897f\uff0c\u6216\u662f\u5f53\u4f60\u5b9e\u73b0\u4e00\u4e2a\u64cd\u4f5c\u7b26\u800c\u5176\u8bed\u6cd5\u9700\u6c42\u65e0\u6cd5\u7531 pointers \u8fbe\u6210\uff0c\u4f60\u5c31\u5e94\u8be5\u9009\u62e9 references\uff1b\u4efb\u4f55\u5176\u4ed6\u65f6\u5019\uff0c\u8bf7\u91c7\u7528 pointers\uff09 \u6700\u597d\u4f7f\u7528 C++ \u8f6c\u578b\u64cd\u4f5c\u7b26\uff08 static_cast \u3001 const_cast \u3001 dynamic_cast \u3001 reinterpret_cast \uff09 \u7edd\u4e0d\u8981\u4ee5\u591a\u6001\uff08polymorphically\uff09\u65b9\u5f0f\u5904\u7406\u6570\u7ec4\uff08\u591a\u6001\uff08polymorphism\uff09\u548c\u6307\u9488\u7b97\u672f\u4e0d\u80fd\u6df7\u7528\uff1b\u6570\u7ec4\u5bf9\u8c61\u51e0\u4e4e\u603b\u662f\u4f1a\u6d89\u53ca\u6307\u9488\u7684\u7b97\u672f\u8fd0\u7b97\uff0c\u6240\u4ee5\u6570\u7ec4\u548c\u591a\u6001\u4e0d\u8981\u6df7\u7528\uff09 \u975e\u5fc5\u8981\u4e0d\u63d0\u4f9b default constructor\uff08\u907f\u514d\u5bf9\u8c61\u4e2d\u7684\u5b57\u6bb5\u88ab\u65e0\u610f\u4e49\u5730\u521d\u59cb\u5316\uff09 \u5bf9\u5b9a\u5236\u7684 \u201c\u7c7b\u578b\u8f6c\u6362\u51fd\u6570\u201d \u4fdd\u6301\u8b66\u89c9\uff08\u5355\u81ea\u53d8\u91cf constructors \u53ef\u901a\u8fc7\u7b80\u6613\u6cd5\uff08explicit \u5173\u952e\u5b57\uff09\u6216\u4ee3\u7406\u7c7b\uff08proxy classes\uff09\u6765\u907f\u514d\u7f16\u8bd1\u5668\u8bef\u7528\uff1b\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u64cd\u4f5c\u7b26\u53ef\u6539\u4e3a\u663e\u5f0f\u7684 member function \u6765\u907f\u514d\u975e\u9884\u671f\u884c\u4e3a\uff09 \u533a\u522b increment/decrement \u64cd\u4f5c\u7b26\u7684\u524d\u7f6e\uff08prefix\uff09\u548c\u540e\u7f6e\uff08postfix\uff09\u5f62\u5f0f\uff08\u524d\u7f6e\u5f0f\u7d2f\u52a0\u540e\u53d6\u51fa\uff0c\u8fd4\u56de\u4e00\u4e2a reference\uff1b\u540e\u7f6e\u5f0f\u53d6\u51fa\u540e\u7d2f\u52a0\uff0c\u8fd4\u56de\u4e00\u4e2a const \u5bf9\u8c61\uff1b\u5904\u7406\u7528\u6237\u5b9a\u5236\u7c7b\u578b\u65f6\uff0c\u5e94\u8be5\u5c3d\u53ef\u80fd\u4f7f\u7528\u524d\u7f6e\u5f0f increment\uff1b\u540e\u7f6e\u5f0f\u7684\u5b9e\u73b0\u5e94\u4ee5\u5176\u524d\u7f6e\u5f0f\u5144\u5f1f\u4e3a\u57fa\u7840\uff09 \u5343\u4e07\u4e0d\u8981\u91cd\u8f7d && \uff0c || \u548c , \u64cd\u4f5c\u7b26\uff08 && \u4e0e || \u7684\u91cd\u8f7d\u4f1a\u7528 \u201c\u51fd\u6570\u8c03\u7528\u8bed\u4e49\u201d \u53d6\u4ee3 \u201c\u9aa4\u6b7b\u5f0f\u8bed\u4e49\u201d\uff1b , \u7684\u91cd\u8f7d\u5bfc\u81f4\u4e0d\u80fd\u4fdd\u8bc1\u5de6\u4fa7\u8868\u8fbe\u5f0f\u4e00\u5b9a\u6bd4\u53f3\u4fa7\u8868\u8fbe\u5f0f\u66f4\u65e9\u88ab\u8bc4\u4f30\uff09 \u4e86\u89e3\u5404\u79cd\u4e0d\u540c\u610f\u4e49\u7684 new \u548c delete\uff08 new operator \u3001 operator new \u3001 placement new \u3001 operator new[] \uff1b delete operator \u3001 operator delete \u3001 destructor \u3001 operator delete[] \uff09 \u5229\u7528 destructors \u907f\u514d\u6cc4\u6f0f\u8d44\u6e90\uff08\u5728 destructors \u91ca\u653e\u8d44\u6e90\u53ef\u4ee5\u907f\u514d\u5f02\u5e38\u65f6\u7684\u8d44\u6e90\u6cc4\u6f0f\uff09 \u5728 constructors \u5185\u963b\u6b62\u8d44\u6e90\u6cc4\u6f0f\uff08\u7531\u4e8e C++ \u53ea\u4f1a\u6790\u6784\u5df2\u6784\u9020\u5b8c\u6210\u7684\u5bf9\u8c61\uff0c\u56e0\u6b64\u5728\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528 try...catch \u6216\u8005 auto_ptr\uff08\u4ee5\u53ca\u4e0e\u4e4b\u76f8\u4f3c\u7684 classes\uff09 \u5904\u7406\u5f02\u5e38\u65f6\u8d44\u6e90\u6cc4\u9732\u95ee\u9898\uff09 \u7981\u6b62\u5f02\u5e38\u6d41\u51fa destructors \u4e4b\u5916\uff08\u539f\u56e0\uff1a\u4e00\u3001\u907f\u514d terminate \u51fd\u6570\u5728 exception \u4f20\u64ad\u8fc7\u7a0b\u7684\u6808\u5c55\u5f00\uff08stack-unwinding\uff09\u673a\u5236\u79cd\u88ab\u8c03\u7528\uff1b\u4e8c\u3001\u534f\u52a9\u786e\u4fdd destructors \u5b8c\u6210\u5176\u5e94\u8be5\u5b8c\u6210\u7684\u6240\u6709\u4e8b\u60c5\uff09 \u4e86\u89e3 \u201c\u629b\u51fa\u4e00\u4e2a exception\u201d \u4e0e \u201c\u4f20\u9012\u4e00\u4e2a\u53c2\u6570\u201d \u6216 \u201c\u8c03\u7528\u4e00\u4e2a\u865a\u51fd\u6570\u201d \u4e4b\u95f4\u7684\u5dee\u5f02\uff08\u7b2c\u4e00\uff0cexception objects \u603b\u662f\u4f1a\u88ab\u590d\u5236\uff08by pointer \u9664\u5916\uff09\uff0c\u5982\u679c\u4ee5 by value \u65b9\u5f0f\u6355\u6349\u751a\u81f3\u88ab\u590d\u5236\u4e24\u6b21\uff0c\u800c\u4f20\u9012\u7ed9\u51fd\u6570\u53c2\u6570\u7684\u5bf9\u8c61\u5219\u4e0d\u4e00\u5b9a\u5f97\u590d\u5236\uff1b\u7b2c\u4e8c\uff0c\u201c\u88ab\u629b\u51fa\u6210\u4e3a exceptions\u201d \u7684\u5bf9\u8c61\uff0c\u5176\u88ab\u5141\u8bb8\u7684\u7c7b\u578b\u8f6c\u6362\u52a8\u4f5c\u6bd4 \u201c\u88ab\u4f20\u9012\u5230\u51fd\u6570\u53bb\u201d \u7684\u5bf9\u8c61\u5c11\uff1b\u7b2c\u4e09\uff0ccatch \u5b50\u53e5\u4ee5\u5176 \u201c\u51fa\u73b0\u4e8e\u6e90\u4ee3\u7801\u7684\u987a\u5e8f\u201d \u88ab\u7f16\u8bd1\u5668\u68c0\u9a8c\u5bf9\u6bd4\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5339\u914d\u6210\u529f\u8005\u4fbf\u6267\u884c\uff0c\u800c\u8c03\u7528\u4e00\u4e2a\u865a\u51fd\u6570\uff0c\u88ab\u9009\u4e2d\u6267\u884c\u7684\u662f\u90a3\u4e2a \u201c\u4e0e\u5bf9\u8c61\u7c7b\u578b\u6700\u4f73\u543b\u5408\u201d \u7684\u51fd\u6570\uff09 \u4ee5 by reference \u65b9\u5f0f\u6355\u83b7 exceptions\uff08\u53ef\u907f\u514d\u5bf9\u8c61\u5220\u9664\u95ee\u9898\u3001exception objects \u7684\u5207\u5272\u95ee\u9898\uff0c\u53ef\u4fdd\u7559\u6355\u6349\u6807\u51c6 exceptions \u7684\u80fd\u529b\uff0c\u53ef\u7ea6\u675f exception object \u9700\u8981\u590d\u5236\u7684\u6b21\u6570\uff09 \u660e\u667a\u8fd0\u7528 exception specifications\uff08exception specifications \u5bf9 \u201c\u51fd\u6570\u5e0c\u671b\u629b\u51fa\u4ec0\u4e48\u6837\u7684 exceptions\u201d \u63d0\u4f9b\u4e86\u5353\u8d8a\u7684\u8bf4\u660e\uff1b\u4e5f\u6709\u4e00\u4e9b\u7f3a\u70b9\uff0c\u5305\u62ec\u7f16\u8bd1\u5668\u53ea\u5bf9\u5b83\u4eec\u505a\u5c40\u90e8\u6027\u68c0\u9a8c\u800c\u5f88\u5bb9\u6613\u4e0d\u7ecf\u610f\u5730\u8fdd\u53cd\uff0c\u4e0e\u53ef\u80fd\u4f1a\u59a8\u788d\u66f4\u4e0a\u5c42\u7684 exception \u5904\u7406\u51fd\u6570\u5904\u7406\u672a\u9884\u671f\u7684 exceptions\uff09 \u4e86\u89e3\u5f02\u5e38\u5904\u7406\u7684\u6210\u672c\uff08\u7c97\u7565\u4f30\u8ba1\uff0c\u5982\u679c\u4f7f\u7528 try \u8bed\u53e5\u5757\uff0c\u4ee3\u7801\u5927\u7ea6\u6574\u4f53\u81a8\u80c0 5%-10%\uff0c\u6267\u884c\u901f\u5ea6\u4ea6\u5927\u7ea6\u4e0b\u964d\u8fd9\u4e2a\u6570\uff1b\u56e0\u6b64\u8bf7\u5c06\u4f60\u5bf9 try \u8bed\u53e5\u5757\u548c exception specifications \u7684\u4f7f\u7528\u9650\u5236\u4e8e\u975e\u7528\u4e0d\u53ef\u7684\u5730\u70b9\uff0c\u5e76\u4e14\u5728\u771f\u6b63\u5f02\u5e38\u7684\u60c5\u51b5\u4e0b\u624d\u629b\u51fa exceptions\uff09 \u8c28\u8bb0 80-20 \u6cd5\u5219\uff08\u8f6f\u4ef6\u7684\u6574\u4f53\u6027\u80fd\u51e0\u4e4e\u603b\u662f\u7531\u5176\u6784\u6210\u8981\u7d20\uff08\u4ee3\u7801\uff09\u7684\u4e00\u5c0f\u90e8\u5206\u51b3\u5b9a\u7684\uff0c\u53ef\u4f7f\u7528\u7a0b\u5e8f\u5206\u6790\u5668\uff08program profiler\uff09\u8bc6\u522b\u51fa\u6d88\u8017\u8d44\u6e90\u7684\u4ee3\u7801\uff09 \u8003\u8651\u4f7f\u7528 lazy evaluation\uff08\u7f13\u5f0f\u8bc4\u4f30\uff09\uff08\u53ef\u5e94\u7528\u4e8e\uff1aReference Counting\uff08\u5f15\u7528\u8ba1\u6570\uff09\u6765\u907f\u514d\u975e\u5fc5\u8981\u7684\u5bf9\u8c61\u590d\u5236\u3001\u533a\u5206 operator[] \u7684\u8bfb\u548c\u5199\u52a8\u4f5c\u6765\u505a\u4e0d\u540c\u7684\u4e8b\u60c5\u3001Lazy Fetching\uff08\u7f13\u5f0f\u53d6\u51fa\uff09\u6765\u907f\u514d\u975e\u5fc5\u8981\u7684\u6570\u636e\u5e93\u8bfb\u53d6\u52a8\u4f5c\u3001Lazy Expression Evaluation\uff08\u8868\u8fbe\u5f0f\u7f13\u8bc4\u4f30\uff09\u6765\u907f\u514d\u975e\u5fc5\u8981\u7684\u6570\u503c\u8ba1\u7b97\u52a8\u4f5c\uff09 \u5206\u671f\u644a\u8fd8\u9884\u671f\u7684\u8ba1\u7b97\u6210\u672c\uff08\u5f53\u4f60\u5fc5\u987b\u652f\u6301\u67d0\u4e9b\u8fd0\u7b97\u800c\u5176\u7ed3\u6784\u51e0\u4e4e\u603b\u662f\u88ab\u9700\u8981\uff0c\u6216\u5176\u7ed3\u679c\u5e38\u5e38\u88ab\u591a\u6b21\u9700\u8981\u7684\u65f6\u5019\uff0cover-eager evaluation\uff08\u8d85\u6025\u8bc4\u4f30\uff09\u53ef\u4ee5\u6539\u5584\u7a0b\u5e8f\u6548\u7387\uff09 Google C++ Style Guide # \u82f1\u6587\uff1a Google C++ Style Guide \u4e2d\u6587\uff1a C++ \u98ce\u683c\u6307\u5357 \u5176\u4ed6 # Bjarne Stroustrup \u7684\u5e38\u89c1\u95ee\u9898 Bjarne Stroustrup \u7684 C++ \u98ce\u683c\u548c\u6280\u5de7\u5e38\u89c1\u95ee\u9898 \ud83d\udce6 STL # STL \u7d22\u5f15 # STL \u65b9\u6cd5\u542b\u4e49\u7d22\u5f15 STL \u5bb9\u5668 # \u5bb9\u5668 \u5e95\u5c42\u6570\u636e\u7ed3\u6784 \u65f6\u95f4\u590d\u6742\u5ea6 \u6709\u65e0\u5e8f \u53ef\u4e0d\u53ef\u91cd\u590d \u5176\u4ed6 array \u6570\u7ec4 \u968f\u673a\u8bfb\u6539 O(1) \u65e0\u5e8f \u53ef\u91cd\u590d \u652f\u6301\u968f\u673a\u8bbf\u95ee vector \u6570\u7ec4 \u968f\u673a\u8bfb\u6539\u3001\u5c3e\u90e8\u63d2\u5165\u3001\u5c3e\u90e8\u5220\u9664 O(1) \u5934\u90e8\u63d2\u5165\u3001\u5934\u90e8\u5220\u9664 O(n) \u65e0\u5e8f \u53ef\u91cd\u590d \u652f\u6301\u968f\u673a\u8bbf\u95ee deque \u53cc\u7aef\u961f\u5217 \u5934\u5c3e\u63d2\u5165\u3001\u5934\u5c3e\u5220\u9664 O(1) \u65e0\u5e8f \u53ef\u91cd\u590d \u4e00\u4e2a\u4e2d\u592e\u63a7\u5236\u5668 + \u591a\u4e2a\u7f13\u51b2\u533a\uff0c\u652f\u6301\u9996\u5c3e\u5feb\u901f\u589e\u5220\uff0c\u652f\u6301\u968f\u673a\u8bbf\u95ee forward_list \u5355\u5411\u94fe\u8868 \u63d2\u5165\u3001\u5220\u9664 O(1) \u65e0\u5e8f \u53ef\u91cd\u590d \u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee list \u53cc\u5411\u94fe\u8868 \u63d2\u5165\u3001\u5220\u9664 O(1) \u65e0\u5e8f \u53ef\u91cd\u590d \u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee stack deque / list \u9876\u90e8\u63d2\u5165\u3001\u9876\u90e8\u5220\u9664 O(1) \u65e0\u5e8f \u53ef\u91cd\u590d deque \u6216 list \u5c01\u95ed\u5934\u7aef\u5f00\u53e3\uff0c\u4e0d\u7528 vector \u7684\u539f\u56e0\u5e94\u8be5\u662f\u5bb9\u91cf\u5927\u5c0f\u6709\u9650\u5236\uff0c\u6269\u5bb9\u8017\u65f6 queue deque / list \u5c3e\u90e8\u63d2\u5165\u3001\u5934\u90e8\u5220\u9664 O(1) \u65e0\u5e8f \u53ef\u91cd\u590d deque \u6216 list \u5c01\u95ed\u5934\u7aef\u5f00\u53e3\uff0c\u4e0d\u7528 vector \u7684\u539f\u56e0\u5e94\u8be5\u662f\u5bb9\u91cf\u5927\u5c0f\u6709\u9650\u5236\uff0c\u6269\u5bb9\u8017\u65f6 priority_queue vector + max-heap \u63d2\u5165\u3001\u5220\u9664 O(log 2 n) \u6709\u5e8f \u53ef\u91cd\u590d vector\u5bb9\u5668+heap\u5904\u7406\u89c4\u5219 set \u7ea2\u9ed1\u6811 \u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(log 2 n) \u6709\u5e8f \u4e0d\u53ef\u91cd\u590d multiset \u7ea2\u9ed1\u6811 \u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(log 2 n) \u6709\u5e8f \u53ef\u91cd\u590d map \u7ea2\u9ed1\u6811 \u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(log 2 n) \u6709\u5e8f \u4e0d\u53ef\u91cd\u590d multimap \u7ea2\u9ed1\u6811 \u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(log 2 n) \u6709\u5e8f \u53ef\u91cd\u590d unordered_set \u54c8\u5e0c\u8868 \u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(1) \u6700\u5dee O(n) \u65e0\u5e8f \u4e0d\u53ef\u91cd\u590d unordered_multiset \u54c8\u5e0c\u8868 \u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(1) \u6700\u5dee O(n) \u65e0\u5e8f \u53ef\u91cd\u590d unordered_map \u54c8\u5e0c\u8868 \u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(1) \u6700\u5dee O(n) \u65e0\u5e8f \u4e0d\u53ef\u91cd\u590d unordered_multimap \u54c8\u5e0c\u8868 \u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(1) \u6700\u5dee O(n) \u65e0\u5e8f \u53ef\u91cd\u590d STL \u7b97\u6cd5 # \u7b97\u6cd5 \u5e95\u5c42\u7b97\u6cd5 \u65f6\u95f4\u590d\u6742\u5ea6 \u53ef\u4e0d\u53ef\u91cd\u590d find \u987a\u5e8f\u67e5\u627e O(n) \u53ef\u91cd\u590d sort \u5185\u7701\u6392\u5e8f O(n*log 2 n) \u53ef\u91cd\u590d \u303d\ufe0f \u6570\u636e\u7ed3\u6784 # \u987a\u5e8f\u7ed3\u6784 # \u987a\u5e8f\u6808\uff08Sequence Stack\uff09 # SqStack.cpp \u987a\u5e8f\u6808\u6570\u636e\u7ed3\u6784\u548c\u56fe\u7247 typedef struct { ElemType * elem ; int top ; int size ; int increment ; } SqStack ; \u961f\u5217\uff08Sequence Queue\uff09 # \u961f\u5217\u6570\u636e\u7ed3\u6784 typedef struct { ElemType * elem ; int front ; int rear ; int maxSize ; } SqQueue ; \u975e\u5faa\u73af\u961f\u5217 # \u975e\u5faa\u73af\u961f\u5217\u56fe\u7247 SqQueue.rear++ \u5faa\u73af\u961f\u5217 # \u5faa\u73af\u961f\u5217\u56fe\u7247 SqQueue.rear = (SqQueue.rear + 1) % SqQueue.maxSize \u987a\u5e8f\u8868\uff08Sequence List\uff09 # SqList.cpp \u987a\u5e8f\u8868\u6570\u636e\u7ed3\u6784\u548c\u56fe\u7247 typedef struct { ElemType * elem ; int length ; int size ; int increment ; } SqList ; \u94fe\u5f0f\u7ed3\u6784 # LinkList.cpp LinkList_with_head.cpp \u94fe\u5f0f\u6570\u636e\u7ed3\u6784 typedef struct LNode { ElemType data ; struct LNode * next ; } LNode , * LinkList ; \u94fe\u961f\u5217\uff08Link Queue\uff09 # \u94fe\u961f\u5217\u56fe\u7247 \u7ebf\u6027\u8868\u7684\u94fe\u5f0f\u8868\u793a # \u5355\u94fe\u8868\uff08Link List\uff09 # \u5355\u94fe\u8868\u56fe\u7247 \u53cc\u5411\u94fe\u8868\uff08Du-Link-List\uff09 # \u53cc\u5411\u94fe\u8868\u56fe\u7247 \u5faa\u73af\u94fe\u8868\uff08Cir-Link-List\uff09 # \u5faa\u73af\u94fe\u8868\u56fe\u7247 \u54c8\u5e0c\u8868 # HashTable.cpp \u6982\u5ff5 # \u54c8\u5e0c\u51fd\u6570\uff1a H(key): K -> D , key \u2208 K \u6784\u9020\u65b9\u6cd5 # \u76f4\u63a5\u5b9a\u5740\u6cd5 \u9664\u7559\u4f59\u6570\u6cd5 \u6570\u5b57\u5206\u6790\u6cd5 \u6298\u53e0\u6cd5 \u5e73\u65b9\u53d6\u4e2d\u6cd5 \u51b2\u7a81\u5904\u7406\u65b9\u6cd5 # \u94fe\u5730\u5740\u6cd5\uff1akey \u76f8\u540c\u7684\u7528\u5355\u94fe\u8868\u94fe\u63a5 \u5f00\u653e\u5b9a\u5740\u6cd5 \u7ebf\u6027\u63a2\u6d4b\u6cd5\uff1akey \u76f8\u540c -> \u653e\u5230 key \u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c Hi = (H(key) + i) % m \u4e8c\u6b21\u63a2\u6d4b\u6cd5\uff1akey \u76f8\u540c -> \u653e\u5230 Di = 1^2, -1^2, ..., \u00b1\uff08k)^2,(k<=m/2\uff09 \u968f\u673a\u63a2\u6d4b\u6cd5\uff1a H = (H(key) + \u4f2a\u968f\u673a\u6570) % m \u7ebf\u6027\u63a2\u6d4b\u7684\u54c8\u5e0c\u8868\u6570\u636e\u7ed3\u6784 # \u7ebf\u6027\u63a2\u6d4b\u7684\u54c8\u5e0c\u8868\u6570\u636e\u7ed3\u6784\u548c\u56fe\u7247 typedef char KeyType ; typedef struct { KeyType key ; } RcdType ; typedef struct { RcdType * rcd ; int size ; int count ; bool * tag ; } HashTable ; \u9012\u5f52 # \u6982\u5ff5 # \u51fd\u6570\u76f4\u63a5\u6216\u95f4\u63a5\u5730\u8c03\u7528\u81ea\u8eab \u9012\u5f52\u4e0e\u5206\u6cbb # \u5206\u6cbb\u6cd5 \u95ee\u9898\u7684\u5206\u89e3 \u95ee\u9898\u89c4\u6a21\u7684\u5206\u89e3 \u6298\u534a\u67e5\u627e\uff08\u9012\u5f52\uff09 \u5f52\u5e76\u6392\u5e8f\uff08\u9012\u5f52\uff09 \u5feb\u901f\u6392\u5e8f\uff08\u9012\u5f52\uff09 \u9012\u5f52\u4e0e\u8fed\u4ee3 # \u8fed\u4ee3\uff1a\u53cd\u590d\u5229\u7528\u53d8\u91cf\u65e7\u503c\u63a8\u51fa\u65b0\u503c \u6298\u534a\u67e5\u627e\uff08\u8fed\u4ee3\uff09 \u5f52\u5e76\u6392\u5e8f\uff08\u8fed\u4ee3\uff09 \u5e7f\u4e49\u8868 # \u5934\u5c3e\u94fe\u8868\u5b58\u50a8\u8868\u793a # \u5e7f\u4e49\u8868\u7684\u5934\u5c3e\u94fe\u8868\u5b58\u50a8\u8868\u793a\u548c\u56fe\u7247 // \u5e7f\u4e49\u8868\u7684\u5934\u5c3e\u94fe\u8868\u5b58\u50a8\u8868\u793a typedef enum { ATOM , LIST } ElemTag ; // ATOM==0\uff1a\u539f\u5b50\uff0cLIST==1\uff1a\u5b50\u8868 typedef struct GLNode { ElemTag tag ; // \u516c\u5171\u90e8\u5206\uff0c\u7528\u4e8e\u533a\u5206\u539f\u5b50\u7ed3\u70b9\u548c\u8868\u7ed3\u70b9 union { // \u539f\u5b50\u7ed3\u70b9\u548c\u8868\u7ed3\u70b9\u7684\u8054\u5408\u90e8\u5206 AtomType atom ; // atom \u662f\u539f\u5b50\u7ed3\u70b9\u7684\u503c\u57df\uff0cAtomType \u7531\u7528\u6237\u5b9a\u4e49 struct { struct GLNode * hp , * tp ; } ptr ; // ptr \u662f\u8868\u7ed3\u70b9\u7684\u6307\u9488\u57df\uff0cprt.hp \u548c ptr.tp \u5206\u522b\u6307\u5411\u8868\u5934\u548c\u8868\u5c3e } a ; } * GList , GLNode ; \u6269\u5c55\u7ebf\u6027\u94fe\u8868\u5b58\u50a8\u8868\u793a # \u6269\u5c55\u7ebf\u6027\u94fe\u8868\u5b58\u50a8\u8868\u793a\u548c\u56fe\u7247 // \u5e7f\u4e49\u8868\u7684\u6269\u5c55\u7ebf\u6027\u94fe\u8868\u5b58\u50a8\u8868\u793a typedef enum { ATOM , LIST } ElemTag ; // ATOM==0\uff1a\u539f\u5b50\uff0cLIST==1\uff1a\u5b50\u8868 typedef struct GLNode1 { ElemTag tag ; // \u516c\u5171\u90e8\u5206\uff0c\u7528\u4e8e\u533a\u5206\u539f\u5b50\u7ed3\u70b9\u548c\u8868\u7ed3\u70b9 union { // \u539f\u5b50\u7ed3\u70b9\u548c\u8868\u7ed3\u70b9\u7684\u8054\u5408\u90e8\u5206 AtomType atom ; // \u539f\u5b50\u7ed3\u70b9\u7684\u503c\u57df struct GLNode1 * hp ; // \u8868\u7ed3\u70b9\u7684\u8868\u5934\u6307\u9488 } a ; struct GLNode1 * tp ; // \u76f8\u5f53\u4e8e\u7ebf\u6027\u94fe\u8868\u7684 next\uff0c\u6307\u5411\u4e0b\u4e00\u4e2a\u5143\u7d20\u7ed3\u70b9 } * GList1 , GLNode1 ; \u4e8c\u53c9\u6811 # BinaryTree.cpp \u6027\u8d28 # \u975e\u7a7a\u4e8c\u53c9\u6811\u7b2c i \u5c42\u6700\u591a 2 (i-1) \u4e2a\u7ed3\u70b9 \uff08i >= 1\uff09 \u6df1\u5ea6\u4e3a k \u7684\u4e8c\u53c9\u6811\u6700\u591a 2 k - 1 \u4e2a\u7ed3\u70b9 \uff08k >= 1\uff09 \u5ea6\u4e3a 0 \u7684\u7ed3\u70b9\u6570\u4e3a n 0 \uff0c\u5ea6\u4e3a 2 \u7684\u7ed3\u70b9\u6570\u4e3a n 2 \uff0c\u5219 n 0 = n 2 + 1 \u6709 n \u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u6df1\u5ea6 k = \u230a log 2 (n) \u230b + 1 \u5bf9\u4e8e\u542b n \u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u4e2d\u7f16\u53f7\u4e3a i \uff081 <= i <= n\uff09 \u7684\u7ed3\u70b9 \u82e5 i = 1\uff0c\u4e3a\u6839\uff0c\u5426\u5219\u53cc\u4eb2\u4e3a \u230a i / 2 \u230b \u82e5 2i > n\uff0c\u5219 i \u7ed3\u70b9\u6ca1\u6709\u5de6\u5b69\u5b50\uff0c\u5426\u5219\u5b69\u5b50\u7f16\u53f7\u4e3a 2i \u82e5 2i + 1 > n\uff0c\u5219 i \u7ed3\u70b9\u6ca1\u6709\u53f3\u5b69\u5b50\uff0c\u5426\u5219\u5b69\u5b50\u7f16\u53f7\u4e3a 2i + 1 \u5b58\u50a8\u7ed3\u6784 # \u4e8c\u53c9\u6811\u6570\u636e\u7ed3\u6784 typedef struct BiTNode { TElemType data ; struct BiTNode * lchild , * rchild ; } BiTNode , * BiTree ; \u987a\u5e8f\u5b58\u50a8 # \u4e8c\u53c9\u6811\u987a\u5e8f\u5b58\u50a8\u56fe\u7247 \u94fe\u5f0f\u5b58\u50a8 # \u4e8c\u53c9\u6811\u94fe\u5f0f\u5b58\u50a8\u56fe\u7247 \u904d\u5386\u65b9\u5f0f # \u5148\u5e8f\u904d\u5386 \u4e2d\u5e8f\u904d\u5386 \u540e\u7eed\u904d\u5386 \u5c42\u6b21\u904d\u5386 \u5206\u7c7b # \u6ee1\u4e8c\u53c9\u6811 \u5b8c\u5168\u4e8c\u53c9\u6811\uff08\u5806\uff09 \u5927\u9876\u5806\uff1a\u6839 >= \u5de6 && \u6839 >= \u53f3 \u5c0f\u9876\u5806\uff1a\u6839 <= \u5de6 && \u6839 <= \u53f3 \u4e8c\u53c9\u67e5\u627e\u6811\uff08\u4e8c\u53c9\u6392\u5e8f\u6811\uff09\uff1a\u5de6 < \u6839 < \u53f3 \u5e73\u8861\u4e8c\u53c9\u6811\uff08AVL\u6811\uff09\uff1a| \u5de6\u5b50\u6811\u6811\u9ad8 - \u53f3\u5b50\u6811\u6811\u9ad8 | <= 1 \u6700\u5c0f\u5931\u8861\u6811\uff1a\u5e73\u8861\u4e8c\u53c9\u6811\u63d2\u5165\u65b0\u7ed3\u70b9\u5bfc\u81f4\u5931\u8861\u7684\u5b50\u6811\uff1a\u8c03\u6574\uff1a LL\u578b\uff1a\u6839\u7684\u5de6\u5b69\u5b50\u53f3\u65cb RR\u578b\uff1a\u6839\u7684\u53f3\u5b69\u5b50\u5de6\u65cb LR\u578b\uff1a\u6839\u7684\u5de6\u5b69\u5b50\u5de6\u65cb\uff0c\u518d\u53f3\u65cb RL\u578b\uff1a\u53f3\u5b69\u5b50\u7684\u5de6\u5b50\u6811\uff0c\u5148\u53f3\u65cb\uff0c\u518d\u5de6\u65cb \u5176\u4ed6\u6811\u53ca\u68ee\u6797 # \u6811\u7684\u5b58\u50a8\u7ed3\u6784 # \u53cc\u4eb2\u8868\u793a\u6cd5 \u53cc\u4eb2\u5b69\u5b50\u8868\u793a\u6cd5 \u5b69\u5b50\u5144\u5f1f\u8868\u793a\u6cd5 \u5e76\u67e5\u96c6 # \u4e00\u79cd\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6\u6240\u6784\u6210\u7684\u96c6\u5408 S = {S1, S2, ..., Sn} \u5e73\u8861\u4e8c\u53c9\u6811\uff08AVL\u6811\uff09 # \u6027\u8d28 # | \u5de6\u5b50\u6811\u6811\u9ad8 - \u53f3\u5b50\u6811\u6811\u9ad8 | <= 1 \u5e73\u8861\u4e8c\u53c9\u6811\u5fc5\u5b9a\u662f\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u53cd\u4e4b\u5219\u4e0d\u4e00\u5b9a \u6700\u5c0f\u4e8c\u53c9\u5e73\u8861\u6811\u7684\u8282\u70b9\u7684\u516c\u5f0f\uff1a F(n)=F(n-1)+F(n-2)+1 \uff081 \u662f\u6839\u8282\u70b9\uff0cF(n-1) \u662f\u5de6\u5b50\u6811\u7684\u8282\u70b9\u6570\u91cf\uff0cF(n-2) \u662f\u53f3\u5b50\u6811\u7684\u8282\u70b9\u6570\u91cf\uff09 \u5e73\u8861\u4e8c\u53c9\u6811\u56fe\u7247 \u6700\u5c0f\u5931\u8861\u6811 # \u5e73\u8861\u4e8c\u53c9\u6811\u63d2\u5165\u65b0\u7ed3\u70b9\u5bfc\u81f4\u5931\u8861\u7684\u5b50\u6811 \u8c03\u6574\uff1a LL \u578b\uff1a\u6839\u7684\u5de6\u5b69\u5b50\u53f3\u65cb RR \u578b\uff1a\u6839\u7684\u53f3\u5b69\u5b50\u5de6\u65cb LR \u578b\uff1a\u6839\u7684\u5de6\u5b69\u5b50\u5de6\u65cb\uff0c\u518d\u53f3\u65cb RL \u578b\uff1a\u53f3\u5b69\u5b50\u7684\u5de6\u5b50\u6811\uff0c\u5148\u53f3\u65cb\uff0c\u518d\u5de6\u65cb \u7ea2\u9ed1\u6811 # RedBlackTree.cpp \u7ea2\u9ed1\u6811\u7684\u7279\u5f81\u662f\u4ec0\u4e48\uff1f # \u8282\u70b9\u662f\u7ea2\u8272\u6216\u9ed1\u8272\u3002 \u6839\u662f\u9ed1\u8272\u3002 \u6240\u6709\u53f6\u5b50\u90fd\u662f\u9ed1\u8272\uff08\u53f6\u5b50\u662f NIL \u8282\u70b9\uff09\u3002 \u6bcf\u4e2a\u7ea2\u8272\u8282\u70b9\u5fc5\u987b\u6709\u4e24\u4e2a\u9ed1\u8272\u7684\u5b50\u8282\u70b9\u3002\uff08\u4ece\u6bcf\u4e2a\u53f6\u5b50\u5230\u6839\u7684\u6240\u6709\u8def\u5f84\u4e0a\u4e0d\u80fd\u6709\u4e24\u4e2a\u8fde\u7eed\u7684\u7ea2\u8272\u8282\u70b9\u3002\uff09\uff08\u65b0\u589e\u8282\u70b9\u7684\u7236\u8282\u70b9\u5fc5\u987b\u76f8\u540c\uff09 \u4ece\u4efb\u4e00\u8282\u70b9\u5230\u5176\u6bcf\u4e2a\u53f6\u5b50\u7684\u6240\u6709\u7b80\u5355\u8def\u5f84\u90fd\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8272\u8282\u70b9\u3002\uff08\u65b0\u589e\u8282\u70b9\u5fc5\u987b\u4e3a\u7ea2\uff09 \u8c03\u6574 # \u53d8\u8272 \u5de6\u65cb \u53f3\u65cb \u5e94\u7528 # \u5173\u8054\u6570\u7ec4\uff1a\u5982 STL \u4e2d\u7684 map\u3001set \u7ea2\u9ed1\u6811\u3001B \u6811\u3001B+ \u6811\u7684\u533a\u522b\uff1f # \u7ea2\u9ed1\u6811\u7684\u6df1\u5ea6\u6bd4\u8f83\u5927\uff0c\u800c B \u6811\u548c B+ \u6811\u7684\u6df1\u5ea6\u5219\u76f8\u5bf9\u8981\u5c0f\u4e00\u4e9b B+ \u6811\u5219\u5c06\u6570\u636e\u90fd\u4fdd\u5b58\u5728\u53f6\u5b50\u8282\u70b9\uff0c\u540c\u65f6\u901a\u8fc7\u94fe\u8868\u7684\u5f62\u5f0f\u5c06\u4ed6\u4eec\u8fde\u63a5\u5728\u4e00\u8d77\u3002 B \u6811\uff08B-tree\uff09\u3001B+ \u6811\uff08B+-tree\uff09 # B \u6811\u3001B+ \u6811\u56fe\u7247 \u7279\u70b9 # \u4e00\u822c\u5316\u7684\u4e8c\u53c9\u67e5\u627e\u6811\uff08binary search tree\uff09 \u201c\u77ee\u80d6\u201d\uff0c\u5185\u90e8\uff08\u975e\u53f6\u5b50\uff09\u8282\u70b9\u53ef\u4ee5\u62e5\u6709\u53ef\u53d8\u6570\u91cf\u7684\u5b50\u8282\u70b9\uff08\u6570\u91cf\u8303\u56f4\u9884\u5148\u5b9a\u4e49\u597d\uff09 \u5e94\u7528 # \u5927\u90e8\u5206\u6587\u4ef6\u7cfb\u7edf\u3001\u6570\u636e\u5e93\u7cfb\u7edf\u90fd\u91c7\u7528B\u6811\u3001B+\u6811\u4f5c\u4e3a\u7d22\u5f15\u7ed3\u6784 \u533a\u522b # B+\u6811\u4e2d\u53ea\u6709\u53f6\u5b50\u8282\u70b9\u4f1a\u5e26\u6709\u6307\u5411\u8bb0\u5f55\u7684\u6307\u9488\uff08ROWID\uff09\uff0c\u800cB\u6811\u5219\u6240\u6709\u8282\u70b9\u90fd\u5e26\u6709\uff0c\u5728\u5185\u90e8\u8282\u70b9\u51fa\u73b0\u7684\u7d22\u5f15\u9879\u4e0d\u4f1a\u518d\u51fa\u73b0\u5728\u53f6\u5b50\u8282\u70b9\u4e2d\u3002 B+\u6811\u4e2d\u6240\u6709\u53f6\u5b50\u8282\u70b9\u90fd\u662f\u901a\u8fc7\u6307\u9488\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u800cB\u6811\u4e0d\u4f1a\u3002 B\u6811\u7684\u4f18\u70b9 # \u5bf9\u4e8e\u5728\u5185\u90e8\u8282\u70b9\u7684\u6570\u636e\uff0c\u53ef\u76f4\u63a5\u5f97\u5230\uff0c\u4e0d\u5fc5\u6839\u636e\u53f6\u5b50\u8282\u70b9\u6765\u5b9a\u4f4d\u3002 B+\u6811\u7684\u4f18\u70b9 # \u975e\u53f6\u5b50\u8282\u70b9\u4e0d\u4f1a\u5e26\u4e0a ROWID\uff0c\u8fd9\u6837\uff0c\u4e00\u4e2a\u5757\u4e2d\u53ef\u4ee5\u5bb9\u7eb3\u66f4\u591a\u7684\u7d22\u5f15\u9879\uff0c\u4e00\u662f\u53ef\u4ee5\u964d\u4f4e\u6811\u7684\u9ad8\u5ea6\u3002\u4e8c\u662f\u4e00\u4e2a\u5185\u90e8\u8282\u70b9\u53ef\u4ee5\u5b9a\u4f4d\u66f4\u591a\u7684\u53f6\u5b50\u8282\u70b9\u3002 \u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\u901a\u8fc7\u6307\u9488\u6765\u8fde\u63a5\uff0c\u8303\u56f4\u626b\u63cf\u5c06\u5341\u5206\u7b80\u5355\uff0c\u800c\u5bf9\u4e8eB\u6811\u6765\u8bf4\uff0c\u5219\u9700\u8981\u5728\u53f6\u5b50\u8282\u70b9\u548c\u5185\u90e8\u8282\u70b9\u4e0d\u505c\u7684\u5f80\u8fd4\u79fb\u52a8\u3002 B \u6811\u3001B+ \u6811\u533a\u522b\u6765\u81ea\uff1a differences-between-b-trees-and-b-trees \u3001 B\u6811\u548cB+\u6811\u7684\u533a\u522b \u516b\u53c9\u6811 # \u516b\u53c9\u6811\u56fe\u7247 \u516b\u53c9\u6811\uff08octree\uff09\uff0c\u6216\u79f0\u516b\u5143\u6811\uff0c\u662f\u4e00\u79cd\u7528\u4e8e\u63cf\u8ff0\u4e09\u7ef4\u7a7a\u95f4\uff08\u5212\u5206\u7a7a\u95f4\uff09\u7684\u6811\u72b6\u6570\u636e\u7ed3\u6784\u3002\u516b\u53c9\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u4e00\u4e2a\u6b63\u65b9\u4f53\u7684\u4f53\u79ef\u5143\u7d20\uff0c\u6bcf\u4e2a\u8282\u70b9\u6709\u516b\u4e2a\u5b50\u8282\u70b9\uff0c\u8fd9\u516b\u4e2a\u5b50\u8282\u70b9\u6240\u8868\u793a\u7684\u4f53\u79ef\u5143\u7d20\u52a0\u5728\u4e00\u8d77\u5c31\u7b49\u4e8e\u7236\u8282\u70b9\u7684\u4f53\u79ef\u3002\u4e00\u822c\u4e2d\u5fc3\u70b9\u4f5c\u4e3a\u8282\u70b9\u7684\u5206\u53c9\u4e2d\u5fc3\u3002 \u7528\u9014 # \u4e09\u7ef4\u8ba1\u7b97\u673a\u56fe\u5f62 \u6700\u90bb\u8fd1\u641c\u7d22 \u26a1\ufe0f \u7b97\u6cd5 # \u6392\u5e8f # \u6392\u5e8f\u7b97\u6cd5 \u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6 \u6700\u5dee\u65f6\u95f4\u590d\u6742\u5ea6 \u7a7a\u95f4\u590d\u6742\u5ea6 \u6570\u636e\u5bf9\u8c61\u7a33\u5b9a\u6027 \u5192\u6ce1\u6392\u5e8f O(n 2 ) O(n 2 ) O(1) \u7a33\u5b9a \u9009\u62e9\u6392\u5e8f O(n 2 ) O(n 2 ) O(1) \u6570\u7ec4\u4e0d\u7a33\u5b9a\u3001\u94fe\u8868\u7a33\u5b9a \u63d2\u5165\u6392\u5e8f O(n 2 ) O(n 2 ) O(1) \u7a33\u5b9a \u5feb\u901f\u6392\u5e8f O(n*log 2 n) O(n 2 ) O(log 2 n) \u4e0d\u7a33\u5b9a \u5806\u6392\u5e8f O(n*log 2 n) O(n*log 2 n) O(1) \u4e0d\u7a33\u5b9a \u5f52\u5e76\u6392\u5e8f O(n*log 2 n) O(n*log 2 n) O(n) \u7a33\u5b9a \u5e0c\u5c14\u6392\u5e8f O(n*log 2 n) O(n 2 ) O(1) \u4e0d\u7a33\u5b9a \u8ba1\u6570\u6392\u5e8f O(n+m) O(n+m) O(n+m) \u7a33\u5b9a \u6876\u6392\u5e8f O(n) O(n) O(m) \u7a33\u5b9a \u57fa\u6570\u6392\u5e8f O(k*n) O(n 2 ) \u7a33\u5b9a \u5747\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5217 k\uff1a\u4ee3\u8868\u6570\u503c\u4e2d\u7684 \u201c\u6570\u4f4d\u201d \u4e2a\u6570 n\uff1a\u4ee3\u8868\u6570\u636e\u89c4\u6a21 m\uff1a\u4ee3\u8868\u6570\u636e\u7684\u6700\u5927\u503c\u51cf\u6700\u5c0f\u503c \u6765\u81ea\uff1a wikipedia . \u6392\u5e8f\u7b97\u6cd5 \u67e5\u627e # \u67e5\u627e\u7b97\u6cd5 \u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6 \u7a7a\u95f4\u590d\u6742\u5ea6 \u67e5\u627e\u6761\u4ef6 \u987a\u5e8f\u67e5\u627e O(n) O(1) \u65e0\u5e8f\u6216\u6709\u5e8f \u4e8c\u5206\u67e5\u627e\uff08\u6298\u534a\u67e5\u627e\uff09 O(log 2 n) O(1) \u6709\u5e8f \u63d2\u503c\u67e5\u627e O(log 2 (log 2 n)) O(1) \u6709\u5e8f \u6590\u6ce2\u90a3\u5951\u67e5\u627e O(log 2 n) O(1) \u6709\u5e8f \u54c8\u5e0c\u67e5\u627e O(1) O(n) \u65e0\u5e8f\u6216\u6709\u5e8f \u4e8c\u53c9\u67e5\u627e\u6811\uff08\u4e8c\u53c9\u641c\u7d22\u6811\u67e5\u627e\uff09 O(log 2 n) \u7ea2\u9ed1\u6811 O(log 2 n) 2-3\u6811 O(log 2 n - log 3 n) B\u6811/B+\u6811 O(log 2 n) \u56fe\u641c\u7d22\u7b97\u6cd5 # \u56fe\u641c\u7d22\u7b97\u6cd5 \u6570\u636e\u7ed3\u6784 \u904d\u5386\u65f6\u95f4\u590d\u6742\u5ea6 \u7a7a\u95f4\u590d\u6742\u5ea6 BFS\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22 \u90bb\u63a5\u77e9\u9635 \u90bb\u63a5\u94fe\u8868 O(|v| 2 ) O(|v|+|E|) O(|v| 2 ) O(|v|+|E|) DFS\u6df1\u5ea6\u4f18\u5148\u641c\u7d22 \u90bb\u63a5\u77e9\u9635 \u90bb\u63a5\u94fe\u8868 O(|v| 2 ) O(|v|+|E|) O(|v| 2 ) O(|v|+|E|) \u5176\u4ed6\u7b97\u6cd5 # \u7b97\u6cd5 \u601d\u60f3 \u5e94\u7528 \u5206\u6cbb\u6cd5 \u628a\u4e00\u4e2a\u590d\u6742\u7684\u95ee\u9898\u5206\u6210\u4e24\u4e2a\u6216\u66f4\u591a\u7684\u76f8\u540c\u6216\u76f8\u4f3c\u7684\u5b50\u95ee\u9898\uff0c\u76f4\u5230\u6700\u540e\u5b50\u95ee\u9898\u53ef\u4ee5\u7b80\u5355\u7684\u76f4\u63a5\u6c42\u89e3\uff0c\u539f\u95ee\u9898\u7684\u89e3\u5373\u5b50\u95ee\u9898\u7684\u89e3\u7684\u5408\u5e76 \u5faa\u73af\u8d5b\u65e5\u7a0b\u5b89\u6392\u95ee\u9898 \u3001\u6392\u5e8f\u7b97\u6cd5\uff08\u5feb\u901f\u6392\u5e8f\u3001\u5f52\u5e76\u6392\u5e8f\uff09 \u52a8\u6001\u89c4\u5212 \u901a\u8fc7\u628a\u539f\u95ee\u9898\u5206\u89e3\u4e3a\u76f8\u5bf9\u7b80\u5355\u7684\u5b50\u95ee\u9898\u7684\u65b9\u5f0f\u6c42\u89e3\u590d\u6742\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u9002\u7528\u4e8e\u6709\u91cd\u53e0\u5b50\u95ee\u9898\u548c\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\u7684\u95ee\u9898 \u80cc\u5305\u95ee\u9898 \u3001\u6590\u6ce2\u90a3\u5951\u6570\u5217 \u8d2a\u5fc3\u6cd5 \u4e00\u79cd\u5728\u6bcf\u4e00\u6b65\u9009\u62e9\u4e2d\u90fd\u91c7\u53d6\u5728\u5f53\u524d\u72b6\u6001\u4e0b\u6700\u597d\u6216\u6700\u4f18\uff08\u5373\u6700\u6709\u5229\uff09\u7684\u9009\u62e9\uff0c\u4ece\u800c\u5e0c\u671b\u5bfc\u81f4\u7ed3\u679c\u662f\u6700\u597d\u6216\u6700\u4f18\u7684\u7b97\u6cd5 \u65c5\u884c\u63a8\u9500\u5458\u95ee\u9898\uff08\u6700\u77ed\u8def\u5f84\u95ee\u9898\uff09\u3001\u6700\u5c0f\u751f\u6210\u6811\u3001\u54c8\u592b\u66fc\u7f16\u7801 \u2753 Problems # Single Problem # Chessboard Coverage Problem\uff08\u68cb\u76d8\u8986\u76d6\u95ee\u9898\uff09 Knapsack Problem\uff08\u80cc\u5305\u95ee\u9898\uff09 Neumann Neighbor Problem\uff08\u51af\u8bfa\u4f9d\u66fc\u90bb\u5c45\u95ee\u9898\uff09 Round Robin Problem\uff08\u5faa\u73af\u8d5b\u65e5\u7a0b\u5b89\u6392\u95ee\u9898\uff09 Tubing Problem\uff08\u8f93\u6cb9\u7ba1\u9053\u95ee\u9898\uff09 Leetcode Problems # Github . haoel/leetcode Github . pezy/LeetCode \u5251\u6307 Offer # Github . zhedahht/CodingInterviewChinese2 Github . gatieme/CodingInterviews Cracking the Coding Interview \u7a0b\u5e8f\u5458\u9762\u8bd5\u91d1\u5178 # Github . careercup/ctci \u725b\u5ba2\u7f51 . \u7a0b\u5e8f\u5458\u9762\u8bd5\u91d1\u5178 \u725b\u5ba2\u7f51 # \u725b\u5ba2\u7f51 . \u5728\u7ebf\u7f16\u7a0b\u4e13\u9898 \ud83d\udcbb \u64cd\u4f5c\u7cfb\u7edf # \u8fdb\u7a0b\u4e0e\u7ebf\u7a0b # \u5bf9\u4e8e\u6709\u7ebf\u7a0b\u7cfb\u7edf\uff1a * \u8fdb\u7a0b\u662f\u8d44\u6e90\u5206\u914d\u7684\u72ec\u7acb\u5355\u4f4d * \u7ebf\u7a0b\u662f\u8d44\u6e90\u8c03\u5ea6\u7684\u72ec\u7acb\u5355\u4f4d \u5bf9\u4e8e\u65e0\u7ebf\u7a0b\u7cfb\u7edf\uff1a * \u8fdb\u7a0b\u662f\u8d44\u6e90\u8c03\u5ea6\u3001\u5206\u914d\u7684\u72ec\u7acb\u5355\u4f4d \u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u65b9\u5f0f\u4ee5\u53ca\u4f18\u7f3a\u70b9 # \u7ba1\u9053\uff08PIPE\uff09 \u6709\u540d\u7ba1\u9053\uff1a\u4e00\u79cd\u534a\u53cc\u5de5\u7684\u901a\u4fe1\u65b9\u5f0f\uff0c\u5b83\u5141\u8bb8\u65e0\u4eb2\u7f18\u5173\u7cfb\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1 \u4f18\u70b9\uff1a\u53ef\u4ee5\u5b9e\u73b0\u4efb\u610f\u5173\u7cfb\u7684\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1 \u7f3a\u70b9\uff1a \u957f\u671f\u5b58\u4e8e\u7cfb\u7edf\u4e2d\uff0c\u4f7f\u7528\u4e0d\u5f53\u5bb9\u6613\u51fa\u9519 \u7f13\u51b2\u533a\u6709\u9650 \u65e0\u540d\u7ba1\u9053\uff1a\u4e00\u79cd\u534a\u53cc\u5de5\u7684\u901a\u4fe1\u65b9\u5f0f\uff0c\u53ea\u80fd\u5728\u5177\u6709\u4eb2\u7f18\u5173\u7cfb\u7684\u8fdb\u7a0b\u95f4\u4f7f\u7528\uff08\u7236\u5b50\u8fdb\u7a0b\uff09 \u4f18\u70b9\uff1a\u7b80\u5355\u65b9\u4fbf \u7f3a\u70b9\uff1a \u5c40\u9650\u4e8e\u5355\u5411\u901a\u4fe1 \u53ea\u80fd\u521b\u5efa\u5728\u5b83\u7684\u8fdb\u7a0b\u4ee5\u53ca\u5176\u6709\u4eb2\u7f18\u5173\u7cfb\u7684\u8fdb\u7a0b\u4e4b\u95f4 \u7f13\u51b2\u533a\u6709\u9650 \u4fe1\u53f7\u91cf\uff08Semaphore\uff09\uff1a\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u53ef\u4ee5\u7528\u6765\u63a7\u5236\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u5171\u4eab\u8d44\u6e90\u7684\u8bbf\u95ee \u4f18\u70b9\uff1a\u53ef\u4ee5\u540c\u6b65\u8fdb\u7a0b \u7f3a\u70b9\uff1a\u4fe1\u53f7\u91cf\u6709\u9650 \u4fe1\u53f7\uff08Signal\uff09\uff1a\u4e00\u79cd\u6bd4\u8f83\u590d\u6742\u7684\u901a\u4fe1\u65b9\u5f0f\uff0c\u7528\u4e8e\u901a\u77e5\u63a5\u6536\u8fdb\u7a0b\u67d0\u4e2a\u4e8b\u4ef6\u5df2\u7ecf\u53d1\u751f \u6d88\u606f\u961f\u5217\uff08Message Queue\uff09\uff1a\u662f\u6d88\u606f\u7684\u94fe\u8868\uff0c\u5b58\u653e\u5728\u5185\u6838\u4e2d\u5e76\u7531\u6d88\u606f\u961f\u5217\u6807\u8bc6\u7b26\u6807\u8bc6 \u4f18\u70b9\uff1a\u53ef\u4ee5\u5b9e\u73b0\u4efb\u610f\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\uff0c\u5e76\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\u6765\u5b9e\u73b0\u6d88\u606f\u53d1\u9001\u548c\u63a5\u6536\u4e4b\u95f4\u7684\u540c\u6b65\uff0c\u65e0\u9700\u8003\u8651\u540c\u6b65\u95ee\u9898\uff0c\u65b9\u4fbf \u7f3a\u70b9\uff1a\u4fe1\u606f\u7684\u590d\u5236\u9700\u8981\u989d\u5916\u6d88\u8017 CPU \u7684\u65f6\u95f4\uff0c\u4e0d\u9002\u5b9c\u4e8e\u4fe1\u606f\u91cf\u5927\u6216\u64cd\u4f5c\u9891\u7e41\u7684\u573a\u5408 \u5171\u4eab\u5185\u5b58\uff08Shared Memory\uff09\uff1a\u6620\u5c04\u4e00\u6bb5\u80fd\u88ab\u5176\u4ed6\u8fdb\u7a0b\u6240\u8bbf\u95ee\u7684\u5185\u5b58\uff0c\u8fd9\u6bb5\u5171\u4eab\u5185\u5b58\u7531\u4e00\u4e2a\u8fdb\u7a0b\u521b\u5efa\uff0c\u4f46\u591a\u4e2a\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u8bbf\u95ee \u4f18\u70b9\uff1a\u65e0\u987b\u590d\u5236\uff0c\u5feb\u6377\uff0c\u4fe1\u606f\u91cf\u5927 \u7f3a\u70b9\uff1a \u901a\u4fe1\u662f\u901a\u8fc7\u5c06\u5171\u4eab\u7a7a\u95f4\u7f13\u51b2\u533a\u76f4\u63a5\u9644\u52a0\u5230\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e2d\u6765\u5b9e\u73b0\u7684\uff0c\u56e0\u6b64\u8fdb\u7a0b\u95f4\u7684\u8bfb\u5199\u64cd\u4f5c\u7684\u540c\u6b65\u95ee\u9898 \u5229\u7528\u5185\u5b58\u7f13\u51b2\u533a\u76f4\u63a5\u4ea4\u6362\u4fe1\u606f\uff0c\u5185\u5b58\u7684\u5b9e\u4f53\u5b58\u5728\u4e8e\u8ba1\u7b97\u673a\u4e2d\uff0c\u53ea\u80fd\u540c\u4e00\u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u7684\u8bf8\u591a\u8fdb\u7a0b\u5171\u4eab\uff0c\u4e0d\u65b9\u4fbf\u7f51\u7edc\u901a\u4fe1 \u5957\u63a5\u5b57\uff08Socket\uff09\uff1a\u53ef\u7528\u4e8e\u4e0d\u540c\u8ba1\u7b97\u673a\u95f4\u7684\u8fdb\u7a0b\u901a\u4fe1 \u4f18\u70b9\uff1a \u4f20\u8f93\u6570\u636e\u4e3a\u5b57\u8282\u7ea7\uff0c\u4f20\u8f93\u6570\u636e\u53ef\u81ea\u5b9a\u4e49\uff0c\u6570\u636e\u91cf\u5c0f\u6548\u7387\u9ad8 \u4f20\u8f93\u6570\u636e\u65f6\u95f4\u77ed\uff0c\u6027\u80fd\u9ad8 \u9002\u5408\u4e8e\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u4e4b\u95f4\u4fe1\u606f\u5b9e\u65f6\u4ea4\u4e92 \u53ef\u4ee5\u52a0\u5bc6,\u6570\u636e\u5b89\u5168\u6027\u5f3a \u7f3a\u70b9\uff1a\u9700\u5bf9\u4f20\u8f93\u7684\u6570\u636e\u8fdb\u884c\u89e3\u6790\uff0c\u8f6c\u5316\u6210\u5e94\u7528\u7ea7\u7684\u6570\u636e\u3002 \u7ebf\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u65b9\u5f0f # \u9501\u673a\u5236\uff1a\u5305\u62ec\u4e92\u65a5\u9501/\u91cf\uff08mutex\uff09\u3001\u8bfb\u5199\u9501\uff08reader-writer lock\uff09\u3001\u81ea\u65cb\u9501\uff08spin lock\uff09\u3001\u6761\u4ef6\u53d8\u91cf\uff08condition\uff09 \u4e92\u65a5\u9501/\u91cf\uff08mutex\uff09\uff1a\u63d0\u4f9b\u4e86\u4ee5\u6392\u4ed6\u65b9\u5f0f\u9632\u6b62\u6570\u636e\u7ed3\u6784\u88ab\u5e76\u53d1\u4fee\u6539\u7684\u65b9\u6cd5\u3002 \u8bfb\u5199\u9501\uff08reader-writer lock\uff09\uff1a\u5141\u8bb8\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bfb\u5171\u4eab\u6570\u636e\uff0c\u800c\u5bf9\u5199\u64cd\u4f5c\u662f\u4e92\u65a5\u7684\u3002 \u81ea\u65cb\u9501\uff08spin lock\uff09\u4e0e\u4e92\u65a5\u9501\u7c7b\u4f3c\uff0c\u90fd\u662f\u4e3a\u4e86\u4fdd\u62a4\u5171\u4eab\u8d44\u6e90\u3002\u4e92\u65a5\u9501\u662f\u5f53\u8d44\u6e90\u88ab\u5360\u7528\uff0c\u7533\u8bf7\u8005\u8fdb\u5165\u7761\u7720\u72b6\u6001\uff1b\u800c\u81ea\u65cb\u9501\u5219\u5faa\u73af\u68c0\u6d4b\u4fdd\u6301\u8005\u662f\u5426\u5df2\u7ecf\u91ca\u653e\u9501\u3002 \u6761\u4ef6\u53d8\u91cf\uff08condition\uff09\uff1a\u53ef\u4ee5\u4ee5\u539f\u5b50\u7684\u65b9\u5f0f\u963b\u585e\u8fdb\u7a0b\uff0c\u76f4\u5230\u67d0\u4e2a\u7279\u5b9a\u6761\u4ef6\u4e3a\u771f\u4e3a\u6b62\u3002\u5bf9\u6761\u4ef6\u7684\u6d4b\u8bd5\u662f\u5728\u4e92\u65a5\u9501\u7684\u4fdd\u62a4\u4e0b\u8fdb\u884c\u7684\u3002\u6761\u4ef6\u53d8\u91cf\u59cb\u7ec8\u4e0e\u4e92\u65a5\u9501\u4e00\u8d77\u4f7f\u7528\u3002 \u4fe1\u53f7\u91cf\u673a\u5236(Semaphore) \u65e0\u540d\u7ebf\u7a0b\u4fe1\u53f7\u91cf \u547d\u540d\u7ebf\u7a0b\u4fe1\u53f7\u91cf \u4fe1\u53f7\u673a\u5236(Signal)\uff1a\u7c7b\u4f3c\u8fdb\u7a0b\u95f4\u7684\u4fe1\u53f7\u5904\u7406 \u5c4f\u969c\uff08barrier\uff09\uff1a\u5c4f\u969c\u5141\u8bb8\u6bcf\u4e2a\u7ebf\u7a0b\u7b49\u5f85\uff0c\u76f4\u5230\u6240\u6709\u7684\u5408\u4f5c\u7ebf\u7a0b\u90fd\u8fbe\u5230\u67d0\u4e00\u70b9\uff0c\u7136\u540e\u4ece\u8be5\u70b9\u7ee7\u7eed\u6267\u884c\u3002 \u7ebf\u7a0b\u95f4\u7684\u901a\u4fe1\u76ee\u7684\u4e3b\u8981\u662f\u7528\u4e8e\u7ebf\u7a0b\u540c\u6b65\uff0c\u6240\u4ee5\u7ebf\u7a0b\u6ca1\u6709\u50cf\u8fdb\u7a0b\u901a\u4fe1\u4e2d\u7684\u7528\u4e8e\u6570\u636e\u4ea4\u6362\u7684\u901a\u4fe1\u673a\u5236 \u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u65b9\u5f0f\u4ee5\u53ca\u4f18\u7f3a\u70b9\u6765\u6e90\u4e8e\uff1a \u8fdb\u7a0b\u7ebf\u7a0b\u9762\u8bd5\u9898\u603b\u7ed3 \u8fdb\u7a0b\u4e4b\u95f4\u79c1\u6709\u548c\u5171\u4eab\u7684\u8d44\u6e90 # \u79c1\u6709\uff1a\u5730\u5740\u7a7a\u95f4\u3001\u5806\u3001\u5168\u5c40\u53d8\u91cf\u3001\u6808\u3001\u5bc4\u5b58\u5668 \u5171\u4eab\uff1a\u4ee3\u7801\u6bb5\uff0c\u516c\u5171\u6570\u636e\uff0c\u8fdb\u7a0b\u76ee\u5f55\uff0c\u8fdb\u7a0b ID \u7ebf\u7a0b\u4e4b\u95f4\u79c1\u6709\u548c\u5171\u4eab\u7684\u8d44\u6e90 # \u79c1\u6709\uff1a\u7ebf\u7a0b\u6808\uff0c\u5bc4\u5b58\u5668\uff0c\u7a0b\u5e8f\u8ba1\u6570\u5668 \u5171\u4eab\uff1a\u5806\uff0c\u5730\u5740\u7a7a\u95f4\uff0c\u5168\u5c40\u53d8\u91cf\uff0c\u9759\u6001\u53d8\u91cf \u591a\u8fdb\u7a0b\u4e0e\u591a\u7ebf\u7a0b\u95f4\u7684\u5bf9\u6bd4\u3001\u4f18\u52a3\u4e0e\u9009\u62e9 # \u5bf9\u6bd4 # \u5bf9\u6bd4\u7ef4\u5ea6 \u591a\u8fdb\u7a0b \u591a\u7ebf\u7a0b \u603b\u7ed3 \u6570\u636e\u5171\u4eab\u3001\u540c\u6b65 \u6570\u636e\u5171\u4eab\u590d\u6742\uff0c\u9700\u8981\u7528 IPC\uff1b\u6570\u636e\u662f\u5206\u5f00\u7684\uff0c\u540c\u6b65\u7b80\u5355 \u56e0\u4e3a\u5171\u4eab\u8fdb\u7a0b\u6570\u636e\uff0c\u6570\u636e\u5171\u4eab\u7b80\u5355\uff0c\u4f46\u4e5f\u662f\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\u5bfc\u81f4\u540c\u6b65\u590d\u6742 \u5404\u6709\u4f18\u52bf \u5185\u5b58\u3001CPU \u5360\u7528\u5185\u5b58\u591a\uff0c\u5207\u6362\u590d\u6742\uff0cCPU \u5229\u7528\u7387\u4f4e \u5360\u7528\u5185\u5b58\u5c11\uff0c\u5207\u6362\u7b80\u5355\uff0cCPU \u5229\u7528\u7387\u9ad8 \u7ebf\u7a0b\u5360\u4f18 \u521b\u5efa\u9500\u6bc1\u3001\u5207\u6362 \u521b\u5efa\u9500\u6bc1\u3001\u5207\u6362\u590d\u6742\uff0c\u901f\u5ea6\u6162 \u521b\u5efa\u9500\u6bc1\u3001\u5207\u6362\u7b80\u5355\uff0c\u901f\u5ea6\u5f88\u5feb \u7ebf\u7a0b\u5360\u4f18 \u7f16\u7a0b\u3001\u8c03\u8bd5 \u7f16\u7a0b\u7b80\u5355\uff0c\u8c03\u8bd5\u7b80\u5355 \u7f16\u7a0b\u590d\u6742\uff0c\u8c03\u8bd5\u590d\u6742 \u8fdb\u7a0b\u5360\u4f18 \u53ef\u9760\u6027 \u8fdb\u7a0b\u95f4\u4e0d\u4f1a\u4e92\u76f8\u5f71\u54cd \u4e00\u4e2a\u7ebf\u7a0b\u6302\u6389\u5c06\u5bfc\u81f4\u6574\u4e2a\u8fdb\u7a0b\u6302\u6389 \u8fdb\u7a0b\u5360\u4f18 \u5206\u5e03\u5f0f \u9002\u5e94\u4e8e\u591a\u6838\u3001\u591a\u673a\u5206\u5e03\u5f0f\uff1b\u5982\u679c\u4e00\u53f0\u673a\u5668\u4e0d\u591f\uff0c\u6269\u5c55\u5230\u591a\u53f0\u673a\u5668\u6bd4\u8f83\u7b80\u5355 \u9002\u5e94\u4e8e\u591a\u6838\u5206\u5e03\u5f0f \u8fdb\u7a0b\u5360\u4f18 \u4f18\u52a3 # \u4f18\u52a3 \u591a\u8fdb\u7a0b \u591a\u7ebf\u7a0b \u4f18\u70b9 \u7f16\u7a0b\u3001\u8c03\u8bd5\u7b80\u5355\uff0c\u53ef\u9760\u6027\u8f83\u9ad8 \u521b\u5efa\u3001\u9500\u6bc1\u3001\u5207\u6362\u901f\u5ea6\u5feb\uff0c\u5185\u5b58\u3001\u8d44\u6e90\u5360\u7528\u5c0f \u7f3a\u70b9 \u521b\u5efa\u3001\u9500\u6bc1\u3001\u5207\u6362\u901f\u5ea6\u6162\uff0c\u5185\u5b58\u3001\u8d44\u6e90\u5360\u7528\u5927 \u7f16\u7a0b\u3001\u8c03\u8bd5\u590d\u6742\uff0c\u53ef\u9760\u6027\u8f83\u5dee \u9009\u62e9 # \u9700\u8981\u9891\u7e41\u521b\u5efa\u9500\u6bc1\u7684\u4f18\u5148\u7528\u7ebf\u7a0b \u9700\u8981\u8fdb\u884c\u5927\u91cf\u8ba1\u7b97\u7684\u4f18\u5148\u4f7f\u7528\u7ebf\u7a0b \u5f3a\u76f8\u5173\u7684\u5904\u7406\u7528\u7ebf\u7a0b\uff0c\u5f31\u76f8\u5173\u7684\u5904\u7406\u7528\u8fdb\u7a0b \u53ef\u80fd\u8981\u6269\u5c55\u5230\u591a\u673a\u5206\u5e03\u7684\u7528\u8fdb\u7a0b\uff0c\u591a\u6838\u5206\u5e03\u7684\u7528\u7ebf\u7a0b \u90fd\u6ee1\u8db3\u9700\u6c42\u7684\u60c5\u51b5\u4e0b\uff0c\u7528\u4f60\u6700\u719f\u6089\u3001\u6700\u62ff\u624b\u7684\u65b9\u5f0f \u591a\u8fdb\u7a0b\u4e0e\u591a\u7ebf\u7a0b\u95f4\u7684\u5bf9\u6bd4\u3001\u4f18\u52a3\u4e0e\u9009\u62e9\u6765\u81ea\uff1a \u591a\u7ebf\u7a0b\u8fd8\u662f\u591a\u8fdb\u7a0b\u7684\u9009\u62e9\u53ca\u533a\u522b Linux \u5185\u6838\u7684\u540c\u6b65\u65b9\u5f0f # \u539f\u56e0 # \u5728\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u91cc\uff0c\u540c\u4e00\u65f6\u95f4\u53ef\u80fd\u6709\u591a\u4e2a\u5185\u6838\u6267\u884c\u6d41\u5728\u6267\u884c\uff0c\u56e0\u6b64\u5185\u6838\u5176\u5b9e\u50cf\u591a\u8fdb\u7a0b\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4e00\u6837\u4e5f\u9700\u8981\u4e00\u4e9b\u540c\u6b65\u673a\u5236\u6765\u540c\u6b65\u5404\u6267\u884c\u5355\u5143\u5bf9\u5171\u4eab\u6570\u636e\u7684\u8bbf\u95ee\u3002\u5c24\u5176\u662f\u5728\u591a\u5904\u7406\u5668\u7cfb\u7edf\u4e0a\uff0c\u66f4\u9700\u8981\u4e00\u4e9b\u540c\u6b65\u673a\u5236\u6765\u540c\u6b65\u4e0d\u540c\u5904\u7406\u5668\u4e0a\u7684\u6267\u884c\u5355\u5143\u5bf9\u5171\u4eab\u7684\u6570\u636e\u7684\u8bbf\u95ee\u3002 \u540c\u6b65\u65b9\u5f0f # \u539f\u5b50\u64cd\u4f5c \u4fe1\u53f7\u91cf\uff08semaphore\uff09 \u8bfb\u5199\u4fe1\u53f7\u91cf\uff08rw_semaphore\uff09 \u81ea\u65cb\u9501\uff08spinlock\uff09 \u5927\u5185\u6838\u9501\uff08BKL\uff0cBig Kernel Lock\uff09 \u8bfb\u5199\u9501\uff08rwlock\uff09 \u5927\u8bfb\u8005\u9501\uff08brlock-Big Reader Lock\uff09 \u8bfb-\u62f7\u8d1d\u4fee\u6539(RCU\uff0cRead-Copy Update) \u987a\u5e8f\u9501\uff08seqlock\uff09 \u6765\u81ea\uff1a Linux \u5185\u6838\u7684\u540c\u6b65\u673a\u5236\uff0c\u7b2c 1 \u90e8\u5206 \u3001 Linux \u5185\u6838\u7684\u540c\u6b65\u673a\u5236\uff0c\u7b2c 2 \u90e8\u5206 \u6b7b\u9501 # \u539f\u56e0 # \u7cfb\u7edf\u8d44\u6e90\u4e0d\u8db3 \u8d44\u6e90\u5206\u914d\u4e0d\u5f53 \u8fdb\u7a0b\u8fd0\u884c\u63a8\u8fdb\u987a\u5e8f\u4e0d\u5408\u9002 \u4ea7\u751f\u6761\u4ef6 # \u4e92\u65a5 \u8bf7\u6c42\u548c\u4fdd\u6301 \u4e0d\u5265\u593a \u73af\u8def \u9884\u9632 # \u6253\u7834\u4e92\u65a5\u6761\u4ef6\uff1a\u6539\u9020\u72ec\u5360\u6027\u8d44\u6e90\u4e3a\u865a\u62df\u8d44\u6e90\uff0c\u5927\u90e8\u5206\u8d44\u6e90\u5df2\u65e0\u6cd5\u6539\u9020\u3002 \u6253\u7834\u4e0d\u53ef\u62a2\u5360\u6761\u4ef6\uff1a\u5f53\u4e00\u8fdb\u7a0b\u5360\u6709\u4e00\u72ec\u5360\u6027\u8d44\u6e90\u540e\u53c8\u7533\u8bf7\u4e00\u72ec\u5360\u6027\u8d44\u6e90\u800c\u65e0\u6cd5\u6ee1\u8db3\uff0c\u5219\u9000\u51fa\u539f\u5360\u6709\u7684\u8d44\u6e90\u3002 \u6253\u7834\u5360\u6709\u4e14\u7533\u8bf7\u6761\u4ef6\uff1a\u91c7\u7528\u8d44\u6e90\u9884\u5148\u5206\u914d\u7b56\u7565\uff0c\u5373\u8fdb\u7a0b\u8fd0\u884c\u524d\u7533\u8bf7\u5168\u90e8\u8d44\u6e90\uff0c\u6ee1\u8db3\u5219\u8fd0\u884c\uff0c\u4e0d\u7136\u5c31\u7b49\u5f85\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u5360\u6709\u4e14\u7533\u8bf7\u3002 \u6253\u7834\u5faa\u73af\u7b49\u5f85\u6761\u4ef6\uff1a\u5b9e\u73b0\u8d44\u6e90\u6709\u5e8f\u5206\u914d\u7b56\u7565\uff0c\u5bf9\u6240\u6709\u8bbe\u5907\u5b9e\u73b0\u5206\u7c7b\u7f16\u53f7\uff0c\u6240\u6709\u8fdb\u7a0b\u53ea\u80fd\u91c7\u7528\u6309\u5e8f\u53f7\u9012\u589e\u7684\u5f62\u5f0f\u7533\u8bf7\u8d44\u6e90\u3002 \u6709\u5e8f\u8d44\u6e90\u5206\u914d\u6cd5 \u94f6\u884c\u5bb6\u7b97\u6cd5 \u6587\u4ef6\u7cfb\u7edf # Windows\uff1aFCB \u8868 + FAT + \u4f4d\u56fe Unix\uff1ainode + \u6df7\u5408\u7d22\u5f15 + \u6210\u7ec4\u94fe\u63a5 \u4e3b\u673a\u5b57\u8282\u5e8f\u4e0e\u7f51\u7edc\u5b57\u8282\u5e8f # \u4e3b\u673a\u5b57\u8282\u5e8f\uff08CPU \u5b57\u8282\u5e8f\uff09 # \u6982\u5ff5 # \u4e3b\u673a\u5b57\u8282\u5e8f\u53c8\u53eb CPU \u5b57\u8282\u5e8f\uff0c\u5176\u4e0d\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u51b3\u5b9a\u7684\uff0c\u800c\u662f\u7531 CPU \u6307\u4ee4\u96c6\u67b6\u6784\u51b3\u5b9a\u7684\u3002\u4e3b\u673a\u5b57\u8282\u5e8f\u5206\u4e3a\u4e24\u79cd\uff1a \u5927\u7aef\u5b57\u8282\u5e8f\uff08Big Endian\uff09\uff1a\u9ad8\u5e8f\u5b57\u8282\u5b58\u50a8\u5728\u4f4e\u4f4d\u5730\u5740\uff0c\u4f4e\u5e8f\u5b57\u8282\u5b58\u50a8\u5728\u9ad8\u4f4d\u5730\u5740 \u5c0f\u7aef\u5b57\u8282\u5e8f\uff08Little Endian\uff09\uff1a\u9ad8\u5e8f\u5b57\u8282\u5b58\u50a8\u5728\u9ad8\u4f4d\u5730\u5740\uff0c\u4f4e\u5e8f\u5b57\u8282\u5b58\u50a8\u5728\u4f4e\u4f4d\u5730\u5740 \u5b58\u50a8\u65b9\u5f0f # 32 \u4f4d\u6574\u6570 0x12345678 \u662f\u4ece\u8d77\u59cb\u4f4d\u7f6e\u4e3a 0x00 \u7684\u5730\u5740\u5f00\u59cb\u5b58\u653e\uff0c\u5219\uff1a \u5185\u5b58\u5730\u5740 0x00 0x01 0x02 0x03 \u5927\u7aef 12 34 56 78 \u5c0f\u7aef 78 56 34 12 \u5927\u7aef\u5c0f\u7aef\u56fe\u7247 \u5224\u65ad\u5927\u7aef\u5c0f\u7aef # \u5224\u65ad\u5927\u7aef\u5c0f\u7aef \u53ef\u4ee5\u8fd9\u6837\u5224\u65ad\u81ea\u5df1 CPU \u5b57\u8282\u5e8f\u662f\u5927\u7aef\u8fd8\u662f\u5c0f\u7aef\uff1a #include <iostream> using namespace std ; int main () { int i = 0x12345678 ; if ( * (( char * ) & i ) == 0x12 ) cout << \"\u5927\u7aef\" << endl ; else cout << \"\u5c0f\u7aef\" << endl ; return 0 ; } \u5404\u67b6\u6784\u5904\u7406\u5668\u7684\u5b57\u8282\u5e8f # x86\uff08Intel\u3001AMD\uff09\u3001MOS Technology 6502\u3001Z80\u3001VAX\u3001PDP-11 \u7b49\u5904\u7406\u5668\u4e3a\u5c0f\u7aef\u5e8f\uff1b Motorola 6800\u3001Motorola 68000\u3001PowerPC 970\u3001System/370\u3001SPARC\uff08\u9664 V9 \u5916\uff09\u7b49\u5904\u7406\u5668\u4e3a\u5927\u7aef\u5e8f\uff1b ARM\uff08\u9ed8\u8ba4\u5c0f\u7aef\u5e8f\uff09\u3001PowerPC\uff08\u9664 PowerPC 970 \u5916\uff09\u3001DEC Alpha\u3001SPARC V9\u3001MIPS\u3001PA-RISC \u53ca IA64 \u7684\u5b57\u8282\u5e8f\u662f\u53ef\u914d\u7f6e\u7684\u3002 \u7f51\u7edc\u5b57\u8282\u5e8f # \u7f51\u7edc\u5b57\u8282\u987a\u5e8f\u662f TCP/IP \u4e2d\u89c4\u5b9a\u597d\u7684\u4e00\u79cd\u6570\u636e\u8868\u793a\u683c\u5f0f\uff0c\u5b83\u4e0e\u5177\u4f53\u7684 CPU \u7c7b\u578b\u3001\u64cd\u4f5c\u7cfb\u7edf\u7b49\u65e0\u5173\uff0c\u4ece\u800c\u53ef\u4ee5\u4fdd\u8bc1\u6570\u636e\u5728\u4e0d\u540c\u4e3b\u673a\u4e4b\u95f4\u4f20\u8f93\u65f6\u80fd\u591f\u88ab\u6b63\u786e\u89e3\u91ca\u3002 \u7f51\u7edc\u5b57\u8282\u987a\u5e8f\u91c7\u7528\uff1a\u5927\u7aef\uff08Big Endian\uff09\u6392\u5217\u65b9\u5f0f\u3002 \u9875\u9762\u7f6e\u6362\u7b97\u6cd5 # \u5728\u5730\u5740\u6620\u5c04\u8fc7\u7a0b\u4e2d\uff0c\u82e5\u5728\u9875\u9762\u4e2d\u53d1\u73b0\u6240\u8981\u8bbf\u95ee\u7684\u9875\u9762\u4e0d\u5728\u5185\u5b58\u4e2d\uff0c\u5219\u4ea7\u751f\u7f3a\u9875\u4e2d\u65ad\u3002\u5f53\u53d1\u751f\u7f3a\u9875\u4e2d\u65ad\u65f6\uff0c\u5982\u679c\u64cd\u4f5c\u7cfb\u7edf\u5185\u5b58\u4e2d\u6ca1\u6709\u7a7a\u95f2\u9875\u9762\uff0c\u5219\u64cd\u4f5c\u7cfb\u7edf\u5fc5\u987b\u5728\u5185\u5b58\u9009\u62e9\u4e00\u4e2a\u9875\u9762\u5c06\u5176\u79fb\u51fa\u5185\u5b58\uff0c\u4ee5\u4fbf\u4e3a\u5373\u5c06\u8c03\u5165\u7684\u9875\u9762\u8ba9\u51fa\u7a7a\u95f4\u3002\u800c\u7528\u6765\u9009\u62e9\u6dd8\u6c70\u54ea\u4e00\u9875\u7684\u89c4\u5219\u53eb\u505a\u9875\u9762\u7f6e\u6362\u7b97\u6cd5\u3002 \u5206\u7c7b # \u5168\u5c40\u7f6e\u6362\uff1a\u5728\u6574\u4e2a\u5185\u5b58\u7a7a\u95f4\u7f6e\u6362 \u5c40\u90e8\u7f6e\u6362\uff1a\u5728\u672c\u8fdb\u7a0b\u4e2d\u8fdb\u884c\u7f6e\u6362 \u7b97\u6cd5 # \u5168\u5c40\uff1a * \u5de5\u4f5c\u96c6\u7b97\u6cd5 * \u7f3a\u9875\u7387\u7f6e\u6362\u7b97\u6cd5 \u5c40\u90e8\uff1a * \u6700\u4f73\u7f6e\u6362\u7b97\u6cd5\uff08OPT\uff09 * \u5148\u8fdb\u5148\u51fa\u7f6e\u6362\u7b97\u6cd5\uff08FIFO\uff09 * \u6700\u8fd1\u6700\u4e45\u672a\u4f7f\u7528\uff08LRU\uff09\u7b97\u6cd5 * \u65f6\u949f\uff08Clock\uff09\u7f6e\u6362\u7b97\u6cd5 \u2601\ufe0f \u8ba1\u7b97\u673a\u7f51\u7edc # \u672c\u8282\u90e8\u5206\u77e5\u8bc6\u70b9\u6765\u81ea\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\uff08\u7b2c 7 \u7248\uff09\u300b \u8ba1\u7b97\u673a\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\uff1a \u5404\u5c42\u4f5c\u7528\u53ca\u534f\u8bae # \u5206\u5c42 \u4f5c\u7528 \u534f\u8bae \u7269\u7406\u5c42 \u901a\u8fc7\u5a92\u4ecb\u4f20\u8f93\u6bd4\u7279\uff0c\u786e\u5b9a\u673a\u68b0\u53ca\u7535\u6c14\u89c4\u8303\uff08\u6bd4\u7279 Bit\uff09 RJ45\u3001CLOCK\u3001IEEE802.3\uff08\u4e2d\u7ee7\u5668\uff0c\u96c6\u7ebf\u5668\uff09 \u6570\u636e\u94fe\u8def\u5c42 \u5c06\u6bd4\u7279\u7ec4\u88c5\u6210\u5e27\u548c\u70b9\u5230\u70b9\u7684\u4f20\u9012\uff08\u5e27 Frame\uff09 PPP\u3001FR\u3001HDLC\u3001VLAN\u3001MAC\uff08\u7f51\u6865\uff0c\u4ea4\u6362\u673a\uff09 \u7f51\u7edc\u5c42 \u8d1f\u8d23\u6570\u636e\u5305\u4ece\u6e90\u5230\u5bbf\u7684\u4f20\u9012\u548c\u7f51\u9645\u4e92\u8fde\uff08\u5305 Packet\uff09 IP\u3001ICMP\u3001ARP\u3001RARP\u3001OSPF\u3001IPX\u3001RIP\u3001IGRP\uff08\u8def\u7531\u5668\uff09 \u8fd0\u8f93\u5c42 \u63d0\u4f9b\u7aef\u5230\u7aef\u7684\u53ef\u9760\u62a5\u6587\u4f20\u9012\u548c\u9519\u8bef\u6062\u590d\uff08 \u6bb5Segment\uff09 TCP\u3001UDP\u3001SPX \u4f1a\u8bdd\u5c42 \u5efa\u7acb\u3001\u7ba1\u7406\u548c\u7ec8\u6b62\u4f1a\u8bdd\uff08\u4f1a\u8bdd\u534f\u8bae\u6570\u636e\u5355\u5143 SPDU\uff09 NFS\u3001SQL\u3001NETBIOS\u3001RPC \u8868\u793a\u5c42 \u5bf9\u6570\u636e\u8fdb\u884c\u7ffb\u8bd1\u3001\u52a0\u5bc6\u548c\u538b\u7f29\uff08\u8868\u793a\u534f\u8bae\u6570\u636e\u5355\u5143 PPDU\uff09 JPEG\u3001MPEG\u3001ASII \u5e94\u7528\u5c42 \u5141\u8bb8\u8bbf\u95eeOSI\u73af\u5883\u7684\u624b\u6bb5\uff08\u5e94\u7528\u534f\u8bae\u6570\u636e\u5355\u5143 APDU\uff09 FTP\u3001DNS\u3001Telnet\u3001SMTP\u3001HTTP\u3001WWW\u3001NFS \u7269\u7406\u5c42 # \u4f20\u8f93\u6570\u636e\u7684\u5355\u4f4d\uff1a\u6bd4\u7279 \u6570\u636e\u4f20\u8f93\u7cfb\u7edf\uff1a\u6e90\u7cfb\u7edf\uff08\u6e90\u70b9\u3001\u53d1\u9001\u5668\uff09 \u2192 \u4f20\u8f93\u7cfb\u7edf \u2192 \u76ee\u7684\u7cfb\u7edf\uff08\u63a5\u6536\u5668\u3001\u7ec8\u70b9\uff09 \u901a\u9053\uff1a * \u5355\u5411\u901a\u9053\uff08\u5355\u5de5\u901a\u9053\uff09\uff1a\u53ea\u6709\u4e00\u4e2a\u65b9\u5411\u901a\u4fe1\uff0c\u6ca1\u6709\u53cd\u65b9\u5411\u4ea4\u4e92\uff0c\u5982\u5e7f\u64ad * \u53cc\u5411\u4ea4\u66ff\u901a\u4fe1\uff08\u534a\u53cc\u5de5\u901a\u4fe1\uff09\uff1a\u901a\u4fe1\u53cc\u65b9\u90fd\u53ef\u53d1\u6d88\u606f\uff0c\u4f46\u4e0d\u80fd\u540c\u65f6\u53d1\u9001\u6216\u63a5\u6536 * \u53cc\u5411\u540c\u65f6\u901a\u4fe1\uff08\u5168\u53cc\u5de5\u901a\u4fe1\uff09\uff1a\u901a\u4fe1\u53cc\u65b9\u53ef\u4ee5\u540c\u65f6\u53d1\u9001\u548c\u63a5\u6536\u4fe1\u606f \u901a\u9053\u590d\u7528\u6280\u672f\uff1a * \u9891\u5206\u590d\u7528\uff08FDM\uff0cFrequency Division Multiplexing\uff09\uff1a\u4e0d\u540c\u7528\u6237\u5728\u4e0d\u540c\u9891\u5e26\uff0c\u6240\u7528\u7528\u6237\u5728\u540c\u6837\u65f6\u95f4\u5360\u7528\u4e0d\u540c\u5e26\u5bbd\u8d44\u6e90 * \u65f6\u5206\u590d\u7528\uff08TDM\uff0cTime Division Multiplexing\uff09\uff1a\u4e0d\u540c\u7528\u6237\u5728\u540c\u4e00\u65f6\u95f4\u6bb5\u7684\u4e0d\u540c\u65f6\u95f4\u7247\uff0c\u6240\u6709\u7528\u6237\u5728\u4e0d\u540c\u65f6\u95f4\u5360\u7528\u540c\u6837\u7684\u9891\u5e26\u5bbd\u5ea6 * \u6ce2\u5206\u590d\u7528\uff08WDM\uff0cWavelength Division Multiplexing\uff09\uff1a\u5149\u7684\u9891\u5206\u590d\u7528 * \u7801\u5206\u590d\u7528\uff08CDM\uff0cCode Division Multiplexing\uff09\uff1a\u4e0d\u540c\u7528\u6237\u4f7f\u7528\u4e0d\u540c\u7684\u7801\uff0c\u53ef\u4ee5\u5728\u540c\u6837\u65f6\u95f4\u4f7f\u7528\u540c\u6837\u9891\u5e26\u901a\u4fe1 \u6570\u636e\u94fe\u8def\u5c42 # \u4e3b\u8981\u4fe1\u9053\uff1a * \u70b9\u5bf9\u70b9\u4fe1\u9053 * \u5e7f\u64ad\u4fe1\u9053 \u70b9\u5bf9\u70b9\u4fe1\u9053 # \u6570\u636e\u5355\u5143\uff1a\u5e27 \u4e09\u4e2a\u57fa\u672c\u95ee\u9898\uff1a * \u5c01\u88c5\u6210\u5e27\uff1a\u628a\u7f51\u7edc\u5c42\u7684 IP \u6570\u636e\u62a5\u5c01\u88c5\u6210\u5e27\uff0c SOH - \u6570\u636e\u90e8\u5206 - EOT * \u900f\u660e\u4f20\u8f93\uff1a\u4e0d\u7ba1\u6570\u636e\u90e8\u5206\u4ec0\u4e48\u5b57\u7b26\uff0c\u90fd\u80fd\u4f20\u8f93\u51fa\u53bb\uff1b\u53ef\u4ee5\u901a\u8fc7\u5b57\u8282\u586b\u5145\u65b9\u6cd5\u89e3\u51b3\uff08\u51b2\u7a81\u5b57\u7b26\u524d\u52a0\u8f6c\u4e49\u5b57\u7b26\uff09 * \u5dee\u9519\u68c0\u6d4b\uff1a\u964d\u4f4e\u8bef\u7801\u7387\uff08BER\uff0cBit Error Rate\uff09\uff0c\u5e7f\u6cdb\u4f7f\u7528\u5faa\u73af\u5197\u4f59\u68c0\u6d4b\uff08CRC\uff0cCyclic Redundancy Check\uff09 \u70b9\u5bf9\u70b9\u534f\u8bae\uff08Point-to-Point Protocol\uff09\uff1a * \u70b9\u5bf9\u70b9\u534f\u8bae\uff08Point-to-Point Protocol\uff09\uff1a\u7528\u6237\u8ba1\u7b97\u673a\u548c ISP \u901a\u4fe1\u65f6\u6240\u4f7f\u7528\u7684\u534f\u8bae \u5e7f\u64ad\u4fe1\u9053 # \u5e7f\u64ad\u901a\u4fe1\uff1a * \u786c\u4ef6\u5730\u5740\uff08\u7269\u7406\u5730\u5740\u3001MAC \u5730\u5740\uff09 * \u5355\u64ad\uff08unicast\uff09\u5e27\uff08\u4e00\u5bf9\u4e00\uff09\uff1a\u6536\u5230\u7684\u5e27\u7684 MAC \u5730\u5740\u4e0e\u672c\u7ad9\u7684\u786c\u4ef6\u5730\u5740\u76f8\u540c * \u5e7f\u64ad\uff08broadcast\uff09\u5e27\uff08\u4e00\u5bf9\u5168\u4f53\uff09\uff1a\u53d1\u9001\u7ed9\u672c\u5c40\u57df\u7f51\u4e0a\u6240\u6709\u7ad9\u70b9\u7684\u5e27 * \u591a\u64ad\uff08multicast\uff09\u5e27\uff08\u4e00\u5bf9\u591a\uff09\uff1a\u53d1\u9001\u7ed9\u672c\u5c40\u57df\u7f51\u4e0a\u4e00\u90e8\u5206\u7ad9\u70b9\u7684\u5e27 \u7f51\u7edc\u5c42 # IP\uff08Internet Protocol\uff0c\u7f51\u9645\u534f\u8bae\uff09\u662f\u4e3a\u8ba1\u7b97\u673a\u7f51\u7edc\u76f8\u4e92\u8fde\u63a5\u8fdb\u884c\u901a\u4fe1\u800c\u8bbe\u8ba1\u7684\u534f\u8bae\u3002 ARP\uff08Address Resolution Protocol\uff0c\u5730\u5740\u89e3\u6790\u534f\u8bae\uff09 ICMP\uff08Internet Control Message Protocol\uff0c\u7f51\u9645\u63a7\u5236\u62a5\u6587\u534f\u8bae\uff09 IGMP\uff08Internet Group Management Protocol\uff0c\u7f51\u9645\u7ec4\u7ba1\u7406\u534f\u8bae\uff09 IP \u7f51\u9645\u534f\u8bae # IP \u5730\u5740\u5206\u7c7b\uff1a * IP \u5730\u5740 ::= {<\u7f51\u7edc\u53f7>,<\u4e3b\u673a\u53f7>} IP \u5730\u5740\u7c7b\u522b \u7f51\u7edc\u53f7 \u7f51\u7edc\u8303\u56f4 \u4e3b\u673a\u53f7 IP \u5730\u5740\u8303\u56f4 A \u7c7b 8bit\uff0c\u7b2c\u4e00\u4f4d\u56fa\u5b9a\u4e3a 0 0 \u2014\u2014 127 24bit 1.0.0.0 \u2014\u2014 127.255.255.255 B \u7c7b 16bit\uff0c\u524d\u4e24\u4f4d\u56fa\u5b9a\u4e3a 10 128.0 \u2014\u2014 191.255 16bit 128.0.0.0 \u2014\u2014 191.255.255.255 C \u7c7b 24bit\uff0c\u524d\u4e09\u4f4d\u56fa\u5b9a\u4e3a 110 192.0.0 \u2014\u2014 223.255.255 8bit 192.0.0.0 \u2014\u2014 223.255.255.255 D \u7c7b \u524d\u56db\u4f4d\u56fa\u5b9a\u4e3a 1110\uff0c\u540e\u9762\u4e3a\u591a\u64ad\u5730\u5740 E \u7c7b \u524d\u4e94\u4f4d\u56fa\u5b9a\u4e3a 11110\uff0c\u540e\u9762\u4fdd\u7559\u4e3a\u4eca\u540e\u6240\u7528 IP \u6570\u636e\u62a5\u683c\u5f0f\uff1a ICMP \u7f51\u9645\u63a7\u5236\u62a5\u6587\u534f\u8bae # ICMP \u62a5\u6587\u683c\u5f0f\uff1a \u5e94\u7528\uff1a * PING\uff08Packet InterNet Groper\uff0c\u5206\u7ec4\u7f51\u95f4\u63a2\u6d4b\uff09\u6d4b\u8bd5\u4e24\u4e2a\u4e3b\u673a\u4e4b\u95f4\u7684\u8fde\u901a\u6027 * TTL\uff08Time To Live\uff0c\u751f\u5b58\u65f6\u95f4\uff09\u8be5\u5b57\u6bb5\u6307\u5b9a IP \u5305\u88ab\u8def\u7531\u5668\u4e22\u5f03\u4e4b\u524d\u5141\u8bb8\u901a\u8fc7\u7684\u6700\u5927\u7f51\u6bb5\u6570\u91cf \u5185\u90e8\u7f51\u5173\u534f\u8bae # RIP\uff08Routing Information Protocol\uff0c\u8def\u7531\u4fe1\u606f\u534f\u8bae\uff09 OSPF\uff08Open Sortest Path First\uff0c\u5f00\u653e\u6700\u77ed\u8def\u5f84\u4f18\u5148\uff09 \u5916\u90e8\u7f51\u5173\u534f\u8bae # BGP\uff08Border Gateway Protocol\uff0c\u8fb9\u754c\u7f51\u5173\u534f\u8bae\uff09 IP\u591a\u64ad # IGMP\uff08Internet Group Management Protocol\uff0c\u7f51\u9645\u7ec4\u7ba1\u7406\u534f\u8bae\uff09 \u591a\u64ad\u8def\u7531\u9009\u62e9\u534f\u8bae VPN \u548c NAT # VPN\uff08Virtual Private Network\uff0c\u865a\u62df\u4e13\u7528\u7f51\uff09 NAT\uff08Network Address Translation\uff0c\u7f51\u7edc\u5730\u5740\u8f6c\u6362\uff09 \u8def\u7531\u8868\u5305\u542b\u4ec0\u4e48\uff1f # \u7f51\u7edc ID\uff08Network ID, Network number\uff09\uff1a\u5c31\u662f\u76ee\u6807\u5730\u5740\u7684\u7f51\u7edc ID\u3002 \u5b50\u7f51\u63a9\u7801\uff08subnet mask\uff09\uff1a\u7528\u6765\u5224\u65ad IP \u6240\u5c5e\u7f51\u7edc \u4e0b\u4e00\u8df3\u5730\u5740/\u63a5\u53e3\uff08Next hop / interface\uff09\uff1a\u5c31\u662f\u6570\u636e\u5728\u53d1\u9001\u5230\u76ee\u6807\u5730\u5740\u7684\u65c5\u9014\u4e2d\u4e0b\u4e00\u7ad9\u7684\u5730\u5740\u3002\u5176\u4e2d interface \u6307\u5411 next hop\uff08\u5373\u4e3a\u4e0b\u4e00\u4e2a route\uff09\u3002\u4e00\u4e2a\u81ea\u6cbb\u7cfb\u7edf\uff08AS, Autonomous system\uff09\u4e2d\u7684 route \u5e94\u8be5\u5305\u542b\u533a\u57df\u5185\u6240\u6709\u7684\u5b50\u7f51\u7edc\uff0c\u800c\u9ed8\u8ba4\u7f51\u5173\uff08Network id: 0.0.0.0 , Netmask: 0.0.0.0 \uff09\u6307\u5411\u81ea\u6cbb\u7cfb\u7edf\u7684\u51fa\u53e3\u3002 \u6839\u636e\u5e94\u7528\u548c\u6267\u884c\u7684\u4e0d\u540c\uff0c\u8def\u7531\u8868\u53ef\u80fd\u542b\u6709\u5982\u4e0b\u9644\u52a0\u4fe1\u606f\uff1a \u82b1\u8d39\uff08Cost\uff09\uff1a\u5c31\u662f\u6570\u636e\u53d1\u9001\u8fc7\u7a0b\u4e2d\u901a\u8fc7\u8def\u5f84\u6240\u9700\u8981\u7684\u82b1\u8d39\u3002 \u8def\u7531\u7684\u670d\u52a1\u8d28\u91cf \u8def\u7531\u4e2d\u9700\u8981\u8fc7\u6ee4\u7684\u51fa/\u5165\u8fde\u63a5\u5217\u8868 \u8fd0\u8f93\u5c42 # \u534f\u8bae\uff1a TCP\uff08Transmission Control Protocol\uff0c\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09 UDP\uff08User Datagram Protocol\uff0c\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae\uff09 \u7aef\u53e3\uff1a \u5e94\u7528\u7a0b\u5e8f FTP TELNET SMTP DNS TFTP HTTP HTTPS SNMP \u7aef\u53e3\u53f7 21 23 25 53 69 80 443 161 TCP # TCP\uff08Transmission Control Protocol\uff0c\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09\u662f\u4e00\u79cd\u9762\u5411\u8fde\u63a5\u7684\u3001\u53ef\u9760\u7684\u3001\u57fa\u4e8e\u5b57\u8282\u6d41\u7684\u4f20\u8f93\u5c42\u901a\u4fe1\u534f\u8bae\uff0c\u5176\u4f20\u8f93\u7684\u5355\u4f4d\u662f\u62a5\u6587\u6bb5\u3002 \u7279\u5f81\uff1a * \u9762\u5411\u8fde\u63a5 * \u53ea\u80fd\u70b9\u5bf9\u70b9\uff08\u4e00\u5bf9\u4e00\uff09\u901a\u4fe1 * \u53ef\u9760\u4ea4\u4e92 * \u5168\u53cc\u5de5\u901a\u4fe1 * \u9762\u5411\u5b57\u8282\u6d41 TCP \u5982\u4f55\u4fdd\u8bc1\u53ef\u9760\u4f20\u8f93\uff1a * \u786e\u8ba4\u548c\u8d85\u65f6\u91cd\u4f20 * \u6570\u636e\u5408\u7406\u5206\u7247\u548c\u6392\u5e8f * \u6d41\u91cf\u63a7\u5236 * \u62e5\u585e\u63a7\u5236 * \u6570\u636e\u6821\u9a8c TCP \u62a5\u6587\u7ed3\u6784 TCP \u9996\u90e8 TCP\uff1a\u72b6\u6001\u63a7\u5236\u7801\uff08Code\uff0cControl Flag\uff09\uff0c\u5360 6 \u6bd4\u7279\uff0c\u542b\u4e49\u5982\u4e0b\uff1a * URG\uff1a\u7d27\u6025\u6bd4\u7279\uff08urgent\uff09\uff0c\u5f53 URG\uff1d1 \u65f6\uff0c\u8868\u660e\u7d27\u6025\u6307\u9488\u5b57\u6bb5\u6709\u6548\uff0c\u4ee3\u8868\u8be5\u5c01\u5305\u4e3a\u7d27\u6025\u5c01\u5305\u3002\u5b83\u544a\u8bc9\u7cfb\u7edf\u6b64\u62a5\u6587\u6bb5\u4e2d\u6709\u7d27\u6025\u6570\u636e\uff0c\u5e94\u5c3d\u5feb\u4f20\u9001(\u76f8\u5f53\u4e8e\u9ad8\u4f18\u5148\u7ea7\u7684\u6570\u636e)\uff0c \u4e14\u4e0a\u56fe\u4e2d\u7684 Urgent Pointer \u5b57\u6bb5\u4e5f\u4f1a\u88ab\u542f\u7528\u3002 * ACK\uff1a\u786e\u8ba4\u6bd4\u7279\uff08Acknowledge\uff09\u3002\u53ea\u6709\u5f53 ACK\uff1d1 \u65f6\u786e\u8ba4\u53f7\u5b57\u6bb5\u624d\u6709\u6548\uff0c\u4ee3\u8868\u8fd9\u4e2a\u5c01\u5305\u4e3a\u786e\u8ba4\u5c01\u5305\u3002\u5f53 ACK\uff1d0 \u65f6\uff0c\u786e\u8ba4\u53f7\u65e0\u6548\u3002 * PSH\uff1a\uff08Push function\uff09\u82e5\u4e3a 1 \u65f6\uff0c\u4ee3\u8868\u8981\u6c42\u5bf9\u65b9\u7acb\u5373\u4f20\u9001\u7f13\u51b2\u533a\u5185\u7684\u5176\u4ed6\u5bf9\u5e94\u5c01\u5305\uff0c\u800c\u65e0\u9700\u7b49\u7f13\u51b2\u6ee1\u4e86\u624d\u9001\u3002 * RST\uff1a\u590d\u4f4d\u6bd4\u7279(Reset)\uff0c\u5f53 RST\uff1d1 \u65f6\uff0c\u8868\u660e TCP \u8fde\u63a5\u4e2d\u51fa\u73b0\u4e25\u91cd\u5dee\u9519\uff08\u5982\u7531\u4e8e\u4e3b\u673a\u5d29\u6e83\u6216\u5176\u4ed6\u539f\u56e0\uff09\uff0c\u5fc5\u987b\u91ca\u653e\u8fde\u63a5\uff0c\u7136\u540e\u518d\u91cd\u65b0\u5efa\u7acb\u8fd0\u8f93\u8fde\u63a5\u3002 * SYN\uff1a\u540c\u6b65\u6bd4\u7279(Synchronous)\uff0cSYN \u7f6e\u4e3a 1\uff0c\u5c31\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u8fde\u63a5\u8bf7\u6c42\u6216\u8fde\u63a5\u63a5\u53d7\u62a5\u6587\uff0c\u901a\u5e38\u5e26\u6709 SYN \u6807\u5fd7\u7684\u5c01\u5305\u8868\u793a\u300e\u4e3b\u52a8\u300f\u8981\u8fde\u63a5\u5230\u5bf9\u65b9\u7684\u610f\u601d\u3002 * FIN\uff1a\u7ec8\u6b62\u6bd4\u7279(Final)\uff0c\u7528\u6765\u91ca\u653e\u4e00\u4e2a\u8fde\u63a5\u3002\u5f53 FIN\uff1d1 \u65f6\uff0c\u8868\u660e\u6b64\u62a5\u6587\u6bb5\u7684\u53d1\u9001\u7aef\u7684\u6570\u636e\u5df2\u53d1\u9001\u5b8c\u6bd5\uff0c\u5e76\u8981\u6c42\u91ca\u653e\u8fd0\u8f93\u8fde\u63a5\u3002 UDP # UDP\uff08User Datagram Protocol\uff0c\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae\uff09\u662f OSI\uff08Open System Interconnection \u5f00\u653e\u5f0f\u7cfb\u7edf\u4e92\u8054\uff09 \u53c2\u8003\u6a21\u578b\u4e2d\u4e00\u79cd\u65e0\u8fde\u63a5\u7684\u4f20\u8f93\u5c42\u534f\u8bae\uff0c\u63d0\u4f9b\u9762\u5411\u4e8b\u52a1\u7684\u7b80\u5355\u4e0d\u53ef\u9760\u4fe1\u606f\u4f20\u9001\u670d\u52a1\uff0c\u5176\u4f20\u8f93\u7684\u5355\u4f4d\u662f\u7528\u6237\u6570\u636e\u62a5\u3002 \u7279\u5f81\uff1a * \u65e0\u8fde\u63a5 * \u5c3d\u6700\u5927\u52aa\u529b\u4ea4\u4ed8 * \u9762\u5411\u62a5\u6587 * \u6ca1\u6709\u62e5\u585e\u63a7\u5236 * \u652f\u6301\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u3001\u591a\u5bf9\u4e00\u3001\u591a\u5bf9\u591a\u7684\u4ea4\u4e92\u901a\u4fe1 * \u9996\u90e8\u5f00\u9500\u5c0f UDP \u62a5\u6587\u7ed3\u6784 UDP \u9996\u90e8 TCP/UDP \u56fe\u7247\u6765\u6e90\u4e8e\uff1a https://github.com/JerryC8080/understand-tcp-udp TCP \u4e0e UDP \u7684\u533a\u522b # TCP \u9762\u5411\u8fde\u63a5\uff0cUDP \u662f\u65e0\u8fde\u63a5\u7684\uff1b TCP \u63d0\u4f9b\u53ef\u9760\u7684\u670d\u52a1\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u901a\u8fc7 TCP \u8fde\u63a5\u4f20\u9001\u7684\u6570\u636e\uff0c\u65e0\u5dee\u9519\uff0c\u4e0d\u4e22\u5931\uff0c\u4e0d\u91cd\u590d\uff0c\u4e14\u6309\u5e8f\u5230\u8fbe\uff1bUDP \u5c3d\u6700\u5927\u52aa\u529b\u4ea4\u4ed8\uff0c\u5373\u4e0d\u4fdd\u8bc1\u53ef\u9760\u4ea4\u4ed8 TCP \u7684\u903b\u8f91\u901a\u4fe1\u4fe1\u9053\u662f\u5168\u53cc\u5de5\u7684\u53ef\u9760\u4fe1\u9053\uff1bUDP \u5219\u662f\u4e0d\u53ef\u9760\u4fe1\u9053 \u6bcf\u4e00\u6761 TCP \u8fde\u63a5\u53ea\u80fd\u662f\u70b9\u5230\u70b9\u7684\uff1bUDP \u652f\u6301\u4e00\u5bf9\u4e00\uff0c\u4e00\u5bf9\u591a\uff0c\u591a\u5bf9\u4e00\u548c\u591a\u5bf9\u591a\u7684\u4ea4\u4e92\u901a\u4fe1 TCP \u9762\u5411\u5b57\u8282\u6d41\uff08\u53ef\u80fd\u51fa\u73b0\u9ecf\u5305\u95ee\u9898\uff09\uff0c\u5b9e\u9645\u4e0a\u662f TCP \u628a\u6570\u636e\u770b\u6210\u4e00\u8fde\u4e32\u65e0\u7ed3\u6784\u7684\u5b57\u8282\u6d41\uff1bUDP \u662f\u9762\u5411\u62a5\u6587\u7684\uff08\u4e0d\u4f1a\u51fa\u73b0\u9ecf\u5305\u95ee\u9898\uff09 UDP \u6ca1\u6709\u62e5\u585e\u63a7\u5236\uff0c\u56e0\u6b64\u7f51\u7edc\u51fa\u73b0\u62e5\u585e\u4e0d\u4f1a\u4f7f\u6e90\u4e3b\u673a\u7684\u53d1\u9001\u901f\u7387\u964d\u4f4e\uff08\u5bf9\u5b9e\u65f6\u5e94\u7528\u5f88\u6709\u7528\uff0c\u5982 IP \u7535\u8bdd\uff0c\u5b9e\u65f6\u89c6\u9891\u4f1a\u8bae\u7b49\uff09 TCP \u9996\u90e8\u5f00\u950020\u5b57\u8282\uff1bUDP \u7684\u9996\u90e8\u5f00\u9500\u5c0f\uff0c\u53ea\u6709 8 \u4e2a\u5b57\u8282 TCP \u9ecf\u5305\u95ee\u9898 # \u539f\u56e0 # TCP \u662f\u4e00\u4e2a\u57fa\u4e8e\u5b57\u8282\u6d41\u7684\u4f20\u8f93\u670d\u52a1\uff08UDP \u57fa\u4e8e\u62a5\u6587\u7684\uff09\uff0c\u201c\u6d41\u201d \u610f\u5473\u7740 TCP \u6240\u4f20\u8f93\u7684\u6570\u636e\u662f\u6ca1\u6709\u8fb9\u754c\u7684\u3002\u6240\u4ee5\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e24\u4e2a\u6570\u636e\u5305\u9ecf\u5728\u4e00\u8d77\u7684\u60c5\u51b5\u3002 \u89e3\u51b3 # \u53d1\u9001\u5b9a\u957f\u5305\u3002\u5982\u679c\u6bcf\u4e2a\u6d88\u606f\u7684\u5927\u5c0f\u90fd\u662f\u4e00\u6837\u7684\uff0c\u90a3\u4e48\u5728\u63a5\u6536\u5bf9\u7b49\u65b9\u53ea\u8981\u7d2f\u8ba1\u63a5\u6536\u6570\u636e\uff0c\u76f4\u5230\u6570\u636e\u7b49\u4e8e\u4e00\u4e2a\u5b9a\u957f\u7684\u6570\u503c\u5c31\u5c06\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u6d88\u606f\u3002 \u5305\u5934\u52a0\u4e0a\u5305\u4f53\u957f\u5ea6\u3002\u5305\u5934\u662f\u5b9a\u957f\u7684 4 \u4e2a\u5b57\u8282\uff0c\u8bf4\u660e\u4e86\u5305\u4f53\u7684\u957f\u5ea6\u3002\u63a5\u6536\u5bf9\u7b49\u65b9\u5148\u63a5\u6536\u5305\u5934\u957f\u5ea6\uff0c\u4f9d\u636e\u5305\u5934\u957f\u5ea6\u6765\u63a5\u6536\u5305\u4f53\u3002 \u5728\u6570\u636e\u5305\u4e4b\u95f4\u8bbe\u7f6e\u8fb9\u754c\uff0c\u5982\u6dfb\u52a0\u7279\u6b8a\u7b26\u53f7 \\r\\n \u6807\u8bb0\u3002FTP \u534f\u8bae\u6b63\u662f\u8fd9\u4e48\u505a\u7684\u3002\u4f46\u95ee\u9898\u5728\u4e8e\u5982\u679c\u6570\u636e\u6b63\u6587\u4e2d\u4e5f\u542b\u6709 \\r\\n \uff0c\u5219\u4f1a\u8bef\u5224\u4e3a\u6d88\u606f\u7684\u8fb9\u754c\u3002 \u4f7f\u7528\u66f4\u52a0\u590d\u6742\u7684\u5e94\u7528\u5c42\u534f\u8bae\u3002 TCP \u6d41\u91cf\u63a7\u5236 # \u6982\u5ff5 # \u6d41\u91cf\u63a7\u5236\uff08flow control\uff09\u5c31\u662f\u8ba9\u53d1\u9001\u65b9\u7684\u53d1\u9001\u901f\u7387\u4e0d\u8981\u592a\u5feb\uff0c\u8981\u8ba9\u63a5\u6536\u65b9\u6765\u5f97\u53ca\u63a5\u6536\u3002 \u65b9\u6cd5 # \u5229\u7528\u53ef\u53d8\u7a97\u53e3\u8fdb\u884c\u6d41\u91cf\u63a7\u5236 TCP \u62e5\u585e\u63a7\u5236 # \u6982\u5ff5 # \u62e5\u585e\u63a7\u5236\u5c31\u662f\u9632\u6b62\u8fc7\u591a\u7684\u6570\u636e\u6ce8\u5165\u5230\u7f51\u7edc\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u7f51\u7edc\u4e2d\u7684\u8def\u7531\u5668\u6216\u94fe\u8def\u4e0d\u81f4\u8fc7\u8f7d\u3002 \u65b9\u6cd5 # \u6162\u5f00\u59cb( slow-start ) \u62e5\u585e\u907f\u514d( congestion avoidance ) \u5feb\u91cd\u4f20( fast retransmit ) \u5feb\u6062\u590d( fast recovery ) TCP\u7684\u62e5\u585e\u63a7\u5236\u56fe TCP \u4f20\u8f93\u8fde\u63a5\u7ba1\u7406 # \u56e0\u4e3a TCP \u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u8fde\u63a5\u3001\u56db\u6b21\u6325\u624b\u91ca\u653e\u8fde\u63a5\u5f88\u91cd\u8981\uff0c\u6240\u4ee5\u9644\u4e0a\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\uff08\u7b2c 7 \u7248\uff09-\u8c22\u5e0c\u4ec1\u300b\u4e66\u4e2d\u5bf9\u6b64\u7ae0\u7684\u8be6\u7ec6\u63cf\u8ff0\uff1a https://gitee.com/huihut/interview/raw/master/images/TCP-transport-connection-management.png TCP \u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u8fde\u63a5 # \u3010TCP \u5efa\u7acb\u8fde\u63a5\u5168\u8fc7\u7a0b\u89e3\u91ca\u3011 \u5ba2\u6237\u7aef\u53d1\u9001 SYN \u7ed9\u670d\u52a1\u5668\uff0c\u8bf4\u660e\u5ba2\u6237\u7aef\u8bf7\u6c42\u5efa\u7acb\u8fde\u63a5\uff1b \u670d\u52a1\u7aef\u6536\u5230\u5ba2\u6237\u7aef\u53d1\u7684 SYN\uff0c\u5e76\u56de\u590d SYN+ACK \u7ed9\u5ba2\u6237\u7aef\uff08\u540c\u610f\u5efa\u7acb\u8fde\u63a5\uff09\uff1b \u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u7aef\u7684 SYN+ACK \u540e\uff0c\u56de\u590d ACK \u7ed9\u670d\u52a1\u7aef\uff08\u8868\u793a\u5ba2\u6237\u7aef\u6536\u5230\u4e86\u670d\u52a1\u7aef\u53d1\u7684\u540c\u610f\u62a5\u6587\uff09\uff1b \u670d\u52a1\u7aef\u6536\u5230\u5ba2\u6237\u7aef\u7684 ACK\uff0c\u8fde\u63a5\u5df2\u5efa\u7acb\uff0c\u53ef\u4ee5\u6570\u636e\u4f20\u8f93\u3002 TCP \u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u4e09\u6b21\u63e1\u624b\uff1f # \u3010\u7b54\u6848\u4e00\u3011\u56e0\u4e3a\u4fe1\u9053\u4e0d\u53ef\u9760\uff0c\u800c TCP \u60f3\u5728\u4e0d\u53ef\u9760\u4fe1\u9053\u4e0a\u5efa\u7acb\u53ef\u9760\u5730\u4f20\u8f93\uff0c\u90a3\u4e48\u4e09\u6b21\u901a\u4fe1\u662f\u7406\u8bba\u4e0a\u7684\u6700\u5c0f\u503c\u3002\uff08\u800c UDP \u5219\u4e0d\u9700\u5efa\u7acb\u53ef\u9760\u4f20\u8f93\uff0c\u56e0\u6b64 UDP \u4e0d\u9700\u8981\u4e09\u6b21\u63e1\u624b\u3002\uff09 Google Groups . TCP \u5efa\u7acb\u8fde\u63a5\u4e3a\u4ec0\u4e48\u662f\u4e09\u6b21\u63e1\u624b\uff1f{\u6280\u672f}{\u7f51\u7edc\u901a\u4fe1} \u3010\u7b54\u6848\u4e8c\u3011\u56e0\u4e3a\u53cc\u65b9\u90fd\u9700\u8981\u786e\u8ba4\u5bf9\u65b9\u6536\u5230\u4e86\u81ea\u5df1\u53d1\u9001\u7684\u5e8f\u5217\u53f7\uff0c\u786e\u8ba4\u8fc7\u7a0b\u6700\u5c11\u8981\u8fdb\u884c\u4e09\u6b21\u901a\u4fe1\u3002 \u77e5\u4e4e . TCP \u4e3a\u4ec0\u4e48\u662f\u4e09\u6b21\u63e1\u624b\uff0c\u800c\u4e0d\u662f\u4e24\u6b21\u6216\u56db\u6b21\uff1f \u3010\u7b54\u6848\u4e09\u3011\u4e3a\u4e86\u9632\u6b62\u5df2\u5931\u6548\u7684\u8fde\u63a5\u8bf7\u6c42\u62a5\u6587\u6bb5\u7a81\u7136\u53c8\u4f20\u9001\u5230\u4e86\u670d\u52a1\u7aef\uff0c\u56e0\u800c\u4ea7\u751f\u9519\u8bef\u3002 \u300a\u8ba1\u7b97\u673a\u7f51\u7edc\uff08\u7b2c 7 \u7248\uff09-\u8c22\u5e0c\u4ec1\u300b TCP \u56db\u6b21\u6325\u624b\u91ca\u653e\u8fde\u63a5 # \u3010TCP \u91ca\u653e\u8fde\u63a5\u5168\u8fc7\u7a0b\u89e3\u91ca\u3011 \u5ba2\u6237\u7aef\u53d1\u9001 FIN \u7ed9\u670d\u52a1\u5668\uff0c\u8bf4\u660e\u5ba2\u6237\u7aef\u4e0d\u5fc5\u53d1\u9001\u6570\u636e\u7ed9\u670d\u52a1\u5668\u4e86\uff08\u8bf7\u6c42\u91ca\u653e\u4ece\u5ba2\u6237\u7aef\u5230\u670d\u52a1\u5668\u7684\u8fde\u63a5\uff09\uff1b \u670d\u52a1\u5668\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u53d1\u7684 FIN\uff0c\u5e76\u56de\u590d ACK \u7ed9\u5ba2\u6237\u7aef\uff08\u540c\u610f\u91ca\u653e\u4ece\u5ba2\u6237\u7aef\u5230\u670d\u52a1\u5668\u7684\u8fde\u63a5\uff09\uff1b \u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u7aef\u56de\u590d\u7684 ACK\uff0c\u6b64\u65f6\u4ece\u5ba2\u6237\u7aef\u5230\u670d\u52a1\u5668\u7684\u8fde\u63a5\u5df2\u91ca\u653e\uff08\u4f46\u670d\u52a1\u7aef\u5230\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u8fd8\u672a\u91ca\u653e\uff0c\u5e76\u4e14\u5ba2\u6237\u7aef\u8fd8\u53ef\u4ee5\u63a5\u6536\u6570\u636e\uff09\uff1b \u670d\u52a1\u7aef\u7ee7\u7eed\u53d1\u9001\u4e4b\u524d\u6ca1\u53d1\u5b8c\u7684\u6570\u636e\u7ed9\u5ba2\u6237\u7aef\uff1b \u670d\u52a1\u7aef\u53d1\u9001 FIN+ACK \u7ed9\u5ba2\u6237\u7aef\uff0c\u8bf4\u660e\u670d\u52a1\u7aef\u53d1\u9001\u5b8c\u4e86\u6570\u636e\uff08\u8bf7\u6c42\u91ca\u653e\u4ece\u670d\u52a1\u7aef\u5230\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\uff0c\u5c31\u7b97\u6ca1\u6536\u5230\u5ba2\u6237\u7aef\u7684\u56de\u590d\uff0c\u8fc7\u6bb5\u65f6\u95f4\u4e5f\u4f1a\u81ea\u52a8\u91ca\u653e\uff09\uff1b \u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u7aef\u7684 FIN+ACK\uff0c\u5e76\u56de\u590d ACK \u7ed9\u670d\u52a1\u7aef\uff08\u540c\u610f\u91ca\u653e\u4ece\u670d\u52a1\u7aef\u5230\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\uff09\uff1b \u670d\u52a1\u7aef\u6536\u5230\u5ba2\u6237\u7aef\u7684 ACK \u540e\uff0c\u91ca\u653e\u4ece\u670d\u52a1\u7aef\u5230\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u3002 TCP \u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u56db\u6b21\u6325\u624b\uff1f # \u3010\u95ee\u9898\u4e00\u3011TCP \u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u56db\u6b21\u6325\u624b\uff1f / \u4e3a\u4ec0\u4e48 TCP \u5efa\u7acb\u8fde\u63a5\u9700\u8981\u4e09\u6b21\uff0c\u800c\u91ca\u653e\u8fde\u63a5\u5219\u9700\u8981\u56db\u6b21\uff1f \u3010\u7b54\u6848\u4e00\u3011\u56e0\u4e3a TCP \u662f\u5168\u53cc\u5de5\u6a21\u5f0f\uff0c\u5ba2\u6237\u7aef\u8bf7\u6c42\u5173\u95ed\u8fde\u63a5\u540e\uff0c\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u7684\u8fde\u63a5\u5173\u95ed\uff08\u4e00\u4e8c\u6b21\u6325\u624b\uff09\uff0c\u670d\u52a1\u7aef\u7ee7\u7eed\u4f20\u8f93\u4e4b\u524d\u6ca1\u4f20\u5b8c\u7684\u6570\u636e\u7ed9\u5ba2\u6237\u7aef\uff08\u6570\u636e\u4f20\u8f93\uff09\uff0c\u670d\u52a1\u7aef\u5411\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u5173\u95ed\uff08\u4e09\u56db\u6b21\u6325\u624b\uff09\u3002\u6240\u4ee5 TCP \u91ca\u653e\u8fde\u63a5\u65f6\u670d\u52a1\u5668\u7684 ACK \u548c FIN \u662f\u5206\u5f00\u53d1\u9001\u7684\uff08\u4e2d\u95f4\u9694\u7740\u6570\u636e\u4f20\u8f93\uff09\uff0c\u800c TCP \u5efa\u7acb\u8fde\u63a5\u65f6\u670d\u52a1\u5668\u7684 ACK \u548c SYN \u662f\u4e00\u8d77\u53d1\u9001\u7684\uff08\u7b2c\u4e8c\u6b21\u63e1\u624b\uff09\uff0c\u6240\u4ee5 TCP \u5efa\u7acb\u8fde\u63a5\u9700\u8981\u4e09\u6b21\uff0c\u800c\u91ca\u653e\u8fde\u63a5\u5219\u9700\u8981\u56db\u6b21\u3002 \u3010\u95ee\u9898\u4e8c\u3011\u4e3a\u4ec0\u4e48 TCP \u8fde\u63a5\u65f6\u53ef\u4ee5 ACK \u548c SYN \u4e00\u8d77\u53d1\u9001\uff0c\u800c\u91ca\u653e\u65f6\u5219 ACK \u548c FIN \u5206\u5f00\u53d1\u9001\u5462\uff1f\uff08ACK \u548c FIN \u5206\u5f00\u662f\u6307\u7b2c\u4e8c\u6b21\u548c\u7b2c\u4e09\u6b21\u6325\u624b\uff09 \u3010\u7b54\u6848\u4e8c\u3011\u56e0\u4e3a\u5ba2\u6237\u7aef\u8bf7\u6c42\u91ca\u653e\u65f6\uff0c\u670d\u52a1\u5668\u53ef\u80fd\u8fd8\u6709\u6570\u636e\u9700\u8981\u4f20\u8f93\u7ed9\u5ba2\u6237\u7aef\uff0c\u56e0\u6b64\u670d\u52a1\u7aef\u8981\u5148\u54cd\u5e94\u5ba2\u6237\u7aef FIN \u8bf7\u6c42\uff08\u670d\u52a1\u7aef\u53d1\u9001 ACK\uff09\uff0c\u7136\u540e\u6570\u636e\u4f20\u8f93\uff0c\u4f20\u8f93\u5b8c\u6210\u540e\uff0c\u670d\u52a1\u7aef\u518d\u63d0\u51fa FIN \u8bf7\u6c42\uff08\u670d\u52a1\u7aef\u53d1\u9001 FIN\uff09\uff1b\u800c\u8fde\u63a5\u65f6\u5219\u6ca1\u6709\u4e2d\u95f4\u7684\u6570\u636e\u4f20\u8f93\uff0c\u56e0\u6b64\u8fde\u63a5\u65f6\u53ef\u4ee5 ACK \u548c SYN \u4e00\u8d77\u53d1\u9001\u3002 \u3010\u95ee\u9898\u4e09\u3011\u4e3a\u4ec0\u4e48\u5ba2\u6237\u7aef\u91ca\u653e\u6700\u540e\u9700\u8981 TIME-WAIT \u7b49\u5f85 2MSL \u5462\uff1f \u3010\u7b54\u6848\u4e09\u3011 \u4e3a\u4e86\u4fdd\u8bc1\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u6700\u540e\u4e00\u4e2a ACK \u62a5\u6587\u80fd\u591f\u5230\u8fbe\u670d\u52a1\u7aef\u3002\u82e5\u672a\u6210\u529f\u5230\u8fbe\uff0c\u5219\u670d\u52a1\u7aef\u8d85\u65f6\u91cd\u4f20 FIN+ACK \u62a5\u6587\u6bb5\uff0c\u5ba2\u6237\u7aef\u518d\u91cd\u4f20 ACK\uff0c\u5e76\u91cd\u65b0\u8ba1\u65f6\u3002 \u9632\u6b62\u5df2\u5931\u6548\u7684\u8fde\u63a5\u8bf7\u6c42\u62a5\u6587\u6bb5\u51fa\u73b0\u5728\u672c\u8fde\u63a5\u4e2d\u3002TIME-WAIT \u6301\u7eed 2MSL \u53ef\u4f7f\u672c\u8fde\u63a5\u6301\u7eed\u7684\u65f6\u95f4\u5185\u6240\u4ea7\u751f\u7684\u6240\u6709\u62a5\u6587\u6bb5\u90fd\u4ece\u7f51\u7edc\u4e2d\u6d88\u5931\uff0c\u8fd9\u6837\u53ef\u4f7f\u4e0b\u6b21\u8fde\u63a5\u4e2d\u4e0d\u4f1a\u51fa\u73b0\u65e7\u7684\u8fde\u63a5\u62a5\u6587\u6bb5\u3002 TCP \u6709\u9650\u72b6\u6001\u673a # TCP \u6709\u9650\u72b6\u6001\u673a\u56fe\u7247 \u5e94\u7528\u5c42 # DNS # DNS\uff08Domain Name System\uff0c\u57df\u540d\u7cfb\u7edf\uff09\u662f\u4e92\u8054\u7f51\u7684\u4e00\u9879\u670d\u52a1\u3002\u5b83\u4f5c\u4e3a\u5c06\u57df\u540d\u548c IP \u5730\u5740\u76f8\u4e92\u6620\u5c04\u7684\u4e00\u4e2a\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff0c\u80fd\u591f\u4f7f\u4eba\u66f4\u65b9\u4fbf\u5730\u8bbf\u95ee\u4e92\u8054\u7f51\u3002DNS \u4f7f\u7528 TCP \u548c UDP \u7aef\u53e3 53\u3002\u5f53\u524d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u7ea7\u57df\u540d\u957f\u5ea6\u7684\u9650\u5236\u662f 63 \u4e2a\u5b57\u7b26\uff0c\u57df\u540d\u603b\u957f\u5ea6\u5219\u4e0d\u80fd\u8d85\u8fc7 253 \u4e2a\u5b57\u7b26\u3002 \u57df\u540d\uff1a * \u57df\u540d ::= {<\u4e09\u7ea7\u57df\u540d>.<\u4e8c\u7ea7\u57df\u540d>.<\u9876\u7ea7\u57df\u540d>} \uff0c\u5982\uff1a blog.huihut.com FTP # FTP\uff08File Transfer Protocol\uff0c\u6587\u4ef6\u4f20\u8f93\u534f\u8bae\uff09\u662f\u7528\u4e8e\u5728\u7f51\u7edc\u4e0a\u8fdb\u884c\u6587\u4ef6\u4f20\u8f93\u7684\u4e00\u5957\u6807\u51c6\u534f\u8bae\uff0c\u4f7f\u7528\u5ba2\u6237/\u670d\u52a1\u5668\u6a21\u5f0f\uff0c\u4f7f\u7528 TCP \u6570\u636e\u62a5\uff0c\u63d0\u4f9b\u4ea4\u4e92\u5f0f\u8bbf\u95ee\uff0c\u53cc\u5411\u4f20\u8f93\u3002 TFTP\uff08Trivial File Transfer Protocol\uff0c\u7b80\u5355\u6587\u4ef6\u4f20\u8f93\u534f\u8bae\uff09\u4e00\u4e2a\u5c0f\u4e14\u6613\u5b9e\u73b0\u7684\u6587\u4ef6\u4f20\u8f93\u534f\u8bae\uff0c\u4e5f\u4f7f\u7528\u5ba2\u6237-\u670d\u52a1\u5668\u65b9\u5f0f\uff0c\u4f7f\u7528UDP\u6570\u636e\u62a5\uff0c\u53ea\u652f\u6301\u6587\u4ef6\u4f20\u8f93\u800c\u4e0d\u652f\u6301\u4ea4\u4e92\uff0c\u6ca1\u6709\u5217\u76ee\u5f55\uff0c\u4e0d\u80fd\u5bf9\u7528\u6237\u8fdb\u884c\u8eab\u4efd\u9274\u5b9a TELNET # TELNET \u534f\u8bae\u662f TCP/IP \u534f\u8bae\u65cf\u4e2d\u7684\u4e00\u5458\uff0c\u662f Internet \u8fdc\u7a0b\u767b\u9646\u670d\u52a1\u7684\u6807\u51c6\u534f\u8bae\u548c\u4e3b\u8981\u65b9\u5f0f\u3002\u5b83\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u5728\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u5b8c\u6210\u8fdc\u7a0b\u4e3b\u673a\u5de5\u4f5c\u7684\u80fd\u529b\u3002 HTTP\uff08HyperText Transfer Protocol\uff0c\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff09\u662f\u7528\u4e8e\u4ece WWW\uff08World Wide Web\uff0c\u4e07\u7ef4\u7f51\uff09\u670d\u52a1\u5668\u4f20\u8f93\u8d85\u6587\u672c\u5230\u672c\u5730\u6d4f\u89c8\u5668\u7684\u4f20\u9001\u534f\u8bae\u3002 SMTP\uff08Simple Mail Transfer Protocol\uff0c\u7b80\u5355\u90ae\u4ef6\u4f20\u8f93\u534f\u8bae\uff09\u662f\u4e00\u7ec4\u7528\u4e8e\u7531\u6e90\u5730\u5740\u5230\u76ee\u7684\u5730\u5740\u4f20\u9001\u90ae\u4ef6\u7684\u89c4\u5219\uff0c\u7531\u5b83\u6765\u63a7\u5236\u4fe1\u4ef6\u7684\u4e2d\u8f6c\u65b9\u5f0f\u3002SMTP \u534f\u8bae\u5c5e\u4e8e TCP/IP \u534f\u8bae\u7c07\uff0c\u5b83\u5e2e\u52a9\u6bcf\u53f0\u8ba1\u7b97\u673a\u5728\u53d1\u9001\u6216\u4e2d\u8f6c\u4fe1\u4ef6\u65f6\u627e\u5230\u4e0b\u4e00\u4e2a\u76ee\u7684\u5730\u3002 Socket \u5efa\u7acb\u7f51\u7edc\u901a\u4fe1\u8fde\u63a5\u81f3\u5c11\u8981\u4e00\u5bf9\u7aef\u53e3\u53f7\uff08Socket\uff09\u3002Socket \u672c\u8d28\u662f\u7f16\u7a0b\u63a5\u53e3\uff08API\uff09\uff0c\u5bf9 TCP/IP \u7684\u5c01\u88c5\uff0cTCP/IP \u4e5f\u8981\u63d0\u4f9b\u53ef\u4f9b\u7a0b\u5e8f\u5458\u505a\u7f51\u7edc\u5f00\u53d1\u6240\u7528\u7684\u63a5\u53e3\uff0c\u8fd9\u5c31\u662f Socket \u7f16\u7a0b\u63a5\u53e3\u3002 WWW # WWW\uff08World Wide Web\uff0c\u73af\u7403\u4fe1\u606f\u7f51\uff0c\u4e07\u7ef4\u7f51\uff09\u662f\u4e00\u4e2a\u7531\u8bb8\u591a\u4e92\u76f8\u94fe\u63a5\u7684\u8d85\u6587\u672c\u7ec4\u6210\u7684\u7cfb\u7edf\uff0c\u901a\u8fc7\u4e92\u8054\u7f51\u8bbf\u95ee URL # URL\uff08Uniform Resource Locator\uff0c\u7edf\u4e00\u8d44\u6e90\u5b9a\u4f4d\u7b26\uff09\u662f\u56e0\u7279\u7f51\u4e0a\u6807\u51c6\u7684\u8d44\u6e90\u7684\u5730\u5740\uff08Address\uff09 \u6807\u51c6\u683c\u5f0f\uff1a \u534f\u8bae\u7c7b\u578b:[//\u670d\u52a1\u5668\u5730\u5740[:\u7aef\u53e3\u53f7]][/\u8d44\u6e90\u5c42\u7ea7UNIX\u6587\u4ef6\u8def\u5f84]\u6587\u4ef6\u540d[?\u67e5\u8be2][#\u7247\u6bb5ID] \u5b8c\u6574\u683c\u5f0f\uff1a \u534f\u8bae\u7c7b\u578b:[//[\u8bbf\u95ee\u8d44\u6e90\u9700\u8981\u7684\u51ed\u8bc1\u4fe1\u606f@]\u670d\u52a1\u5668\u5730\u5740[:\u7aef\u53e3\u53f7]][/\u8d44\u6e90\u5c42\u7ea7UNIX\u6587\u4ef6\u8def\u5f84]\u6587\u4ef6\u540d[?\u67e5\u8be2][#\u7247\u6bb5ID] \u5176\u4e2d\u3010\u8bbf\u95ee\u51ed\u8bc1\u4fe1\u606f@\uff1b:\u7aef\u53e3\u53f7\uff1b?\u67e5\u8be2\uff1b#\u7247\u6bb5ID\u3011\u90fd\u5c5e\u4e8e\u9009\u586b\u9879 \u5982\uff1a https://github.com/huihut/interview#cc HTTP # HTTP\uff08HyperText Transfer Protocol\uff0c\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u5206\u5e03\u5f0f\u3001\u534f\u4f5c\u5f0f\u548c\u8d85\u5a92\u4f53\u4fe1\u606f\u7cfb\u7edf\u7684\u5e94\u7528\u5c42\u534f\u8bae\u3002HTTP \u662f\u4e07\u7ef4\u7f51\u7684\u6570\u636e\u901a\u4fe1\u7684\u57fa\u7840\u3002 \u8bf7\u6c42\u65b9\u6cd5 \u65b9\u6cd5 \u610f\u4e49 OPTIONS \u8bf7\u6c42\u4e00\u4e9b\u9009\u9879\u4fe1\u606f\uff0c\u5141\u8bb8\u5ba2\u6237\u7aef\u67e5\u770b\u670d\u52a1\u5668\u7684\u6027\u80fd GET \u8bf7\u6c42\u6307\u5b9a\u7684\u9875\u9762\u4fe1\u606f\uff0c\u5e76\u8fd4\u56de\u5b9e\u4f53\u4e3b\u4f53 HEAD \u7c7b\u4f3c\u4e8e get \u8bf7\u6c42\uff0c\u53ea\u4e0d\u8fc7\u8fd4\u56de\u7684\u54cd\u5e94\u4e2d\u6ca1\u6709\u5177\u4f53\u7684\u5185\u5bb9\uff0c\u7528\u4e8e\u83b7\u53d6\u62a5\u5934 POST \u5411\u6307\u5b9a\u8d44\u6e90\u63d0\u4ea4\u6570\u636e\u8fdb\u884c\u5904\u7406\u8bf7\u6c42\uff08\u4f8b\u5982\u63d0\u4ea4\u8868\u5355\u6216\u8005\u4e0a\u4f20\u6587\u4ef6\uff09\u3002\u6570\u636e\u88ab\u5305\u542b\u5728\u8bf7\u6c42\u4f53\u4e2d\u3002POST\u8bf7\u6c42\u53ef\u80fd\u4f1a\u5bfc\u81f4\u65b0\u7684\u8d44\u6e90\u7684\u5efa\u7acb\u548c/\u6216\u5df2\u6709\u8d44\u6e90\u7684\u4fee\u6539 PUT \u4ece\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u4f20\u9001\u7684\u6570\u636e\u53d6\u4ee3\u6307\u5b9a\u7684\u6587\u6863\u7684\u5185\u5bb9 DELETE \u8bf7\u6c42\u670d\u52a1\u5668\u5220\u9664\u6307\u5b9a\u7684\u9875\u9762 TRACE \u56de\u663e\u670d\u52a1\u5668\u6536\u5230\u7684\u8bf7\u6c42\uff0c\u4e3b\u8981\u7528\u4e8e\u6d4b\u8bd5\u6216\u8bca\u65ad \u72b6\u6001\u7801\uff08Status-Code\uff09 1xx\uff1a\u8868\u793a\u901a\u77e5\u4fe1\u606f\uff0c\u5982\u8bf7\u6c42\u6536\u5230\u4e86\u6216\u6b63\u5728\u8fdb\u884c\u5904\u7406 100 Continue\uff1a\u7ee7\u7eed\uff0c\u5ba2\u6237\u7aef\u5e94\u7ee7\u7eed\u5176\u8bf7\u6c42 101 Switching Protocols \u5207\u6362\u534f\u8bae\u3002\u670d\u52a1\u5668\u6839\u636e\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u5207\u6362\u534f\u8bae\u3002\u53ea\u80fd\u5207\u6362\u5230\u66f4\u9ad8\u7ea7\u7684\u534f\u8bae\uff0c\u4f8b\u5982\uff0c\u5207\u6362\u5230 HTTP \u7684\u65b0\u7248\u672c\u534f\u8bae 2xx\uff1a\u8868\u793a\u6210\u529f\uff0c\u5982\u63a5\u6536\u6216\u77e5\u9053\u4e86 200 OK: \u8bf7\u6c42\u6210\u529f 3xx\uff1a\u8868\u793a\u91cd\u5b9a\u5411\uff0c\u5982\u8981\u5b8c\u6210\u8bf7\u6c42\u8fd8\u5fc5\u987b\u91c7\u53d6\u8fdb\u4e00\u6b65\u7684\u884c\u52a8 301 Moved Permanently: \u6c38\u4e45\u79fb\u52a8\u3002\u8bf7\u6c42\u7684\u8d44\u6e90\u5df2\u88ab\u6c38\u4e45\u7684\u79fb\u52a8\u5230\u65b0 URL\uff0c\u8fd4\u56de\u4fe1\u606f\u4f1a\u5305\u62ec\u65b0\u7684 URL\uff0c\u6d4f\u89c8\u5668\u4f1a\u81ea\u52a8\u5b9a\u5411\u5230\u65b0 URL\u3002\u4eca\u540e\u4efb\u4f55\u65b0\u7684\u8bf7\u6c42\u90fd\u5e94\u4f7f\u7528\u65b0\u7684 URL \u4ee3\u66ff 4xx\uff1a\u8868\u793a\u5ba2\u6237\u7684\u5dee\u9519\uff0c\u5982\u8bf7\u6c42\u4e2d\u6709\u9519\u8bef\u7684\u8bed\u6cd5\u6216\u4e0d\u80fd\u5b8c\u6210 400 Bad Request: \u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u8bed\u6cd5\u9519\u8bef\uff0c\u670d\u52a1\u5668\u65e0\u6cd5\u7406\u89e3 401 Unauthorized: \u8bf7\u6c42\u8981\u6c42\u7528\u6237\u7684\u8eab\u4efd\u8ba4\u8bc1 403 Forbidden: \u670d\u52a1\u5668\u7406\u89e3\u8bf7\u6c42\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff0c\u4f46\u662f\u62d2\u7edd\u6267\u884c\u6b64\u8bf7\u6c42\uff08\u6743\u9650\u4e0d\u591f\uff09 404 Not Found: \u670d\u52a1\u5668\u65e0\u6cd5\u6839\u636e\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u627e\u5230\u8d44\u6e90\uff08\u7f51\u9875\uff09\u3002\u901a\u8fc7\u6b64\u4ee3\u7801\uff0c\u7f51\u7ad9\u8bbe\u8ba1\u4eba\u5458\u53ef\u8bbe\u7f6e \u201c\u60a8\u6240\u8bf7\u6c42\u7684\u8d44\u6e90\u65e0\u6cd5\u627e\u5230\u201d \u7684\u4e2a\u6027\u9875\u9762 408 Request Timeout: \u670d\u52a1\u5668\u7b49\u5f85\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u8bf7\u6c42\u65f6\u95f4\u8fc7\u957f\uff0c\u8d85\u65f6 5xx\uff1a\u8868\u793a\u670d\u52a1\u5668\u7684\u5dee\u9519\uff0c\u5982\u670d\u52a1\u5668\u5931\u6548\u65e0\u6cd5\u5b8c\u6210\u8bf7\u6c42 500 Internal Server Error: \u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef\uff0c\u65e0\u6cd5\u5b8c\u6210\u8bf7\u6c42 503 Service Unavailable: \u7531\u4e8e\u8d85\u8f7d\u6216\u7cfb\u7edf\u7ef4\u62a4\uff0c\u670d\u52a1\u5668\u6682\u65f6\u7684\u65e0\u6cd5\u5904\u7406\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u3002\u5ef6\u65f6\u7684\u957f\u5ea6\u53ef\u5305\u542b\u5728\u670d\u52a1\u5668\u7684 Retry-After \u5934\u4fe1\u606f\u4e2d 504 Gateway Timeout: \u5145\u5f53\u7f51\u5173\u6216\u4ee3\u7406\u7684\u670d\u52a1\u5668\uff0c\u672a\u53ca\u65f6\u4ece\u8fdc\u7aef\u670d\u52a1\u5668\u83b7\u53d6\u8bf7\u6c42 \u66f4\u591a\u72b6\u6001\u7801\uff1a \u83dc\u9e1f\u6559\u7a0b . HTTP\u72b6\u6001\u7801 \u5176\u4ed6\u534f\u8bae # SMTP\uff08Simple Main Transfer Protocol\uff0c\u7b80\u5355\u90ae\u4ef6\u4f20\u8f93\u534f\u8bae\uff09\u662f\u5728 Internet \u4f20\u8f93 Email \u7684\u6807\u51c6\uff0c\u662f\u4e00\u4e2a\u76f8\u5bf9\u7b80\u5355\u7684\u57fa\u4e8e\u6587\u672c\u7684\u534f\u8bae\u3002\u5728\u5176\u4e4b\u4e0a\u6307\u5b9a\u4e86\u4e00\u6761\u6d88\u606f\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u63a5\u6536\u8005\uff08\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u88ab\u786e\u8ba4\u662f\u5b58\u5728\u7684\uff09\uff0c\u7136\u540e\u6d88\u606f\u6587\u672c\u4f1a\u88ab\u4f20\u8f93\u3002\u53ef\u4ee5\u5f88\u7b80\u5355\u5730\u901a\u8fc7 Telnet \u7a0b\u5e8f\u6765\u6d4b\u8bd5\u4e00\u4e2a SMTP \u670d\u52a1\u5668\u3002SMTP \u4f7f\u7528 TCP \u7aef\u53e3 25\u3002 DHCP\uff08Dynamic Host Configuration Protocol\uff0c\u52a8\u6001\u4e3b\u673a\u8bbe\u7f6e\u534f\u8bae\uff09\u662f\u4e00\u4e2a\u5c40\u57df\u7f51\u7684\u7f51\u7edc\u534f\u8bae\uff0c\u4f7f\u7528 UDP \u534f\u8bae\u5de5\u4f5c\uff0c\u4e3b\u8981\u6709\u4e24\u4e2a\u7528\u9014\uff1a \u7528\u4e8e\u5185\u90e8\u7f51\u7edc\u6216\u7f51\u7edc\u670d\u52a1\u4f9b\u5e94\u5546\u81ea\u52a8\u5206\u914d IP \u5730\u5740\u7ed9\u7528\u6237 \u7528\u4e8e\u5185\u90e8\u7f51\u7edc\u7ba1\u7406\u5458\u4f5c\u4e3a\u5bf9\u6240\u6709\u7535\u8111\u4f5c\u4e2d\u592e\u7ba1\u7406\u7684\u624b\u6bb5 SNMP\uff08Simple Network Management Protocol\uff0c\u7b80\u5355\u7f51\u7edc\u7ba1\u7406\u534f\u8bae\uff09\u6784\u6210\u4e86\u4e92\u8054\u7f51\u5de5\u7a0b\u5de5\u4f5c\u5c0f\u7ec4\uff08IETF\uff0cInternet Engineering Task Force\uff09\u5b9a\u4e49\u7684 Internet \u534f\u8bae\u65cf\u7684\u4e00\u90e8\u5206\u3002\u8be5\u534f\u8bae\u80fd\u591f\u652f\u6301\u7f51\u7edc\u7ba1\u7406\u7cfb\u7edf\uff0c\u7528\u4ee5\u76d1\u6d4b\u8fde\u63a5\u5230\u7f51\u7edc\u4e0a\u7684\u8bbe\u5907\u662f\u5426\u6709\u4efb\u4f55\u5f15\u8d77\u7ba1\u7406\u4e0a\u5173\u6ce8\u7684\u60c5\u51b5\u3002 \ud83c\udf29 \u7f51\u7edc\u7f16\u7a0b # Socket # Linux Socket \u7f16\u7a0b\uff08\u4e0d\u9650 Linux\uff09 Socket \u4e2d\u7684 read()\u3001write() \u51fd\u6570 # ssize_t read ( int fd , void * buf , size_t count ); ssize_t write ( int fd , const void * buf , size_t count ); read() # read \u51fd\u6570\u662f\u8d1f\u8d23\u4ece fd \u4e2d\u8bfb\u53d6\u5185\u5bb9\u3002 \u5f53\u8bfb\u6210\u529f\u65f6\uff0cread \u8fd4\u56de\u5b9e\u9645\u6240\u8bfb\u7684\u5b57\u8282\u6570\u3002 \u5982\u679c\u8fd4\u56de\u7684\u503c\u662f 0 \u8868\u793a\u5df2\u7ecf\u8bfb\u5230\u6587\u4ef6\u7684\u7ed3\u675f\u4e86\uff0c\u5c0f\u4e8e 0 \u8868\u793a\u51fa\u73b0\u4e86\u9519\u8bef\u3002 \u5982\u679c\u9519\u8bef\u4e3a EINTR \u8bf4\u660e\u8bfb\u662f\u7531\u4e2d\u65ad\u5f15\u8d77\u7684\uff1b\u5982\u679c\u662f ECONNREST \u8868\u793a\u7f51\u7edc\u8fde\u63a5\u51fa\u4e86\u95ee\u9898\u3002 write() # write \u51fd\u6570\u5c06 buf \u4e2d\u7684 nbytes \u5b57\u8282\u5185\u5bb9\u5199\u5165\u6587\u4ef6\u63cf\u8ff0\u7b26 fd\u3002 \u6210\u529f\u65f6\u8fd4\u56de\u5199\u7684\u5b57\u8282\u6570\u3002\u5931\u8d25\u65f6\u8fd4\u56de -1\uff0c\u5e76\u8bbe\u7f6e errno \u53d8\u91cf\u3002 \u5728\u7f51\u7edc\u7a0b\u5e8f\u4e2d\uff0c\u5f53\u6211\u4eec\u5411\u5957\u63a5\u5b57\u6587\u4ef6\u63cf\u8ff0\u7b26\u5199\u65f6\u6709\u4fe9\u79cd\u53ef\u80fd\u3002 \uff081\uff09write \u7684\u8fd4\u56de\u503c\u5927\u4e8e 0\uff0c\u8868\u793a\u5199\u4e86\u90e8\u5206\u6216\u8005\u662f\u5168\u90e8\u7684\u6570\u636e\u3002 \uff082\uff09\u8fd4\u56de\u7684\u503c\u5c0f\u4e8e 0\uff0c\u6b64\u65f6\u51fa\u73b0\u4e86\u9519\u8bef\u3002 \u5982\u679c\u9519\u8bef\u4e3a EINTR \u8868\u793a\u5728\u5199\u7684\u65f6\u5019\u51fa\u73b0\u4e86\u4e2d\u65ad\u9519\u8bef\uff1b\u5982\u679c\u4e3a EPIPE \u8868\u793a\u7f51\u7edc\u8fde\u63a5\u51fa\u73b0\u4e86\u95ee\u9898\uff08\u5bf9\u65b9\u5df2\u7ecf\u5173\u95ed\u4e86\u8fde\u63a5\uff09\u3002 Socket \u4e2d TCP \u7684\u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u8fde\u63a5 # \u6211\u4eec\u77e5\u9053 TCP \u5efa\u7acb\u8fde\u63a5\u8981\u8fdb\u884c \u201c\u4e09\u6b21\u63e1\u624b\u201d\uff0c\u5373\u4ea4\u6362\u4e09\u4e2a\u5206\u7ec4\u3002\u5927\u81f4\u6d41\u7a0b\u5982\u4e0b\uff1a \u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u53d1\u9001\u4e00\u4e2a SYN J \u670d\u52a1\u5668\u5411\u5ba2\u6237\u7aef\u54cd\u5e94\u4e00\u4e2a SYN K\uff0c\u5e76\u5bf9 SYN J \u8fdb\u884c\u786e\u8ba4 ACK J+1 \u5ba2\u6237\u7aef\u518d\u60f3\u670d\u52a1\u5668\u53d1\u4e00\u4e2a\u786e\u8ba4 ACK K+1 \u53ea\u6709\u5c31\u5b8c\u4e86\u4e09\u6b21\u63e1\u624b\uff0c\u4f46\u662f\u8fd9\u4e2a\u4e09\u6b21\u63e1\u624b\u53d1\u751f\u5728 Socket \u7684\u90a3\u51e0\u4e2a\u51fd\u6570\u4e2d\u5462\uff1f\u8bf7\u770b\u4e0b\u56fe\uff1a \u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff1a 1. \u5f53\u5ba2\u6237\u7aef\u8c03\u7528 connect \u65f6\uff0c\u89e6\u53d1\u4e86\u8fde\u63a5\u8bf7\u6c42\uff0c\u5411\u670d\u52a1\u5668\u53d1\u9001\u4e86 SYN J \u5305\uff0c\u8fd9\u65f6 connect \u8fdb\u5165\u963b\u585e\u72b6\u6001\uff1b 2. \u670d\u52a1\u5668\u76d1\u542c\u5230\u8fde\u63a5\u8bf7\u6c42\uff0c\u5373\u6536\u5230 SYN J \u5305\uff0c\u8c03\u7528 accept \u51fd\u6570\u63a5\u6536\u8bf7\u6c42\u5411\u5ba2\u6237\u7aef\u53d1\u9001 SYN K \uff0cACK J+1\uff0c\u8fd9\u65f6 accept \u8fdb\u5165\u963b\u585e\u72b6\u6001\uff1b 3. \u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u7684 SYN K \uff0cACK J+1 \u4e4b\u540e\uff0c\u8fd9\u65f6 connect \u8fd4\u56de\uff0c\u5e76\u5bf9 SYN K \u8fdb\u884c\u786e\u8ba4\uff1b 4. \u670d\u52a1\u5668\u6536\u5230 ACK K+1 \u65f6\uff0caccept \u8fd4\u56de\uff0c\u81f3\u6b64\u4e09\u6b21\u63e1\u624b\u5b8c\u6bd5\uff0c\u8fde\u63a5\u5efa\u7acb\u3002 Socket \u4e2d TCP \u7684\u56db\u6b21\u63e1\u624b\u91ca\u653e\u8fde\u63a5 # \u4e0a\u9762\u4ecb\u7ecd\u4e86 socket \u4e2d TCP \u7684\u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u8fc7\u7a0b\uff0c\u53ca\u5176\u6d89\u53ca\u7684 socket \u51fd\u6570\u3002\u73b0\u5728\u6211\u4eec\u4ecb\u7ecd socket \u4e2d\u7684\u56db\u6b21\u63e1\u624b\u91ca\u653e\u8fde\u63a5\u7684\u8fc7\u7a0b\uff0c\u8bf7\u770b\u4e0b\u56fe\uff1a \u56fe\u793a\u8fc7\u7a0b\u5982\u4e0b\uff1a \u67d0\u4e2a\u5e94\u7528\u8fdb\u7a0b\u9996\u5148\u8c03\u7528 close \u4e3b\u52a8\u5173\u95ed\u8fde\u63a5\uff0c\u8fd9\u65f6 TCP \u53d1\u9001\u4e00\u4e2a FIN M\uff1b \u53e6\u4e00\u7aef\u63a5\u6536\u5230 FIN M \u4e4b\u540e\uff0c\u6267\u884c\u88ab\u52a8\u5173\u95ed\uff0c\u5bf9\u8fd9\u4e2a FIN \u8fdb\u884c\u786e\u8ba4\u3002\u5b83\u7684\u63a5\u6536\u4e5f\u4f5c\u4e3a\u6587\u4ef6\u7ed3\u675f\u7b26\u4f20\u9012\u7ed9\u5e94\u7528\u8fdb\u7a0b\uff0c\u56e0\u4e3a FIN \u7684\u63a5\u6536\u610f\u5473\u7740\u5e94\u7528\u8fdb\u7a0b\u5728\u76f8\u5e94\u7684\u8fde\u63a5\u4e0a\u518d\u4e5f\u63a5\u6536\u4e0d\u5230\u989d\u5916\u6570\u636e\uff1b \u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\uff0c\u63a5\u6536\u5230\u6587\u4ef6\u7ed3\u675f\u7b26\u7684\u5e94\u7528\u8fdb\u7a0b\u8c03\u7528 close \u5173\u95ed\u5b83\u7684 socket\u3002\u8fd9\u5bfc\u81f4\u5b83\u7684 TCP \u4e5f\u53d1\u9001\u4e00\u4e2a FIN N\uff1b \u63a5\u6536\u5230\u8fd9\u4e2a FIN \u7684\u6e90\u53d1\u9001\u7aef TCP \u5bf9\u5b83\u8fdb\u884c\u786e\u8ba4\u3002 \u8fd9\u6837\u6bcf\u4e2a\u65b9\u5411\u4e0a\u90fd\u6709\u4e00\u4e2a FIN \u548c ACK\u3002 \ud83d\udcbe \u6570\u636e\u5e93 # \u672c\u8282\u90e8\u5206\u77e5\u8bc6\u70b9\u6765\u81ea\u300a\u6570\u636e\u5e93\u7cfb\u7edf\u6982\u8bba\uff08\u7b2c 5 \u7248\uff09\u300b \u57fa\u672c\u6982\u5ff5 # \u6570\u636e\uff08data\uff09\uff1a\u63cf\u8ff0\u4e8b\u7269\u7684\u7b26\u53f7\u8bb0\u5f55\u79f0\u4e3a\u6570\u636e\u3002 \u6570\u636e\u5e93\uff08DataBase\uff0cDB\uff09\uff1a\u662f\u957f\u671f\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u5185\u3001\u6709\u7ec4\u7ec7\u7684\u3001\u53ef\u5171\u4eab\u7684\u5927\u91cf\u6570\u636e\u7684\u96c6\u5408\uff0c\u5177\u6709\u6c38\u4e45\u5b58\u50a8\u3001\u6709\u7ec4\u7ec7\u3001\u53ef\u5171\u4eab\u4e09\u4e2a\u57fa\u672c\u7279\u70b9\u3002 \u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff08DataBase Management System\uff0cDBMS\uff09\uff1a\u662f\u4f4d\u4e8e\u7528\u6237\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u95f4\u7684\u4e00\u5c42\u6570\u636e\u7ba1\u7406\u8f6f\u4ef6\u3002 \u6570\u636e\u5e93\u7cfb\u7edf\uff08DataBase System\uff0cDBS\uff09\uff1a\u662f\u6709\u6570\u636e\u5e93\u3001\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff08\u53ca\u5176\u5e94\u7528\u5f00\u53d1\u5de5\u5177\uff09\u3001\u5e94\u7528\u7a0b\u5e8f\u548c\u6570\u636e\u5e93\u7ba1\u7406\u5458\uff08DataBase Administrator DBA\uff09\u7ec4\u6210\u7684\u5b58\u50a8\u3001\u7ba1\u7406\u3001\u5904\u7406\u548c\u7ef4\u62a4\u6570\u636e\u7684\u7cfb\u7edf\u3002 \u5b9e\u4f53\uff08entity\uff09\uff1a\u5ba2\u89c2\u5b58\u5728\u5e76\u53ef\u76f8\u4e92\u533a\u522b\u7684\u4e8b\u7269\u79f0\u4e3a\u5b9e\u4f53\u3002 \u5c5e\u6027\uff08attribute\uff09\uff1a\u5b9e\u4f53\u6240\u5177\u6709\u7684\u67d0\u4e00\u7279\u6027\u79f0\u4e3a\u5c5e\u6027\u3002 \u7801\uff08key\uff09\uff1a\u552f\u4e00\u6807\u8bc6\u5b9e\u4f53\u7684\u5c5e\u6027\u96c6\u79f0\u4e3a\u7801\u3002 \u5b9e\u4f53\u578b\uff08entity type\uff09\uff1a\u7528\u5b9e\u4f53\u540d\u53ca\u5176\u5c5e\u6027\u540d\u96c6\u5408\u6765\u62bd\u8c61\u548c\u523b\u753b\u540c\u7c7b\u5b9e\u4f53\uff0c\u79f0\u4e3a\u5b9e\u4f53\u578b\u3002 \u5b9e\u4f53\u96c6\uff08entity set\uff09\uff1a\u540c\u4e00\u5b9e\u4f53\u578b\u7684\u96c6\u5408\u79f0\u4e3a\u5b9e\u4f53\u96c6\u3002 \u8054\u7cfb\uff08relationship\uff09\uff1a\u5b9e\u4f53\u4e4b\u95f4\u7684\u8054\u7cfb\u901a\u5e38\u662f\u6307\u4e0d\u540c\u5b9e\u4f53\u96c6\u4e4b\u95f4\u7684\u8054\u7cfb\u3002 \u6a21\u5f0f\uff08schema\uff09\uff1a\u6a21\u5f0f\u4e5f\u79f0\u903b\u8f91\u6a21\u5f0f\uff0c\u662f\u6570\u636e\u5e93\u5168\u4f53\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u548c\u7279\u5f81\u7684\u63cf\u8ff0\uff0c\u662f\u6240\u6709\u7528\u6237\u7684\u516c\u5171\u6570\u636e\u89c6\u56fe\u3002 \u5916\u6a21\u5f0f\uff08external schema\uff09\uff1a\u5916\u6a21\u5f0f\u4e5f\u79f0\u5b50\u6a21\u5f0f\uff08subschema\uff09\u6216\u7528\u6237\u6a21\u5f0f\uff0c\u5b83\u662f\u6570\u636e\u5e93\u7528\u6237\uff08\u5305\u62ec\u5e94\u7528\u7a0b\u5e8f\u5458\u548c\u6700\u7ec8\u7528\u6237\uff09\u80fd\u591f\u770b\u89c1\u548c\u4f7f\u7528\u7684\u5c40\u90e8\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u548c\u7279\u5f81\u7684\u63cf\u8ff0\uff0c\u662f\u6570\u636e\u5e93\u7528\u6237\u7684\u6570\u636e\u89c6\u56fe\uff0c\u662f\u4e0e\u67d0\u4e00\u5e94\u7528\u6709\u5173\u7684\u6570\u636e\u7684\u903b\u8f91\u8868\u793a\u3002 \u5185\u6a21\u5f0f\uff08internal schema\uff09\uff1a\u5185\u6a21\u5f0f\u4e5f\u79f0\u4e3a\u5b58\u50a8\u6a21\u5f0f\uff08storage schema\uff09\uff0c\u4e00\u4e2a\u6570\u636e\u5e93\u53ea\u6709\u4e00\u4e2a\u5185\u6a21\u5f0f\u3002\u4ed6\u662f\u6570\u636e\u7269\u7406\u7ed3\u6784\u548c\u5b58\u50a8\u65b9\u5f0f\u7684\u63cf\u8ff0\uff0c\u662f\u6570\u636e\u5e93\u5728\u6570\u636e\u5e93\u5185\u90e8\u7684\u7ec4\u7ec7\u65b9\u5f0f\u3002 \u5e38\u7528\u6570\u636e\u6a21\u578b # \u5c42\u6b21\u6a21\u578b\uff08hierarchical model\uff09 \u7f51\u72b6\u6a21\u578b\uff08network model\uff09 \u5173\u7cfb\u6a21\u578b\uff08relational model\uff09 \u5173\u7cfb\uff08relation\uff09\uff1a\u4e00\u4e2a\u5173\u7cfb\u5bf9\u5e94\u901a\u5e38\u8bf4\u7684\u4e00\u5f20\u8868 \u5143\u7ec4\uff08tuple\uff09\uff1a\u8868\u4e2d\u7684\u4e00\u884c\u5373\u4e3a\u4e00\u4e2a\u5143\u7ec4 \u5c5e\u6027\uff08attribute\uff09\uff1a\u8868\u4e2d\u7684\u4e00\u5217\u5373\u4e3a\u4e00\u4e2a\u5c5e\u6027 \u7801\uff08key\uff09\uff1a\u8868\u4e2d\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u4e00\u4e2a\u5143\u7ec4\u7684\u67d0\u4e2a\u5c5e\u6027\u7ec4 \u57df\uff08domain\uff09\uff1a\u4e00\u7ec4\u5177\u6709\u76f8\u540c\u6570\u636e\u7c7b\u578b\u7684\u503c\u7684\u96c6\u5408 \u5206\u91cf\uff1a\u5143\u7ec4\u4e2d\u7684\u4e00\u4e2a\u5c5e\u6027\u503c \u5173\u7cfb\u6a21\u5f0f\uff1a\u5bf9\u5173\u7cfb\u7684\u63cf\u8ff0\uff0c\u4e00\u822c\u8868\u793a\u4e3a \u5173\u7cfb\u540d(\u5c5e\u60271, \u5c5e\u60272, ..., \u5c5e\u6027n) \u9762\u5411\u5bf9\u8c61\u6570\u636e\u6a21\u578b\uff08object oriented data model\uff09 \u5bf9\u8c61\u5173\u7cfb\u6570\u636e\u6a21\u578b\uff08object relational data model\uff09 \u534a\u7ed3\u6784\u5316\u6570\u636e\u6a21\u578b\uff08semistructure data model\uff09 \u5e38\u7528 SQL \u64cd\u4f5c # \u5bf9\u8c61\u7c7b\u578b \u5bf9\u8c61 \u64cd\u4f5c\u7c7b\u578b \u6570\u636e\u5e93\u6a21\u5f0f \u6a21\u5f0f CREATE SCHEMA \u57fa\u672c\u8868 CREATE SCHEMA \uff0c ALTER TABLE \u89c6\u56fe CREATE VIEW \u7d22\u5f15 CREATE INDEX \u6570\u636e \u57fa\u672c\u8868\u548c\u89c6\u56fe SELECT \uff0c INSERT \uff0c UPDATE \uff0c DELETE \uff0c REFERENCES \uff0c ALL PRIVILEGES \u5c5e\u6027\u5217 SELECT \uff0c INSERT \uff0c UPDATE \uff0c REFERENCES \uff0c ALL PRIVILEGES SQL \u8bed\u6cd5\u6559\u7a0b\uff1a runoob . SQL \u6559\u7a0b \u5173\u7cfb\u578b\u6570\u636e\u5e93 # \u57fa\u672c\u5173\u7cfb\u64cd\u4f5c\uff1a\u67e5\u8be2\uff08\u9009\u62e9\u3001\u6295\u5f71\u3001\u8fde\u63a5\uff08\u7b49\u503c\u8fde\u63a5\u3001\u81ea\u7136\u8fde\u63a5\u3001\u5916\u8fde\u63a5\uff08\u5de6\u5916\u8fde\u63a5\u3001\u53f3\u5916\u8fde\u63a5\uff09\uff09\u3001\u9664\u3001\u5e76\u3001\u5dee\u3001\u4ea4\u3001\u7b1b\u5361\u5c14\u79ef\u7b49\uff09\u3001\u63d2\u5165\u3001\u5220\u9664\u3001\u4fee\u6539 \u5173\u7cfb\u6a21\u578b\u4e2d\u7684\u4e09\u7c7b\u5b8c\u6574\u6027\u7ea6\u675f\uff1a\u5b9e\u4f53\u5b8c\u6574\u6027\u3001\u53c2\u7167\u5b8c\u6574\u6027\u3001\u7528\u6237\u5b9a\u4e49\u7684\u5b8c\u6574\u6027 \u7d22\u5f15 # \u6570\u636e\u5e93\u7d22\u5f15\uff1a\u987a\u5e8f\u7d22\u5f15\u3001B+ \u6811\u7d22\u5f15\u3001hash \u7d22\u5f15 MySQL \u7d22\u5f15\u80cc\u540e\u7684\u6570\u636e\u7ed3\u6784\u53ca\u7b97\u6cd5\u539f\u7406 \u6570\u636e\u5e93\u5b8c\u6574\u6027 # \u6570\u636e\u5e93\u7684\u5b8c\u6574\u6027\u662f\u6307\u6570\u636e\u7684\u6b63\u786e\u6027\u548c\u76f8\u5bb9\u6027\u3002 \u5b8c\u6574\u6027\uff1a\u4e3a\u4e86\u9632\u6b62\u6570\u636e\u5e93\u4e2d\u5b58\u5728\u4e0d\u7b26\u5408\u8bed\u4e49\uff08\u4e0d\u6b63\u786e\uff09\u7684\u6570\u636e\u3002 \u5b89\u5168\u6027\uff1a\u4e3a\u4e86\u4fdd\u62a4\u6570\u636e\u5e93\u9632\u6b62\u6076\u610f\u7834\u574f\u548c\u975e\u6cd5\u5b58\u53d6\u3002 \u89e6\u53d1\u5668\uff1a\u662f\u7528\u6237\u5b9a\u4e49\u5728\u5173\u7cfb\u8868\u4e2d\u7684\u4e00\u7c7b\u7531\u4e8b\u4ef6\u9a71\u52a8\u7684\u7279\u6b8a\u8fc7\u7a0b\u3002 \u5173\u7cfb\u6570\u636e\u7406\u8bba # \u6570\u636e\u4f9d\u8d56\u662f\u4e00\u4e2a\u5173\u7cfb\u5185\u90e8\u5c5e\u6027\u4e0e\u5c5e\u6027\u4e4b\u95f4\u7684\u4e00\u79cd\u7ea6\u675f\u5173\u7cfb\uff0c\u662f\u901a\u8fc7\u5c5e\u6027\u95f4\u503c\u7684\u76f8\u7b49\u4e0e\u5426\u4f53\u73b0\u51fa\u6765\u7684\u6570\u636e\u95f4\u76f8\u5173\u8054\u7cfb\u3002 \u6700\u91cd\u8981\u7684\u6570\u636e\u4f9d\u8d56\uff1a\u51fd\u6570\u4f9d\u8d56\u3001\u591a\u503c\u4f9d\u8d56\u3002 \u8303\u5f0f # \u7b2c\u4e00\u8303\u5f0f\uff081NF\uff09\uff1a\u5c5e\u6027\uff08\u5b57\u6bb5\uff09\u662f\u6700\u5c0f\u5355\u4f4d\u4e0d\u53ef\u518d\u5206\u3002 \u7b2c\u4e8c\u8303\u5f0f\uff082NF\uff09\uff1a\u6ee1\u8db3 1NF\uff0c\u6bcf\u4e2a\u975e\u4e3b\u5c5e\u6027\u5b8c\u5168\u4f9d\u8d56\u4e8e\u4e3b\u952e\uff08\u6d88\u9664 1NF \u975e\u4e3b\u5c5e\u6027\u5bf9\u7801\u7684\u90e8\u5206\u51fd\u6570\u4f9d\u8d56\uff09\u3002 \u7b2c\u4e09\u8303\u5f0f\uff083NF\uff09\uff1a\u6ee1\u8db3 2NF\uff0c\u4efb\u4f55\u975e\u4e3b\u5c5e\u6027\u4e0d\u4f9d\u8d56\u4e8e\u5176\u4ed6\u975e\u4e3b\u5c5e\u6027\uff08\u6d88\u9664 2NF \u975e\u4e3b\u5c5e\u6027\u5bf9\u7801\u7684\u4f20\u9012\u51fd\u6570\u4f9d\u8d56\uff09\u3002 \u9c8d\u4f9d\u65af-\u79d1\u5f97\u8303\u5f0f\uff08BCNF\uff09\uff1a\u6ee1\u8db3 3NF\uff0c\u4efb\u4f55\u975e\u4e3b\u5c5e\u6027\u4e0d\u80fd\u5bf9\u4e3b\u952e\u5b50\u96c6\u4f9d\u8d56\uff08\u6d88\u9664 3NF \u4e3b\u5c5e\u6027\u5bf9\u7801\u7684\u90e8\u5206\u548c\u4f20\u9012\u51fd\u6570\u4f9d\u8d56\uff09\u3002 \u7b2c\u56db\u8303\u5f0f\uff084NF\uff09\uff1a\u6ee1\u8db3 3NF\uff0c\u5c5e\u6027\u4e4b\u95f4\u4e0d\u80fd\u6709\u975e\u5e73\u51e1\u4e14\u975e\u51fd\u6570\u4f9d\u8d56\u7684\u591a\u503c\u4f9d\u8d56\uff08\u6d88\u9664 3NF \u975e\u5e73\u51e1\u4e14\u975e\u51fd\u6570\u4f9d\u8d56\u7684\u591a\u503c\u4f9d\u8d56\uff09\u3002 \u6570\u636e\u5e93\u6062\u590d # \u4e8b\u52a1\uff1a\u662f\u7528\u6237\u5b9a\u4e49\u7684\u4e00\u4e2a\u6570\u636e\u5e93\u64cd\u4f5c\u5e8f\u5217\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u8981\u4e48\u5168\u505a\uff0c\u8981\u4e48\u5168\u4e0d\u505a\uff0c\u662f\u4e00\u4e2a\u4e0d\u53ef\u5206\u5272\u7684\u5de5\u4f5c\u5355\u4f4d\u3002 \u4e8b\u7269\u7684 ACID \u7279\u6027\uff1a\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u9694\u79bb\u6027\u3001\u6301\u7eed\u6027\u3002 \u6062\u590d\u7684\u5b9e\u73b0\u6280\u672f\uff1a\u5efa\u7acb\u5197\u4f59\u6570\u636e -> \u5229\u7528\u5197\u4f59\u6570\u636e\u5b9e\u65bd\u6570\u636e\u5e93\u6062\u590d\u3002 \u5efa\u7acb\u5197\u4f59\u6570\u636e\u5e38\u7528\u6280\u672f\uff1a\u6570\u636e\u8f6c\u50a8\uff08\u52a8\u6001\u6d77\u91cf\u8f6c\u50a8\u3001\u52a8\u6001\u589e\u91cf\u8f6c\u50a8\u3001\u9759\u6001\u6d77\u91cf\u8f6c\u50a8\u3001\u9759\u6001\u589e\u91cf\u8f6c\u50a8\uff09\u3001\u767b\u8bb0\u65e5\u5fd7\u6587\u4ef6\u3002 \u5e76\u53d1\u63a7\u5236 # \u4e8b\u52a1\u662f\u5e76\u53d1\u63a7\u5236\u7684\u57fa\u672c\u5355\u4f4d\u3002 \u5e76\u53d1\u64cd\u4f5c\u5e26\u6765\u7684\u6570\u636e\u4e0d\u4e00\u81f4\u6027\u5305\u62ec\uff1a\u4e22\u5931\u4fee\u6539\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u3001\u8bfb \u201c\u810f\u201d \u6570\u636e\u3002 \u5e76\u53d1\u63a7\u5236\u4e3b\u8981\u6280\u672f\uff1a\u5c01\u9501\u3001\u65f6\u95f4\u6233\u3001\u4e50\u89c2\u63a7\u5236\u6cd5\u3001\u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236\u7b49\u3002 \u57fa\u672c\u5c01\u9501\u7c7b\u578b\uff1a\u6392\u4ed6\u9501\uff08X \u9501 / \u5199\u9501\uff09\u3001\u5171\u4eab\u9501\uff08S \u9501 / \u8bfb\u9501\uff09\u3002 \u6d3b\u9501\u6b7b\u9501\uff1a \u6d3b\u9501\uff1a\u4e8b\u52a1\u6c38\u8fdc\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\uff0c\u53ef\u901a\u8fc7\u5148\u6765\u5148\u670d\u52a1\u7684\u7b56\u7565\u907f\u514d\u3002 \u6b7b\u9501\uff1a\u4e8b\u52a1\u6c38\u8fdc\u4e0d\u80fd\u7ed3\u675f \u9884\u9632\uff1a\u4e00\u6b21\u5c01\u9501\u6cd5\u3001\u987a\u5e8f\u5c01\u9501\u6cd5\uff1b \u8bca\u65ad\uff1a\u8d85\u65f6\u6cd5\u3001\u7b49\u5f85\u56fe\u6cd5\uff1b \u89e3\u9664\uff1a\u64a4\u9500\u5904\u7406\u6b7b\u9501\u4ee3\u4ef7\u6700\u5c0f\u7684\u4e8b\u52a1\uff0c\u5e76\u91ca\u653e\u6b64\u4e8b\u52a1\u7684\u6240\u6709\u7684\u9501\uff0c\u4f7f\u5176\u4ed6\u4e8b\u52a1\u5f97\u4ee5\u7ee7\u7eed\u8fd0\u884c\u4e0b\u53bb\u3002 \u53ef\u4e32\u884c\u5316\u8c03\u5ea6\uff1a\u591a\u4e2a\u4e8b\u52a1\u7684\u5e76\u53d1\u6267\u884c\u662f\u6b63\u786e\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u7ed3\u679c\u4e0e\u6309\u67d0\u4e00\u6b21\u5e8f\u4e32\u884c\u5730\u6267\u884c\u8fd9\u4e9b\u4e8b\u52a1\u65f6\u7684\u7ed3\u679c\u76f8\u540c\u3002\u53ef\u4e32\u884c\u6027\u65f6\u5e76\u53d1\u4e8b\u52a1\u6b63\u786e\u8c03\u5ea6\u7684\u51c6\u5219\u3002 \ud83d\udccf \u8bbe\u8ba1\u6a21\u5f0f # \u5404\u5927\u8bbe\u8ba1\u6a21\u5f0f\u4f8b\u5b50\u53c2\u8003\uff1a CSDN\u4e13\u680f . C++ \u8bbe\u8ba1\u6a21\u5f0f \u7cfb\u5217\u535a\u6587 \u8bbe\u8ba1\u6a21\u5f0f\u5de5\u7a0b\u76ee\u5f55 \u5355\u4f8b\u6a21\u5f0f # \u5355\u4f8b\u6a21\u5f0f\u4f8b\u5b50 \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f # \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u4f8b\u5b50 \u9002\u914d\u5668\u6a21\u5f0f # \u9002\u914d\u5668\u6a21\u5f0f\u4f8b\u5b50 \u6865\u63a5\u6a21\u5f0f # \u6865\u63a5\u6a21\u5f0f\u4f8b\u5b50 \u89c2\u5bdf\u8005\u6a21\u5f0f # \u89c2\u5bdf\u8005\u6a21\u5f0f\u4f8b\u5b50 \u8bbe\u8ba1\u6a21\u5f0f\u7684\u516d\u5927\u539f\u5219 # \u5355\u4e00\u804c\u8d23\u539f\u5219\uff08SRP\uff0cSingle Responsibility Principle\uff09 \u91cc\u6c0f\u66ff\u6362\u539f\u5219\uff08LSP\uff0cLiskov Substitution Principle\uff09 \u4f9d\u8d56\u5012\u7f6e\u539f\u5219\uff08DIP\uff0cDependence Inversion Principle\uff09 \u63a5\u53e3\u9694\u79bb\u539f\u5219\uff08ISP\uff0cInterface Segregation Principle\uff09 \u8fea\u7c73\u7279\u6cd5\u5219\uff08LoD\uff0cLaw of Demeter\uff09 \u5f00\u653e\u5c01\u95ed\u539f\u5219\uff08OCP\uff0cOpen Close Principle\uff09 \u2699\ufe0f \u94fe\u63a5\u88c5\u8f7d\u5e93 # \u672c\u8282\u90e8\u5206\u77e5\u8bc6\u70b9\u6765\u81ea\u300a\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b\u2014\u2014\u94fe\u63a5\u88c5\u8f7d\u5e93\u300b \u5185\u5b58\u3001\u6808\u3001\u5806 # \u4e00\u822c\u5e94\u7528\u7a0b\u5e8f\u5185\u5b58\u7a7a\u95f4\u6709\u5982\u4e0b\u533a\u57df\uff1a \u6808\uff1a\u7531\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u5206\u914d\u91ca\u653e\uff0c\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\u3001\u5c40\u90e8\u53d8\u91cf\u7b49\u7684\u503c\uff0c\u7528\u4e8e\u7ef4\u62a4\u51fd\u6570\u8c03\u7528\u7684\u4e0a\u4e0b\u6587 \u5806\uff1a\u4e00\u822c\u7531\u7a0b\u5e8f\u5458\u5206\u914d\u91ca\u653e\uff0c\u82e5\u7a0b\u5e8f\u5458\u4e0d\u91ca\u653e\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\u53ef\u80fd\u7531\u64cd\u4f5c\u7cfb\u7edf\u56de\u6536\uff0c\u7528\u6765\u5bb9\u7eb3\u5e94\u7528\u7a0b\u5e8f\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u533a\u57df \u53ef\u6267\u884c\u6587\u4ef6\u6620\u50cf\uff1a\u5b58\u50a8\u7740\u53ef\u6267\u884c\u6587\u4ef6\u5728\u5185\u5b58\u4e2d\u7684\u6620\u50cf\uff0c\u7531\u88c5\u8f7d\u5668\u88c5\u8f7d\u662f\u5c06\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5185\u5b58\u8bfb\u53d6\u6216\u6620\u5c04\u5230\u8fd9\u91cc \u4fdd\u7559\u533a\uff1a\u4fdd\u7559\u533a\u5e76\u4e0d\u662f\u4e00\u4e2a\u5355\u4e00\u7684\u5185\u5b58\u533a\u57df\uff0c\u800c\u662f\u5bf9\u5185\u5b58\u4e2d\u53d7\u5230\u4fdd\u62a4\u800c\u7981\u6b62\u8bbf\u95ee\u7684\u5185\u5b58\u533a\u57df\u7684\u603b\u79f0\uff0c\u5982\u901a\u5e38 C \u8bed\u8a00\u8bb2\u65e0\u6548\u6307\u9488\u8d4b\u503c\u4e3a 0\uff08NULL\uff09\uff0c\u56e0\u6b64 0 \u5730\u5740\u6b63\u5e38\u60c5\u51b5\u4e0b\u4e0d\u53ef\u80fd\u6709\u6548\u7684\u8bbf\u95ee\u6570\u636e \u6808 # \u6808\u4fdd\u5b58\u4e86\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u6240\u9700\u8981\u7684\u7ef4\u62a4\u4fe1\u606f\uff0c\u5e38\u88ab\u79f0\u4e3a\u5806\u6808\u5e27\uff08Stack Frame\uff09\u6216\u6d3b\u52a8\u8bb0\u5f55\uff08Activate Record\uff09\uff0c\u4e00\u822c\u5305\u542b\u4ee5\u4e0b\u51e0\u65b9\u9762\uff1a \u51fd\u6570\u7684\u8fd4\u56de\u5730\u5740\u548c\u53c2\u6570 \u4e34\u65f6\u53d8\u91cf\uff1a\u5305\u62ec\u51fd\u6570\u7684\u975e\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u4ee5\u53ca\u7f16\u8bd1\u5668\u81ea\u52a8\u751f\u6210\u7684\u5176\u4ed6\u4e34\u65f6\u53d8\u91cf \u4fdd\u5b58\u4e0a\u4e0b\u6587\uff1a\u5305\u62ec\u51fd\u6570\u8c03\u7528\u524d\u540e\u9700\u8981\u4fdd\u6301\u4e0d\u53d8\u7684\u5bc4\u5b58\u5668 \u5806 # \u5806\u5206\u914d\u7b97\u6cd5\uff1a \u7a7a\u95f2\u94fe\u8868\uff08Free List\uff09 \u4f4d\u56fe\uff08Bitmap\uff09 \u5bf9\u8c61\u6c60 \u201c\u6bb5\u9519\u8bef\uff08segment fault\uff09\u201d \u6216 \u201c\u975e\u6cd5\u64cd\u4f5c\uff0c\u8be5\u5185\u5b58\u5730\u5740\u4e0d\u80fd read/write\u201d # \u5178\u578b\u7684\u975e\u6cd5\u6307\u9488\u89e3\u5f15\u7528\u9020\u6210\u7684\u9519\u8bef\u3002\u5f53\u6307\u9488\u6307\u5411\u4e00\u4e2a\u4e0d\u5141\u8bb8\u8bfb\u5199\u7684\u5185\u5b58\u5730\u5740\uff0c\u800c\u7a0b\u5e8f\u5374\u8bd5\u56fe\u5229\u7528\u6307\u9488\u6765\u8bfb\u6216\u5199\u8be5\u5730\u5740\u65f6\uff0c\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u9519\u8bef\u3002 \u666e\u904d\u539f\u56e0\uff1a \u5c06\u6307\u9488\u521d\u59cb\u5316\u4e3a NULL\uff0c\u4e4b\u540e\u6ca1\u6709\u7ed9\u5b83\u4e00\u4e2a\u5408\u7406\u7684\u503c\u5c31\u5f00\u59cb\u4f7f\u7528\u6307\u9488 \u6ca1\u7528\u521d\u59cb\u5316\u6808\u4e2d\u7684\u6307\u9488\uff0c\u6307\u9488\u7684\u503c\u4e00\u822c\u4f1a\u662f\u968f\u673a\u6570\uff0c\u4e4b\u540e\u5c31\u76f4\u63a5\u5f00\u59cb\u4f7f\u7528\u6307\u9488 \u7f16\u8bd1\u94fe\u63a5 # \u5404\u5e73\u53f0\u6587\u4ef6\u683c\u5f0f # \u5e73\u53f0 \u53ef\u6267\u884c\u6587\u4ef6 \u76ee\u6807\u6587\u4ef6 \u52a8\u6001\u5e93/\u5171\u4eab\u5bf9\u8c61 \u9759\u6001\u5e93 Windows exe obj dll lib Unix/Linux ELF\u3001out o so a Mac Mach-O o dylib\u3001tbd\u3001framework a\u3001framework \u7f16\u8bd1\u94fe\u63a5\u8fc7\u7a0b # \u9884\u7f16\u8bd1\uff08\u9884\u7f16\u8bd1\u5668\u5904\u7406\u5982 #include \u3001 #define \u7b49\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u751f\u6210 .i \u6216 .ii \u6587\u4ef6\uff09 \u7f16\u8bd1\uff08\u7f16\u8bd1\u5668\u8fdb\u884c\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u3001\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u3001\u76ee\u6807\u4ee3\u7801\u751f\u6210\u3001\u4f18\u5316\uff0c\u751f\u6210 .s \u6587\u4ef6\uff09 \u6c47\u7f16\uff08\u6c47\u7f16\u5668\u628a\u6c47\u7f16\u7801\u7ffb\u8bd1\u6210\u673a\u5668\u7801\uff0c\u751f\u6210 .o \u6587\u4ef6\uff09 \u94fe\u63a5\uff08\u8fde\u63a5\u5668\u8fdb\u884c\u5730\u5740\u548c\u7a7a\u95f4\u5206\u914d\u3001\u7b26\u53f7\u51b3\u8bae\u3001\u91cd\u5b9a\u4f4d\uff0c\u751f\u6210 .out \u6587\u4ef6\uff09 \u73b0\u5728\u7248\u672c GCC \u628a\u9884\u7f16\u8bd1\u548c\u7f16\u8bd1\u5408\u6210\u4e00\u6b65\uff0c\u9884\u7f16\u8bd1\u7f16\u8bd1\u7a0b\u5e8f cc1\u3001\u6c47\u7f16\u5668 as\u3001\u8fde\u63a5\u5668 ld MSVC \u7f16\u8bd1\u73af\u5883\uff0c\u7f16\u8bd1\u5668 cl\u3001\u8fde\u63a5\u5668 link\u3001\u53ef\u6267\u884c\u6587\u4ef6\u67e5\u770b\u5668 dumpbin \u76ee\u6807\u6587\u4ef6 # \u7f16\u8bd1\u5668\u7f16\u8bd1\u6e90\u4ee3\u7801\u540e\u751f\u6210\u7684\u6587\u4ef6\u53eb\u505a\u76ee\u6807\u6587\u4ef6\u3002\u76ee\u6807\u6587\u4ef6\u4ece\u7ed3\u6784\u4e0a\u8bb2\uff0c\u5b83\u662f\u5df2\u7ecf\u7f16\u8bd1\u540e\u7684\u53ef\u6267\u884c\u6587\u4ef6\u683c\u5f0f\uff0c\u53ea\u662f\u8fd8\u6ca1\u6709\u7ecf\u8fc7\u94fe\u63a5\u7684\u8fc7\u7a0b\uff0c\u5176\u4e2d\u53ef\u80fd\u6709\u4e9b\u7b26\u53f7\u6216\u6709\u4e9b\u5730\u5740\u8fd8\u6ca1\u6709\u88ab\u8c03\u6574\u3002 \u53ef\u6267\u884c\u6587\u4ef6\uff08Windows \u7684 .exe \u548c Linux \u7684 ELF \uff09\u3001\u52a8\u6001\u94fe\u63a5\u5e93\uff08Windows \u7684 .dll \u548c Linux \u7684 .so \uff09\u3001\u9759\u6001\u94fe\u63a5\u5e93\uff08Windows \u7684 .lib \u548c Linux \u7684 .a \uff09\u90fd\u662f\u6309\u7167\u53ef\u6267\u884c\u6587\u4ef6\u683c\u5f0f\u5b58\u50a8\uff08Windows \u6309\u7167 PE-COFF\uff0cLinux \u6309\u7167 ELF\uff09 \u76ee\u6807\u6587\u4ef6\u683c\u5f0f # Windows \u7684 PE\uff08Portable Executable\uff09\uff0c\u6216\u79f0\u4e3a PE-COFF\uff0c .obj \u683c\u5f0f Linux \u7684 ELF\uff08Executable Linkable Format\uff09\uff0c .o \u683c\u5f0f Intel/Microsoft \u7684 OMF\uff08Object Module Format\uff09 Unix \u7684 a.out \u683c\u5f0f MS-DOS \u7684 .COM \u683c\u5f0f PE \u548c ELF \u90fd\u662f COFF\uff08Common File Format\uff09\u7684\u53d8\u79cd \u76ee\u6807\u6587\u4ef6\u5b58\u50a8\u7ed3\u6784 # \u6bb5 \u529f\u80fd File Header \u6587\u4ef6\u5934\uff0c\u63cf\u8ff0\u6574\u4e2a\u6587\u4ef6\u7684\u6587\u4ef6\u5c5e\u6027\uff08\u5305\u62ec\u6587\u4ef6\u662f\u5426\u53ef\u6267\u884c\u3001\u662f\u9759\u6001\u94fe\u63a5\u6216\u52a8\u6001\u8fde\u63a5\u53ca\u5165\u53e3\u5730\u5740\u3001\u76ee\u6807\u786c\u4ef6\u3001\u76ee\u6807\u64cd\u4f5c\u7cfb\u7edf\u7b49\uff09 .text section \u4ee3\u7801\u6bb5\uff0c\u6267\u884c\u8bed\u53e5\u7f16\u8bd1\u6210\u7684\u673a\u5668\u4ee3\u7801 .data section \u6570\u636e\u6bb5\uff0c\u5df2\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u9759\u6001\u53d8\u91cf .bss section BSS \u6bb5\uff08Block Started by Symbol\uff09\uff0c\u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u9759\u6001\u53d8\u91cf\uff08\u56e0\u4e3a\u9ed8\u8ba4\u503c\u4e3a 0\uff0c\u6240\u4ee5\u53ea\u662f\u5728\u6b64\u9884\u7559\u4f4d\u7f6e\uff0c\u4e0d\u5360\u7a7a\u95f4\uff09 .rodata section \u53ea\u8bfb\u6570\u636e\u6bb5\uff0c\u5b58\u653e\u53ea\u8bfb\u6570\u636e\uff0c\u4e00\u822c\u662f\u7a0b\u5e8f\u91cc\u9762\u7684\u53ea\u8bfb\u53d8\u91cf\uff08\u5982 const \u4fee\u9970\u7684\u53d8\u91cf\uff09\u548c\u5b57\u7b26\u4e32\u5e38\u91cf .comment section \u6ce8\u91ca\u4fe1\u606f\u6bb5\uff0c\u5b58\u653e\u7f16\u8bd1\u5668\u7248\u672c\u4fe1\u606f .note.GNU-stack section \u5806\u6808\u63d0\u793a\u6bb5 \u5176\u4ed6\u6bb5\u7565 \u94fe\u63a5\u7684\u63a5\u53e3\u2014\u2014\u2014\u2014\u7b26\u53f7 # \u5728\u94fe\u63a5\u4e2d\uff0c\u76ee\u6807\u6587\u4ef6\u4e4b\u95f4\u76f8\u4e92\u62fc\u5408\u5b9e\u9645\u4e0a\u662f\u76ee\u6807\u6587\u4ef6\u4e4b\u95f4\u5bf9\u5730\u5740\u7684\u5f15\u7528\uff0c\u5373\u5bf9\u51fd\u6570\u548c\u53d8\u91cf\u7684\u5730\u5740\u7684\u5f15\u7528\u3002\u6211\u4eec\u5c06\u51fd\u6570\u548c\u53d8\u91cf\u7edf\u79f0\u4e3a\u7b26\u53f7\uff08Symbol\uff09\uff0c\u51fd\u6570\u540d\u6216\u53d8\u91cf\u540d\u5c31\u662f\u7b26\u53f7\u540d\uff08Symbol Name\uff09\u3002 \u5982\u4e0b\u7b26\u53f7\u8868\uff08Symbol Table\uff09\uff1a Symbol\uff08\u7b26\u53f7\u540d\uff09 Symbol Value \uff08\u5730\u5740\uff09 main 0x100 Add 0x123 ... ... Linux \u7684\u5171\u4eab\u5e93\uff08Shared Library\uff09 # Linux \u4e0b\u7684\u5171\u4eab\u5e93\u5c31\u662f\u666e\u901a\u7684 ELF \u5171\u4eab\u5bf9\u8c61\u3002 \u5171\u4eab\u5e93\u7248\u672c\u66f4\u65b0\u5e94\u8be5\u4fdd\u8bc1\u4e8c\u8fdb\u5236\u63a5\u53e3 ABI\uff08Application Binary Interface\uff09\u7684\u517c\u5bb9 \u547d\u540d # libname.so.x.y.z x\uff1a\u4e3b\u7248\u672c\u53f7\uff0c\u4e0d\u540c\u4e3b\u7248\u672c\u53f7\u7684\u5e93\u4e4b\u95f4\u4e0d\u517c\u5bb9\uff0c\u9700\u8981\u91cd\u65b0\u7f16\u8bd1 y\uff1a\u6b21\u7248\u672c\u53f7\uff0c\u9ad8\u7248\u672c\u53f7\u5411\u540e\u517c\u5bb9\u4f4e\u7248\u672c\u53f7 z\uff1a\u53d1\u5e03\u7248\u672c\u53f7\uff0c\u4e0d\u5bf9\u63a5\u53e3\u8fdb\u884c\u66f4\u6539\uff0c\u5b8c\u5168\u517c\u5bb9 \u8def\u5f84 # \u5927\u90e8\u5206\u5305\u62ec Linux \u5728\u5185\u7684\u5f00\u6e90\u7cfb\u7edf\u9075\u5faa FHS\uff08File Hierarchy Standard\uff09\u7684\u6807\u51c6\uff0c\u8fd9\u6807\u51c6\u89c4\u5b9a\u4e86\u7cfb\u7edf\u6587\u4ef6\u5982\u4f55\u5b58\u653e\uff0c\u5305\u62ec\u5404\u4e2a\u76ee\u5f55\u7ed3\u6784\u3001\u7ec4\u7ec7\u548c\u4f5c\u7528\u3002 /lib \uff1a\u5b58\u653e\u7cfb\u7edf\u6700\u5173\u952e\u548c\u6700\u57fa\u7840\u7684\u5171\u4eab\u5e93\uff0c\u5982\u52a8\u6001\u94fe\u63a5\u5668\u3001C \u8bed\u8a00\u8fd0\u884c\u5e93\u3001\u6570\u5b66\u5e93\u7b49 /usr/lib \uff1a\u5b58\u653e\u975e\u7cfb\u7edf\u8fd0\u884c\u65f6\u6240\u9700\u8981\u7684\u5173\u952e\u6027\u7684\u5e93\uff0c\u4e3b\u8981\u662f\u5f00\u53d1\u5e93 /usr/local/lib \uff1a\u5b58\u653e\u8ddf\u64cd\u4f5c\u7cfb\u7edf\u672c\u8eab\u5e76\u4e0d\u5341\u5206\u76f8\u5173\u7684\u5e93\uff0c\u4e3b\u8981\u662f\u4e00\u4e9b\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\u7684\u5e93 \u52a8\u6001\u94fe\u63a5\u5668\u4f1a\u5728 /lib \u3001 /usr/lib \u548c\u7531 /etc/ld.so.conf \u914d\u7f6e\u6587\u4ef6\u6307\u5b9a\u7684\uff0c\u76ee\u5f55\u4e2d\u67e5\u627e\u5171\u4eab\u5e93 \u73af\u5883\u53d8\u91cf # LD_LIBRARY_PATH \uff1a\u4e34\u65f6\u6539\u53d8\u67d0\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u5171\u4eab\u5e93\u67e5\u627e\u8def\u5f84\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f LD_PRELOAD \uff1a\u6307\u5b9a\u9884\u5148\u88c5\u8f7d\u7684\u4e00\u4e9b\u5171\u4eab\u5e93\u751a\u81f3\u662f\u76ee\u6807\u6587\u4ef6 LD_DEBUG \uff1a\u6253\u5f00\u52a8\u6001\u94fe\u63a5\u5668\u7684\u8c03\u8bd5\u529f\u80fd so \u5171\u4eab\u5e93\u7684\u7f16\u5199 # \u4f7f\u7528 CLion \u7f16\u5199\u5171\u4eab\u5e93 \u521b\u5efa\u4e00\u4e2a\u540d\u4e3a MySharedLib \u7684\u5171\u4eab\u5e93 CMakeLists.txt cmake_minimum_required ( VERSION 3.10 ) project ( MySharedLib ) set ( CMAKE_CXX_STANDARD 11 ) add_library ( MySharedLib SHARED library.cpp library.h ) library.h #ifndef MYSHAREDLIB_LIBRARY_H #define MYSHAREDLIB_LIBRARY_H // \u6253\u5370 Hello World! void hello (); // \u4f7f\u7528\u53ef\u53d8\u6a21\u7248\u53c2\u6570\u6c42\u548c template < typename T > T sum ( T t ) { return t ; } template < typename T , typename ... Types > T sum ( T first , Types ... rest ) { return first + sum < T > ( rest ...); } #endif library.cpp #include <iostream> #include \"library.h\" void hello () { std :: cout << \"Hello, World!\" << std :: endl ; } so \u5171\u4eab\u5e93\u7684\u4f7f\u7528\uff08\u88ab\u53ef\u6267\u884c\u9879\u76ee\u8c03\u7528\uff09 # \u4f7f\u7528 CLion \u8c03\u7528\u5171\u4eab\u5e93 \u521b\u5efa\u4e00\u4e2a\u540d\u4e3a TestSharedLib \u7684\u53ef\u6267\u884c\u9879\u76ee CMakeLists.txt cmake_minimum_required ( VERSION 3.10 ) project ( TestSharedLib ) # C++11 \u7f16\u8bd1 set ( CMAKE_CXX_STANDARD 11 ) # \u5934\u6587\u4ef6\u8def\u5f84 set ( INC_DIR /home/xx/code/clion/MySharedLib ) # \u5e93\u6587\u4ef6\u8def\u5f84 set ( LIB_DIR /home/xx/code/clion/MySharedLib/cmake-build-debug ) include_directories ( ${ INC_DIR } ) link_directories ( ${ LIB_DIR } ) link_libraries ( MySharedLib ) add_executable ( TestSharedLib main.cpp ) # \u94fe\u63a5 MySharedLib \u5e93 target_link_libraries ( TestSharedLib MySharedLib ) main.cpp #include <iostream> #include \"library.h\" using std :: cout ; using std :: endl ; int main () { hello (); cout << \"1 + 2 = \" << sum ( 1 , 2 ) << endl ; cout << \"1 + 2 + 3 = \" << sum ( 1 , 2 , 3 ) << endl ; return 0 ; } \u6267\u884c\u7ed3\u679c Hello, World! 1 + 2 = 3 1 + 2 + 3 = 6 Windows \u5e94\u7528\u7a0b\u5e8f\u5165\u53e3\u51fd\u6570 # GUI\uff08Graphical User Interface\uff09\u5e94\u7528\uff0c\u94fe\u63a5\u5668\u9009\u9879\uff1a /SUBSYSTEM:WINDOWS CUI\uff08Console User Interface\uff09\u5e94\u7528\uff0c\u94fe\u63a5\u5668\u9009\u9879\uff1a /SUBSYSTEM:CONSOLE _tWinMain \u4e0e _tmain \u51fd\u6570\u58f0\u660e Int WINAPI _tWinMain ( HINSTANCE hInstanceExe , HINSTANCE , PTSTR pszCmdLine , int nCmdShow ); int _tmain ( int argc , TCHAR * argv [], TCHAR * envp []); \u5e94\u7528\u7a0b\u5e8f\u7c7b\u578b \u5165\u53e3\u70b9\u51fd\u6570 \u5d4c\u5165\u53ef\u6267\u884c\u6587\u4ef6\u7684\u542f\u52a8\u51fd\u6570 \u5904\u7406ANSI\u5b57\u7b26\uff08\u4e32\uff09\u7684GUI\u5e94\u7528\u7a0b\u5e8f _tWinMain(WinMain) WinMainCRTSartup \u5904\u7406Unicode\u5b57\u7b26\uff08\u4e32\uff09\u7684GUI\u5e94\u7528\u7a0b\u5e8f _tWinMain(wWinMain) wWinMainCRTSartup \u5904\u7406ANSI\u5b57\u7b26\uff08\u4e32\uff09\u7684CUI\u5e94\u7528\u7a0b\u5e8f _tmain(Main) mainCRTSartup \u5904\u7406Unicode\u5b57\u7b26\uff08\u4e32\uff09\u7684CUI\u5e94\u7528\u7a0b\u5e8f _tmain(wMain) wmainCRTSartup \u52a8\u6001\u94fe\u63a5\u5e93\uff08Dynamic-Link Library\uff09 DllMain _DllMainCRTStartup Windows \u7684\u52a8\u6001\u94fe\u63a5\u5e93\uff08Dynamic-Link Library\uff09 # \u90e8\u5206\u77e5\u8bc6\u70b9\u6765\u81ea\u300aWindows \u6838\u5fc3\u7f16\u7a0b\uff08\u7b2c\u4e94\u7248\uff09\u300b \u7528\u5904 # \u6269\u5c55\u4e86\u5e94\u7528\u7a0b\u5e8f\u7684\u7279\u6027 \u7b80\u5316\u4e86\u9879\u76ee\u7ba1\u7406 \u6709\u52a9\u4e8e\u8282\u7701\u5185\u5b58 \u4fc3\u8fdb\u4e86\u8d44\u6e90\u7684\u5171\u4eab \u4fc3\u8fdb\u4e86\u672c\u5730\u5316 \u6709\u52a9\u4e8e\u89e3\u51b3\u5e73\u53f0\u95f4\u7684\u5dee\u5f02 \u53ef\u4ee5\u7528\u4e8e\u7279\u6b8a\u76ee\u7684 \u6ce8\u610f # \u521b\u5efa DLL\uff0c\u4e8b\u5b9e\u4e0a\u662f\u5728\u521b\u5efa\u53ef\u4f9b\u4e00\u4e2a\u53ef\u6267\u884c\u6a21\u5757\u8c03\u7528\u7684\u51fd\u6570 \u5f53\u4e00\u4e2a\u6a21\u5757\u63d0\u4f9b\u4e00\u4e2a\u5185\u5b58\u5206\u914d\u51fd\u6570\uff08malloc\u3001new\uff09\u7684\u65f6\u5019\uff0c\u5b83\u5fc5\u987b\u540c\u65f6\u63d0\u4f9b\u53e6\u4e00\u4e2a\u5185\u5b58\u91ca\u653e\u51fd\u6570\uff08free\u3001delete\uff09 \u5728\u4f7f\u7528 C \u548c C++ \u6df7\u7f16\u7684\u65f6\u5019\uff0c\u8981\u4f7f\u7528 extern \"C\" \u4fee\u9970\u7b26 \u4e00\u4e2a DLL \u53ef\u4ee5\u5bfc\u51fa\u51fd\u6570\u3001\u53d8\u91cf\uff08\u907f\u514d\u5bfc\u51fa\uff09\u3001C++ \u7c7b\uff08\u5bfc\u51fa\u5bfc\u5165\u9700\u8981\u540c\u7f16\u8bd1\u5668\uff0c\u5426\u5219\u907f\u514d\u5bfc\u51fa\uff09 DLL \u6a21\u5757\uff1acpp \u6587\u4ef6\u4e2d\u7684 __declspec(dllexport) \u5199\u5728 include \u5934\u6587\u4ef6\u4e4b\u524d \u8c03\u7528 DLL \u7684\u53ef\u6267\u884c\u6a21\u5757\uff1acpp \u6587\u4ef6\u7684 __declspec(dllimport) \u4e4b\u524d\u4e0d\u5e94\u8be5\u5b9a\u4e49 MYLIBAPI \u52a0\u8f7d Windows \u7a0b\u5e8f\u7684\u641c\u7d22\u987a\u5e8f # \u5305\u542b\u53ef\u6267\u884c\u6587\u4ef6\u7684\u76ee\u5f55 Windows \u7684\u7cfb\u7edf\u76ee\u5f55\uff0c\u53ef\u4ee5\u901a\u8fc7 GetSystemDirectory \u5f97\u5230 16 \u4f4d\u7684\u7cfb\u7edf\u76ee\u5f55\uff0c\u5373 Windows \u76ee\u5f55\u4e2d\u7684 System \u5b50\u76ee\u5f55 Windows \u76ee\u5f55\uff0c\u53ef\u4ee5\u901a\u8fc7 GetWindowsDirectory \u5f97\u5230 \u8fdb\u7a0b\u7684\u5f53\u524d\u76ee\u5f55 PATH \u73af\u5883\u53d8\u91cf\u4e2d\u6240\u5217\u51fa\u7684\u76ee\u5f55 DLL \u5165\u53e3\u51fd\u6570 # DllMain \u51fd\u6570 BOOL WINAPI DllMain ( HINSTANCE hinstDLL , DWORD fdwReason , LPVOID lpvReserved ) { switch ( fdwReason ) { case DLL_PROCESS_ATTACH : // \u7b2c\u4e00\u6b21\u5c06\u4e00\u4e2aDLL\u6620\u5c04\u5230\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u65f6\u8c03\u7528 // The DLL is being mapped into the process' address space. break ; case DLL_THREAD_ATTACH : // \u5f53\u8fdb\u7a0b\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u7684\u65f6\u5019\uff0c\u7528\u4e8e\u544a\u8bc9DLL\u6267\u884c\u4e0e\u7ebf\u7a0b\u76f8\u5173\u7684\u521d\u59cb\u5316\uff08\u975e\u4e3b\u7ebf\u7a0b\u6267\u884c\uff09 // A thread is bing created. break ; case DLL_THREAD_DETACH : // \u7cfb\u7edf\u8c03\u7528 ExitThread \u7ebf\u7a0b\u9000\u51fa\u524d\uff0c\u5373\u5c06\u7ec8\u6b62\u7684\u7ebf\u7a0b\u901a\u8fc7\u544a\u8bc9DLL\u6267\u884c\u4e0e\u7ebf\u7a0b\u76f8\u5173\u7684\u6e05\u7406 // A thread is exiting cleanly. break ; case DLL_PROCESS_DETACH : // \u5c06\u4e00\u4e2aDLL\u4ece\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u65f6\u8c03\u7528 // The DLL is being unmapped from the process' address space. break ; } return ( TRUE ); // Used only for DLL_PROCESS_ATTACH } \u8f7d\u5165\u5378\u8f7d\u5e93 # LoadLibrary\u3001LoadLibraryExA\u3001LoadPackagedLibrary\u3001FreeLibrary\u3001FreeLibraryAndExitThread \u51fd\u6570\u58f0\u660e // \u8f7d\u5165\u5e93 HMODULE WINAPI LoadLibrary ( _In_ LPCTSTR lpFileName ); HMODULE LoadLibraryExA ( LPCSTR lpLibFileName , HANDLE hFile , DWORD dwFlags ); // \u82e5\u8981\u5728\u901a\u7528 Windows \u5e73\u53f0\uff08UWP\uff09\u5e94\u7528\u4e2d\u52a0\u8f7d Win32 DLL\uff0c\u9700\u8981\u8c03\u7528 LoadPackagedLibrary\uff0c\u800c\u4e0d\u662f LoadLibrary \u6216 LoadLibraryEx HMODULE LoadPackagedLibrary ( LPCWSTR lpwLibFileName , DWORD Reserved ); // \u5378\u8f7d\u5e93 BOOL WINAPI FreeLibrary ( _In_ HMODULE hModule ); // \u5378\u8f7d\u5e93\u548c\u9000\u51fa\u7ebf\u7a0b VOID WINAPI FreeLibraryAndExitThread ( _In_ HMODULE hModule , _In_ DWORD dwExitCode ); \u663e\u793a\u5730\u94fe\u63a5\u5230\u5bfc\u51fa\u7b26\u53f7 # GetProcAddress \u51fd\u6570\u58f0\u660e FARPROC GetProcAddress ( HMODULE hInstDll , PCSTR pszSymbolName // \u53ea\u80fd\u63a5\u53d7 ANSI \u5b57\u7b26\u4e32\uff0c\u4e0d\u80fd\u662f Unicode ); DumpBin.exe \u67e5\u770b DLL \u4fe1\u606f # \u5728 VS \u7684\u5f00\u53d1\u4eba\u5458\u547d\u4ee4\u63d0\u793a\u7b26 \u4f7f\u7528 DumpBin.exe \u53ef\u67e5\u770b DLL \u5e93\u7684\u5bfc\u51fa\u6bb5\uff08\u5bfc\u51fa\u7684\u53d8\u91cf\u3001\u51fd\u6570\u3001\u7c7b\u540d\u7684\u7b26\u53f7\uff09\u3001\u76f8\u5bf9\u865a\u62df\u5730\u5740\uff08RVA\uff0crelative virtual address\uff09\u3002\u5982\uff1a DUMPBIN -exports D:\\mydll.dll LoadLibrary \u4e0e FreeLibrary \u6d41\u7a0b\u56fe # LoadLibrary \u4e0e FreeLibrary \u6d41\u7a0b\u56fe LoadLibrary # FreeLibrary # DLL \u5e93\u7684\u7f16\u5199\uff08\u5bfc\u51fa\u4e00\u4e2a DLL \u6a21\u5757\uff09 # DLL \u5e93\u7684\u7f16\u5199\uff08\u5bfc\u51fa\u4e00\u4e2a DLL \u6a21\u5757\uff09 DLL \u5934\u6587\u4ef6 // MyLib.h #ifdef MYLIBAPI // MYLIBAPI \u5e94\u8be5\u5728\u5168\u90e8 DLL \u6e90\u6587\u4ef6\u7684 include \"Mylib.h\" \u4e4b\u524d\u88ab\u5b9a\u4e49 // \u5168\u90e8\u51fd\u6570/\u53d8\u91cf\u6b63\u5728\u88ab\u5bfc\u51fa #else // \u8fd9\u4e2a\u5934\u6587\u4ef6\u88ab\u4e00\u4e2aexe\u6e90\u4ee3\u7801\u6a21\u5757\u5305\u542b\uff0c\u610f\u5473\u7740\u5168\u90e8\u51fd\u6570/\u53d8\u91cf\u88ab\u5bfc\u5165 #define MYLIBAPI extern \"C\" __declspec(dllimport) #endif // \u8fd9\u91cc\u5b9a\u4e49\u4efb\u4f55\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b26\u53f7 // \u5b9a\u4e49\u5bfc\u51fa\u7684\u53d8\u91cf\uff08\u907f\u514d\u5bfc\u51fa\u53d8\u91cf\uff09 MYLIBAPI int g_nResult ; // \u5b9a\u4e49\u5bfc\u51fa\u51fd\u6570\u539f\u578b MYLIBAPI int Add ( int nLeft , int nRight ); DLL \u6e90\u6587\u4ef6 // MyLibFile1.cpp // \u5305\u542b\u6807\u51c6Windows\u548cC\u8fd0\u884c\u65f6\u5934\u6587\u4ef6 #include <windows.h> // DLL\u6e90\u7801\u6587\u4ef6\u5bfc\u51fa\u7684\u51fd\u6570\u548c\u53d8\u91cf #define MYLIBAPI extern \"C\" __declspec(dllexport) // \u5305\u542b\u5bfc\u51fa\u7684\u6570\u636e\u7ed3\u6784\u3001\u7b26\u53f7\u3001\u51fd\u6570\u3001\u53d8\u91cf #include \"MyLib.h\" // \u5c06\u6b64DLL\u6e90\u4ee3\u7801\u6587\u4ef6\u7684\u4ee3\u7801\u653e\u5728\u6b64\u5904 int g_nResult ; int Add ( int nLeft , int nRight ) { g_nResult = nLeft + nRight ; return g_nResult ; } DLL \u5e93\u7684\u4f7f\u7528\uff08\u8fd0\u884c\u65f6\u52a8\u6001\u94fe\u63a5 DLL\uff09 # DLL \u5e93\u7684\u4f7f\u7528\uff08\u8fd0\u884c\u65f6\u52a8\u6001\u94fe\u63a5 DLL\uff09 // A simple program that uses LoadLibrary and // GetProcAddress to access myPuts from Myputs.dll. #include <windows.h> #include <stdio.h> typedef int ( __cdecl * MYPROC )( LPWSTR ); int main ( void ) { HINSTANCE hinstLib ; MYPROC ProcAdd ; BOOL fFreeResult , fRunTimeLinkSuccess = FALSE ; // Get a handle to the DLL module. hinstLib = LoadLibrary ( TEXT ( \"MyPuts.dll\" )); // If the handle is valid, try to get the function address. if ( hinstLib != NULL ) { ProcAdd = ( MYPROC ) GetProcAddress ( hinstLib , \"myPuts\" ); // If the function address is valid, call the function. if ( NULL != ProcAdd ) { fRunTimeLinkSuccess = TRUE ; ( ProcAdd ) ( L \"Message sent to the DLL function \\n \" ); } // Free the DLL module. fFreeResult = FreeLibrary ( hinstLib ); } // If unable to call the DLL function, use an alternative. if ( ! fRunTimeLinkSuccess ) printf ( \"Message printed from executable \\n \" ); return 0 ; } \u8fd0\u884c\u5e93\uff08Runtime Library\uff09 # \u5178\u578b\u7a0b\u5e8f\u8fd0\u884c\u6b65\u9aa4 # \u64cd\u4f5c\u7cfb\u7edf\u521b\u5efa\u8fdb\u7a0b\uff0c\u628a\u63a7\u5236\u6743\u4ea4\u7ed9\u7a0b\u5e8f\u7684\u5165\u53e3\uff08\u5f80\u5f80\u662f\u8fd0\u884c\u5e93\u4e2d\u7684\u67d0\u4e2a\u5165\u53e3\u51fd\u6570\uff09 \u5165\u53e3\u51fd\u6570\u5bf9\u8fd0\u884c\u5e93\u548c\u7a0b\u5e8f\u8fd0\u884c\u73af\u5883\u8fdb\u884c\u521d\u59cb\u5316\uff08\u5305\u62ec\u5806\u3001I/O\u3001\u7ebf\u7a0b\u3001\u5168\u5c40\u53d8\u91cf\u6784\u9020\u7b49\u7b49\uff09\u3002 \u5165\u53e3\u51fd\u6570\u521d\u59cb\u5316\u540e\uff0c\u8c03\u7528 main \u51fd\u6570\uff0c\u6b63\u5f0f\u5f00\u59cb\u6267\u884c\u7a0b\u5e8f\u4e3b\u4f53\u90e8\u5206\u3002 main \u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u8fd4\u56de\u5230\u5165\u53e3\u51fd\u6570\u8fdb\u884c\u6e05\u7406\u5de5\u4f5c\uff08\u5305\u62ec\u5168\u5c40\u53d8\u91cf\u6790\u6784\u3001\u5806\u9500\u6bc1\u3001\u5173\u95edI/O\u7b49\uff09\uff0c\u7136\u540e\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u7ed3\u675f\u8fdb\u7a0b\u3002 \u4e00\u4e2a\u7a0b\u5e8f\u7684 I/O \u6307\u4ee3\u7a0b\u5e8f\u4e0e\u5916\u754c\u7684\u4ea4\u4e92\uff0c\u5305\u62ec\u6587\u4ef6\u3001\u7ba1\u7a0b\u3001\u7f51\u7edc\u3001\u547d\u4ee4\u884c\u3001\u4fe1\u53f7\u7b49\u3002\u66f4\u5e7f\u4e49\u5730\u8bb2\uff0cI/O \u6307\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u7406\u89e3\u4e3a \u201c\u6587\u4ef6\u201d \u7684\u4e8b\u7269\u3002 glibc \u5165\u53e3 # _start -> __libc_start_main -> exit -> _exit \u5176\u4e2d main(argc, argv, __environ) \u51fd\u6570\u5728 __libc_start_main \u91cc\u6267\u884c\u3002 MSVC CRT \u5165\u53e3 # int mainCRTStartup(void) \u6267\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a \u521d\u59cb\u5316\u548c OS \u7248\u672c\u6709\u5173\u7684\u5168\u5c40\u53d8\u91cf\u3002 \u521d\u59cb\u5316\u5806\u3002 \u521d\u59cb\u5316 I/O\u3002 \u83b7\u53d6\u547d\u4ee4\u884c\u53c2\u6570\u548c\u73af\u5883\u53d8\u91cf\u3002 \u521d\u59cb\u5316 C \u5e93\u7684\u4e00\u4e9b\u6570\u636e\u3002 \u8c03\u7528 main \u5e76\u8bb0\u5f55\u8fd4\u56de\u503c\u3002 \u68c0\u67e5\u9519\u8bef\u5e76\u5c06 main \u7684\u8fd4\u56de\u503c\u8fd4\u56de\u3002 C \u8bed\u8a00\u8fd0\u884c\u5e93\uff08CRT\uff09 # \u5927\u81f4\u5305\u542b\u5982\u4e0b\u529f\u80fd\uff1a \u542f\u52a8\u4e0e\u9000\u51fa\uff1a\u5305\u62ec\u5165\u53e3\u51fd\u6570\u53ca\u5165\u53e3\u51fd\u6570\u6240\u4f9d\u8d56\u7684\u5176\u4ed6\u51fd\u6570\u7b49\u3002 \u6807\u51c6\u51fd\u6570\uff1a\u6709 C \u8bed\u8a00\u6807\u51c6\u89c4\u5b9a\u7684C\u8bed\u8a00\u6807\u51c6\u5e93\u6240\u62e5\u6709\u7684\u51fd\u6570\u5b9e\u73b0\u3002 I/O\uff1aI/O \u529f\u80fd\u7684\u5c01\u88c5\u548c\u5b9e\u73b0\u3002 \u5806\uff1a\u5806\u7684\u5c01\u88c5\u548c\u5b9e\u73b0\u3002 \u8bed\u8a00\u5b9e\u73b0\uff1a\u8bed\u8a00\u4e2d\u4e00\u4e9b\u7279\u6b8a\u529f\u80fd\u7684\u5b9e\u73b0\u3002 \u8c03\u8bd5\uff1a\u5b9e\u73b0\u8c03\u8bd5\u529f\u80fd\u7684\u4ee3\u7801\u3002 C\u8bed\u8a00\u6807\u51c6\u5e93\uff08ANSI C\uff09 # \u5305\u542b\uff1a \u6807\u51c6\u8f93\u5165\u8f93\u51fa\uff08stdio.h\uff09 \u6587\u4ef6\u64cd\u4f5c\uff08stdio.h\uff09 \u5b57\u7b26\u64cd\u4f5c\uff08ctype.h\uff09 \u5b57\u7b26\u4e32\u64cd\u4f5c\uff08string.h\uff09 \u6570\u5b66\u51fd\u6570\uff08math.h\uff09 \u8d44\u6e90\u7ba1\u7406\uff08stdlib.h\uff09 \u683c\u5f0f\u8f6c\u6362\uff08stdlib.h\uff09 \u65f6\u95f4/\u65e5\u671f\uff08time.h\uff09 \u65ad\u8a00\uff08assert.h\uff09 \u5404\u79cd\u7c7b\u578b\u4e0a\u7684\u5e38\u6570\uff08limits.h & float.h\uff09 \u53d8\u957f\u53c2\u6570\uff08stdarg.h\uff09 \u975e\u5c40\u90e8\u8df3\u8f6c\uff08setjmp.h\uff09 \ud83d\udcda \u4e66\u7c4d # huihut/CS-Books \uff1a\ud83d\udcda Computer Science Books \u8ba1\u7b97\u673a\u6280\u672f\u7c7b\u4e66\u7c4d PDF \u8bed\u8a00 # \u300aC++ Primer\u300b \u300aEffective C++\u300b \u300aMore Effective C++\u300b \u300a\u6df1\u5ea6\u63a2\u7d22 C++ \u5bf9\u8c61\u6a21\u578b\u300b \u300a\u6df1\u5165\u7406\u89e3 C++11\u300b \u300aSTL \u6e90\u7801\u5256\u6790\u300b \u7b97\u6cd5 # \u300a\u5251\u6307 Offer\u300b \u300a\u7f16\u7a0b\u73e0\u7391\u300b \u300a\u7a0b\u5e8f\u5458\u9762\u8bd5\u5b9d\u5178\u300b \u7cfb\u7edf # \u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b \u300aWindows \u6838\u5fc3\u7f16\u7a0b\u300b \u300aUnix \u73af\u5883\u9ad8\u7ea7\u7f16\u7a0b\u300b \u7f51\u7edc # \u300aUnix \u7f51\u7edc\u7f16\u7a0b\u300b \u300aTCP/IP \u8be6\u89e3\u300b \u5176\u4ed6 # \u300a\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b\u300b \ud83d\udd31 C/C++ \u53d1\u5c55\u65b9\u5411 # C/C++ \u53d1\u5c55\u65b9\u5411\u751a\u5e7f\uff0c\u5305\u62ec\u4e0d\u9650\u4e8e\u4ee5\u4e0b\u65b9\u5411\uff0c \u4ee5\u4e0b\u5217\u4e3e\u4e00\u4e9b\u5927\u5382\u6821\u62db\u5c97\u4f4d\u8981\u6c42\u3002 \u540e\u53f0/\u670d\u52a1\u5668 # \u3010\u540e\u53f0\u5f00\u53d1\u3011 \u7f16\u7a0b\u57fa\u672c\u529f\u624e\u5b9e\uff0c\u638c\u63e1 C/C++/JAVA \u7b49\u5f00\u53d1\u8bed\u8a00\u3001\u5e38\u7528\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\uff1b \u719f\u6089 TCP/UDP \u7f51\u7edc\u534f\u8bae\u53ca\u76f8\u5173\u7f16\u7a0b\u3001\u8fdb\u7a0b\u95f4\u901a\u8baf\u7f16\u7a0b\uff1b \u4e86\u89e3 Python\u3001Shell\u3001Perl \u7b49\u811a\u672c\u8bed\u8a00\uff1b \u4e86\u89e3 MYSQL \u53ca SQL \u8bed\u8a00\u3001\u7f16\u7a0b\uff0c\u4e86\u89e3 NoSQL, key-value \u5b58\u50a8\u539f\u7406\uff1b \u5168\u9762\u3001\u624e\u5b9e\u7684\u8f6f\u4ef6\u77e5\u8bc6\u7ed3\u6784\uff0c\u638c\u63e1\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f6f\u4ef6\u5de5\u7a0b\u3001\u8bbe\u8ba1\u6a21\u5f0f\u3001\u6570\u636e\u7ed3\u6784\u3001\u6570\u636e\u5e93\u7cfb\u7edf\u3001\u7f51\u7edc\u5b89\u5168\u7b49\u4e13\u4e1a\u77e5\u8bc6\uff1b \u4e86\u89e3\u5206\u5e03\u5f0f\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5f00\u53d1\u3001\u8d1f\u8f7d\u5747\u8861\u6280\u672f\uff0c\u7cfb\u7edf\u5bb9\u707e\u8bbe\u8ba1\uff0c\u9ad8\u53ef\u7528\u7cfb\u7edf\u7b49\u77e5\u8bc6\u3002 \u684c\u9762\u5ba2\u6237\u7aef # \u3010PC \u5ba2\u6237\u7aef\u5f00\u53d1\u3011 \u8ba1\u7b97\u673a\u8f6f\u4ef6\u76f8\u5173\u4e13\u4e1a\u672c\u79d1\u6216\u4ee5\u4e0a\u5b66\u5386\uff0c\u70ed\u7231\u7f16\u7a0b\uff0c\u57fa\u7840\u624e\u5b9e\uff0c\u7406\u89e3\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u76f8\u5173\u77e5\u8bc6\uff1b \u719f\u6089 windows \u64cd\u4f5c\u7cfb\u7edf\u7684\u5185\u5b58\u7ba1\u7406\u3001\u6587\u4ef6\u7cfb\u7edf\u3001\u8fdb\u7a0b\u7ebf\u7a0b\u8c03\u5ea6\uff1b \u719f\u6089 MFC/windows \u754c\u9762\u5b9e\u73b0\u673a\u5236\uff0c\u719f\u7ec3\u4f7f\u7528 VC\uff0c\u7cbe\u901a C/C++\uff0c\u719f\u7ec3\u4f7f\u7528 STL\uff0c\u4ee5\u53ca Windows \u4e0b\u7f51\u7edc\u7f16\u7a0b\u7ecf\u9a8c\uff1b \u719f\u7ec3\u638c\u63e1 Windows \u5ba2\u6237\u7aef\u5f00\u53d1\u3001\u8c03\u8bd5\uff0c\u6709 Windows \u5e94\u7528\u8f6f\u4ef6\u5f00\u53d1\u7ecf\u9a8c\u4f18\u5148\uff1b \u5bf9\u4e8e\u521b\u65b0\u53ca\u89e3\u51b3\u5177\u6709\u6311\u6218\u6027\u7684\u95ee\u9898\u5145\u6ee1\u6fc0\u60c5\uff0c\u5177\u6709\u826f\u597d\u7684\u7b97\u6cd5\u57fa\u7840\u53ca\u7cfb\u7edf\u5206\u6790\u80fd\u529b\u3002 \u56fe\u5f62\u5b66/\u6e38\u620f/VR/AR # \u3010\u6e38\u620f\u5ba2\u6237\u7aef\u5f00\u53d1\u3011 \u8ba1\u7b97\u673a\u79d1\u5b66/\u5de5\u7a0b\u76f8\u5173\u4e13\u4e1a\u672c\u79d1\u6216\u4ee5\u4e0a\u5b66\u5386\uff0c\u70ed\u7231\u7f16\u7a0b\uff0c\u57fa\u7840\u624e\u5b9e\uff0c\u7406\u89e3\u7b97\u6cd5\u3001\u6570\u636e\u7ed3\u6784\u3001\u8f6f\u4ef6\u8bbe\u8ba1\u76f8\u5173\u77e5\u8bc6\uff1b \u81f3\u5c11\u638c\u63e1\u4e00\u79cd\u6e38\u620f\u5f00\u53d1\u5e38\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5177 C++/C# \u7f16\u7a0b\u7ecf\u9a8c\u4f18\u5148\uff1b \u5177\u6e38\u620f\u5f15\u64ce\uff08\u5982 Unity\u3001Unreal\uff09\u4f7f\u7528\u7ecf\u9a8c\u8005\u4f18\u5148\uff1b \u4e86\u89e3\u67d0\u65b9\u9762\u7684\u6e38\u620f\u5ba2\u6237\u7aef\u6280\u672f\uff08\u5982\u56fe\u5f62\u3001\u97f3\u9891\u3001\u52a8\u753b\u3001\u7269\u7406\u3001\u4eba\u5de5\u667a\u80fd\u3001\u7f51\u7edc\u540c\u6b65\uff09\u8005\u4f18\u5148\u8003\u8651\uff1b \u5bf9\u4e8e\u521b\u65b0\u53ca\u89e3\u51b3\u5177\u6709\u6311\u6218\u6027\u7684\u95ee\u9898\u5145\u6ee1\u6fc0\u60c5\uff0c\u6709\u8f83\u5f3a\u7684\u5b66\u4e60\u80fd\u529b\u3001\u5206\u6790\u53ca\u89e3\u51b3\u95ee\u9898\u80fd\u529b\uff0c\u5177\u5907\u826f\u597d\u7684\u56e2\u961f\u5408\u4f5c\u610f\u8bc6\uff1b \u5177\u9605\u8bfb\u82f1\u6587\u6280\u672f\u6587\u6863\u80fd\u529b\uff1b \u70ed\u7231\u6e38\u620f\u3002 \u6d4b\u8bd5\u5f00\u53d1 # \u3010\u6d4b\u8bd5\u5f00\u53d1\u3011 \u8ba1\u7b97\u673a\u6216\u76f8\u5173\u4e13\u4e1a\u672c\u79d1\u53ca\u4ee5\u4e0a\u5b66\u5386\uff1b \u4e00\u81f3\u4e24\u5e74\u7684 C/C++/Python \u6216\u5176\u4ed6\u8ba1\u7b97\u673a\u8bed\u8a00\u7684\u7f16\u7a0b\u7ecf\u9a8c\uff1b \u5177\u5907\u64b0\u5199\u6d4b\u8bd5\u8ba1\u5212\u3001\u6d4b\u8bd5\u7528\u4f8b\u3001\u4ee5\u53ca\u5b9e\u73b0\u6027\u80fd\u548c\u5b89\u5168\u7b49\u6d4b\u8bd5\u7684\u80fd\u529b\uff1b \u5177\u5907\u5b9e\u73b0\u81ea\u52a8\u5316\u7cfb\u7edf\u7684\u80fd\u529b\uff1b \u5177\u5907\u5b9a\u4f4d\u8c03\u67e5\u4ea7\u54c1\u7f3a\u9677\u80fd\u529b\u3001\u4ee5\u53ca\u4ee3\u7801\u7ea7\u522b\u8c03\u8bd5\u7f3a\u9677\u7684\u80fd\u529b\uff1b \u5de5\u4f5c\u4e3b\u52a8\u79ef\u6781\uff0c\u6709\u8d23\u4efb\u5fc3\uff0c\u5177\u6709\u826f\u597d\u7684\u56e2\u961f\u5408\u4f5c\u7cbe\u795e\u3002 \u7f51\u7edc\u5b89\u5168/\u9006\u5411 # \u3010\u5b89\u5168\u6280\u672f\u3011 \u70ed\u7231\u4e92\u8054\u7f51\uff0c\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f51\u7edc\u5b89\u5168\u6709\u72c2\u70ed\u7684\u8ffd\u6c42\uff0c\u4e13\u4e1a\u4e0d\u9650\uff1b \u719f\u6089\u6f0f\u6d1e\u6316\u6398\u3001\u7f51\u7edc\u5b89\u5168\u653b\u9632\u6280\u672f\uff0c\u4e86\u89e3\u5e38\u89c1\u9ed1\u5ba2\u653b\u51fb\u624b\u6cd5\uff1b \u638c\u63e1\u57fa\u672c\u5f00\u53d1\u80fd\u529b\uff0c\u719f\u7ec3\u4f7f\u7528 C/C++ \u8bed\u8a00\uff1b \u5bf9\u6570\u636e\u5e93\u3001\u64cd\u4f5c\u7cfb\u7edf\u3001\u7f51\u7edc\u539f\u7406\u6709\u8f83\u597d\u638c\u63e1\uff1b \u5177\u6709\u8f6f\u4ef6\u9006\u5411\uff0c\u7f51\u7edc\u5b89\u5168\u653b\u9632\u6216\u5b89\u5168\u7cfb\u7edf\u5f00\u53d1\u7ecf\u9a8c\u8005\u4f18\u5148\u3002 \u5d4c\u5165\u5f0f/\u7269\u8054\u7f51 # \u3010\u5d4c\u5165\u5f0f\u5e94\u7528\u5f00\u53d1\u3011 \u6709\u826f\u597d\u7684\u7f16\u7a0b\u57fa\u7840\uff0c\u719f\u7ec3\u638c\u63e1 C/C++ \u8bed\u8a00\uff1b \u638c\u63e1\u64cd\u4f5c\u7cfb\u7edf\u3001\u6570\u636e\u7ed3\u6784\u7b49\u8f6f\u4ef6\u5f00\u53d1\u5fc5\u5907\u77e5\u8bc6\uff1b \u5177\u5907\u8f83\u5f3a\u7684\u6c9f\u901a\u7406\u89e3\u80fd\u529b\u53ca\u826f\u597d\u7684\u56e2\u961f\u5408\u4f5c\u610f\u8bc6\uff1b \u6709 Linux/Android \u7cfb\u7edf\u5e73\u53f0\u7684\u5f00\u53d1\u7ecf\u9a8c\u8005\u4f18\u5148\u3002 \u97f3\u89c6\u9891/\u6d41\u5a92\u4f53/SDK # \u3010\u97f3\u89c6\u9891\u7f16\u89e3\u7801\u3011 \u7855\u58eb\u53ca\u4ee5\u4e0a\u5b66\u5386\uff0c\u8ba1\u7b97\u673a\u3001\u4fe1\u53f7\u5904\u7406\u3001\u6570\u5b66\u3001\u4fe1\u606f\u7c7b\u53ca\u76f8\u5173\u4e13\u4e1a\u548c\u65b9\u5411\uff1b \u89c6\u9891\u7f16\u89e3\u7801\u57fa\u7840\u624e\u5b9e\uff0c\u719f\u5e38\u7528\u7684 HEVC \u6216 H264\uff0c\u6709\u8f83\u597d\u7684\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u57fa\u7840\uff1b \u638c\u63e1 C/C++\uff0c\u4ee3\u7801\u80fd\u529b\u5f3a, \u719f\u6089\u4e00\u79cd\u6c47\u7f16\u8bed\u8a00\u5c24\u4f73\uff1b \u8f83\u5f3a\u7684\u82f1\u6587\u6587\u732e\u9605\u8bfb\u80fd\u529b\uff1b \u5b66\u4e60\u80fd\u529b\u5f3a\uff0c\u5177\u6709\u56e2\u961f\u534f\u4f5c\u7cbe\u795e\uff0c\u6709\u8f83\u5f3a\u7684\u6297\u538b\u80fd\u529b\u3002 \u8ba1\u7b97\u673a\u89c6\u89c9/\u673a\u5668\u5b66\u4e60 # \u3010\u8ba1\u7b97\u673a\u89c6\u89c9\u7814\u7a76\u3011 \u8ba1\u7b97\u673a\u3001\u5e94\u7528\u6570\u5b66\u3001\u6a21\u5f0f\u8bc6\u522b\u3001\u4eba\u5de5\u667a\u80fd\u3001\u81ea\u63a7\u3001\u7edf\u8ba1\u5b66\u3001\u8fd0\u7b79\u5b66\u3001\u751f\u7269\u4fe1\u606f\u3001\u7269\u7406\u5b66/\u91cf\u5b50\u8ba1\u7b97\u3001\u795e\u7ecf\u79d1\u5b66\u3001\u793e\u4f1a\u5b66/\u5fc3\u7406\u5b66\u7b49\u4e13\u4e1a\uff0c\u56fe\u50cf\u5904\u7406\u3001\u6a21\u5f0f\u8bc6\u522b\u3001\u673a\u5668\u5b66\u4e60\u76f8\u5173\u7814\u7a76\u65b9\u5411\uff0c\u672c\u79d1\u53ca\u4ee5\u4e0a\uff0c\u535a\u58eb\u4f18\u5148\uff1b \u719f\u7ec3\u638c\u63e1\u8ba1\u7b97\u673a\u89c6\u89c9\u548c\u56fe\u50cf\u5904\u7406\u76f8\u5173\u7684\u57fa\u672c\u7b97\u6cd5\u53ca\u5e94\u7528\uff1b \u8f83\u5f3a\u7684\u7b97\u6cd5\u5b9e\u73b0\u80fd\u529b\uff0c\u719f\u7ec3\u638c\u63e1 C/C++ \u7f16\u7a0b\uff0c\u719f\u6089 Shell/Python/Matlab \u81f3\u5c11\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff1b \u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u3001\u6a21\u5f0f\u8bc6\u522b\u7b49\u5b66\u672f\u4f1a\u8bae\u6216\u8005\u671f\u520a\u4e0a\u53d1\u8868\u8bba\u6587\u3001\u76f8\u5173\u56fd\u9645\u6bd4\u8d5b\u83b7\u5956\u3001\u53ca\u6709\u76f8\u5173\u4e13\u5229\u8005\u4f18\u5148\u3002 \ud83d\udcaf \u590d\u4e60\u5237\u9898\u7f51\u7ad9 # cplusplus cppreference runoob leetcode | leetcode-cn lintcode nowcoder \ud83d\udcdd \u9762\u8bd5\u9898\u76ee\u7ecf\u9a8c # \u725b\u5ba2\u7f51 . 2020\u79cb\u62db\u9762\u7ecf\u5927\u6c47\u603b\uff01\uff08\u5c97\u4f4d\u5212\u5206\uff09 \u725b\u5ba2\u7f51 . \u3010\u5907\u6218\u79cb\u62db\u30112020\u5c4a\u79cb\u62db\u5907\u6218\u653b\u7565 \u725b\u5ba2\u7f51 . 2019\u6821\u62db\u9762\u7ecf\u5927\u6c47\u603b\uff01\u3010\u6bcf\u65e5\u66f4\u65b0\u4e2d\u3011 \u725b\u5ba2\u7f51 . 2019\u6821\u62db\u6280\u672f\u7c7b\u5c97\u4f4d\u9762\u7ecf\u6c47\u603b\u3010\u6280\u672f\u7c7b\u3011 \u725b\u5ba2\u7f51 . 2018\u6821\u62db\u7b14\u8bd5\u771f\u9898\u6c47\u603b \u725b\u5ba2\u7f51 . 2017\u79cb\u5b63\u6821\u56ed\u62db\u8058\u7b14\u7ecf\u9762\u7ecf\u4e13\u9898\u6c47\u603b \u725b\u5ba2\u7f51 . \u53f2\u4e0a\u6700\u51682017\u6625\u62db\u9762\u7ecf\u5927\u5408\u96c6\uff01\uff01 \u725b\u5ba2\u7f51 . \u9762\u8bd5\u9898\u5e72\u8d27\u5728\u6b64 \u77e5\u4e4e . \u4e92\u8054\u7f51\u6c42\u804c\u8def\u4e0a\uff0c\u4f60\u89c1\u8fc7\u54ea\u4e9b\u5199\u5f97\u5f88\u597d\u3001\u5f88\u7528\u5fc3\u7684\u9762\u7ecf\uff1f\u6700\u597d\u80fd\u5206\u4eab\u81ea\u5df1\u7684\u9762\u7ecf\u3001\u5fc3\u8def\u5386\u7a0b\u3002 \u77e5\u4e4e . \u4e92\u8054\u7f51\u516c\u53f8\u6700\u5e38\u89c1\u7684\u9762\u8bd5\u7b97\u6cd5\u9898\u6709\u54ea\u4e9b\uff1f CSDN . \u5168\u9762\u6574\u7406\u7684C++\u9762\u8bd5\u9898 CSDN . \u767e\u5ea6\u7814\u53d1\u7c7b\u9762\u8bd5\u9898\uff08C++\u65b9\u5411\uff09 CSDN . c++\u5e38\u89c1\u9762\u8bd5\u989830\u9053 CSDN . \u817e\u8baf2016\u5b9e\u4e60\u751f\u9762\u8bd5\u7ecf\u9a8c\uff08\u5df2\u7ecf\u62ff\u5230offer) cnblogs . C++\u9762\u8bd5\u96c6\u9526( \u9762\u8bd5\u88ab\u95ee\u5230\u7684\u95ee\u9898 ) cnblogs . C/C++ \u7b14\u8bd5\u3001\u9762\u8bd5\u9898\u76ee\u5927\u6c47\u603b cnblogs . \u5e38\u89c1C++\u9762\u8bd5\u9898\u53ca\u57fa\u672c\u77e5\u8bc6\u70b9\u603b\u7ed3\uff08\u4e00\uff09 segmentfault . C++\u5e38\u89c1\u9762\u8bd5\u95ee\u9898\u603b\u7ed3 \ud83d\udcc6 \u62db\u8058\u65f6\u95f4\u5c97\u4f4d # \u725b\u5ba2\u7f51 . \u540d\u4f01\u6821\u62db\u65e5\u7a0b \ud83d\udc4d \u5185\u63a8 # Github . CyC2018/Job-Recommend \uff1a\ud83d\udd0e \u4e92\u8054\u7f51\u5185\u63a8\u4fe1\u606f\uff08\u793e\u62db\u3001\u6821\u62db\u3001\u5b9e\u4e60\uff09 Github . amusi/AI-Job-Recommend \uff1a\u56fd\u5185\u516c\u53f8\u4eba\u5de5\u667a\u80fd\u65b9\u5411\uff08\u542b\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u3001\u8ba1\u7b97\u673a\u89c6\u89c9\u548c\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff09\u5c97\u4f4d\u7684\u62db\u8058\u4fe1\u606f\uff08\u542b\u5168\u804c\u3001\u5b9e\u4e60\u548c\u6821\u62db\uff09 \ud83d\udcdc License # \u672c\u4ed3\u5e93\u9075\u5faa CC BY-NC-SA 4.0\uff08\u7f72\u540d - \u975e\u5546\u4e1a\u6027\u4f7f\u7528 - \u76f8\u540c\u65b9\u5f0f\u5171\u4eab\uff09 \u534f\u8bae\uff0c\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\uff0c\u4e0d\u5f97\u7528\u4e8e\u5546\u4e1a\u76ee\u7684\u3002","title":"Cpp\u6280\u672f\u9762\u8bd5\u57fa\u7840\u77e5\u8bc6\u603b\u7ed3"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-\u76ee\u5f55","text":"\u2795 C/C++ \u2b50\ufe0f Effective \ud83d\udce6 STL \u303d\ufe0f \u6570\u636e\u7ed3\u6784 \u26a1\ufe0f \u7b97\u6cd5 \u2753 Problems \ud83d\udcbb \u64cd\u4f5c\u7cfb\u7edf \u2601\ufe0f \u8ba1\u7b97\u673a\u7f51\u7edc \ud83c\udf29 \u7f51\u7edc\u7f16\u7a0b \ud83d\udcbe \u6570\u636e\u5e93 \ud83d\udccf \u8bbe\u8ba1\u6a21\u5f0f \u2699\ufe0f \u94fe\u63a5\u88c5\u8f7d\u5e93 \ud83d\udcda \u4e66\u7c4d \ud83d\udd31 C/C++ \u53d1\u5c55\u65b9\u5411 \ud83d\udcaf \u590d\u4e60\u5237\u9898\u7f51\u7ad9 \ud83d\udcdd \u9762\u8bd5\u9898\u76ee\u7ecf\u9a8c \ud83d\udcc6 \u62db\u8058\u65f6\u95f4\u5c97\u4f4d \ud83d\udc4d \u5185\u63a8 \ud83d\udc6c \u8d21\u732e\u8005 \ud83d\udcdc License","title":"\ud83d\udcd1 \u76ee\u5f55"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-cc","text":"","title":"\u2795 C/C++"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#const","text":"","title":"const"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u4f5c\u7528","text":"\u4fee\u9970\u53d8\u91cf\uff0c\u8bf4\u660e\u8be5\u53d8\u91cf\u4e0d\u53ef\u4ee5\u88ab\u6539\u53d8\uff1b \u4fee\u9970\u6307\u9488\uff0c\u5206\u4e3a\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff08pointer to const\uff09\u548c\u81ea\u8eab\u662f\u5e38\u91cf\u7684\u6307\u9488\uff08\u5e38\u91cf\u6307\u9488\uff0cconst pointer\uff09\uff1b \u4fee\u9970\u5f15\u7528\uff0c\u6307\u5411\u5e38\u91cf\u7684\u5f15\u7528\uff08reference to const\uff09\uff0c\u7528\u4e8e\u5f62\u53c2\u7c7b\u578b\uff0c\u5373\u907f\u514d\u4e86\u62f7\u8d1d\uff0c\u53c8\u907f\u514d\u4e86\u51fd\u6570\u5bf9\u503c\u7684\u4fee\u6539\uff1b \u4fee\u9970\u6210\u5458\u51fd\u6570\uff0c\u8bf4\u660e\u8be5\u6210\u5458\u51fd\u6570\u5185\u4e0d\u80fd\u4fee\u6539\u6210\u5458\u53d8\u91cf\u3002","title":"\u4f5c\u7528"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#const-\u7684\u6307\u9488\u4e0e\u5f15\u7528","text":"\u6307\u9488 \u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff08pointer to const\uff09 \u81ea\u8eab\u662f\u5e38\u91cf\u7684\u6307\u9488\uff08\u5e38\u91cf\u6307\u9488\uff0cconst pointer\uff09 \u5f15\u7528 \u6307\u5411\u5e38\u91cf\u7684\u5f15\u7528\uff08reference to const\uff09 \u6ca1\u6709 const reference\uff0c\u56e0\u4e3a\u5f15\u7528\u53ea\u662f\u5bf9\u8c61\u7684\u522b\u540d\uff0c\u5f15\u7528\u4e0d\u662f\u5bf9\u8c61\uff0c\u4e0d\u80fd\u7528 const \u4fee\u9970 \uff08\u4e3a\u4e86\u65b9\u4fbf\u8bb0\u5fc6\u53ef\u4ee5\u60f3\u6210\uff09\u88ab const \u4fee\u9970\uff08\u5728 const \u540e\u9762\uff09\u7684\u503c\u4e0d\u53ef\u6539\u53d8\uff0c\u5982\u4e0b\u6587\u4f7f\u7528\u4f8b\u5b50\u4e2d\u7684 p2 \u3001 p3","title":"const \u7684\u6307\u9488\u4e0e\u5f15\u7528"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u4f7f\u7528","text":"const \u4f7f\u7528 // \u7c7b class A { private : const int a ; // \u5e38\u5bf9\u8c61\u6210\u5458\uff0c\u53ef\u4ee5\u4f7f\u7528\u521d\u59cb\u5316\u5217\u8868\u6216\u8005\u7c7b\u5185\u521d\u59cb\u5316 public : // \u6784\u9020\u51fd\u6570 A () : a ( 0 ) { }; A ( int x ) : a ( x ) { }; // \u521d\u59cb\u5316\u5217\u8868 // const\u53ef\u7528\u4e8e\u5bf9\u91cd\u8f7d\u51fd\u6570\u7684\u533a\u5206 int getValue (); // \u666e\u901a\u6210\u5458\u51fd\u6570 int getValue () const ; // \u5e38\u6210\u5458\u51fd\u6570\uff0c\u4e0d\u5f97\u4fee\u6539\u7c7b\u4e2d\u7684\u4efb\u4f55\u6570\u636e\u6210\u5458\u7684\u503c }; void function () { // \u5bf9\u8c61 A b ; // \u666e\u901a\u5bf9\u8c61\uff0c\u53ef\u4ee5\u8c03\u7528\u5168\u90e8\u6210\u5458\u51fd\u6570 const A a ; // \u5e38\u5bf9\u8c61\uff0c\u53ea\u80fd\u8c03\u7528\u5e38\u6210\u5458\u51fd\u6570 const A * p = & a ; // \u6307\u9488\u53d8\u91cf\uff0c\u6307\u5411\u5e38\u5bf9\u8c61 const A & q = a ; // \u6307\u5411\u5e38\u5bf9\u8c61\u7684\u5f15\u7528 // \u6307\u9488 char greeting [] = \"Hello\" ; char * p1 = greeting ; // \u6307\u9488\u53d8\u91cf\uff0c\u6307\u5411\u5b57\u7b26\u6570\u7ec4\u53d8\u91cf const char * p2 = greeting ; // \u6307\u9488\u53d8\u91cf\uff0c\u6307\u5411\u5b57\u7b26\u6570\u7ec4\u5e38\u91cf\uff08const \u540e\u9762\u662f char\uff0c\u8bf4\u660e\u6307\u5411\u7684\u5b57\u7b26\uff08char\uff09\u4e0d\u53ef\u6539\u53d8\uff09 char * const p3 = greeting ; // \u81ea\u8eab\u662f\u5e38\u91cf\u7684\u6307\u9488\uff0c\u6307\u5411\u5b57\u7b26\u6570\u7ec4\u53d8\u91cf\uff08const \u540e\u9762\u662f p3\uff0c\u8bf4\u660e p3 \u6307\u9488\u81ea\u8eab\u4e0d\u53ef\u6539\u53d8\uff09 const char * const p4 = greeting ; // \u81ea\u8eab\u662f\u5e38\u91cf\u7684\u6307\u9488\uff0c\u6307\u5411\u5b57\u7b26\u6570\u7ec4\u5e38\u91cf } // \u51fd\u6570 void function1 ( const int Var ); // \u4f20\u9012\u8fc7\u6765\u7684\u53c2\u6570\u5728\u51fd\u6570\u5185\u4e0d\u53ef\u53d8 void function2 ( const char * Var ); // \u53c2\u6570\u6307\u9488\u6240\u6307\u5185\u5bb9\u4e3a\u5e38\u91cf void function3 ( char * const Var ); // \u53c2\u6570\u6307\u9488\u4e3a\u5e38\u91cf void function4 ( const int & Var ); // \u5f15\u7528\u53c2\u6570\u5728\u51fd\u6570\u5185\u4e3a\u5e38\u91cf // \u51fd\u6570\u8fd4\u56de\u503c const int function5 (); // \u8fd4\u56de\u4e00\u4e2a\u5e38\u6570 const int * function6 (); // \u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\u53d8\u91cf\uff0c\u4f7f\u7528\uff1aconst int *p = function6(); int * const function7 (); // \u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u53d8\u91cf\u7684\u5e38\u6307\u9488\uff0c\u4f7f\u7528\uff1aint* const p = function7();","title":"\u4f7f\u7528"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5b8f\u5b9a\u4e49-define-\u548c-const-\u5e38\u91cf","text":"\u5b8f\u5b9a\u4e49 #define const \u5e38\u91cf \u5b8f\u5b9a\u4e49\uff0c\u76f8\u5f53\u4e8e\u5b57\u7b26\u66ff\u6362 \u5e38\u91cf\u58f0\u660e \u9884\u5904\u7406\u5668\u5904\u7406 \u7f16\u8bd1\u5668\u5904\u7406 \u65e0\u7c7b\u578b\u5b89\u5168\u68c0\u67e5 \u6709\u7c7b\u578b\u5b89\u5168\u68c0\u67e5 \u4e0d\u5206\u914d\u5185\u5b58 \u8981\u5206\u914d\u5185\u5b58 \u5b58\u50a8\u5728\u4ee3\u7801\u6bb5 \u5b58\u50a8\u5728\u6570\u636e\u6bb5 \u53ef\u901a\u8fc7 #undef \u53d6\u6d88 \u4e0d\u53ef\u53d6\u6d88","title":"\u5b8f\u5b9a\u4e49 #define \u548c const \u5e38\u91cf"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#static","text":"","title":"static"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u4f5c\u7528_1","text":"\u4fee\u9970\u666e\u901a\u53d8\u91cf\uff0c\u4fee\u6539\u53d8\u91cf\u7684\u5b58\u50a8\u533a\u57df\u548c\u751f\u547d\u5468\u671f\uff0c\u4f7f\u53d8\u91cf\u5b58\u50a8\u5728\u9759\u6001\u533a\uff0c\u5728 main \u51fd\u6570\u8fd0\u884c\u524d\u5c31\u5206\u914d\u4e86\u7a7a\u95f4\uff0c\u5982\u679c\u6709\u521d\u59cb\u503c\u5c31\u7528\u521d\u59cb\u503c\u521d\u59cb\u5316\u5b83\uff0c\u5982\u679c\u6ca1\u6709\u521d\u59cb\u503c\u7cfb\u7edf\u7528\u9ed8\u8ba4\u503c\u521d\u59cb\u5316\u5b83\u3002 \u4fee\u9970\u666e\u901a\u51fd\u6570\uff0c\u8868\u660e\u51fd\u6570\u7684\u4f5c\u7528\u8303\u56f4\uff0c\u4ec5\u5728\u5b9a\u4e49\u8be5\u51fd\u6570\u7684\u6587\u4ef6\u5185\u624d\u80fd\u4f7f\u7528\u3002\u5728\u591a\u4eba\u5f00\u53d1\u9879\u76ee\u65f6\uff0c\u4e3a\u4e86\u9632\u6b62\u4e0e\u4ed6\u4eba\u547d\u540d\u7a7a\u95f4\u91cc\u7684\u51fd\u6570\u91cd\u540d\uff0c\u53ef\u4ee5\u5c06\u51fd\u6570\u5b9a\u4f4d\u4e3a static\u3002 \u4fee\u9970\u6210\u5458\u53d8\u91cf\uff0c\u4fee\u9970\u6210\u5458\u53d8\u91cf\u4f7f\u6240\u6709\u7684\u5bf9\u8c61\u53ea\u4fdd\u5b58\u4e00\u4e2a\u8be5\u53d8\u91cf\uff0c\u800c\u4e14\u4e0d\u9700\u8981\u751f\u6210\u5bf9\u8c61\u5c31\u53ef\u4ee5\u8bbf\u95ee\u8be5\u6210\u5458\u3002 \u4fee\u9970\u6210\u5458\u51fd\u6570\uff0c\u4fee\u9970\u6210\u5458\u51fd\u6570\u4f7f\u5f97\u4e0d\u9700\u8981\u751f\u6210\u5bf9\u8c61\u5c31\u53ef\u4ee5\u8bbf\u95ee\u8be5\u51fd\u6570\uff0c\u4f46\u662f\u5728 static \u51fd\u6570\u5185\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u3002","title":"\u4f5c\u7528"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#this-\u6307\u9488","text":"this \u6307\u9488\u662f\u4e00\u4e2a\u9690\u542b\u4e8e\u6bcf\u4e00\u4e2a\u975e\u9759\u6001\u6210\u5458\u51fd\u6570\u4e2d\u7684\u7279\u6b8a\u6307\u9488\u3002\u5b83\u6307\u5411\u8c03\u7528\u8be5\u6210\u5458\u51fd\u6570\u7684\u90a3\u4e2a\u5bf9\u8c61\u3002 \u5f53\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8c03\u7528\u6210\u5458\u51fd\u6570\u65f6\uff0c\u7f16\u8bd1\u7a0b\u5e8f\u5148\u5c06\u5bf9\u8c61\u7684\u5730\u5740\u8d4b\u7ed9 this \u6307\u9488\uff0c\u7136\u540e\u8c03\u7528\u6210\u5458\u51fd\u6570\uff0c\u6bcf\u6b21\u6210\u5458\u51fd\u6570\u5b58\u53d6\u6570\u636e\u6210\u5458\u65f6\uff0c\u90fd\u9690\u5f0f\u4f7f\u7528 this \u6307\u9488\u3002 \u5f53\u4e00\u4e2a\u6210\u5458\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u81ea\u52a8\u5411\u5b83\u4f20\u9012\u4e00\u4e2a\u9690\u542b\u7684\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u662f\u4e00\u4e2a\u6307\u5411\u8fd9\u4e2a\u6210\u5458\u51fd\u6570\u6240\u5728\u7684\u5bf9\u8c61\u7684\u6307\u9488\u3002 this \u6307\u9488\u88ab\u9690\u542b\u5730\u58f0\u660e\u4e3a: ClassName *const this \uff0c\u8fd9\u610f\u5473\u7740\u4e0d\u80fd\u7ed9 this \u6307\u9488\u8d4b\u503c\uff1b\u5728 ClassName \u7c7b\u7684 const \u6210\u5458\u51fd\u6570\u4e2d\uff0c this \u6307\u9488\u7684\u7c7b\u578b\u4e3a\uff1a const ClassName* const \uff0c\u8fd9\u8bf4\u660e\u4e0d\u80fd\u5bf9 this \u6307\u9488\u6240\u6307\u5411\u7684\u8fd9\u79cd\u5bf9\u8c61\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff08\u5373\u4e0d\u80fd\u5bf9\u8fd9\u79cd\u5bf9\u8c61\u7684\u6570\u636e\u6210\u5458\u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff09\uff1b this \u5e76\u4e0d\u662f\u4e00\u4e2a\u5e38\u89c4\u53d8\u91cf\uff0c\u800c\u662f\u4e2a\u53f3\u503c\uff0c\u6240\u4ee5\u4e0d\u80fd\u53d6\u5f97 this \u7684\u5730\u5740\uff08\u4e0d\u80fd &this \uff09\u3002 \u5728\u4ee5\u4e0b\u573a\u666f\u4e2d\uff0c\u7ecf\u5e38\u9700\u8981\u663e\u5f0f\u5f15\u7528 this \u6307\u9488\uff1a \u4e3a\u5b9e\u73b0\u5bf9\u8c61\u7684\u94fe\u5f0f\u5f15\u7528\uff1b \u4e3a\u907f\u514d\u5bf9\u540c\u4e00\u5bf9\u8c61\u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1b \u5728\u5b9e\u73b0\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\u65f6\uff0c\u5982 list \u3002","title":"this \u6307\u9488"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#inline-\u5185\u8054\u51fd\u6570","text":"","title":"inline \u5185\u8054\u51fd\u6570"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7279\u5f81","text":"\u76f8\u5f53\u4e8e\u628a\u5185\u8054\u51fd\u6570\u91cc\u9762\u7684\u5185\u5bb9\u5199\u5728\u8c03\u7528\u5185\u8054\u51fd\u6570\u5904\uff1b \u76f8\u5f53\u4e8e\u4e0d\u7528\u6267\u884c\u8fdb\u5165\u51fd\u6570\u7684\u6b65\u9aa4\uff0c\u76f4\u63a5\u6267\u884c\u51fd\u6570\u4f53\uff1b \u76f8\u5f53\u4e8e\u5b8f\uff0c\u5374\u6bd4\u5b8f\u591a\u4e86\u7c7b\u578b\u68c0\u67e5\uff0c\u771f\u6b63\u5177\u6709\u51fd\u6570\u7279\u6027\uff1b \u7f16\u8bd1\u5668\u4e00\u822c\u4e0d\u5185\u8054\u5305\u542b\u5faa\u73af\u3001\u9012\u5f52\u3001switch \u7b49\u590d\u6742\u64cd\u4f5c\u7684\u5185\u8054\u51fd\u6570\uff1b \u5728\u7c7b\u58f0\u660e\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u9664\u4e86\u865a\u51fd\u6570\u7684\u5176\u4ed6\u51fd\u6570\u90fd\u4f1a\u81ea\u52a8\u9690\u5f0f\u5730\u5f53\u6210\u5185\u8054\u51fd\u6570\u3002","title":"\u7279\u5f81"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u4f7f\u7528_1","text":"inline \u4f7f\u7528 // \u58f0\u660e1\uff08\u52a0 inline\uff0c\u5efa\u8bae\u4f7f\u7528\uff09 inline int functionName ( int first , int second ,...); // \u58f0\u660e2\uff08\u4e0d\u52a0 inline\uff09 int functionName ( int first , int second ,...); // \u5b9a\u4e49 inline int functionName ( int first , int second ,...) { /****/ }; // \u7c7b\u5185\u5b9a\u4e49\uff0c\u9690\u5f0f\u5185\u8054 class A { int doA () { return 0 ; } // \u9690\u5f0f\u5185\u8054 } // \u7c7b\u5916\u5b9a\u4e49\uff0c\u9700\u8981\u663e\u5f0f\u5185\u8054 class A { int doA (); } inline int A :: doA () { return 0 ; } // \u9700\u8981\u663e\u5f0f\u5185\u8054","title":"\u4f7f\u7528"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7f16\u8bd1\u5668\u5bf9-inline-\u51fd\u6570\u7684\u5904\u7406\u6b65\u9aa4","text":"\u5c06 inline \u51fd\u6570\u4f53\u590d\u5236\u5230 inline \u51fd\u6570\u8c03\u7528\u70b9\u5904\uff1b \u4e3a\u6240\u7528 inline \u51fd\u6570\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff1b \u5c06 inline \u51fd\u6570\u7684\u7684\u8f93\u5165\u53c2\u6570\u548c\u8fd4\u56de\u503c\u6620\u5c04\u5230\u8c03\u7528\u65b9\u6cd5\u7684\u5c40\u90e8\u53d8\u91cf\u7a7a\u95f4\u4e2d\uff1b \u5982\u679c inline \u51fd\u6570\u6709\u591a\u4e2a\u8fd4\u56de\u70b9\uff0c\u5c06\u5176\u8f6c\u53d8\u4e3a inline \u51fd\u6570\u4ee3\u7801\u5757\u672b\u5c3e\u7684\u5206\u652f\uff08\u4f7f\u7528 GOTO\uff09\u3002","title":"\u7f16\u8bd1\u5668\u5bf9 inline \u51fd\u6570\u7684\u5904\u7406\u6b65\u9aa4"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u4f18\u7f3a\u70b9","text":"\u4f18\u70b9 \u5185\u8054\u51fd\u6570\u540c\u5b8f\u51fd\u6570\u4e00\u6837\u5c06\u5728\u88ab\u8c03\u7528\u5904\u8fdb\u884c\u4ee3\u7801\u5c55\u5f00\uff0c\u7701\u53bb\u4e86\u53c2\u6570\u538b\u6808\u3001\u6808\u5e27\u5f00\u8f9f\u4e0e\u56de\u6536\uff0c\u7ed3\u679c\u8fd4\u56de\u7b49\uff0c\u4ece\u800c\u63d0\u9ad8\u7a0b\u5e8f\u8fd0\u884c\u901f\u5ea6\u3002 \u5185\u8054\u51fd\u6570\u76f8\u6bd4\u5b8f\u51fd\u6570\u6765\u8bf4\uff0c\u5728\u4ee3\u7801\u5c55\u5f00\u65f6\uff0c\u4f1a\u505a\u5b89\u5168\u68c0\u67e5\u6216\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\uff08\u540c\u666e\u901a\u51fd\u6570\uff09\uff0c\u800c\u5b8f\u5b9a\u4e49\u5219\u4e0d\u4f1a\u3002 \u5728\u7c7b\u4e2d\u58f0\u660e\u540c\u65f6\u5b9a\u4e49\u7684\u6210\u5458\u51fd\u6570\uff0c\u81ea\u52a8\u8f6c\u5316\u4e3a\u5185\u8054\u51fd\u6570\uff0c\u56e0\u6b64\u5185\u8054\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u5b8f\u5b9a\u4e49\u5219\u4e0d\u80fd\u3002 \u5185\u8054\u51fd\u6570\u5728\u8fd0\u884c\u65f6\u53ef\u8c03\u8bd5\uff0c\u800c\u5b8f\u5b9a\u4e49\u4e0d\u53ef\u4ee5\u3002 \u7f3a\u70b9 \u4ee3\u7801\u81a8\u80c0\u3002\u5185\u8054\u662f\u4ee5\u4ee3\u7801\u81a8\u80c0\uff08\u590d\u5236\uff09\u4e3a\u4ee3\u4ef7\uff0c\u6d88\u9664\u51fd\u6570\u8c03\u7528\u5e26\u6765\u7684\u5f00\u9500\u3002\u5982\u679c\u6267\u884c\u51fd\u6570\u4f53\u5185\u4ee3\u7801\u7684\u65f6\u95f4\uff0c\u76f8\u6bd4\u4e8e\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500\u8f83\u5927\uff0c\u90a3\u4e48\u6548\u7387\u7684\u6536\u83b7\u4f1a\u5f88\u5c11\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6bcf\u4e00\u5904\u5185\u8054\u51fd\u6570\u7684\u8c03\u7528\u90fd\u8981\u590d\u5236\u4ee3\u7801\uff0c\u5c06\u4f7f\u7a0b\u5e8f\u7684\u603b\u4ee3\u7801\u91cf\u589e\u5927\uff0c\u6d88\u8017\u66f4\u591a\u7684\u5185\u5b58\u7a7a\u95f4\u3002 inline \u51fd\u6570\u65e0\u6cd5\u968f\u7740\u51fd\u6570\u5e93\u5347\u7ea7\u800c\u5347\u7ea7\u3002inline\u51fd\u6570\u7684\u6539\u53d8\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\uff0c\u4e0d\u50cf non-inline \u53ef\u4ee5\u76f4\u63a5\u94fe\u63a5\u3002 \u662f\u5426\u5185\u8054\uff0c\u7a0b\u5e8f\u5458\u4e0d\u53ef\u63a7\u3002\u5185\u8054\u51fd\u6570\u53ea\u662f\u5bf9\u7f16\u8bd1\u5668\u7684\u5efa\u8bae\uff0c\u662f\u5426\u5bf9\u51fd\u6570\u5185\u8054\uff0c\u51b3\u5b9a\u6743\u5728\u4e8e\u7f16\u8bd1\u5668\u3002","title":"\u4f18\u7f3a\u70b9"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u865a\u51fd\u6570virtual\u53ef\u4ee5\u662f\u5185\u8054\u51fd\u6570inline\u5417","text":"Are \"inline virtual\" member functions ever actually \"inlined\"? \u865a\u51fd\u6570\u53ef\u4ee5\u662f\u5185\u8054\u51fd\u6570\uff0c\u5185\u8054\u662f\u53ef\u4ee5\u4fee\u9970\u865a\u51fd\u6570\u7684\uff0c\u4f46\u662f\u5f53\u865a\u51fd\u6570\u8868\u73b0\u591a\u6001\u6027\u7684\u65f6\u5019\u4e0d\u80fd\u5185\u8054\u3002 \u5185\u8054\u662f\u5728\u7f16\u8bd1\u671f\u5efa\u8bae\u7f16\u8bd1\u5668\u5185\u8054\uff0c\u800c\u865a\u51fd\u6570\u7684\u591a\u6001\u6027\u5728\u8fd0\u884c\u671f\uff0c\u7f16\u8bd1\u5668\u65e0\u6cd5\u77e5\u9053\u8fd0\u884c\u671f\u8c03\u7528\u54ea\u4e2a\u4ee3\u7801\uff0c\u56e0\u6b64\u865a\u51fd\u6570\u8868\u73b0\u4e3a\u591a\u6001\u6027\u65f6\uff08\u8fd0\u884c\u671f\uff09\u4e0d\u53ef\u4ee5\u5185\u8054\u3002 inline virtual \u552f\u4e00\u53ef\u4ee5\u5185\u8054\u7684\u65f6\u5019\u662f\uff1a\u7f16\u8bd1\u5668\u77e5\u9053\u6240\u8c03\u7528\u7684\u5bf9\u8c61\u662f\u54ea\u4e2a\u7c7b\uff08\u5982 Base::who() \uff09\uff0c\u8fd9\u53ea\u6709\u5728\u7f16\u8bd1\u5668\u5177\u6709\u5b9e\u9645\u5bf9\u8c61\u800c\u4e0d\u662f\u5bf9\u8c61\u7684\u6307\u9488\u6216\u5f15\u7528\u65f6\u624d\u4f1a\u53d1\u751f\u3002 \u865a\u51fd\u6570\u5185\u8054\u4f7f\u7528 #include <iostream> using namespace std ; class Base { public : inline virtual void who () { cout << \"I am Base \\n \" ; } virtual ~ Base () {} }; class Derived : public Base { public : inline void who () // \u4e0d\u5199inline\u65f6\u9690\u5f0f\u5185\u8054 { cout << \"I am Derived \\n \" ; } }; int main () { // \u6b64\u5904\u7684\u865a\u51fd\u6570 who()\uff0c\u662f\u901a\u8fc7\u7c7b\uff08Base\uff09\u7684\u5177\u4f53\u5bf9\u8c61\uff08b\uff09\u6765\u8c03\u7528\u7684\uff0c\u7f16\u8bd1\u671f\u95f4\u5c31\u80fd\u786e\u5b9a\u4e86\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u662f\u5185\u8054\u7684\uff0c\u4f46\u6700\u7ec8\u662f\u5426\u5185\u8054\u53d6\u51b3\u4e8e\u7f16\u8bd1\u5668\u3002 Base b ; b . who (); // \u6b64\u5904\u7684\u865a\u51fd\u6570\u662f\u901a\u8fc7\u6307\u9488\u8c03\u7528\u7684\uff0c\u5448\u73b0\u591a\u6001\u6027\uff0c\u9700\u8981\u5728\u8fd0\u884c\u65f6\u671f\u95f4\u624d\u80fd\u786e\u5b9a\uff0c\u6240\u4ee5\u4e0d\u80fd\u4e3a\u5185\u8054\u3002 Base * ptr = new Derived (); ptr -> who (); // \u56e0\u4e3aBase\u6709\u865a\u6790\u6784\u51fd\u6570\uff08virtual ~Base() {}\uff09\uff0c\u6240\u4ee5 delete \u65f6\uff0c\u4f1a\u5148\u8c03\u7528\u6d3e\u751f\u7c7b\uff08Derived\uff09\u6790\u6784\u51fd\u6570\uff0c\u518d\u8c03\u7528\u57fa\u7c7b\uff08Base\uff09\u6790\u6784\u51fd\u6570\uff0c\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f\u3002 delete ptr ; ptr = nullptr ; system ( \"pause\" ); return 0 ; }","title":"\u865a\u51fd\u6570\uff08virtual\uff09\u53ef\u4ee5\u662f\u5185\u8054\u51fd\u6570\uff08inline\uff09\u5417\uff1f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#volatile","text":"volatile int i = 10 ; volatile \u5173\u952e\u5b57\u662f\u4e00\u79cd\u7c7b\u578b\u4fee\u9970\u7b26\uff0c\u7528\u5b83\u58f0\u660e\u7684\u7c7b\u578b\u53d8\u91cf\u8868\u793a\u53ef\u4ee5\u88ab\u67d0\u4e9b\u7f16\u8bd1\u5668\u672a\u77e5\u7684\u56e0\u7d20\uff08\u64cd\u4f5c\u7cfb\u7edf\u3001\u786c\u4ef6\u3001\u5176\u5b83\u7ebf\u7a0b\u7b49\uff09\u66f4\u6539\u3002\u6240\u4ee5\u4f7f\u7528 volatile \u544a\u8bc9\u7f16\u8bd1\u5668\u4e0d\u5e94\u5bf9\u8fd9\u6837\u7684\u5bf9\u8c61\u8fdb\u884c\u4f18\u5316\u3002 volatile \u5173\u952e\u5b57\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u6bcf\u6b21\u8bbf\u95ee\u65f6\u90fd\u5fc5\u987b\u4ece\u5185\u5b58\u4e2d\u53d6\u51fa\u503c\uff08\u6ca1\u6709\u88ab volatile \u4fee\u9970\u7684\u53d8\u91cf\uff0c\u53ef\u80fd\u7531\u4e8e\u7f16\u8bd1\u5668\u7684\u4f18\u5316\uff0c\u4ece CPU \u5bc4\u5b58\u5668\u4e2d\u53d6\u503c\uff09 const \u53ef\u4ee5\u662f volatile \uff08\u5982\u53ea\u8bfb\u7684\u72b6\u6001\u5bc4\u5b58\u5668\uff09 \u6307\u9488\u53ef\u4ee5\u662f volatile","title":"volatile"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#assert","text":"\u65ad\u8a00\uff0c\u662f\u5b8f\uff0c\u800c\u975e\u51fd\u6570\u3002assert \u5b8f\u7684\u539f\u578b\u5b9a\u4e49\u5728 <assert.h> \uff08C\uff09\u3001 <cassert> \uff08C++\uff09\u4e2d\uff0c\u5176\u4f5c\u7528\u662f\u5982\u679c\u5b83\u7684\u6761\u4ef6\u8fd4\u56de\u9519\u8bef\uff0c\u5219\u7ec8\u6b62\u7a0b\u5e8f\u6267\u884c\u3002\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49 NDEBUG \u6765\u5173\u95ed assert\uff0c\u4f46\u662f\u9700\u8981\u5728\u6e90\u4ee3\u7801\u7684\u5f00\u5934\uff0c include <assert.h> \u4e4b\u524d\u3002 assert() \u4f7f\u7528 #define NDEBUG // \u52a0\u4e0a\u8fd9\u884c\uff0c\u5219 assert \u4e0d\u53ef\u7528 #include <assert.h> assert ( p != NULL ); // assert \u4e0d\u53ef\u7528","title":"assert()"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#sizeof","text":"sizeof \u5bf9\u6570\u7ec4\uff0c\u5f97\u5230\u6574\u4e2a\u6570\u7ec4\u6240\u5360\u7a7a\u95f4\u5927\u5c0f\u3002 sizeof \u5bf9\u6307\u9488\uff0c\u5f97\u5230\u6307\u9488\u672c\u8eab\u6240\u5360\u7a7a\u95f4\u5927\u5c0f\u3002","title":"sizeof()"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#pragma-packn","text":"\u8bbe\u5b9a\u7ed3\u6784\u4f53\u3001\u8054\u5408\u4ee5\u53ca\u7c7b\u6210\u5458\u53d8\u91cf\u4ee5 n \u5b57\u8282\u65b9\u5f0f\u5bf9\u9f50","title":"#pragma pack(n)"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#pragma-packn-\u4f7f\u7528","text":"#pragma pack(push) // \u4fdd\u5b58\u5bf9\u9f50\u72b6\u6001 #pragma pack(4) // \u8bbe\u5b9a\u4e3a 4 \u5b57\u8282\u5bf9\u9f50 struct test { char m1 ; double m4 ; int m3 ; }; #pragma pack(pop) // \u6062\u590d\u5bf9\u9f50\u72b6\u6001","title":"pragma pack(n) \u4f7f\u7528"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u4f4d\u57df","text":"Bit mode : 2 ; // mode \u5360 2 \u4f4d \u7c7b\u53ef\u4ee5\u5c06\u5176\uff08\u975e\u9759\u6001\uff09\u6570\u636e\u6210\u5458\u5b9a\u4e49\u4e3a\u4f4d\u57df\uff08bit-field\uff09\uff0c\u5728\u4e00\u4e2a\u4f4d\u57df\u4e2d\u542b\u6709\u4e00\u5b9a\u6570\u91cf\u7684\u4e8c\u8fdb\u5236\u4f4d\u3002\u5f53\u4e00\u4e2a\u7a0b\u5e8f\u9700\u8981\u5411\u5176\u4ed6\u7a0b\u5e8f\u6216\u786c\u4ef6\u8bbe\u5907\u4f20\u9012\u4e8c\u8fdb\u5236\u6570\u636e\u65f6\uff0c\u901a\u5e38\u4f1a\u7528\u5230\u4f4d\u57df\u3002 \u4f4d\u57df\u5728\u5185\u5b58\u4e2d\u7684\u5e03\u5c40\u662f\u4e0e\u673a\u5668\u6709\u5173\u7684 \u4f4d\u57df\u7684\u7c7b\u578b\u5fc5\u987b\u662f\u6574\u578b\u6216\u679a\u4e3e\u7c7b\u578b\uff0c\u5e26\u7b26\u53f7\u7c7b\u578b\u4e2d\u7684\u4f4d\u57df\u7684\u884c\u4e3a\u5c06\u56e0\u5177\u4f53\u5b9e\u73b0\u800c\u5b9a \u53d6\u5730\u5740\u8fd0\u7b97\u7b26\uff08&\uff09\u4e0d\u80fd\u4f5c\u7528\u4e8e\u4f4d\u57df\uff0c\u4efb\u4f55\u6307\u9488\u90fd\u65e0\u6cd5\u6307\u5411\u7c7b\u7684\u4f4d\u57df","title":"\u4f4d\u57df"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#extern-c","text":"\u88ab extern \u9650\u5b9a\u7684\u51fd\u6570\u6216\u53d8\u91cf\u662f extern \u7c7b\u578b\u7684 \u88ab extern \"C\" \u4fee\u9970\u7684\u53d8\u91cf\u548c\u51fd\u6570\u662f\u6309\u7167 C \u8bed\u8a00\u65b9\u5f0f\u7f16\u8bd1\u548c\u94fe\u63a5\u7684 extern \"C\" \u7684\u4f5c\u7528\u662f\u8ba9 C++ \u7f16\u8bd1\u5668\u5c06 extern \"C\" \u58f0\u660e\u7684\u4ee3\u7801\u5f53\u4f5c C \u8bed\u8a00\u4ee3\u7801\u5904\u7406\uff0c\u53ef\u4ee5\u907f\u514d C++ \u56e0\u7b26\u53f7\u4fee\u9970\u5bfc\u81f4\u4ee3\u7801\u4e0d\u80fd\u548cC\u8bed\u8a00\u5e93\u4e2d\u7684\u7b26\u53f7\u8fdb\u884c\u94fe\u63a5\u7684\u95ee\u9898\u3002 extern \"C\" \u4f7f\u7528 #ifdef __cplusplus extern \"C\" { #endif void * memset ( void * , int , size_t ); #ifdef __cplusplus } #endif","title":"extern \"C\""},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#struct-\u548c-typedef-struct","text":"","title":"struct \u548c typedef struct"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#c-\u4e2d","text":"// c typedef struct Student { int age ; } S ; \u7b49\u4ef7\u4e8e // c struct Student { int age ; }; typedef struct Student S ; \u6b64\u65f6 S \u7b49\u4ef7\u4e8e struct Student \uff0c\u4f46\u4e24\u4e2a\u6807\u8bc6\u7b26\u540d\u79f0\u7a7a\u95f4\u4e0d\u76f8\u540c\u3002 \u53e6\u5916\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u4e0e struct Student \u4e0d\u51b2\u7a81\u7684 void Student() {} \u3002","title":"C \u4e2d"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#c-\u4e2d_1","text":"\u7531\u4e8e\u7f16\u8bd1\u5668\u5b9a\u4f4d\u7b26\u53f7\u7684\u89c4\u5219\uff08\u641c\u7d22\u89c4\u5219\uff09\u6539\u53d8\uff0c\u5bfc\u81f4\u4e0d\u540c\u4e8eC\u8bed\u8a00\u3002 \u4e00\u3001\u5982\u679c\u5728\u7c7b\u6807\u8bc6\u7b26\u7a7a\u95f4\u5b9a\u4e49\u4e86 struct Student {...}; \uff0c\u4f7f\u7528 Student me; \u65f6\uff0c\u7f16\u8bd1\u5668\u5c06\u641c\u7d22\u5168\u5c40\u6807\u8bc6\u7b26\u8868\uff0c Student \u672a\u627e\u5230\uff0c\u5219\u5728\u7c7b\u6807\u8bc6\u7b26\u5185\u641c\u7d22\u3002 \u5373\u8868\u73b0\u4e3a\u53ef\u4ee5\u4f7f\u7528 Student \u4e5f\u53ef\u4ee5\u4f7f\u7528 struct Student \uff0c\u5982\u4e0b\uff1a // cpp struct Student { int age ; }; void f ( Student me ); // \u6b63\u786e\uff0c\"struct\" \u5173\u952e\u5b57\u53ef\u7701\u7565 \u4e8c\u3001\u82e5\u5b9a\u4e49\u4e86\u4e0e Student \u540c\u540d\u51fd\u6570\u4e4b\u540e\uff0c\u5219 Student \u53ea\u4ee3\u8868\u51fd\u6570\uff0c\u4e0d\u4ee3\u8868\u7ed3\u6784\u4f53\uff0c\u5982\u4e0b\uff1a typedef struct Student { int age ; } S ; void Student () {} // \u6b63\u786e\uff0c\u5b9a\u4e49\u540e \"Student\" \u53ea\u4ee3\u8868\u6b64\u51fd\u6570 //void S() {} // \u9519\u8bef\uff0c\u7b26\u53f7 \"S\" \u5df2\u7ecf\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a \"struct Student\" \u7684\u522b\u540d int main () { Student (); struct Student me ; // \u6216\u8005 \"S me\"; return 0 ; }","title":"C++ \u4e2d"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#c-\u4e2d-struct-\u548c-class","text":"\u603b\u7684\u6765\u8bf4\uff0cstruct \u66f4\u9002\u5408\u770b\u6210\u662f\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u5b9e\u73b0\u4f53\uff0cclass \u66f4\u9002\u5408\u770b\u6210\u662f\u4e00\u4e2a\u5bf9\u8c61\u7684\u5b9e\u73b0\u4f53\u3002","title":"C++ \u4e2d struct \u548c class"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u533a\u522b","text":"\u6700\u672c\u8d28\u7684\u4e00\u4e2a\u533a\u522b\u5c31\u662f\u9ed8\u8ba4\u7684\u8bbf\u95ee\u63a7\u5236 \u9ed8\u8ba4\u7684\u7ee7\u627f\u8bbf\u95ee\u6743\u9650\u3002struct \u662f public \u7684\uff0cclass \u662f private \u7684\u3002 struct \u4f5c\u4e3a\u6570\u636e\u7ed3\u6784\u7684\u5b9e\u73b0\u4f53\uff0c\u5b83\u9ed8\u8ba4\u7684\u6570\u636e\u8bbf\u95ee\u63a7\u5236\u662f public \u7684\uff0c\u800c class \u4f5c\u4e3a\u5bf9\u8c61\u7684\u5b9e\u73b0\u4f53\uff0c\u5b83\u9ed8\u8ba4\u7684\u6210\u5458\u53d8\u91cf\u8bbf\u95ee\u63a7\u5236\u662f private \u7684\u3002","title":"\u533a\u522b"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#union-\u8054\u5408","text":"\u8054\u5408\uff08union\uff09\u662f\u4e00\u79cd\u8282\u7701\u7a7a\u95f4\u7684\u7279\u6b8a\u7684\u7c7b\uff0c\u4e00\u4e2a union \u53ef\u4ee5\u6709\u591a\u4e2a\u6570\u636e\u6210\u5458\uff0c\u4f46\u662f\u5728\u4efb\u610f\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u6570\u636e\u6210\u5458\u53ef\u4ee5\u6709\u503c\u3002\u5f53\u67d0\u4e2a\u6210\u5458\u88ab\u8d4b\u503c\u540e\u5176\u4ed6\u6210\u5458\u53d8\u4e3a\u672a\u5b9a\u4e49\u72b6\u6001\u3002\u8054\u5408\u6709\u5982\u4e0b\u7279\u70b9\uff1a \u9ed8\u8ba4\u8bbf\u95ee\u63a7\u5236\u7b26\u4e3a public \u53ef\u4ee5\u542b\u6709\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570 \u4e0d\u80fd\u542b\u6709\u5f15\u7528\u7c7b\u578b\u7684\u6210\u5458 \u4e0d\u80fd\u7ee7\u627f\u81ea\u5176\u4ed6\u7c7b\uff0c\u4e0d\u80fd\u4f5c\u4e3a\u57fa\u7c7b \u4e0d\u80fd\u542b\u6709\u865a\u51fd\u6570 \u533f\u540d union \u5728\u5b9a\u4e49\u6240\u5728\u4f5c\u7528\u57df\u53ef\u76f4\u63a5\u8bbf\u95ee union \u6210\u5458 \u533f\u540d union \u4e0d\u80fd\u5305\u542b protected \u6210\u5458\u6216 private \u6210\u5458 \u5168\u5c40\u533f\u540d\u8054\u5408\u5fc5\u987b\u662f\u9759\u6001\uff08static\uff09\u7684 union \u4f7f\u7528 #include <iostream> union UnionTest { UnionTest () : i ( 10 ) {}; int i ; double d ; }; static union { int i ; double d ; }; int main () { UnionTest u ; union { int i ; double d ; }; std :: cout << u . i << std :: endl ; // \u8f93\u51fa UnionTest \u8054\u5408\u7684 10 :: i = 20 ; std :: cout << :: i << std :: endl ; // \u8f93\u51fa\u5168\u5c40\u9759\u6001\u533f\u540d\u8054\u5408\u7684 20 i = 30 ; std :: cout << i << std :: endl ; // \u8f93\u51fa\u5c40\u90e8\u533f\u540d\u8054\u5408\u7684 30 return 0 ; }","title":"union \u8054\u5408"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#c-\u5b9e\u73b0-c-\u7c7b","text":"C \u5b9e\u73b0 C++ \u7684\u9762\u5411\u5bf9\u8c61\u7279\u6027\uff08\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001\uff09 \u5c01\u88c5\uff1a\u4f7f\u7528\u51fd\u6570\u6307\u9488\u628a\u5c5e\u6027\u4e0e\u65b9\u6cd5\u5c01\u88c5\u5230\u7ed3\u6784\u4f53\u4e2d \u7ee7\u627f\uff1a\u7ed3\u6784\u4f53\u5d4c\u5957 \u591a\u6001\uff1a\u7236\u7c7b\u4e0e\u5b50\u7c7b\u65b9\u6cd5\u7684\u51fd\u6570\u6307\u9488\u4e0d\u540c Can you write object-oriented code in C? [closed]","title":"C \u5b9e\u73b0 C++ \u7c7b"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#explicit\u663e\u5f0f\u5173\u952e\u5b57","text":"explicit \u4fee\u9970\u6784\u9020\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u9632\u6b62\u9690\u5f0f\u8f6c\u6362\u548c\u590d\u5236\u521d\u59cb\u5316 explicit \u4fee\u9970\u8f6c\u6362\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u9632\u6b62\u9690\u5f0f\u8f6c\u6362\uff0c\u4f46 \u6309\u8bed\u5883\u8f6c\u6362 \u9664\u5916 explicit \u4f7f\u7528 struct A { A ( int ) { } operator bool () const { return true ; } }; struct B { explicit B ( int ) {} explicit operator bool () const { return true ; } }; void doA ( A a ) {} void doB ( B b ) {} int main () { A a1 ( 1 ); // OK\uff1a\u76f4\u63a5\u521d\u59cb\u5316 A a2 = 1 ; // OK\uff1a\u590d\u5236\u521d\u59cb\u5316 A a3 { 1 }; // OK\uff1a\u76f4\u63a5\u5217\u8868\u521d\u59cb\u5316 A a4 = { 1 }; // OK\uff1a\u590d\u5236\u5217\u8868\u521d\u59cb\u5316 A a5 = ( A ) 1 ; // OK\uff1a\u5141\u8bb8 static_cast \u7684\u663e\u5f0f\u8f6c\u6362 doA ( 1 ); // OK\uff1a\u5141\u8bb8\u4ece int \u5230 A \u7684\u9690\u5f0f\u8f6c\u6362 if ( a1 ); // OK\uff1a\u4f7f\u7528\u8f6c\u6362\u51fd\u6570 A::operator bool() \u7684\u4ece A \u5230 bool \u7684\u9690\u5f0f\u8f6c\u6362 bool a6 ( a1 ); // OK\uff1a\u4f7f\u7528\u8f6c\u6362\u51fd\u6570 A::operator bool() \u7684\u4ece A \u5230 bool \u7684\u9690\u5f0f\u8f6c\u6362 bool a7 = a1 ; // OK\uff1a\u4f7f\u7528\u8f6c\u6362\u51fd\u6570 A::operator bool() \u7684\u4ece A \u5230 bool \u7684\u9690\u5f0f\u8f6c\u6362 bool a8 = static_cast < bool > ( a1 ); // OK \uff1astatic_cast \u8fdb\u884c\u76f4\u63a5\u521d\u59cb\u5316 B b1 ( 1 ); // OK\uff1a\u76f4\u63a5\u521d\u59cb\u5316 B b2 = 1 ; // \u9519\u8bef\uff1a\u88ab explicit \u4fee\u9970\u6784\u9020\u51fd\u6570\u7684\u5bf9\u8c61\u4e0d\u53ef\u4ee5\u590d\u5236\u521d\u59cb\u5316 B b3 { 1 }; // OK\uff1a\u76f4\u63a5\u5217\u8868\u521d\u59cb\u5316 B b4 = { 1 }; // \u9519\u8bef\uff1a\u88ab explicit \u4fee\u9970\u6784\u9020\u51fd\u6570\u7684\u5bf9\u8c61\u4e0d\u53ef\u4ee5\u590d\u5236\u5217\u8868\u521d\u59cb\u5316 B b5 = ( B ) 1 ; // OK\uff1a\u5141\u8bb8 static_cast \u7684\u663e\u5f0f\u8f6c\u6362 doB ( 1 ); // \u9519\u8bef\uff1a\u88ab explicit \u4fee\u9970\u6784\u9020\u51fd\u6570\u7684\u5bf9\u8c61\u4e0d\u53ef\u4ee5\u4ece int \u5230 B \u7684\u9690\u5f0f\u8f6c\u6362 if ( b1 ); // OK\uff1a\u88ab explicit \u4fee\u9970\u8f6c\u6362\u51fd\u6570 B::operator bool() \u7684\u5bf9\u8c61\u53ef\u4ee5\u4ece B \u5230 bool \u7684\u6309\u8bed\u5883\u8f6c\u6362 bool b6 ( b1 ); // OK\uff1a\u88ab explicit \u4fee\u9970\u8f6c\u6362\u51fd\u6570 B::operator bool() \u7684\u5bf9\u8c61\u53ef\u4ee5\u4ece B \u5230 bool \u7684\u6309\u8bed\u5883\u8f6c\u6362 bool b7 = b1 ; // \u9519\u8bef\uff1a\u88ab explicit \u4fee\u9970\u8f6c\u6362\u51fd\u6570 B::operator bool() \u7684\u5bf9\u8c61\u4e0d\u53ef\u4ee5\u9690\u5f0f\u8f6c\u6362 bool b8 = static_cast < bool > ( b1 ); // OK\uff1astatic_cast \u8fdb\u884c\u76f4\u63a5\u521d\u59cb\u5316 return 0 ; }","title":"explicit\uff08\u663e\u5f0f\uff09\u5173\u952e\u5b57"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#friend-\u53cb\u5143\u7c7b\u548c\u53cb\u5143\u51fd\u6570","text":"\u80fd\u8bbf\u95ee\u79c1\u6709\u6210\u5458 \u7834\u574f\u5c01\u88c5\u6027 \u53cb\u5143\u5173\u7cfb\u4e0d\u53ef\u4f20\u9012 \u53cb\u5143\u5173\u7cfb\u7684\u5355\u5411\u6027 \u53cb\u5143\u58f0\u660e\u7684\u5f62\u5f0f\u53ca\u6570\u91cf\u4e0d\u53d7\u9650\u5236","title":"friend \u53cb\u5143\u7c7b\u548c\u53cb\u5143\u51fd\u6570"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#using","text":"","title":"using"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#using-\u58f0\u660e","text":"\u4e00\u6761 using \u58f0\u660e \u8bed\u53e5\u4e00\u6b21\u53ea\u5f15\u5165\u547d\u540d\u7a7a\u95f4\u7684\u4e00\u4e2a\u6210\u5458\u3002\u5b83\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u6e05\u695a\u77e5\u9053\u7a0b\u5e8f\u4e2d\u6240\u5f15\u7528\u7684\u5230\u5e95\u662f\u54ea\u4e2a\u540d\u5b57\u3002\u5982\uff1a using namespace_name :: name ;","title":"using \u58f0\u660e"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6784\u9020\u51fd\u6570\u7684-using-\u58f0\u660e","text":"\u5728 C++11 \u4e2d\uff0c\u6d3e\u751f\u7c7b\u80fd\u591f\u91cd\u7528\u5176\u76f4\u63a5\u57fa\u7c7b\u5b9a\u4e49\u7684\u6784\u9020\u51fd\u6570\u3002 class Derived : Base { public : using Base :: Base ; /* ... */ }; \u5982\u4e0a using \u58f0\u660e\uff0c\u5bf9\u4e8e\u57fa\u7c7b\u7684\u6bcf\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u90fd\u751f\u6210\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94\uff08\u5f62\u53c2\u5217\u8868\u5b8c\u5168\u76f8\u540c\uff09\u7684\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u3002\u751f\u6210\u5982\u4e0b\u7c7b\u578b\u6784\u9020\u51fd\u6570\uff1a Derived ( parms ) : Base ( args ) { }","title":"\u6784\u9020\u51fd\u6570\u7684 using \u58f0\u660e"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#using-\u6307\u793a","text":"using \u6307\u793a \u4f7f\u5f97\u67d0\u4e2a\u7279\u5b9a\u547d\u540d\u7a7a\u95f4\u4e2d\u6240\u6709\u540d\u5b57\u90fd\u53ef\u89c1\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u65e0\u9700\u518d\u4e3a\u5b83\u4eec\u6dfb\u52a0\u4efb\u4f55\u524d\u7f00\u9650\u5b9a\u7b26\u4e86\u3002\u5982\uff1a using namespace_name name ;","title":"using \u6307\u793a"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5c3d\u91cf\u5c11\u4f7f\u7528-using-\u6307\u793a-\u6c61\u67d3\u547d\u540d\u7a7a\u95f4","text":"\u4e00\u822c\u8bf4\u6765\uff0c\u4f7f\u7528 using \u547d\u4ee4\u6bd4\u4f7f\u7528 using \u7f16\u8bd1\u547d\u4ee4\u66f4\u5b89\u5168\uff0c\u8fd9\u662f\u7531\u4e8e\u5b83**\u53ea\u5bfc\u5165\u4e86\u6307\u5b9a\u7684\u540d\u79f0**\u3002\u5982\u679c\u8be5\u540d\u79f0\u4e0e\u5c40\u90e8\u540d\u79f0\u53d1\u751f\u51b2\u7a81\uff0c\u7f16\u8bd1\u5668\u5c06**\u53d1\u51fa\u6307\u793a**\u3002using\u7f16\u8bd1\u547d\u4ee4\u5bfc\u5165\u6240\u6709\u7684\u540d\u79f0\uff0c\u5305\u62ec\u53ef\u80fd\u5e76\u4e0d\u9700\u8981\u7684\u540d\u79f0\u3002\u5982\u679c\u4e0e\u5c40\u90e8\u540d\u79f0\u53d1\u751f\u51b2\u7a81\uff0c\u5219**\u5c40\u90e8\u540d\u79f0\u5c06\u8986\u76d6\u540d\u79f0\u7a7a\u95f4\u7248\u672c**\uff0c\u800c\u7f16\u8bd1\u5668**\u5e76\u4e0d\u4f1a\u53d1\u51fa\u8b66\u544a**\u3002\u53e6\u5916\uff0c\u540d\u79f0\u7a7a\u95f4\u7684\u5f00\u653e\u6027\u610f\u5473\u7740\u540d\u79f0\u7a7a\u95f4\u7684\u540d\u79f0\u53ef\u80fd\u5206\u6563\u5728\u591a\u4e2a\u5730\u65b9\uff0c\u8fd9\u4f7f\u5f97\u96be\u4ee5\u51c6\u786e\u77e5\u9053\u6dfb\u52a0\u4e86\u54ea\u4e9b\u540d\u79f0\u3002 using \u4f7f\u7528 \u5c3d\u91cf\u5c11\u4f7f\u7528 using \u6307\u793a using namespace std ; \u5e94\u8be5\u591a\u4f7f\u7528 using \u58f0\u660e int x ; std :: cin >> x ; std :: cout << x << std :: endl ; \u6216\u8005 using std :: cin ; using std :: cout ; using std :: endl ; int x ; cin >> x ; cout << x << endl ;","title":"\u5c3d\u91cf\u5c11\u4f7f\u7528 using \u6307\u793a \u6c61\u67d3\u547d\u540d\u7a7a\u95f4"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-\u8303\u56f4\u89e3\u6790\u8fd0\u7b97\u7b26","text":"","title":":: \u8303\u56f4\u89e3\u6790\u8fd0\u7b97\u7b26"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5206\u7c7b","text":"\u5168\u5c40\u4f5c\u7528\u57df\u7b26\uff08 ::name \uff09\uff1a\u7528\u4e8e\u7c7b\u578b\u540d\u79f0\uff08\u7c7b\u3001\u7c7b\u6210\u5458\u3001\u6210\u5458\u51fd\u6570\u3001\u53d8\u91cf\u7b49\uff09\u524d\uff0c\u8868\u793a\u4f5c\u7528\u57df\u4e3a\u5168\u5c40\u547d\u540d\u7a7a\u95f4 \u7c7b\u4f5c\u7528\u57df\u7b26\uff08 class::name \uff09\uff1a\u7528\u4e8e\u8868\u793a\u6307\u5b9a\u7c7b\u578b\u7684\u4f5c\u7528\u57df\u8303\u56f4\u662f\u5177\u4f53\u67d0\u4e2a\u7c7b\u7684 \u547d\u540d\u7a7a\u95f4\u4f5c\u7528\u57df\u7b26\uff08 namespace::name \uff09:\u7528\u4e8e\u8868\u793a\u6307\u5b9a\u7c7b\u578b\u7684\u4f5c\u7528\u57df\u8303\u56f4\u662f\u5177\u4f53\u67d0\u4e2a\u547d\u540d\u7a7a\u95f4\u7684 :: \u4f7f\u7528 int count = 11 ; // \u5168\u5c40\uff08::\uff09\u7684 count class A { public : static int count ; // \u7c7b A \u7684 count\uff08A::count\uff09 }; int A :: count = 21 ; void fun () { int count = 31 ; // \u521d\u59cb\u5316\u5c40\u90e8\u7684 count \u4e3a 31 count = 32 ; // \u8bbe\u7f6e\u5c40\u90e8\u7684 count \u7684\u503c\u4e3a 32 } int main () { :: count = 12 ; // \u6d4b\u8bd5 1\uff1a\u8bbe\u7f6e\u5168\u5c40\u7684 count \u7684\u503c\u4e3a 12 A :: count = 22 ; // \u6d4b\u8bd5 2\uff1a\u8bbe\u7f6e\u7c7b A \u7684 count \u4e3a 22 fun (); // \u6d4b\u8bd5 3 return 0 ; }","title":"\u5206\u7c7b"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#enum-\u679a\u4e3e\u7c7b\u578b","text":"","title":"enum \u679a\u4e3e\u7c7b\u578b"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u9650\u5b9a\u4f5c\u7528\u57df\u7684\u679a\u4e3e\u7c7b\u578b","text":"enum class open_modes { input , output , append };","title":"\u9650\u5b9a\u4f5c\u7528\u57df\u7684\u679a\u4e3e\u7c7b\u578b"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u4e0d\u9650\u5b9a\u4f5c\u7528\u57df\u7684\u679a\u4e3e\u7c7b\u578b","text":"enum color { red , yellow , green }; enum { floatPrec = 6 , doublePrec = 10 };","title":"\u4e0d\u9650\u5b9a\u4f5c\u7528\u57df\u7684\u679a\u4e3e\u7c7b\u578b"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#decltype","text":"decltype \u5173\u952e\u5b57\u7528\u4e8e\u68c0\u67e5\u5b9e\u4f53\u7684\u58f0\u660e\u7c7b\u578b\u6216\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u53ca\u503c\u5206\u7c7b\u3002\u8bed\u6cd5\uff1a decltype ( expression ) decltype \u4f7f\u7528 // \u5c3e\u7f6e\u8fd4\u56de\u5141\u8bb8\u6211\u4eec\u5728\u53c2\u6570\u5217\u8868\u4e4b\u540e\u58f0\u660e\u8fd4\u56de\u7c7b\u578b template < typename It > auto fcn ( It beg , It end ) -> decltype ( * beg ) { // \u5904\u7406\u5e8f\u5217 return * beg ; // \u8fd4\u56de\u5e8f\u5217\u4e2d\u4e00\u4e2a\u5143\u7d20\u7684\u5f15\u7528 } // \u4e3a\u4e86\u4f7f\u7528\u6a21\u677f\u53c2\u6570\u6210\u5458\uff0c\u5fc5\u987b\u7528 typename template < typename It > auto fcn2 ( It beg , It end ) -> typename remove_reference < decltype ( * beg ) >:: type { // \u5904\u7406\u5e8f\u5217 return * beg ; // \u8fd4\u56de\u5e8f\u5217\u4e2d\u4e00\u4e2a\u5143\u7d20\u7684\u62f7\u8d1d }","title":"decltype"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5f15\u7528","text":"","title":"\u5f15\u7528"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5de6\u503c\u5f15\u7528","text":"\u5e38\u89c4\u5f15\u7528\uff0c\u4e00\u822c\u8868\u793a\u5bf9\u8c61\u7684\u8eab\u4efd\u3002","title":"\u5de6\u503c\u5f15\u7528"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u53f3\u503c\u5f15\u7528","text":"\u53f3\u503c\u5f15\u7528\u5c31\u662f\u5fc5\u987b\u7ed1\u5b9a\u5230\u53f3\u503c\uff08\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\u3001\u5c06\u8981\u9500\u6bc1\u7684\u5bf9\u8c61\uff09\u7684\u5f15\u7528\uff0c\u4e00\u822c\u8868\u793a\u5bf9\u8c61\u7684\u503c\u3002 \u53f3\u503c\u5f15\u7528\u53ef\u5b9e\u73b0\u8f6c\u79fb\u8bed\u4e49\uff08Move Sementics\uff09\u548c\u7cbe\u786e\u4f20\u9012\uff08Perfect Forwarding\uff09\uff0c\u5b83\u7684\u4e3b\u8981\u76ee\u7684\u6709\u4e24\u4e2a\u65b9\u9762\uff1a \u6d88\u9664\u4e24\u4e2a\u5bf9\u8c61\u4ea4\u4e92\u65f6\u4e0d\u5fc5\u8981\u7684\u5bf9\u8c61\u62f7\u8d1d\uff0c\u8282\u7701\u8fd0\u7b97\u5b58\u50a8\u8d44\u6e90\uff0c\u63d0\u9ad8\u6548\u7387\u3002 \u80fd\u591f\u66f4\u7b80\u6d01\u660e\u786e\u5730\u5b9a\u4e49\u6cdb\u578b\u51fd\u6570\u3002","title":"\u53f3\u503c\u5f15\u7528"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5f15\u7528\u6298\u53e0","text":"X& & \u3001 X& && \u3001 X&& & \u53ef\u6298\u53e0\u6210 X& X&& && \u53ef\u6298\u53e0\u6210 X&&","title":"\u5f15\u7528\u6298\u53e0"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5b8f","text":"\u5b8f\u5b9a\u4e49\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u4e8e\u51fd\u6570\u7684\u529f\u80fd\uff0c\u4f46\u662f\u5b83\u7ec8\u5f52\u4e0d\u662f\u51fd\u6570\uff0c\u800c\u5b8f\u5b9a\u4e49\u4e2d\u62ec\u5f27\u4e2d\u7684\u201c\u53c2\u6570\u201d\u4e5f\u4e0d\u662f\u771f\u7684\u53c2\u6570\uff0c\u5728\u5b8f\u5c55\u5f00\u7684\u65f6\u5019\u5bf9 \u201c\u53c2\u6570\u201d \u8fdb\u884c\u7684\u662f\u4e00\u5bf9\u4e00\u7684\u66ff\u6362\u3002","title":"\u5b8f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6210\u5458\u521d\u59cb\u5316\u5217\u8868","text":"\u597d\u5904 \u66f4\u9ad8\u6548\uff1a\u5c11\u4e86\u4e00\u6b21\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u7684\u8fc7\u7a0b\u3002 \u6709\u4e9b\u573a\u5408\u5fc5\u987b\u8981\u7528\u521d\u59cb\u5316\u5217\u8868\uff1a \u5e38\u91cf\u6210\u5458\uff0c\u56e0\u4e3a\u5e38\u91cf\u53ea\u80fd\u521d\u59cb\u5316\u4e0d\u80fd\u8d4b\u503c\uff0c\u6240\u4ee5\u5fc5\u987b\u653e\u5728\u521d\u59cb\u5316\u5217\u8868\u91cc\u9762 \u5f15\u7528\u7c7b\u578b\uff0c\u5f15\u7528\u5fc5\u987b\u5728\u5b9a\u4e49\u7684\u65f6\u5019\u521d\u59cb\u5316\uff0c\u5e76\u4e14\u4e0d\u80fd\u91cd\u65b0\u8d4b\u503c\uff0c\u6240\u4ee5\u4e5f\u8981\u5199\u5728\u521d\u59cb\u5316\u5217\u8868\u91cc\u9762 \u6ca1\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u7684\u7c7b\u7c7b\u578b\uff0c\u56e0\u4e3a\u4f7f\u7528\u521d\u59cb\u5316\u5217\u8868\u53ef\u4ee5\u4e0d\u5fc5\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u6765\u521d\u59cb\u5316","title":"\u6210\u5458\u521d\u59cb\u5316\u5217\u8868"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#initializer_list-\u5217\u8868\u521d\u59cb\u5316","text":"\u7528\u82b1\u62ec\u53f7\u521d\u59cb\u5316\u5668\u5217\u8868\u521d\u59cb\u5316\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5176\u4e2d\u5bf9\u5e94\u6784\u9020\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a std::initializer_list \u53c2\u6570. initializer_list \u4f7f\u7528 #include <iostream> #include <vector> #include <initializer_list> template < class T > struct S { std :: vector < T > v ; S ( std :: initializer_list < T > l ) : v ( l ) { std :: cout << \"constructed with a \" << l . size () << \"-element list \\n \" ; } void append ( std :: initializer_list < T > l ) { v . insert ( v . end (), l . begin (), l . end ()); } std :: pair < const T * , std :: size_t > c_arr () const { return { & v [ 0 ], v . size ()}; // \u5728 return \u8bed\u53e5\u4e2d\u590d\u5236\u5217\u8868\u521d\u59cb\u5316 // \u8fd9\u4e0d\u4f7f\u7528 std::initializer_list } }; template < typename T > void templated_fn ( T ) {} int main () { S < int > s = { 1 , 2 , 3 , 4 , 5 }; // \u590d\u5236\u521d\u59cb\u5316 s . append ({ 6 , 7 , 8 }); // \u51fd\u6570\u8c03\u7528\u4e2d\u7684\u5217\u8868\u521d\u59cb\u5316 std :: cout << \"The vector size is now \" << s . c_arr (). second << \" ints: \\n \" ; for ( auto n : s . v ) std :: cout << n << ' ' ; std :: cout << '\\n' ; std :: cout << \"Range-for over brace-init-list: \\n \" ; for ( int x : { -1 , -2 , -3 }) // auto \u7684\u89c4\u5219\u4ee4\u6b64\u5e26\u8303\u56f4 for \u5de5\u4f5c std :: cout << x << ' ' ; std :: cout << '\\n' ; auto al = { 10 , 11 , 12 }; // auto \u7684\u7279\u6b8a\u89c4\u5219 std :: cout << \"The list bound to auto has size() = \" << al . size () << '\\n' ; // templated_fn({1, 2, 3}); // \u7f16\u8bd1\u9519\u8bef\uff01\u201c {1, 2, 3} \u201d\u4e0d\u662f\u8868\u8fbe\u5f0f\uff0c // \u5b83\u65e0\u7c7b\u578b\uff0c\u6545 T \u65e0\u6cd5\u63a8\u5bfc templated_fn < std :: initializer_list < int >> ({ 1 , 2 , 3 }); // OK templated_fn < std :: vector < int >> ({ 1 , 2 , 3 }); // \u4e5f OK }","title":"initializer_list \u5217\u8868\u521d\u59cb\u5316"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u9762\u5411\u5bf9\u8c61","text":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\uff08Object-oriented programming\uff0cOOP\uff09\u662f\u79cd\u5177\u6709\u5bf9\u8c61\u6982\u5ff5\u7684\u7a0b\u5e8f\u7f16\u7a0b\u5178\u8303\uff0c\u540c\u65f6\u4e5f\u662f\u4e00\u79cd\u7a0b\u5e8f\u5f00\u53d1\u7684\u62bd\u8c61\u65b9\u9488\u3002 \u9762\u5411\u5bf9\u8c61\u4e09\u5927\u7279\u5f81 \u2014\u2014 \u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001","title":"\u9762\u5411\u5bf9\u8c61"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5c01\u88c5","text":"\u628a\u5ba2\u89c2\u4e8b\u7269\u5c01\u88c5\u6210\u62bd\u8c61\u7684\u7c7b\uff0c\u5e76\u4e14\u7c7b\u53ef\u4ee5\u628a\u81ea\u5df1\u7684\u6570\u636e\u548c\u65b9\u6cd5\u53ea\u8ba9\u53ef\u4fe1\u7684\u7c7b\u6216\u8005\u5bf9\u8c61\u64cd\u4f5c\uff0c\u5bf9\u4e0d\u53ef\u4fe1\u7684\u8fdb\u884c\u4fe1\u606f\u9690\u85cf\u3002\u5173\u952e\u5b57\uff1apublic, protected, private\u3002\u4e0d\u5199\u9ed8\u8ba4\u4e3a private\u3002 public \u6210\u5458\uff1a\u53ef\u4ee5\u88ab\u4efb\u610f\u5b9e\u4f53\u8bbf\u95ee protected \u6210\u5458\uff1a\u53ea\u5141\u8bb8\u88ab\u5b50\u7c7b\u53ca\u672c\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee private \u6210\u5458\uff1a\u53ea\u5141\u8bb8\u88ab\u672c\u7c7b\u7684\u6210\u5458\u51fd\u6570\u3001\u53cb\u5143\u7c7b\u6216\u53cb\u5143\u51fd\u6570\u8bbf\u95ee","title":"\u5c01\u88c5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7ee7\u627f","text":"\u57fa\u7c7b\uff08\u7236\u7c7b\uff09\u2014\u2014> \u6d3e\u751f\u7c7b\uff08\u5b50\u7c7b\uff09","title":"\u7ee7\u627f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u591a\u6001","text":"\u591a\u6001\uff0c\u5373\u591a\u79cd\u72b6\u6001\uff08\u5f62\u6001\uff09\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u591a\u6001\u5b9a\u4e49\u4e3a\u6d88\u606f\u4ee5\u591a\u79cd\u5f62\u5f0f\u663e\u793a\u7684\u80fd\u529b\u3002 \u591a\u6001\u662f\u4ee5\u5c01\u88c5\u548c\u7ee7\u627f\u4e3a\u57fa\u7840\u7684\u3002 C++ \u591a\u6001\u5206\u7c7b\u53ca\u5b9e\u73b0\uff1a \u91cd\u8f7d\u591a\u6001\uff08Ad-hoc Polymorphism\uff0c\u7f16\u8bd1\u671f\uff09\uff1a\u51fd\u6570\u91cd\u8f7d\u3001\u8fd0\u7b97\u7b26\u91cd\u8f7d \u5b50\u7c7b\u578b\u591a\u6001\uff08Subtype Polymorphism\uff0c\u8fd0\u884c\u671f\uff09\uff1a\u865a\u51fd\u6570 \u53c2\u6570\u591a\u6001\u6027\uff08Parametric Polymorphism\uff0c\u7f16\u8bd1\u671f\uff09\uff1a\u7c7b\u6a21\u677f\u3001\u51fd\u6570\u6a21\u677f \u5f3a\u5236\u591a\u6001\uff08Coercion Polymorphism\uff0c\u7f16\u8bd1\u671f/\u8fd0\u884c\u671f\uff09\uff1a\u57fa\u672c\u7c7b\u578b\u8f6c\u6362\u3001\u81ea\u5b9a\u4e49\u7c7b\u578b\u8f6c\u6362 The Four Polymorphisms in C++","title":"\u591a\u6001"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u9759\u6001\u591a\u6001\u7f16\u8bd1\u671f\u65e9\u7ed1\u5b9a","text":"\u51fd\u6570\u91cd\u8f7d class A { public : void do ( int a ); void do ( int a , int b ); };","title":"\u9759\u6001\u591a\u6001\uff08\u7f16\u8bd1\u671f/\u65e9\u7ed1\u5b9a\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u52a8\u6001\u591a\u6001\u8fd0\u884c\u671f\u671f\u665a\u7ed1\u5b9a","text":"\u865a\u51fd\u6570\uff1a\u7528 virtual \u4fee\u9970\u6210\u5458\u51fd\u6570\uff0c\u4f7f\u5176\u6210\u4e3a\u865a\u51fd\u6570 \u52a8\u6001\u7ed1\u5b9a\uff1a\u5f53\u4f7f\u7528\u57fa\u7c7b\u7684\u5f15\u7528\u6216\u6307\u9488\u8c03\u7528\u4e00\u4e2a\u865a\u51fd\u6570\u65f6\u5c06\u53d1\u751f\u52a8\u6001\u7ed1\u5b9a \u6ce8\u610f\uff1a \u53ef\u4ee5\u5c06\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u8d4b\u503c\u7ed9\u57fa\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\uff0c\u53cd\u4e4b\u4e0d\u53ef \u666e\u901a\u51fd\u6570\uff08\u975e\u7c7b\u6210\u5458\u51fd\u6570\uff09\u4e0d\u80fd\u662f\u865a\u51fd\u6570 \u9759\u6001\u51fd\u6570\uff08static\uff09\u4e0d\u80fd\u662f\u865a\u51fd\u6570 \u6784\u9020\u51fd\u6570\u4e0d\u80fd\u662f\u865a\u51fd\u6570\uff08\u56e0\u4e3a\u5728\u8c03\u7528\u6784\u9020\u51fd\u6570\u65f6\uff0c\u865a\u8868\u6307\u9488\u5e76\u6ca1\u6709\u5728\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\uff0c\u5fc5\u987b\u8981\u6784\u9020\u51fd\u6570\u8c03\u7528\u5b8c\u6210\u540e\u624d\u4f1a\u5f62\u6210\u865a\u8868\u6307\u9488\uff09 \u5185\u8054\u51fd\u6570\u4e0d\u80fd\u662f\u8868\u73b0\u591a\u6001\u6027\u65f6\u7684\u865a\u51fd\u6570\uff0c\u89e3\u91ca\u89c1\uff1a \u865a\u51fd\u6570\uff08virtual\uff09\u53ef\u4ee5\u662f\u5185\u8054\u51fd\u6570\uff08inline\uff09\u5417\uff1f \u52a8\u6001\u591a\u6001\u4f7f\u7528 class Shape // \u5f62\u72b6\u7c7b { public : virtual double calcArea () { ... } virtual ~ Shape (); }; class Circle : public Shape // \u5706\u5f62\u7c7b { public : virtual double calcArea (); ... }; class Rect : public Shape // \u77e9\u5f62\u7c7b { public : virtual double calcArea (); ... }; int main () { Shape * shape1 = new Circle ( 4.0 ); Shape * shape2 = new Rect ( 5.0 , 6.0 ); shape1 -> calcArea (); // \u8c03\u7528\u5706\u5f62\u7c7b\u91cc\u9762\u7684\u65b9\u6cd5 shape2 -> calcArea (); // \u8c03\u7528\u77e9\u5f62\u7c7b\u91cc\u9762\u7684\u65b9\u6cd5 delete shape1 ; shape1 = nullptr ; delete shape2 ; shape2 = nullptr ; return 0 ; }","title":"\u52a8\u6001\u591a\u6001\uff08\u8fd0\u884c\u671f\u671f/\u665a\u7ed1\u5b9a\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u865a\u6790\u6784\u51fd\u6570","text":"\u865a\u6790\u6784\u51fd\u6570\u662f\u4e3a\u4e86\u89e3\u51b3\u57fa\u7c7b\u7684\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u5e76\u7528\u57fa\u7c7b\u7684\u6307\u9488\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u3002 \u865a\u6790\u6784\u51fd\u6570\u4f7f\u7528 class Shape { public : Shape (); // \u6784\u9020\u51fd\u6570\u4e0d\u80fd\u662f\u865a\u51fd\u6570 virtual double calcArea (); virtual ~ Shape (); // \u865a\u6790\u6784\u51fd\u6570 }; class Circle : public Shape // \u5706\u5f62\u7c7b { public : virtual double calcArea (); ... }; int main () { Shape * shape1 = new Circle ( 4.0 ); shape1 -> calcArea (); delete shape1 ; // \u56e0\u4e3aShape\u6709\u865a\u6790\u6784\u51fd\u6570\uff0c\u6240\u4ee5delete\u91ca\u653e\u5185\u5b58\u65f6\uff0c\u5148\u8c03\u7528\u5b50\u7c7b\u6790\u6784\u51fd\u6570\uff0c\u518d\u8c03\u7528\u57fa\u7c7b\u6790\u6784\u51fd\u6570\uff0c\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f\u3002 shape1 = NULL ; return 0 \uff1b }","title":"\u865a\u6790\u6784\u51fd\u6570"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7eaf\u865a\u51fd\u6570","text":"\u7eaf\u865a\u51fd\u6570\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u865a\u51fd\u6570\uff0c\u5728\u57fa\u7c7b\u4e2d\u4e0d\u80fd\u5bf9\u865a\u51fd\u6570\u7ed9\u51fa\u6709\u610f\u4e49\u7684\u5b9e\u73b0\uff0c\u800c\u628a\u5b83\u58f0\u660e\u4e3a\u7eaf\u865a\u51fd\u6570\uff0c\u5b83\u7684\u5b9e\u73b0\u7559\u7ed9\u8be5\u57fa\u7c7b\u7684\u6d3e\u751f\u7c7b\u53bb\u505a\u3002 virtual int A () = 0 ;","title":"\u7eaf\u865a\u51fd\u6570"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u865a\u51fd\u6570\u7eaf\u865a\u51fd\u6570","text":"\u7c7b\u91cc\u5982\u679c\u58f0\u660e\u4e86\u865a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u662f\u5b9e\u73b0\u7684\uff0c\u54ea\u6015\u662f\u7a7a\u5b9e\u73b0\uff0c\u5b83\u7684\u4f5c\u7528\u5c31\u662f\u4e3a\u4e86\u80fd\u8ba9\u8fd9\u4e2a\u51fd\u6570\u5728\u5b83\u7684\u5b50\u7c7b\u91cc\u9762\u53ef\u4ee5\u88ab\u8986\u76d6\uff08override\uff09\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u7f16\u8bd1\u5668\u5c31\u53ef\u4ee5\u4f7f\u7528\u540e\u671f\u7ed1\u5b9a\u6765\u8fbe\u5230\u591a\u6001\u4e86\u3002\u7eaf\u865a\u51fd\u6570\u53ea\u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u662f\u4e2a\u51fd\u6570\u7684\u58f0\u660e\u800c\u5df2\uff0c\u5b83\u8981\u7559\u5230\u5b50\u7c7b\u91cc\u53bb\u5b9e\u73b0\u3002 \u865a\u51fd\u6570\u5728\u5b50\u7c7b\u91cc\u9762\u53ef\u4ee5\u4e0d\u91cd\u5199\uff1b\u4f46\u7eaf\u865a\u51fd\u6570\u5fc5\u987b\u5728\u5b50\u7c7b\u5b9e\u73b0\u624d\u53ef\u4ee5\u5b9e\u4f8b\u5316\u5b50\u7c7b\u3002 \u865a\u51fd\u6570\u7684\u7c7b\u7528\u4e8e \u201c\u5b9e\u4f5c\u7ee7\u627f\u201d\uff0c\u7ee7\u627f\u63a5\u53e3\u7684\u540c\u65f6\u4e5f\u7ee7\u627f\u4e86\u7236\u7c7b\u7684\u5b9e\u73b0\u3002\u7eaf\u865a\u51fd\u6570\u5173\u6ce8\u7684\u662f\u63a5\u53e3\u7684\u7edf\u4e00\u6027\uff0c\u5b9e\u73b0\u7531\u5b50\u7c7b\u5b8c\u6210\u3002 \u5e26\u7eaf\u865a\u51fd\u6570\u7684\u7c7b\u53eb\u62bd\u8c61\u7c7b\uff0c\u8fd9\u79cd\u7c7b\u4e0d\u80fd\u76f4\u63a5\u751f\u6210\u5bf9\u8c61\uff0c\u800c\u53ea\u6709\u88ab\u7ee7\u627f\uff0c\u5e76\u91cd\u5199\u5176\u865a\u51fd\u6570\u540e\uff0c\u624d\u80fd\u4f7f\u7528\u3002\u62bd\u8c61\u7c7b\u88ab\u7ee7\u627f\u540e\uff0c\u5b50\u7c7b\u53ef\u4ee5\u7ee7\u7eed\u662f\u62bd\u8c61\u7c7b\uff0c\u4e5f\u53ef\u4ee5\u662f\u666e\u901a\u7c7b\u3002 \u865a\u57fa\u7c7b\u662f\u865a\u7ee7\u627f\u4e2d\u7684\u57fa\u7c7b\uff0c\u5177\u4f53\u89c1\u4e0b\u6587\u865a\u7ee7\u627f\u3002 CSDN . C++ \u4e2d\u7684\u865a\u51fd\u6570\u3001\u7eaf\u865a\u51fd\u6570\u533a\u522b\u548c\u8054\u7cfb","title":"\u865a\u51fd\u6570\u3001\u7eaf\u865a\u51fd\u6570"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u865a\u51fd\u6570\u6307\u9488\u865a\u51fd\u6570\u8868","text":"\u865a\u51fd\u6570\u6307\u9488\uff1a\u5728\u542b\u6709\u865a\u51fd\u6570\u7c7b\u7684\u5bf9\u8c61\u4e2d\uff0c\u6307\u5411\u865a\u51fd\u6570\u8868\uff0c\u5728\u8fd0\u884c\u65f6\u786e\u5b9a\u3002 \u865a\u51fd\u6570\u8868\uff1a\u5728\u7a0b\u5e8f\u53ea\u8bfb\u6570\u636e\u6bb5\uff08 .rodata section \uff0c\u89c1\uff1a \u76ee\u6807\u6587\u4ef6\u5b58\u50a8\u7ed3\u6784 \uff09\uff0c\u5b58\u653e\u865a\u51fd\u6570\u6307\u9488\uff0c\u5982\u679c\u6d3e\u751f\u7c7b\u5b9e\u73b0\u4e86\u57fa\u7c7b\u7684\u67d0\u4e2a\u865a\u51fd\u6570\uff0c\u5219\u5728\u865a\u8868\u4e2d\u8986\u76d6\u539f\u672c\u57fa\u7c7b\u7684\u90a3\u4e2a\u865a\u51fd\u6570\u6307\u9488\uff0c\u5728\u7f16\u8bd1\u65f6\u6839\u636e\u7c7b\u7684\u58f0\u660e\u521b\u5efa\u3002 C++\u4e2d\u7684\u865a\u51fd\u6570(\u8868)\u5b9e\u73b0\u673a\u5236\u4ee5\u53ca\u7528C\u8bed\u8a00\u5bf9\u5176\u8fdb\u884c\u7684\u6a21\u62df\u5b9e\u73b0","title":"\u865a\u51fd\u6570\u6307\u9488\u3001\u865a\u51fd\u6570\u8868"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u865a\u7ee7\u627f","text":"\u865a\u7ee7\u627f\u7528\u4e8e\u89e3\u51b3\u591a\u7ee7\u627f\u6761\u4ef6\u4e0b\u7684\u83f1\u5f62\u7ee7\u627f\u95ee\u9898\uff08\u6d6a\u8d39\u5b58\u50a8\u7a7a\u95f4\u3001\u5b58\u5728\u4e8c\u4e49\u6027\uff09\u3002 \u5e95\u5c42\u5b9e\u73b0\u539f\u7406\u4e0e\u7f16\u8bd1\u5668\u76f8\u5173\uff0c\u4e00\u822c\u901a\u8fc7**\u865a\u57fa\u7c7b\u6307\u9488**\u548c**\u865a\u57fa\u7c7b\u8868**\u5b9e\u73b0\uff0c\u6bcf\u4e2a\u865a\u7ee7\u627f\u7684\u5b50\u7c7b\u90fd\u6709\u4e00\u4e2a\u865a\u57fa\u7c7b\u6307\u9488\uff08\u5360\u7528\u4e00\u4e2a\u6307\u9488\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c4\u5b57\u8282\uff09\u548c\u865a\u57fa\u7c7b\u8868\uff08\u4e0d\u5360\u7528\u7c7b\u5bf9\u8c61\u7684\u5b58\u50a8\u7a7a\u95f4\uff09\uff08\u9700\u8981\u5f3a\u8c03\u7684\u662f\uff0c\u865a\u57fa\u7c7b\u4f9d\u65e7\u4f1a\u5728\u5b50\u7c7b\u91cc\u9762\u5b58\u5728\u62f7\u8d1d\uff0c\u53ea\u662f\u4ec5\u4ec5\u6700\u591a\u5b58\u5728\u4e00\u4efd\u800c\u5df2\uff0c\u5e76\u4e0d\u662f\u4e0d\u5728\u5b50\u7c7b\u91cc\u9762\u4e86\uff09\uff1b\u5f53\u865a\u7ee7\u627f\u7684\u5b50\u7c7b\u88ab\u5f53\u505a\u7236\u7c7b\u7ee7\u627f\u65f6\uff0c\u865a\u57fa\u7c7b\u6307\u9488\u4e5f\u4f1a\u88ab\u7ee7\u627f\u3002 \u5b9e\u9645\u4e0a\uff0cvbptr \u6307\u7684\u662f\u865a\u57fa\u7c7b\u8868\u6307\u9488\uff08virtual base table pointer\uff09\uff0c\u8be5\u6307\u9488\u6307\u5411\u4e86\u4e00\u4e2a\u865a\u57fa\u7c7b\u8868\uff08virtual table\uff09\uff0c\u865a\u8868\u4e2d\u8bb0\u5f55\u4e86\u865a\u57fa\u7c7b\u4e0e\u672c\u7c7b\u7684\u504f\u79fb\u5730\u5740\uff1b\u901a\u8fc7\u504f\u79fb\u5730\u5740\uff0c\u8fd9\u6837\u5c31\u627e\u5230\u4e86\u865a\u57fa\u7c7b\u6210\u5458\uff0c\u800c\u865a\u7ee7\u627f\u4e5f\u4e0d\u7528\u50cf\u666e\u901a\u591a\u7ee7\u627f\u90a3\u6837\u7ef4\u6301\u7740\u516c\u5171\u57fa\u7c7b\uff08\u865a\u57fa\u7c7b\uff09\u7684\u4e24\u4efd\u540c\u6837\u7684\u62f7\u8d1d\uff0c\u8282\u7701\u4e86\u5b58\u50a8\u7a7a\u95f4\u3002","title":"\u865a\u7ee7\u627f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u865a\u7ee7\u627f\u865a\u51fd\u6570","text":"\u76f8\u540c\u4e4b\u5904\uff1a\u90fd\u5229\u7528\u4e86\u865a\u6307\u9488\uff08\u5747\u5360\u7528\u7c7b\u7684\u5b58\u50a8\u7a7a\u95f4\uff09\u548c\u865a\u8868\uff08\u5747\u4e0d\u5360\u7528\u7c7b\u7684\u5b58\u50a8\u7a7a\u95f4\uff09 \u4e0d\u540c\u4e4b\u5904\uff1a \u865a\u7ee7\u627f \u865a\u57fa\u7c7b\u4f9d\u65e7\u5b58\u5728\u7ee7\u627f\u7c7b\u4e2d\uff0c\u53ea\u5360\u7528\u5b58\u50a8\u7a7a\u95f4 \u865a\u57fa\u7c7b\u8868\u5b58\u50a8\u7684\u662f\u865a\u57fa\u7c7b\u76f8\u5bf9\u76f4\u63a5\u7ee7\u627f\u7c7b\u7684\u504f\u79fb \u865a\u51fd\u6570 \u865a\u51fd\u6570\u4e0d\u5360\u7528\u5b58\u50a8\u7a7a\u95f4 \u865a\u51fd\u6570\u8868\u5b58\u50a8\u7684\u662f\u865a\u51fd\u6570\u5730\u5740","title":"\u865a\u7ee7\u627f\u3001\u865a\u51fd\u6570"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7c7b\u6a21\u677f\u6210\u5458\u6a21\u677f\u865a\u51fd\u6570","text":"\u7c7b\u6a21\u677f\u4e2d\u53ef\u4ee5\u4f7f\u7528\u865a\u51fd\u6570 \u4e00\u4e2a\u7c7b\uff08\u65e0\u8bba\u662f\u666e\u901a\u7c7b\u8fd8\u662f\u7c7b\u6a21\u677f\uff09\u7684\u6210\u5458\u6a21\u677f\uff08\u672c\u8eab\u662f\u6a21\u677f\u7684\u6210\u5458\u51fd\u6570\uff09\u4e0d\u80fd\u662f\u865a\u51fd\u6570","title":"\u7c7b\u6a21\u677f\u3001\u6210\u5458\u6a21\u677f\u3001\u865a\u51fd\u6570"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u62bd\u8c61\u7c7b\u63a5\u53e3\u7c7b\u805a\u5408\u7c7b","text":"\u62bd\u8c61\u7c7b\uff1a\u542b\u6709\u7eaf\u865a\u51fd\u6570\u7684\u7c7b \u63a5\u53e3\u7c7b\uff1a\u4ec5\u542b\u6709\u7eaf\u865a\u51fd\u6570\u7684\u62bd\u8c61\u7c7b \u805a\u5408\u7c7b\uff1a\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5176\u6210\u5458\uff0c\u5e76\u4e14\u5177\u6709\u7279\u6b8a\u7684\u521d\u59cb\u5316\u8bed\u6cd5\u5f62\u5f0f\u3002\u6ee1\u8db3\u5982\u4e0b\u7279\u70b9\uff1a \u6240\u6709\u6210\u5458\u90fd\u662f public \u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u6784\u9020\u51fd\u6570 \u6ca1\u6709\u7c7b\u5185\u521d\u59cb\u5316 \u6ca1\u6709\u57fa\u7c7b\uff0c\u4e5f\u6ca1\u6709 virtual \u51fd\u6570","title":"\u62bd\u8c61\u7c7b\u3001\u63a5\u53e3\u7c7b\u3001\u805a\u5408\u7c7b"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5185\u5b58\u5206\u914d\u548c\u7ba1\u7406","text":"","title":"\u5185\u5b58\u5206\u914d\u548c\u7ba1\u7406"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#malloccallocreallocalloca","text":"malloc\uff1a\u7533\u8bf7\u6307\u5b9a\u5b57\u8282\u6570\u7684\u5185\u5b58\u3002\u7533\u8bf7\u5230\u7684\u5185\u5b58\u4e2d\u7684\u521d\u59cb\u503c\u4e0d\u786e\u5b9a\u3002 calloc\uff1a\u4e3a\u6307\u5b9a\u957f\u5ea6\u7684\u5bf9\u8c61\uff0c\u5206\u914d\u80fd\u5bb9\u7eb3\u5176\u6307\u5b9a\u4e2a\u6570\u7684\u5185\u5b58\u3002\u7533\u8bf7\u5230\u7684\u5185\u5b58\u7684\u6bcf\u4e00\u4f4d\uff08bit\uff09\u90fd\u521d\u59cb\u5316\u4e3a 0\u3002 realloc\uff1a\u66f4\u6539\u4ee5\u524d\u5206\u914d\u7684\u5185\u5b58\u957f\u5ea6\uff08\u589e\u52a0\u6216\u51cf\u5c11\uff09\u3002\u5f53\u589e\u52a0\u957f\u5ea6\u65f6\uff0c\u53ef\u80fd\u9700\u5c06\u4ee5\u524d\u5206\u914d\u533a\u7684\u5185\u5bb9\u79fb\u5230\u53e6\u4e00\u4e2a\u8db3\u591f\u5927\u7684\u533a\u57df\uff0c\u800c\u65b0\u589e\u533a\u57df\u5185\u7684\u521d\u59cb\u503c\u5219\u4e0d\u786e\u5b9a\u3002 alloca\uff1a\u5728\u6808\u4e0a\u7533\u8bf7\u5185\u5b58\u3002\u7a0b\u5e8f\u5728\u51fa\u6808\u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u91ca\u653e\u5185\u5b58\u3002\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0calloca \u4e0d\u5177\u53ef\u79fb\u690d\u6027, \u800c\u4e14\u5728\u6ca1\u6709\u4f20\u7edf\u5806\u6808\u7684\u673a\u5668\u4e0a\u5f88\u96be\u5b9e\u73b0\u3002alloca \u4e0d\u5b9c\u4f7f\u7528\u5728\u5fc5\u987b\u5e7f\u6cdb\u79fb\u690d\u7684\u7a0b\u5e8f\u4e2d\u3002C99 \u4e2d\u652f\u6301\u53d8\u957f\u6570\u7ec4 (VLA)\uff0c\u53ef\u4ee5\u7528\u6765\u66ff\u4ee3 alloca\u3002","title":"malloc\u3001calloc\u3001realloc\u3001alloca"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#mallocfree","text":"\u7528\u4e8e\u5206\u914d\u3001\u91ca\u653e\u5185\u5b58 malloc\u3001free \u4f7f\u7528 \u7533\u8bf7\u5185\u5b58\uff0c\u786e\u8ba4\u662f\u5426\u7533\u8bf7\u6210\u529f char * str = ( char * ) malloc ( 100 ); assert ( str != nullptr ); \u91ca\u653e\u5185\u5b58\u540e\u6307\u9488\u7f6e\u7a7a free ( p ); p = nullptr ;","title":"malloc\u3001free"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#newdelete","text":"new / new[]\uff1a\u5b8c\u6210\u4e24\u4ef6\u4e8b\uff0c\u5148\u5e95\u5c42\u8c03\u7528 malloc \u5206\u914d\u4e86\u5185\u5b58\uff0c\u7136\u540e\u8c03\u7528\u6784\u9020\u51fd\u6570\uff08\u521b\u5efa\u5bf9\u8c61\uff09\u3002 delete/delete[]\uff1a\u4e5f\u5b8c\u6210\u4e24\u4ef6\u4e8b\uff0c\u5148\u8c03\u7528\u6790\u6784\u51fd\u6570\uff08\u6e05\u7406\u8d44\u6e90\uff09\uff0c\u7136\u540e\u5e95\u5c42\u8c03\u7528 free \u91ca\u653e\u7a7a\u95f4\u3002 new \u5728\u7533\u8bf7\u5185\u5b58\u65f6\u4f1a\u81ea\u52a8\u8ba1\u7b97\u6240\u9700\u5b57\u8282\u6570\uff0c\u800c malloc \u5219\u9700\u6211\u4eec\u81ea\u5df1\u8f93\u5165\u7533\u8bf7\u5185\u5b58\u7a7a\u95f4\u7684\u5b57\u8282\u6570\u3002 new\u3001delete \u4f7f\u7528 \u7533\u8bf7\u5185\u5b58\uff0c\u786e\u8ba4\u662f\u5426\u7533\u8bf7\u6210\u529f int main () { T * t = new T (); // \u5148\u5185\u5b58\u5206\u914d \uff0c\u518d\u6784\u9020\u51fd\u6570 delete t ; // \u5148\u6790\u6784\u51fd\u6570\uff0c\u518d\u5185\u5b58\u91ca\u653e return 0 ; }","title":"new\u3001delete"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5b9a\u4f4d-new","text":"\u5b9a\u4f4d new\uff08placement new\uff09\u5141\u8bb8\u6211\u4eec\u5411 new \u4f20\u9012\u989d\u5916\u7684\u5730\u5740\u53c2\u6570\uff0c\u4ece\u800c\u5728\u9884\u5148\u6307\u5b9a\u7684\u5185\u5b58\u533a\u57df\u521b\u5efa\u5bf9\u8c61\u3002 new ( place_address ) type new ( place_address ) type ( initializers ) new ( place_address ) type [ size ] new ( place_address ) type [ size ] { braced initializer list } place_address \u662f\u4e2a\u6307\u9488 initializers \u63d0\u4f9b\u4e00\u4e2a\uff08\u53ef\u80fd\u4e3a\u7a7a\u7684\uff09\u4ee5\u9017\u53f7\u5206\u9694\u7684\u521d\u59cb\u503c\u5217\u8868","title":"\u5b9a\u4f4d new"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#delete-this-\u5408\u6cd5\u5417","text":"Is it legal (and moral) for a member function to say delete this? \u5408\u6cd5\uff0c\u4f46\uff1a \u5fc5\u987b\u4fdd\u8bc1 this \u5bf9\u8c61\u662f\u901a\u8fc7 new \uff08\u4e0d\u662f new[] \u3001\u4e0d\u662f placement new\u3001\u4e0d\u662f\u6808\u4e0a\u3001\u4e0d\u662f\u5168\u5c40\u3001\u4e0d\u662f\u5176\u4ed6\u5bf9\u8c61\u6210\u5458\uff09\u5206\u914d\u7684 \u5fc5\u987b\u4fdd\u8bc1\u8c03\u7528 delete this \u7684\u6210\u5458\u51fd\u6570\u662f\u6700\u540e\u4e00\u4e2a\u8c03\u7528 this \u7684\u6210\u5458\u51fd\u6570 \u5fc5\u987b\u4fdd\u8bc1\u6210\u5458\u51fd\u6570\u7684 delete this \u540e\u9762\u6ca1\u6709\u8c03\u7528 this \u4e86 \u5fc5\u987b\u4fdd\u8bc1 delete this \u540e\u6ca1\u6709\u4eba\u4f7f\u7528\u4e86","title":"delete this \u5408\u6cd5\u5417\uff1f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5982\u4f55\u5b9a\u4e49\u4e00\u4e2a\u53ea\u80fd\u5728\u5806\u4e0a\u6808\u4e0a\u751f\u6210\u5bf9\u8c61\u7684\u7c7b","text":"\u5982\u4f55\u5b9a\u4e49\u4e00\u4e2a\u53ea\u80fd\u5728\u5806\u4e0a\uff08\u6808\u4e0a\uff09\u751f\u6210\u5bf9\u8c61\u7684\u7c7b?","title":"\u5982\u4f55\u5b9a\u4e49\u4e00\u4e2a\u53ea\u80fd\u5728\u5806\u4e0a\uff08\u6808\u4e0a\uff09\u751f\u6210\u5bf9\u8c61\u7684\u7c7b\uff1f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u53ea\u80fd\u5728\u5806\u4e0a","text":"\u65b9\u6cd5\uff1a\u5c06\u6790\u6784\u51fd\u6570\u8bbe\u7f6e\u4e3a\u79c1\u6709 \u539f\u56e0\uff1aC++ \u662f\u9759\u6001\u7ed1\u5b9a\u8bed\u8a00\uff0c\u7f16\u8bd1\u5668\u7ba1\u7406\u6808\u4e0a\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\uff0c\u7f16\u8bd1\u5668\u5728\u4e3a\u7c7b\u5bf9\u8c61\u5206\u914d\u6808\u7a7a\u95f4\u65f6\uff0c\u4f1a\u5148\u68c0\u67e5\u7c7b\u7684\u6790\u6784\u51fd\u6570\u7684\u8bbf\u95ee\u6027\u3002\u82e5\u6790\u6784\u51fd\u6570\u4e0d\u53ef\u8bbf\u95ee\uff0c\u5219\u4e0d\u80fd\u5728\u6808\u4e0a\u521b\u5efa\u5bf9\u8c61\u3002","title":"\u53ea\u80fd\u5728\u5806\u4e0a"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u53ea\u80fd\u5728\u6808\u4e0a","text":"\u65b9\u6cd5\uff1a\u5c06 new \u548c delete \u91cd\u8f7d\u4e3a\u79c1\u6709 \u539f\u56e0\uff1a\u5728\u5806\u4e0a\u751f\u6210\u5bf9\u8c61\uff0c\u4f7f\u7528 new \u5173\u952e\u8bcd\u64cd\u4f5c\uff0c\u5176\u8fc7\u7a0b\u5206\u4e3a\u4e24\u9636\u6bb5\uff1a\u7b2c\u4e00\u9636\u6bb5\uff0c\u4f7f\u7528 new \u5728\u5806\u4e0a\u5bfb\u627e\u53ef\u7528\u5185\u5b58\uff0c\u5206\u914d\u7ed9\u5bf9\u8c61\uff1b\u7b2c\u4e8c\u9636\u6bb5\uff0c\u8c03\u7528\u6784\u9020\u51fd\u6570\u751f\u6210\u5bf9\u8c61\u3002\u5c06 new \u64cd\u4f5c\u8bbe\u7f6e\u4e3a\u79c1\u6709\uff0c\u90a3\u4e48\u7b2c\u4e00\u9636\u6bb5\u5c31\u65e0\u6cd5\u5b8c\u6210\uff0c\u5c31\u4e0d\u80fd\u591f\u5728\u5806\u4e0a\u751f\u6210\u5bf9\u8c61\u3002","title":"\u53ea\u80fd\u5728\u6808\u4e0a"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u667a\u80fd\u6307\u9488","text":"","title":"\u667a\u80fd\u6307\u9488"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#c-\u6807\u51c6\u5e93stl\u4e2d","text":"\u5934\u6587\u4ef6\uff1a #include <memory>","title":"C++ \u6807\u51c6\u5e93\uff08STL\uff09\u4e2d"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#c-98","text":"std :: auto_ptr < std :: string > ps ( new std :: string ( str )) \uff1b","title":"C++ 98"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#c-11","text":"shared_ptr unique_ptr weak_ptr auto_ptr\uff08\u88ab C++11 \u5f03\u7528\uff09 Class shared_ptr \u5b9e\u73b0\u5171\u4eab\u5f0f\u62e5\u6709\uff08shared ownership\uff09\u6982\u5ff5\u3002\u591a\u4e2a\u667a\u80fd\u6307\u9488\u6307\u5411\u76f8\u540c\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u548c\u5176\u76f8\u5173\u8d44\u6e90\u4f1a\u5728 \u201c\u6700\u540e\u4e00\u4e2a reference \u88ab\u9500\u6bc1\u201d \u65f6\u88ab\u91ca\u653e\u3002\u4e3a\u4e86\u5728\u7ed3\u6784\u8f83\u590d\u6742\u7684\u60c5\u666f\u4e2d\u6267\u884c\u4e0a\u8ff0\u5de5\u4f5c\uff0c\u6807\u51c6\u5e93\u63d0\u4f9b weak_ptr\u3001bad_weak_ptr \u548c enable_shared_from_this \u7b49\u8f85\u52a9\u7c7b\u3002 Class unique_ptr \u5b9e\u73b0\u72ec\u5360\u5f0f\u62e5\u6709\uff08exclusive ownership\uff09\u6216\u4e25\u683c\u62e5\u6709\uff08strict ownership\uff09\u6982\u5ff5\uff0c\u4fdd\u8bc1\u540c\u4e00\u65f6\u95f4\u5185\u53ea\u6709\u4e00\u4e2a\u667a\u80fd\u6307\u9488\u53ef\u4ee5\u6307\u5411\u8be5\u5bf9\u8c61\u3002\u4f60\u53ef\u4ee5\u79fb\u4ea4\u62e5\u6709\u6743\u3002\u5b83\u5bf9\u4e8e\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\uff08resource leak\uff09\u2014\u2014\u5982 new \u540e\u5fd8\u8bb0 delete \u2014\u2014\u7279\u522b\u6709\u7528\u3002","title":"C++ 11"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#shared_ptr","text":"\u591a\u4e2a\u667a\u80fd\u6307\u9488\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5bf9\u8c61\u7684\u6700\u672b\u4e00\u4e2a\u62e5\u6709\u7740\u6709\u8d23\u4efb\u9500\u6bc1\u5bf9\u8c61\uff0c\u5e76\u6e05\u7406\u4e0e\u8be5\u5bf9\u8c61\u76f8\u5173\u7684\u6240\u6709\u8d44\u6e90\u3002 \u652f\u6301\u5b9a\u5236\u578b\u5220\u9664\u5668\uff08custom deleter\uff09\uff0c\u53ef\u9632\u8303 Cross-DLL \u95ee\u9898\uff08\u5bf9\u8c61\u5728\u52a8\u6001\u94fe\u63a5\u5e93\uff08DLL\uff09\u4e2d\u88ab new \u521b\u5efa\uff0c\u5374\u5728\u53e6\u4e00\u4e2a DLL \u5185\u88ab delete \u9500\u6bc1\uff09\u3001\u81ea\u52a8\u89e3\u9664\u4e92\u65a5\u9501","title":"shared_ptr"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#weak_ptr","text":"weak_ptr \u5141\u8bb8\u4f60\u5171\u4eab\u4f46\u4e0d\u62e5\u6709\u67d0\u5bf9\u8c61\uff0c\u4e00\u65e6\u6700\u672b\u4e00\u4e2a\u62e5\u6709\u8be5\u5bf9\u8c61\u7684\u667a\u80fd\u6307\u9488\u5931\u53bb\u4e86\u6240\u6709\u6743\uff0c\u4efb\u4f55 weak_ptr \u90fd\u4f1a\u81ea\u52a8\u6210\u7a7a\uff08empty\uff09\u3002\u56e0\u6b64\uff0c\u5728 default \u548c copy \u6784\u9020\u51fd\u6570\u4e4b\u5916\uff0cweak_ptr \u53ea\u63d0\u4f9b \u201c\u63a5\u53d7\u4e00\u4e2a shared_ptr\u201d \u7684\u6784\u9020\u51fd\u6570\u3002 \u53ef\u6253\u7834\u73af\u72b6\u5f15\u7528\uff08cycles of references\uff0c\u4e24\u4e2a\u5176\u5b9e\u5df2\u7ecf\u6ca1\u6709\u88ab\u4f7f\u7528\u7684\u5bf9\u8c61\u5f7c\u6b64\u4e92\u6307\uff0c\u4f7f\u4e4b\u770b\u4f3c\u8fd8\u5728 \u201c\u88ab\u4f7f\u7528\u201d \u7684\u72b6\u6001\uff09\u7684\u95ee\u9898","title":"weak_ptr"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#unique_ptr","text":"unique_ptr \u662f C++11 \u624d\u5f00\u59cb\u63d0\u4f9b\u7684\u7c7b\u578b\uff0c\u662f\u4e00\u79cd\u5728\u5f02\u5e38\u65f6\u53ef\u4ee5\u5e2e\u52a9\u907f\u514d\u8d44\u6e90\u6cc4\u6f0f\u7684\u667a\u80fd\u6307\u9488\u3002\u91c7\u7528\u72ec\u5360\u5f0f\u62e5\u6709\uff0c\u610f\u5473\u7740\u53ef\u4ee5\u786e\u4fdd\u4e00\u4e2a\u5bf9\u8c61\u548c\u5176\u76f8\u5e94\u7684\u8d44\u6e90\u540c\u4e00\u65f6\u95f4\u53ea\u88ab\u4e00\u4e2a pointer \u62e5\u6709\u3002\u4e00\u65e6\u62e5\u6709\u7740\u88ab\u9500\u6bc1\u6216\u7f16\u7a0b empty\uff0c\u6216\u5f00\u59cb\u62e5\u6709\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5148\u524d\u62e5\u6709\u7684\u90a3\u4e2a\u5bf9\u8c61\u5c31\u4f1a\u88ab\u9500\u6bc1\uff0c\u5176\u4efb\u4f55\u76f8\u5e94\u8d44\u6e90\u4ea6\u4f1a\u88ab\u91ca\u653e\u3002 unique_ptr \u7528\u4e8e\u53d6\u4ee3 auto_ptr","title":"unique_ptr"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#auto_ptr","text":"\u88ab c++11 \u5f03\u7528\uff0c\u539f\u56e0\u662f\u7f3a\u4e4f\u8bed\u8a00\u7279\u6027\u5982 \u201c\u9488\u5bf9\u6784\u9020\u548c\u8d4b\u503c\u201d \u7684 std::move \u8bed\u4e49\uff0c\u4ee5\u53ca\u5176\u4ed6\u7455\u75b5\u3002","title":"auto_ptr"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#auto_ptr-\u4e0e-unique_ptr-\u6bd4\u8f83","text":"auto_ptr \u53ef\u4ee5\u8d4b\u503c\u62f7\u8d1d\uff0c\u590d\u5236\u62f7\u8d1d\u540e\u6240\u6709\u6743\u8f6c\u79fb\uff1bunqiue_ptr \u65e0\u62f7\u8d1d\u8d4b\u503c\u8bed\u4e49\uff0c\u4f46\u5b9e\u73b0\u4e86 move \u8bed\u4e49\uff1b auto_ptr \u5bf9\u8c61\u4e0d\u80fd\u7ba1\u7406\u6570\u7ec4\uff08\u6790\u6784\u8c03\u7528 delete \uff09\uff0cunique_ptr \u53ef\u4ee5\u7ba1\u7406\u6570\u7ec4\uff08\u6790\u6784\u8c03\u7528 delete[] \uff09\uff1b","title":"auto_ptr \u4e0e unique_ptr \u6bd4\u8f83"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26","text":"MSDN . \u5f3a\u5236\u8f6c\u6362\u8fd0\u7b97\u7b26","title":"\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#static_cast","text":"\u7528\u4e8e\u975e\u591a\u6001\u7c7b\u578b\u7684\u8f6c\u6362 \u4e0d\u6267\u884c\u8fd0\u884c\u65f6\u7c7b\u578b\u68c0\u67e5\uff08\u8f6c\u6362\u5b89\u5168\u6027\u4e0d\u5982 dynamic_cast\uff09 \u901a\u5e38\u7528\u4e8e\u8f6c\u6362\u6570\u503c\u6570\u636e\u7c7b\u578b\uff08\u5982 float -> int\uff09 \u53ef\u4ee5\u5728\u6574\u4e2a\u7c7b\u5c42\u6b21\u7ed3\u6784\u4e2d\u79fb\u52a8\u6307\u9488\uff0c\u5b50\u7c7b\u8f6c\u5316\u4e3a\u7236\u7c7b\u5b89\u5168\uff08\u5411\u4e0a\u8f6c\u6362\uff09\uff0c\u7236\u7c7b\u8f6c\u5316\u4e3a\u5b50\u7c7b\u4e0d\u5b89\u5168\uff08\u56e0\u4e3a\u5b50\u7c7b\u53ef\u80fd\u6709\u4e0d\u5728\u7236\u7c7b\u7684\u5b57\u6bb5\u6216\u65b9\u6cd5\uff09 \u5411\u4e0a\u8f6c\u6362\u662f\u4e00\u79cd\u9690\u5f0f\u8f6c\u6362\u3002","title":"static_cast"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#dynamic_cast","text":"\u7528\u4e8e\u591a\u6001\u7c7b\u578b\u7684\u8f6c\u6362 \u6267\u884c\u884c\u8fd0\u884c\u65f6\u7c7b\u578b\u68c0\u67e5 \u53ea\u9002\u7528\u4e8e\u6307\u9488\u6216\u5f15\u7528 \u5bf9\u4e0d\u660e\u786e\u7684\u6307\u9488\u7684\u8f6c\u6362\u5c06\u5931\u8d25\uff08\u8fd4\u56de nullptr\uff09\uff0c\u4f46\u4e0d\u5f15\u53d1\u5f02\u5e38 \u53ef\u4ee5\u5728\u6574\u4e2a\u7c7b\u5c42\u6b21\u7ed3\u6784\u4e2d\u79fb\u52a8\u6307\u9488\uff0c\u5305\u62ec\u5411\u4e0a\u8f6c\u6362\u3001\u5411\u4e0b\u8f6c\u6362","title":"dynamic_cast"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#const_cast","text":"\u7528\u4e8e\u5220\u9664 const\u3001volatile \u548c __unaligned \u7279\u6027\uff08\u5982\u5c06 const int \u7c7b\u578b\u8f6c\u6362\u4e3a int \u7c7b\u578b \uff09","title":"const_cast"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#reinterpret_cast","text":"\u7528\u4e8e\u4f4d\u7684\u7b80\u5355\u91cd\u65b0\u89e3\u91ca \u6ee5\u7528 reinterpret_cast \u8fd0\u7b97\u7b26\u53ef\u80fd\u5f88\u5bb9\u6613\u5e26\u6765\u98ce\u9669\u3002 \u9664\u975e\u6240\u9700\u8f6c\u6362\u672c\u8eab\u662f\u4f4e\u7ea7\u522b\u7684\uff0c\u5426\u5219\u5e94\u4f7f\u7528\u5176\u4ed6\u5f3a\u5236\u8f6c\u6362\u8fd0\u7b97\u7b26\u4e4b\u4e00\u3002 \u5141\u8bb8\u5c06\u4efb\u4f55\u6307\u9488\u8f6c\u6362\u4e3a\u4efb\u4f55\u5176\u4ed6\u6307\u9488\u7c7b\u578b\uff08\u5982 char* \u5230 int* \u6216 One_class* \u5230 Unrelated_class* \u4e4b\u7c7b\u7684\u8f6c\u6362\uff0c\u4f46\u5176\u672c\u8eab\u5e76\u4e0d\u5b89\u5168\uff09 \u4e5f\u5141\u8bb8\u5c06\u4efb\u4f55\u6574\u6570\u7c7b\u578b\u8f6c\u6362\u4e3a\u4efb\u4f55\u6307\u9488\u7c7b\u578b\u4ee5\u53ca\u53cd\u5411\u8f6c\u6362\u3002 reinterpret_cast \u8fd0\u7b97\u7b26\u4e0d\u80fd\u4e22\u6389 const\u3001volatile \u6216 __unaligned \u7279\u6027\u3002 reinterpret_cast \u7684\u4e00\u4e2a\u5b9e\u9645\u7528\u9014\u662f\u5728\u54c8\u5e0c\u51fd\u6570\u4e2d\uff0c\u5373\uff0c\u901a\u8fc7\u8ba9\u4e24\u4e2a\u4e0d\u540c\u7684\u503c\u51e0\u4e4e\u4e0d\u4ee5\u76f8\u540c\u7684\u7d22\u5f15\u7ed3\u5c3e\u7684\u65b9\u5f0f\u5c06\u503c\u6620\u5c04\u5230\u7d22\u5f15\u3002","title":"reinterpret_cast"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#bad_cast","text":"\u7531\u4e8e\u5f3a\u5236\u8f6c\u6362\u4e3a\u5f15\u7528\u7c7b\u578b\u5931\u8d25\uff0cdynamic_cast \u8fd0\u7b97\u7b26\u5f15\u53d1 bad_cast \u5f02\u5e38\u3002 bad_cast \u4f7f\u7528 try { Circle & ref_circle = dynamic_cast < Circle &> ( ref_shape ); } catch ( bad_cast b ) { cout << \"Caught: \" << b . what (); }","title":"bad_cast"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f-rtti","text":"","title":"\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f (RTTI)"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#dynamic_cast_1","text":"\u7528\u4e8e\u591a\u6001\u7c7b\u578b\u7684\u8f6c\u6362","title":"dynamic_cast"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#typeid","text":"typeid \u8fd0\u7b97\u7b26\u5141\u8bb8\u5728\u8fd0\u884c\u65f6\u786e\u5b9a\u5bf9\u8c61\u7684\u7c7b\u578b type_id \u8fd4\u56de\u4e00\u4e2a type_info \u5bf9\u8c61\u7684\u5f15\u7528 \u5982\u679c\u60f3\u901a\u8fc7\u57fa\u7c7b\u7684\u6307\u9488\u83b7\u5f97\u6d3e\u751f\u7c7b\u7684\u6570\u636e\u7c7b\u578b\uff0c\u57fa\u7c7b\u5fc5\u987b\u5e26\u6709\u865a\u51fd\u6570 \u53ea\u80fd\u83b7\u53d6\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b","title":"typeid"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#type_info","text":"type_info \u7c7b\u63cf\u8ff0\u7f16\u8bd1\u5668\u5728\u7a0b\u5e8f\u4e2d\u751f\u6210\u7684\u7c7b\u578b\u4fe1\u606f\u3002 \u6b64\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u6709\u6548\u5b58\u50a8\u6307\u5411\u7c7b\u578b\u7684\u540d\u79f0\u7684\u6307\u9488\u3002 type_info \u7c7b\u8fd8\u53ef\u5b58\u50a8\u9002\u5408\u6bd4\u8f83\u4e24\u4e2a\u7c7b\u578b\u662f\u5426\u76f8\u7b49\u6216\u6bd4\u8f83\u5176\u6392\u5217\u987a\u5e8f\u7684\u7f16\u7801\u503c\u3002 \u7c7b\u578b\u7684\u7f16\u7801\u89c4\u5219\u548c\u6392\u5217\u987a\u5e8f\u662f\u672a\u6307\u5b9a\u7684\uff0c\u5e76\u4e14\u53ef\u80fd\u56e0\u7a0b\u5e8f\u800c\u5f02\u3002 \u5934\u6587\u4ef6\uff1a typeinfo typeid\u3001type_info \u4f7f\u7528 #include <iostream> using namespace std ; class Flyable // \u80fd\u98de\u7684 { public : virtual void takeoff () = 0 ; // \u8d77\u98de virtual void land () = 0 ; // \u964d\u843d }; class Bird : public Flyable // \u9e1f { public : void foraging () {...} // \u89c5\u98df virtual void takeoff () {...} virtual void land () {...} virtual ~ Bird (){} }; class Plane : public Flyable // \u98de\u673a { public : void carry () {...} // \u8fd0\u8f93 virtual void takeoff () {...} virtual void land () {...} }; class type_info { public : const char * name () const ; bool operator == ( const type_info & rhs ) const ; bool operator != ( const type_info & rhs ) const ; int before ( const type_info & rhs ) const ; virtual ~ type_info (); private : ... }; void doSomething ( Flyable * obj ) // \u505a\u4e9b\u4e8b\u60c5 { obj -> takeoff (); cout << typeid ( * obj ). name () << endl ; // \u8f93\u51fa\u4f20\u5165\u5bf9\u8c61\u7c7b\u578b\uff08\"class Bird\" or \"class Plane\"\uff09 if ( typeid ( * obj ) == typeid ( Bird )) // \u5224\u65ad\u5bf9\u8c61\u7c7b\u578b { Bird * bird = dynamic_cast < Bird *> ( obj ); // \u5bf9\u8c61\u8f6c\u5316 bird -> foraging (); } obj -> land (); } int main (){ Bird * b = new Bird (); doSomething ( b ); delete b ; b = nullptr ; return 0 ; }","title":"type_info"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-effective","text":"","title":"\u2b50\ufe0f Effective"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#effective-c","text":"\u89c6 C++ \u4e3a\u4e00\u4e2a\u8bed\u8a00\u8054\u90a6\uff08C\u3001Object-Oriented C++\u3001Template C++\u3001STL\uff09 \u5b81\u53ef\u4ee5\u7f16\u8bd1\u5668\u66ff\u6362\u9884\u5904\u7406\u5668\uff08\u5c3d\u91cf\u4ee5 const \u3001 enum \u3001 inline \u66ff\u6362 #define \uff09 \u5c3d\u53ef\u80fd\u4f7f\u7528 const \u786e\u5b9a\u5bf9\u8c61\u88ab\u4f7f\u7528\u524d\u5df2\u5148\u88ab\u521d\u59cb\u5316\uff08\u6784\u9020\u65f6\u8d4b\u503c\uff08copy \u6784\u9020\u51fd\u6570\uff09\u6bd4 default \u6784\u9020\u540e\u8d4b\u503c\uff08copy assignment\uff09\u6548\u7387\u9ad8\uff09 \u4e86\u89e3 C++ \u9ed8\u9ed8\u7f16\u5199\u5e76\u8c03\u7528\u54ea\u4e9b\u51fd\u6570\uff08\u7f16\u8bd1\u5668\u6697\u81ea\u4e3a class \u521b\u5efa default \u6784\u9020\u51fd\u6570\u3001copy \u6784\u9020\u51fd\u6570\u3001copy assignment \u64cd\u4f5c\u7b26\u3001\u6790\u6784\u51fd\u6570\uff09 \u82e5\u4e0d\u60f3\u4f7f\u7528\u7f16\u8bd1\u5668\u81ea\u52a8\u751f\u6210\u7684\u51fd\u6570\uff0c\u5c31\u5e94\u8be5\u660e\u786e\u62d2\u7edd\uff08\u5c06\u4e0d\u60f3\u4f7f\u7528\u7684\u6210\u5458\u51fd\u6570\u58f0\u660e\u4e3a private\uff0c\u5e76\u4e14\u4e0d\u4e88\u5b9e\u73b0\uff09 \u4e3a\u591a\u6001\u57fa\u7c7b\u58f0\u660e virtual \u6790\u6784\u51fd\u6570\uff08\u5982\u679c class \u5e26\u6709\u4efb\u4f55 virtual \u51fd\u6570\uff0c\u5b83\u5c31\u5e94\u8be5\u62e5\u6709\u4e00\u4e2a virtual \u6790\u6784\u51fd\u6570\uff09 \u522b\u8ba9\u5f02\u5e38\u9003\u79bb\u6790\u6784\u51fd\u6570\uff08\u6790\u6784\u51fd\u6570\u5e94\u8be5\u541e\u4e0b\u4e0d\u4f20\u64ad\u5f02\u5e38\uff0c\u6216\u8005\u7ed3\u675f\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u5410\u51fa\u5f02\u5e38\uff1b\u5982\u679c\u8981\u5904\u7406\u5f02\u5e38\u5e94\u8be5\u5728\u975e\u6790\u6784\u7684\u666e\u901a\u51fd\u6570\u5904\u7406\uff09 \u7edd\u4e0d\u5728\u6784\u9020\u548c\u6790\u6784\u8fc7\u7a0b\u4e2d\u8c03\u7528 virtual \u51fd\u6570\uff08\u56e0\u4e3a\u8fd9\u7c7b\u8c03\u7528\u4ece\u4e0d\u4e0b\u964d\u81f3 derived class\uff09 \u4ee4 operator= \u8fd4\u56de\u4e00\u4e2a reference to *this \uff08\u7528\u4e8e\u8fde\u9501\u8d4b\u503c\uff09 \u5728 operator= \u4e2d\u5904\u7406 \u201c\u81ea\u6211\u8d4b\u503c\u201d \u8d4b\u503c\u5bf9\u8c61\u65f6\u5e94\u786e\u4fdd\u590d\u5236 \u201c\u5bf9\u8c61\u5185\u7684\u6240\u6709\u6210\u5458\u53d8\u91cf\u201d \u53ca \u201c\u6240\u6709 base class \u6210\u5206\u201d\uff08\u8c03\u7528\u57fa\u7c7b\u590d\u5236\u6784\u9020\u51fd\u6570\uff09 \u4ee5\u5bf9\u8c61\u7ba1\u7406\u8d44\u6e90\uff08\u8d44\u6e90\u5728\u6784\u9020\u51fd\u6570\u83b7\u5f97\uff0c\u5728\u6790\u6784\u51fd\u6570\u91ca\u653e\uff0c\u5efa\u8bae\u4f7f\u7528\u667a\u80fd\u6307\u9488\uff0c\u8d44\u6e90\u53d6\u5f97\u65f6\u673a\u4fbf\u662f\u521d\u59cb\u5316\u65f6\u673a\uff08Resource Acquisition Is Initialization\uff0cRAII\uff09\uff09 \u5728\u8d44\u6e90\u7ba1\u7406\u7c7b\u4e2d\u5c0f\u5fc3 copying \u884c\u4e3a\uff08\u666e\u904d\u7684 RAII class copying \u884c\u4e3a\u662f\uff1a\u6291\u5236 copying\u3001\u5f15\u7528\u8ba1\u6570\u3001\u6df1\u5ea6\u62f7\u8d1d\u3001\u8f6c\u79fb\u5e95\u90e8\u8d44\u6e90\u62e5\u6709\u6743\uff08\u7c7b\u4f3c auto_ptr\uff09\uff09 \u5728\u8d44\u6e90\u7ba1\u7406\u7c7b\u4e2d\u63d0\u4f9b\u5bf9\u539f\u59cb\u8d44\u6e90\uff08raw resources\uff09\u7684\u8bbf\u95ee\uff08\u5bf9\u539f\u59cb\u8d44\u6e90\u7684\u8bbf\u95ee\u53ef\u80fd\u7ecf\u8fc7\u663e\u5f0f\u8f6c\u6362\u6216\u9690\u5f0f\u8f6c\u6362\uff0c\u4e00\u822c\u800c\u8a00\u663e\u793a\u8f6c\u6362\u6bd4\u8f83\u5b89\u5168\uff0c\u9690\u5f0f\u8f6c\u6362\u5bf9\u5ba2\u6237\u6bd4\u8f83\u65b9\u4fbf\uff09 \u6210\u5bf9\u4f7f\u7528 new \u548c delete \u65f6\u8981\u91c7\u53d6\u76f8\u540c\u5f62\u5f0f\uff08 new \u4e2d\u4f7f\u7528 [] \u5219 delete [] \uff0c new \u4e2d\u4e0d\u4f7f\u7528 [] \u5219 delete \uff09 \u4ee5\u72ec\u7acb\u8bed\u53e5\u5c06 newed \u5bf9\u8c61\u5b58\u50a8\u4e8e\uff08\u7f6e\u5165\uff09\u667a\u80fd\u6307\u9488\uff08\u5982\u679c\u4e0d\u8fd9\u6837\u505a\uff0c\u53ef\u80fd\u4f1a\u56e0\u4e3a\u7f16\u8bd1\u5668\u4f18\u5316\uff0c\u5bfc\u81f4\u96be\u4ee5\u5bdf\u89c9\u7684\u8d44\u6e90\u6cc4\u6f0f\uff09 \u8ba9\u63a5\u53e3\u5bb9\u6613\u88ab\u6b63\u786e\u4f7f\u7528\uff0c\u4e0d\u6613\u88ab\u8bef\u7528\uff08\u4fc3\u8fdb\u6b63\u5e38\u4f7f\u7528\u7684\u529e\u6cd5\uff1a\u63a5\u53e3\u7684\u4e00\u81f4\u6027\u3001\u5185\u7f6e\u7c7b\u578b\u7684\u884c\u4e3a\u517c\u5bb9\uff1b\u963b\u6b62\u8bef\u7528\u7684\u529e\u6cd5\uff1a\u5efa\u7acb\u65b0\u7c7b\u578b\uff0c\u9650\u5236\u7c7b\u578b\u4e0a\u7684\u64cd\u4f5c\uff0c\u7ea6\u675f\u5bf9\u8c61\u503c\u3001\u6d88\u9664\u5ba2\u6237\u7684\u8d44\u6e90\u7ba1\u7406\u8d23\u4efb\uff09 \u8bbe\u8ba1 class \u72b9\u5982\u8bbe\u8ba1 type\uff0c\u9700\u8981\u8003\u8651\u5bf9\u8c61\u521b\u5efa\u3001\u9500\u6bc1\u3001\u521d\u59cb\u5316\u3001\u8d4b\u503c\u3001\u503c\u4f20\u9012\u3001\u5408\u6cd5\u503c\u3001\u7ee7\u627f\u5173\u7cfb\u3001\u8f6c\u6362\u3001\u4e00\u822c\u5316\u7b49\u7b49\u3002 \u5b81\u4ee5 pass-by-reference-to-const \u66ff\u6362 pass-by-value \uff08\u524d\u8005\u901a\u5e38\u66f4\u9ad8\u6548\u3001\u907f\u514d\u5207\u5272\u95ee\u9898\uff08slicing problem\uff09\uff0c\u4f46\u4e0d\u9002\u7528\u4e8e\u5185\u7f6e\u7c7b\u578b\u3001STL\u8fed\u4ee3\u5668\u3001\u51fd\u6570\u5bf9\u8c61\uff09 \u5fc5\u987b\u8fd4\u56de\u5bf9\u8c61\u65f6\uff0c\u522b\u5984\u60f3\u8fd4\u56de\u5176 reference\uff08\u7edd\u4e0d\u8fd4\u56de pointer \u6216 reference \u6307\u5411\u4e00\u4e2a local stack \u5bf9\u8c61\uff0c\u6216\u8fd4\u56de reference \u6307\u5411\u4e00\u4e2a heap-allocated \u5bf9\u8c61\uff0c\u6216\u8fd4\u56de pointer \u6216 reference \u6307\u5411\u4e00\u4e2a local static \u5bf9\u8c61\u800c\u6709\u53ef\u80fd\u540c\u65f6\u9700\u8981\u591a\u4e2a\u8fd9\u6837\u7684\u5bf9\u8c61\u3002\uff09 \u5c06\u6210\u5458\u53d8\u91cf\u58f0\u660e\u4e3a private\uff08\u4e3a\u4e86\u5c01\u88c5\u3001\u4e00\u81f4\u6027\u3001\u5bf9\u5176\u8bfb\u5199\u7cbe\u786e\u63a7\u5236\u7b49\uff09 \u5b81\u4ee5 non-member\u3001non-friend \u66ff\u6362 member \u51fd\u6570\uff08\u53ef\u589e\u52a0\u5c01\u88c5\u6027\u3001\u5305\u88f9\u5f39\u6027\uff08packaging flexibility\uff09\u3001\u673a\u80fd\u6269\u5145\u6027\uff09 \u82e5\u6240\u6709\u53c2\u6570\uff08\u5305\u62ec\u88abthis\u6307\u9488\u6240\u6307\u7684\u90a3\u4e2a\u9690\u55bb\u53c2\u6570\uff09\u7686\u987b\u8981\u7c7b\u578b\u8f6c\u6362\uff0c\u8bf7\u4e3a\u6b64\u91c7\u7528 non-member \u51fd\u6570 \u8003\u8651\u5199\u4e00\u4e2a\u4e0d\u629b\u5f02\u5e38\u7684 swap \u51fd\u6570 \u5c3d\u53ef\u80fd\u5ef6\u540e\u53d8\u91cf\u5b9a\u4e49\u5f0f\u7684\u51fa\u73b0\u65f6\u95f4\uff08\u53ef\u589e\u52a0\u7a0b\u5e8f\u6e05\u6670\u5ea6\u5e76\u6539\u5584\u7a0b\u5e8f\u6548\u7387\uff09 \u5c3d\u91cf\u5c11\u505a\u8f6c\u578b\u52a8\u4f5c\uff08\u65e7\u5f0f\uff1a (T)expression \u3001 T(expression) \uff1b\u65b0\u5f0f\uff1a const_cast<T>(expression) \u3001 dynamic_cast<T>(expression) \u3001 reinterpret_cast<T>(expression) \u3001 static_cast<T>(expression) \u3001\uff1b\u5c3d\u91cf\u907f\u514d\u8f6c\u578b\u3001\u6ce8\u91cd\u6548\u7387\u907f\u514d dynamic_casts\u3001\u5c3d\u91cf\u8bbe\u8ba1\u6210\u65e0\u9700\u8f6c\u578b\u3001\u53ef\u628a\u8f6c\u578b\u5c01\u88c5\u6210\u51fd\u6570\u3001\u5b81\u53ef\u7528\u65b0\u5f0f\u8f6c\u578b\uff09 \u907f\u514d\u4f7f\u7528 handles\uff08\u5305\u62ec \u5f15\u7528\u3001\u6307\u9488\u3001\u8fed\u4ee3\u5668\uff09\u6307\u5411\u5bf9\u8c61\u5185\u90e8\uff08\u4ee5\u589e\u52a0\u5c01\u88c5\u6027\u3001\u4f7f const \u6210\u5458\u51fd\u6570\u7684\u884c\u4e3a\u66f4\u50cf const\u3001\u964d\u4f4e \u201c\u865a\u540a\u53f7\u7801\u724c\u201d\uff08dangling handles\uff0c\u5982\u60ac\u7a7a\u6307\u9488\u7b49\uff09\u7684\u53ef\u80fd\u6027\uff09 \u4e3a \u201c\u5f02\u5e38\u5b89\u5168\u201d \u800c\u52aa\u529b\u662f\u503c\u5f97\u7684\uff08\u5f02\u5e38\u5b89\u5168\u51fd\u6570\uff08Exception-safe functions\uff09\u5373\u4f7f\u53d1\u751f\u5f02\u5e38\u4e5f\u4e0d\u4f1a\u6cc4\u9732\u8d44\u6e90\u6216\u5141\u8bb8\u4efb\u4f55\u6570\u636e\u7ed3\u6784\u8d25\u574f\uff0c\u5206\u4e3a\u4e09\u79cd\u53ef\u80fd\u7684\u4fdd\u8bc1\uff1a\u57fa\u672c\u578b\u3001\u5f3a\u5217\u578b\u3001\u4e0d\u629b\u5f02\u5e38\u578b\uff09 \u900f\u5f7b\u4e86\u89e3 inlining \u7684\u91cc\u91cc\u5916\u5916\uff08inlining \u5728\u5927\u591a\u6570 C++ \u7a0b\u5e8f\u4e2d\u662f\u7f16\u8bd1\u671f\u7684\u884c\u4e3a\uff1binline \u51fd\u6570\u662f\u5426\u771f\u6b63 inline\uff0c\u53d6\u51b3\u4e8e\u7f16\u8bd1\u5668\uff1b\u5927\u90e8\u5206\u7f16\u8bd1\u5668\u62d2\u7edd\u592a\u8fc7\u590d\u6742\uff08\u5982\u5e26\u6709\u5faa\u73af\u6216\u9012\u5f52\uff09\u7684\u51fd\u6570 inlining\uff0c\u800c\u6240\u6709\u5bf9 virtual \u51fd\u6570\u7684\u8c03\u7528\uff08\u9664\u975e\u662f\u6700\u5e73\u6de1\u65e0\u5947\u7684\uff09\u4e5f\u90fd\u4f1a\u4f7f inlining \u843d\u7a7a\uff1binline \u9020\u6210\u7684\u4ee3\u7801\u81a8\u80c0\u53ef\u80fd\u5e26\u6765\u6548\u7387\u635f\u5931\uff1binline \u51fd\u6570\u65e0\u6cd5\u968f\u7740\u7a0b\u5e8f\u5e93\u7684\u5347\u7ea7\u800c\u5347\u7ea7\uff09 \u5c06\u6587\u4ef6\u95f4\u7684\u7f16\u8bd1\u4f9d\u5b58\u5173\u7cfb\u964d\u81f3\u6700\u4f4e\uff08\u5982\u679c\u4f7f\u7528 object references \u6216 object pointers \u53ef\u4ee5\u5b8c\u6210\u4efb\u52a1\uff0c\u5c31\u4e0d\u8981\u4f7f\u7528 objects\uff1b\u5982\u679c\u80fd\u591f\uff0c\u5c3d\u91cf\u4ee5 class \u58f0\u660e\u5f0f\u66ff\u6362 class \u5b9a\u4e49\u5f0f\uff1b\u4e3a\u58f0\u660e\u5f0f\u548c\u5b9a\u4e49\u5f0f\u63d0\u4f9b\u4e0d\u540c\u7684\u5934\u6587\u4ef6\uff09 \u786e\u5b9a\u4f60\u7684 public \u7ee7\u627f\u5851\u6a21\u51fa is-a\uff08\u662f\u4e00\u79cd\uff09\u5173\u7cfb\uff08\u9002\u7528\u4e8e base classes \u8eab\u4e0a\u7684\u6bcf\u4e00\u4ef6\u4e8b\u60c5\u4e00\u5b9a\u9002\u7528\u4e8e derived classes \u8eab\u4e0a\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a derived class \u5bf9\u8c61\u4e5f\u90fd\u662f\u4e00\u4e2a base class \u5bf9\u8c61\uff09 \u907f\u514d\u906e\u63a9\u7ee7\u627f\u800c\u6765\u7684\u540d\u5b57\uff08\u53ef\u4f7f\u7528 using \u58f0\u660e\u5f0f\u6216\u8f6c\u4ea4\u51fd\u6570\uff08forwarding functions\uff09\u6765\u8ba9\u88ab\u906e\u63a9\u7684\u540d\u5b57\u518d\u89c1\u5929\u65e5\uff09 \u533a\u5206\u63a5\u53e3\u7ee7\u627f\u548c\u5b9e\u73b0\u7ee7\u627f\uff08\u5728 public \u7ee7\u627f\u4e4b\u4e0b\uff0cderived classes \u603b\u662f\u7ee7\u627f base class \u7684\u63a5\u53e3\uff1bpure virtual \u51fd\u6570\u53ea\u5177\u4f53\u6307\u5b9a\u63a5\u53e3\u7ee7\u627f\uff1b\u975e\u7eaf impure virtual \u51fd\u6570\u5177\u4f53\u6307\u5b9a\u63a5\u53e3\u7ee7\u627f\u53ca\u7f3a\u7701\u5b9e\u73b0\u7ee7\u627f\uff1bnon-virtual \u51fd\u6570\u5177\u4f53\u6307\u5b9a\u63a5\u53e3\u7ee7\u627f\u4ee5\u53ca\u5f3a\u5236\u6027\u5b9e\u73b0\u7ee7\u627f\uff09 \u8003\u8651 virtual \u51fd\u6570\u4ee5\u5916\u7684\u5176\u4ed6\u9009\u62e9\uff08\u5982 Template Method \u8bbe\u8ba1\u6a21\u5f0f\u7684 non-virtual interface\uff08NVI\uff09\u624b\u6cd5\uff0c\u5c06 virtual \u51fd\u6570\u66ff\u6362\u4e3a \u201c\u51fd\u6570\u6307\u9488\u6210\u5458\u53d8\u91cf\u201d\uff0c\u4ee5 tr1::function \u6210\u5458\u53d8\u91cf\u66ff\u6362 virtual \u51fd\u6570\uff0c\u5c06\u7ee7\u627f\u4f53\u7cfb\u5185\u7684 virtual \u51fd\u6570\u66ff\u6362\u4e3a\u53e6\u4e00\u4e2a\u7ee7\u627f\u4f53\u7cfb\u5185\u7684 virtual \u51fd\u6570\uff09 \u7edd\u4e0d\u91cd\u65b0\u5b9a\u4e49\u7ee7\u627f\u800c\u6765\u7684 non-virtual \u51fd\u6570 \u7edd\u4e0d\u91cd\u65b0\u5b9a\u4e49\u7ee7\u627f\u800c\u6765\u7684\u7f3a\u7701\u53c2\u6570\u503c\uff0c\u56e0\u4e3a\u7f3a\u7701\u53c2\u6570\u503c\u662f\u9759\u6001\u7ed1\u5b9a\uff08statically bound\uff09\uff0c\u800c virtual \u51fd\u6570\u5374\u662f\u52a8\u6001\u7ed1\u5b9a\uff08dynamically bound\uff09 \u901a\u8fc7\u590d\u5408\u5851\u6a21 has-a\uff08\u6709\u4e00\u4e2a\uff09\u6216 \u201c\u6839\u636e\u67d0\u7269\u5b9e\u73b0\u51fa\u201d\uff08\u5728\u5e94\u7528\u57df\uff08application domain\uff09\uff0c\u590d\u5408\u610f\u5473 has-a\uff08\u6709\u4e00\u4e2a\uff09\uff1b\u5728\u5b9e\u73b0\u57df\uff08implementation domain\uff09\uff0c\u590d\u5408\u610f\u5473\u7740 is-implemented-in-terms-of\uff08\u6839\u636e\u67d0\u7269\u5b9e\u73b0\u51fa\uff09\uff09 \u660e\u667a\u800c\u5ba1\u614e\u5730\u4f7f\u7528 private \u7ee7\u627f\uff08private \u7ee7\u627f\u610f\u5473\u7740 is-implemented-in-terms-of\uff08\u6839\u636e\u67d0\u7269\u5b9e\u73b0\u51fa\uff09\uff0c\u5c3d\u53ef\u80fd\u4f7f\u7528\u590d\u5408\uff0c\u5f53 derived class \u9700\u8981\u8bbf\u95ee protected base class \u7684\u6210\u5458\uff0c\u6216\u9700\u8981\u91cd\u65b0\u5b9a\u4e49\u7ee7\u627f\u800c\u6765\u7684\u65f6\u5019 virtual \u51fd\u6570\uff0c\u6216\u9700\u8981 empty base \u6700\u4f18\u5316\u65f6\uff0c\u624d\u4f7f\u7528 private \u7ee7\u627f\uff09 \u660e\u667a\u800c\u5ba1\u614e\u5730\u4f7f\u7528\u591a\u91cd\u7ee7\u627f\uff08\u591a\u7ee7\u627f\u6bd4\u5355\u4e00\u7ee7\u627f\u590d\u6742\uff0c\u53ef\u80fd\u5bfc\u81f4\u65b0\u7684\u6b67\u4e49\u6027\uff0c\u4ee5\u53ca\u5bf9 virtual \u7ee7\u627f\u7684\u9700\u8981\uff0c\u4f46\u786e\u6709\u6b63\u5f53\u7528\u9014\uff0c\u5982 \u201cpublic \u7ee7\u627f\u67d0\u4e2a interface class\u201d \u548c \u201cprivate \u7ee7\u627f\u67d0\u4e2a\u534f\u52a9\u5b9e\u73b0\u7684 class\u201d\uff1bvirtual \u7ee7\u627f\u53ef\u89e3\u51b3\u591a\u7ee7\u627f\u4e0b\u83f1\u5f62\u7ee7\u627f\u7684\u4e8c\u4e49\u6027\u95ee\u9898\uff0c\u4f46\u4f1a\u589e\u52a0\u5927\u5c0f\u3001\u901f\u5ea6\u3001\u521d\u59cb\u5316\u53ca\u8d4b\u503c\u7684\u590d\u6742\u5ea6\u7b49\u7b49\u6210\u672c\uff09 \u4e86\u89e3\u9690\u5f0f\u63a5\u53e3\u548c\u7f16\u8bd1\u671f\u591a\u6001\uff08class \u548c templates \u90fd\u652f\u6301\u63a5\u53e3\uff08interfaces\uff09\u548c\u591a\u6001\uff08polymorphism\uff09\uff1bclass \u7684\u63a5\u53e3\u662f\u4ee5\u7b7e\u540d\u4e3a\u4e2d\u5fc3\u7684\u663e\u5f0f\u7684\uff08explicit\uff09\uff0c\u591a\u6001\u5219\u662f\u901a\u8fc7 virtual \u51fd\u6570\u53d1\u751f\u4e8e\u8fd0\u884c\u671f\uff1btemplate \u7684\u63a5\u53e3\u662f\u5960\u57fa\u4e8e\u6709\u6548\u8868\u8fbe\u5f0f\u7684\u9690\u5f0f\u7684\uff08implicit\uff09\uff0c\u591a\u6001\u5219\u662f\u901a\u8fc7 template \u5177\u73b0\u5316\u548c\u51fd\u6570\u91cd\u8f7d\u89e3\u6790\uff08function overloading resolution\uff09\u53d1\u751f\u4e8e\u7f16\u8bd1\u671f\uff09 \u4e86\u89e3 typename \u7684\u53cc\u91cd\u610f\u4e49\uff08\u58f0\u660e template \u7c7b\u578b\u53c2\u6570\u662f\uff0c\u524d\u7f00\u5173\u952e\u5b57 class \u548c typename \u7684\u610f\u4e49\u5b8c\u5168\u76f8\u540c\uff1b\u8bf7\u4f7f\u7528\u5173\u952e\u5b57 typename \u6807\u8bc6\u5d4c\u5957\u4ece\u5c5e\u7c7b\u578b\u540d\u79f0\uff0c\u4f46\u4e0d\u5f97\u5728\u57fa\u7c7b\u5217\uff08base class lists\uff09\u6216\u6210\u5458\u521d\u503c\u5217\uff08member initialization list\uff09\u5185\u4ee5\u5b83\u4f5c\u4e3a base class \u4fee\u9970\u7b26\uff09 \u5b66\u4e60\u5904\u7406\u6a21\u677f\u5316\u57fa\u7c7b\u5185\u7684\u540d\u79f0\uff08\u53ef\u5728 derived class templates \u5185\u901a\u8fc7 this-> \u6307\u6d89 base class templates \u5185\u7684\u6210\u5458\u540d\u79f0\uff0c\u6216\u85c9\u7531\u4e00\u4e2a\u660e\u767d\u5199\u51fa\u7684 \u201cbase class \u8d44\u683c\u4fee\u9970\u7b26\u201d \u5b8c\u6210\uff09 \u5c06\u4e0e\u53c2\u6570\u65e0\u5173\u7684\u4ee3\u7801\u62bd\u79bb templates\uff08\u56e0\u7c7b\u578b\u6a21\u677f\u53c2\u6570\uff08non-type template parameters\uff09\u800c\u9020\u6210\u4ee3\u7801\u81a8\u80c0\u5f80\u5f80\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\u53c2\u6570\u6216 class \u6210\u5458\u53d8\u91cf\u66ff\u6362 template \u53c2\u6570\u6765\u6d88\u9664\uff1b\u56e0\u7c7b\u578b\u53c2\u6570\uff08type parameters\uff09\u800c\u9020\u6210\u7684\u4ee3\u7801\u81a8\u80c0\u5f80\u5f80\u53ef\u4ee5\u901a\u8fc7\u8ba9\u5e26\u6709\u5b8c\u5168\u76f8\u540c\u4e8c\u8fdb\u5236\u8868\u8ff0\uff08binary representations\uff09\u7684\u5b9e\u73b0\u7c7b\u578b\uff08instantiation types\uff09\u5171\u4eab\u5b9e\u73b0\u7801\uff09 \u8fd0\u7528\u6210\u5458\u51fd\u6570\u6a21\u677f\u63a5\u53d7\u6240\u6709\u517c\u5bb9\u7c7b\u578b\uff08\u8bf7\u4f7f\u7528\u6210\u5458\u51fd\u6570\u6a21\u677f\uff08member function templates\uff09\u751f\u6210 \u201c\u53ef\u63a5\u53d7\u6240\u6709\u517c\u5bb9\u7c7b\u578b\u201d \u7684\u51fd\u6570\uff1b\u58f0\u660e member templates \u7528\u4e8e \u201c\u6cdb\u5316 copy \u6784\u9020\u201d \u6216 \u201c\u6cdb\u5316 assignment \u64cd\u4f5c\u201d \u65f6\u8fd8\u9700\u8981\u58f0\u660e\u6b63\u5e38\u7684 copy \u6784\u9020\u51fd\u6570\u548c copy assignment \u64cd\u4f5c\u7b26\uff09 \u9700\u8981\u7c7b\u578b\u8f6c\u6362\u65f6\u8bf7\u4e3a\u6a21\u677f\u5b9a\u4e49\u975e\u6210\u5458\u51fd\u6570\uff08\u5f53\u6211\u4eec\u7f16\u5199\u4e00\u4e2a class template\uff0c\u800c\u5b83\u6240\u63d0\u4f9b\u4e4b \u201c\u4e0e\u6b64 template \u76f8\u5173\u7684\u201d \u51fd\u6570\u652f\u6301 \u201c\u6240\u6709\u53c2\u6570\u4e4b\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u201d \u65f6\uff0c\u8bf7\u5c06\u90a3\u4e9b\u51fd\u6570\u5b9a\u4e49\u4e3a \u201cclass template \u5185\u90e8\u7684 friend \u51fd\u6570\u201d\uff09 \u8bf7\u4f7f\u7528 traits classes \u8868\u73b0\u7c7b\u578b\u4fe1\u606f\uff08traits classes \u901a\u8fc7 templates \u548c \u201ctemplates \u7279\u5316\u201d \u4f7f\u5f97 \u201c\u7c7b\u578b\u76f8\u5173\u4fe1\u606f\u201d \u5728\u7f16\u8bd1\u671f\u53ef\u7528\uff0c\u901a\u8fc7\u91cd\u8f7d\u6280\u672f\uff08overloading\uff09\u5b9e\u73b0\u5728\u7f16\u8bd1\u671f\u5bf9\u7c7b\u578b\u6267\u884c if...else \u6d4b\u8bd5\uff09 \u8ba4\u8bc6 template \u5143\u7f16\u7a0b\uff08\u6a21\u677f\u5143\u7f16\u7a0b\uff08TMP\uff0ctemplate metaprogramming\uff09\u53ef\u5c06\u5de5\u4f5c\u7531\u8fd0\u884c\u671f\u79fb\u5f80\u7f16\u8bd1\u671f\uff0c\u56e0\u6b64\u5f97\u4ee5\u5b9e\u73b0\u65e9\u671f\u9519\u8bef\u4fa6\u6d4b\u548c\u66f4\u9ad8\u7684\u6267\u884c\u6548\u7387\uff1bTMP \u53ef\u88ab\u7528\u6765\u751f\u6210 \u201c\u7ed9\u4e88\u653f\u7b56\u9009\u62e9\u7ec4\u5408\u201d\uff08based on combinations of policy choices\uff09\u7684\u5ba2\u6237\u5b9a\u5236\u4ee3\u7801\uff0c\u4e5f\u53ef\u7528\u6765\u907f\u514d\u751f\u6210\u5bf9\u67d0\u4e9b\u7279\u6b8a\u7c7b\u578b\u5e76\u4e0d\u9002\u5408\u7684\u4ee3\u7801\uff09 \u4e86\u89e3 new-handler \u7684\u884c\u4e3a\uff08set_new_handler \u5141\u8bb8\u5ba2\u6237\u6307\u5b9a\u4e00\u4e2a\u5728\u5185\u5b58\u5206\u914d\u65e0\u6cd5\u83b7\u5f97\u6ee1\u8db3\u65f6\u88ab\u8c03\u7528\u7684\u51fd\u6570\uff1bnothrow new \u662f\u4e00\u4e2a\u9887\u5177\u5c40\u9650\u7684\u5de5\u5177\uff0c\u56e0\u4e3a\u5b83\u53ea\u9002\u7528\u4e8e\u5185\u5b58\u5206\u914d\uff08operator new\uff09\uff0c\u540e\u7ee7\u7684\u6784\u9020\u51fd\u6570\u8c03\u7528\u8fd8\u662f\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\uff09 \u4e86\u89e3 new \u548c delete \u7684\u5408\u7406\u66ff\u6362\u65f6\u673a\uff08\u4e3a\u4e86\u68c0\u6d4b\u8fd0\u7528\u9519\u8bef\u3001\u6536\u96c6\u52a8\u6001\u5206\u914d\u5185\u5b58\u4e4b\u4f7f\u7528\u7edf\u8ba1\u4fe1\u606f\u3001\u589e\u52a0\u5206\u914d\u548c\u5f52\u8fd8\u901f\u5ea6\u3001\u964d\u4f4e\u7f3a\u7701\u5185\u5b58\u7ba1\u7406\u5668\u5e26\u6765\u7684\u7a7a\u95f4\u989d\u5916\u5f00\u9500\u3001\u5f25\u8865\u7f3a\u7701\u5206\u914d\u5668\u4e2d\u7684\u975e\u6700\u4f73\u9f50\u4f4d\u3001\u5c06\u76f8\u5173\u5bf9\u8c61\u6210\u7c07\u96c6\u4e2d\u3001\u83b7\u5f97\u975e\u4f20\u7edf\u7684\u884c\u4e3a\uff09 \u7f16\u5199 new \u548c delete \u65f6\u9700\u56fa\u5b88\u5e38\u89c4\uff08operator new \u5e94\u8be5\u5185\u6db5\u4e00\u4e2a\u65e0\u7a77\u5faa\u73af\uff0c\u5e76\u5728\u5176\u4e2d\u5c1d\u8bd5\u5206\u914d\u5185\u5b58\uff0c\u5982\u679c\u5b83\u65e0\u6cd5\u6ee1\u8db3\u5185\u5b58\u9700\u6c42\uff0c\u5c31\u5e94\u8be5\u8c03\u7528 new-handler\uff0c\u5b83\u4e5f\u5e94\u8be5\u6709\u80fd\u529b\u5904\u7406 0 bytes \u7533\u8bf7\uff0cclass \u4e13\u5c5e\u7248\u672c\u5219\u8fd8\u5e94\u8be5\u5904\u7406 \u201c\u6bd4\u6b63\u786e\u5927\u5c0f\u66f4\u5927\u7684\uff08\u9519\u8bef\uff09\u7533\u8bf7\u201d\uff1boperator delete \u5e94\u8be5\u5728\u6536\u5230 null \u6307\u9488\u65f6\u4e0d\u505a\u4efb\u4f55\u4e8b\uff0cclass \u4e13\u5c5e\u7248\u672c\u5219\u8fd8\u5e94\u8be5\u5904\u7406 \u201c\u6bd4\u6b63\u786e\u5927\u5c0f\u66f4\u5927\u7684\uff08\u9519\u8bef\uff09\u7533\u8bf7\u201d\uff09 \u5199\u4e86 placement new \u4e5f\u8981\u5199 placement delete\uff08\u5f53\u4f60\u5199\u4e00\u4e2a placement operator new\uff0c\u8bf7\u786e\u5b9a\u4e5f\u5199\u51fa\u4e86\u5bf9\u5e94\u7684 placement operator delete\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u53d1\u751f\u9690\u5fae\u800c\u65f6\u65ad\u65f6\u7eed\u7684\u5185\u5b58\u6cc4\u6f0f\uff1b\u5f53\u4f60\u58f0\u660e placement new \u548c placement delete\uff0c\u8bf7\u786e\u5b9a\u4e0d\u8981\u65e0\u610f\u8bc6\uff08\u975e\u6545\u610f\uff09\u5730\u906e\u63a9\u4e86\u5b83\u4eec\u5730\u6b63\u5e38\u7248\u672c\uff09 \u4e0d\u8981\u8f7b\u5ffd\u7f16\u8bd1\u5668\u7684\u8b66\u544a \u8ba9\u81ea\u5df1\u719f\u6089\u5305\u62ec TR1 \u5728\u5185\u7684\u6807\u51c6\u7a0b\u5e8f\u5e93\uff08TR1\uff0cC++ Technical Report 1\uff0cC++11 \u6807\u51c6\u7684\u8349\u7a3f\u6587\u4ef6\uff09 \u8ba9\u81ea\u5df1\u719f\u6089 Boost\uff08\u51c6\u6807\u51c6\u5e93\uff09","title":"Effective C++"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#more-effective-c","text":"\u4ed4\u7ec6\u533a\u522b pointers \u548c references\uff08\u5f53\u4f60\u77e5\u9053\u4f60\u9700\u8981\u6307\u5411\u67d0\u4e2a\u4e1c\u897f\uff0c\u800c\u4e14\u7edd\u4e0d\u4f1a\u6539\u53d8\u6307\u5411\u5176\u4ed6\u4e1c\u897f\uff0c\u6216\u662f\u5f53\u4f60\u5b9e\u73b0\u4e00\u4e2a\u64cd\u4f5c\u7b26\u800c\u5176\u8bed\u6cd5\u9700\u6c42\u65e0\u6cd5\u7531 pointers \u8fbe\u6210\uff0c\u4f60\u5c31\u5e94\u8be5\u9009\u62e9 references\uff1b\u4efb\u4f55\u5176\u4ed6\u65f6\u5019\uff0c\u8bf7\u91c7\u7528 pointers\uff09 \u6700\u597d\u4f7f\u7528 C++ \u8f6c\u578b\u64cd\u4f5c\u7b26\uff08 static_cast \u3001 const_cast \u3001 dynamic_cast \u3001 reinterpret_cast \uff09 \u7edd\u4e0d\u8981\u4ee5\u591a\u6001\uff08polymorphically\uff09\u65b9\u5f0f\u5904\u7406\u6570\u7ec4\uff08\u591a\u6001\uff08polymorphism\uff09\u548c\u6307\u9488\u7b97\u672f\u4e0d\u80fd\u6df7\u7528\uff1b\u6570\u7ec4\u5bf9\u8c61\u51e0\u4e4e\u603b\u662f\u4f1a\u6d89\u53ca\u6307\u9488\u7684\u7b97\u672f\u8fd0\u7b97\uff0c\u6240\u4ee5\u6570\u7ec4\u548c\u591a\u6001\u4e0d\u8981\u6df7\u7528\uff09 \u975e\u5fc5\u8981\u4e0d\u63d0\u4f9b default constructor\uff08\u907f\u514d\u5bf9\u8c61\u4e2d\u7684\u5b57\u6bb5\u88ab\u65e0\u610f\u4e49\u5730\u521d\u59cb\u5316\uff09 \u5bf9\u5b9a\u5236\u7684 \u201c\u7c7b\u578b\u8f6c\u6362\u51fd\u6570\u201d \u4fdd\u6301\u8b66\u89c9\uff08\u5355\u81ea\u53d8\u91cf constructors \u53ef\u901a\u8fc7\u7b80\u6613\u6cd5\uff08explicit \u5173\u952e\u5b57\uff09\u6216\u4ee3\u7406\u7c7b\uff08proxy classes\uff09\u6765\u907f\u514d\u7f16\u8bd1\u5668\u8bef\u7528\uff1b\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u64cd\u4f5c\u7b26\u53ef\u6539\u4e3a\u663e\u5f0f\u7684 member function \u6765\u907f\u514d\u975e\u9884\u671f\u884c\u4e3a\uff09 \u533a\u522b increment/decrement \u64cd\u4f5c\u7b26\u7684\u524d\u7f6e\uff08prefix\uff09\u548c\u540e\u7f6e\uff08postfix\uff09\u5f62\u5f0f\uff08\u524d\u7f6e\u5f0f\u7d2f\u52a0\u540e\u53d6\u51fa\uff0c\u8fd4\u56de\u4e00\u4e2a reference\uff1b\u540e\u7f6e\u5f0f\u53d6\u51fa\u540e\u7d2f\u52a0\uff0c\u8fd4\u56de\u4e00\u4e2a const \u5bf9\u8c61\uff1b\u5904\u7406\u7528\u6237\u5b9a\u5236\u7c7b\u578b\u65f6\uff0c\u5e94\u8be5\u5c3d\u53ef\u80fd\u4f7f\u7528\u524d\u7f6e\u5f0f increment\uff1b\u540e\u7f6e\u5f0f\u7684\u5b9e\u73b0\u5e94\u4ee5\u5176\u524d\u7f6e\u5f0f\u5144\u5f1f\u4e3a\u57fa\u7840\uff09 \u5343\u4e07\u4e0d\u8981\u91cd\u8f7d && \uff0c || \u548c , \u64cd\u4f5c\u7b26\uff08 && \u4e0e || \u7684\u91cd\u8f7d\u4f1a\u7528 \u201c\u51fd\u6570\u8c03\u7528\u8bed\u4e49\u201d \u53d6\u4ee3 \u201c\u9aa4\u6b7b\u5f0f\u8bed\u4e49\u201d\uff1b , \u7684\u91cd\u8f7d\u5bfc\u81f4\u4e0d\u80fd\u4fdd\u8bc1\u5de6\u4fa7\u8868\u8fbe\u5f0f\u4e00\u5b9a\u6bd4\u53f3\u4fa7\u8868\u8fbe\u5f0f\u66f4\u65e9\u88ab\u8bc4\u4f30\uff09 \u4e86\u89e3\u5404\u79cd\u4e0d\u540c\u610f\u4e49\u7684 new \u548c delete\uff08 new operator \u3001 operator new \u3001 placement new \u3001 operator new[] \uff1b delete operator \u3001 operator delete \u3001 destructor \u3001 operator delete[] \uff09 \u5229\u7528 destructors \u907f\u514d\u6cc4\u6f0f\u8d44\u6e90\uff08\u5728 destructors \u91ca\u653e\u8d44\u6e90\u53ef\u4ee5\u907f\u514d\u5f02\u5e38\u65f6\u7684\u8d44\u6e90\u6cc4\u6f0f\uff09 \u5728 constructors \u5185\u963b\u6b62\u8d44\u6e90\u6cc4\u6f0f\uff08\u7531\u4e8e C++ \u53ea\u4f1a\u6790\u6784\u5df2\u6784\u9020\u5b8c\u6210\u7684\u5bf9\u8c61\uff0c\u56e0\u6b64\u5728\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528 try...catch \u6216\u8005 auto_ptr\uff08\u4ee5\u53ca\u4e0e\u4e4b\u76f8\u4f3c\u7684 classes\uff09 \u5904\u7406\u5f02\u5e38\u65f6\u8d44\u6e90\u6cc4\u9732\u95ee\u9898\uff09 \u7981\u6b62\u5f02\u5e38\u6d41\u51fa destructors \u4e4b\u5916\uff08\u539f\u56e0\uff1a\u4e00\u3001\u907f\u514d terminate \u51fd\u6570\u5728 exception \u4f20\u64ad\u8fc7\u7a0b\u7684\u6808\u5c55\u5f00\uff08stack-unwinding\uff09\u673a\u5236\u79cd\u88ab\u8c03\u7528\uff1b\u4e8c\u3001\u534f\u52a9\u786e\u4fdd destructors \u5b8c\u6210\u5176\u5e94\u8be5\u5b8c\u6210\u7684\u6240\u6709\u4e8b\u60c5\uff09 \u4e86\u89e3 \u201c\u629b\u51fa\u4e00\u4e2a exception\u201d \u4e0e \u201c\u4f20\u9012\u4e00\u4e2a\u53c2\u6570\u201d \u6216 \u201c\u8c03\u7528\u4e00\u4e2a\u865a\u51fd\u6570\u201d \u4e4b\u95f4\u7684\u5dee\u5f02\uff08\u7b2c\u4e00\uff0cexception objects \u603b\u662f\u4f1a\u88ab\u590d\u5236\uff08by pointer \u9664\u5916\uff09\uff0c\u5982\u679c\u4ee5 by value \u65b9\u5f0f\u6355\u6349\u751a\u81f3\u88ab\u590d\u5236\u4e24\u6b21\uff0c\u800c\u4f20\u9012\u7ed9\u51fd\u6570\u53c2\u6570\u7684\u5bf9\u8c61\u5219\u4e0d\u4e00\u5b9a\u5f97\u590d\u5236\uff1b\u7b2c\u4e8c\uff0c\u201c\u88ab\u629b\u51fa\u6210\u4e3a exceptions\u201d \u7684\u5bf9\u8c61\uff0c\u5176\u88ab\u5141\u8bb8\u7684\u7c7b\u578b\u8f6c\u6362\u52a8\u4f5c\u6bd4 \u201c\u88ab\u4f20\u9012\u5230\u51fd\u6570\u53bb\u201d \u7684\u5bf9\u8c61\u5c11\uff1b\u7b2c\u4e09\uff0ccatch \u5b50\u53e5\u4ee5\u5176 \u201c\u51fa\u73b0\u4e8e\u6e90\u4ee3\u7801\u7684\u987a\u5e8f\u201d \u88ab\u7f16\u8bd1\u5668\u68c0\u9a8c\u5bf9\u6bd4\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5339\u914d\u6210\u529f\u8005\u4fbf\u6267\u884c\uff0c\u800c\u8c03\u7528\u4e00\u4e2a\u865a\u51fd\u6570\uff0c\u88ab\u9009\u4e2d\u6267\u884c\u7684\u662f\u90a3\u4e2a \u201c\u4e0e\u5bf9\u8c61\u7c7b\u578b\u6700\u4f73\u543b\u5408\u201d \u7684\u51fd\u6570\uff09 \u4ee5 by reference \u65b9\u5f0f\u6355\u83b7 exceptions\uff08\u53ef\u907f\u514d\u5bf9\u8c61\u5220\u9664\u95ee\u9898\u3001exception objects \u7684\u5207\u5272\u95ee\u9898\uff0c\u53ef\u4fdd\u7559\u6355\u6349\u6807\u51c6 exceptions \u7684\u80fd\u529b\uff0c\u53ef\u7ea6\u675f exception object \u9700\u8981\u590d\u5236\u7684\u6b21\u6570\uff09 \u660e\u667a\u8fd0\u7528 exception specifications\uff08exception specifications \u5bf9 \u201c\u51fd\u6570\u5e0c\u671b\u629b\u51fa\u4ec0\u4e48\u6837\u7684 exceptions\u201d \u63d0\u4f9b\u4e86\u5353\u8d8a\u7684\u8bf4\u660e\uff1b\u4e5f\u6709\u4e00\u4e9b\u7f3a\u70b9\uff0c\u5305\u62ec\u7f16\u8bd1\u5668\u53ea\u5bf9\u5b83\u4eec\u505a\u5c40\u90e8\u6027\u68c0\u9a8c\u800c\u5f88\u5bb9\u6613\u4e0d\u7ecf\u610f\u5730\u8fdd\u53cd\uff0c\u4e0e\u53ef\u80fd\u4f1a\u59a8\u788d\u66f4\u4e0a\u5c42\u7684 exception \u5904\u7406\u51fd\u6570\u5904\u7406\u672a\u9884\u671f\u7684 exceptions\uff09 \u4e86\u89e3\u5f02\u5e38\u5904\u7406\u7684\u6210\u672c\uff08\u7c97\u7565\u4f30\u8ba1\uff0c\u5982\u679c\u4f7f\u7528 try \u8bed\u53e5\u5757\uff0c\u4ee3\u7801\u5927\u7ea6\u6574\u4f53\u81a8\u80c0 5%-10%\uff0c\u6267\u884c\u901f\u5ea6\u4ea6\u5927\u7ea6\u4e0b\u964d\u8fd9\u4e2a\u6570\uff1b\u56e0\u6b64\u8bf7\u5c06\u4f60\u5bf9 try \u8bed\u53e5\u5757\u548c exception specifications \u7684\u4f7f\u7528\u9650\u5236\u4e8e\u975e\u7528\u4e0d\u53ef\u7684\u5730\u70b9\uff0c\u5e76\u4e14\u5728\u771f\u6b63\u5f02\u5e38\u7684\u60c5\u51b5\u4e0b\u624d\u629b\u51fa exceptions\uff09 \u8c28\u8bb0 80-20 \u6cd5\u5219\uff08\u8f6f\u4ef6\u7684\u6574\u4f53\u6027\u80fd\u51e0\u4e4e\u603b\u662f\u7531\u5176\u6784\u6210\u8981\u7d20\uff08\u4ee3\u7801\uff09\u7684\u4e00\u5c0f\u90e8\u5206\u51b3\u5b9a\u7684\uff0c\u53ef\u4f7f\u7528\u7a0b\u5e8f\u5206\u6790\u5668\uff08program profiler\uff09\u8bc6\u522b\u51fa\u6d88\u8017\u8d44\u6e90\u7684\u4ee3\u7801\uff09 \u8003\u8651\u4f7f\u7528 lazy evaluation\uff08\u7f13\u5f0f\u8bc4\u4f30\uff09\uff08\u53ef\u5e94\u7528\u4e8e\uff1aReference Counting\uff08\u5f15\u7528\u8ba1\u6570\uff09\u6765\u907f\u514d\u975e\u5fc5\u8981\u7684\u5bf9\u8c61\u590d\u5236\u3001\u533a\u5206 operator[] \u7684\u8bfb\u548c\u5199\u52a8\u4f5c\u6765\u505a\u4e0d\u540c\u7684\u4e8b\u60c5\u3001Lazy Fetching\uff08\u7f13\u5f0f\u53d6\u51fa\uff09\u6765\u907f\u514d\u975e\u5fc5\u8981\u7684\u6570\u636e\u5e93\u8bfb\u53d6\u52a8\u4f5c\u3001Lazy Expression Evaluation\uff08\u8868\u8fbe\u5f0f\u7f13\u8bc4\u4f30\uff09\u6765\u907f\u514d\u975e\u5fc5\u8981\u7684\u6570\u503c\u8ba1\u7b97\u52a8\u4f5c\uff09 \u5206\u671f\u644a\u8fd8\u9884\u671f\u7684\u8ba1\u7b97\u6210\u672c\uff08\u5f53\u4f60\u5fc5\u987b\u652f\u6301\u67d0\u4e9b\u8fd0\u7b97\u800c\u5176\u7ed3\u6784\u51e0\u4e4e\u603b\u662f\u88ab\u9700\u8981\uff0c\u6216\u5176\u7ed3\u679c\u5e38\u5e38\u88ab\u591a\u6b21\u9700\u8981\u7684\u65f6\u5019\uff0cover-eager evaluation\uff08\u8d85\u6025\u8bc4\u4f30\uff09\u53ef\u4ee5\u6539\u5584\u7a0b\u5e8f\u6548\u7387\uff09","title":"More Effective c++"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#google-c-style-guide","text":"\u82f1\u6587\uff1a Google C++ Style Guide \u4e2d\u6587\uff1a C++ \u98ce\u683c\u6307\u5357","title":"Google C++ Style Guide"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5176\u4ed6","text":"Bjarne Stroustrup \u7684\u5e38\u89c1\u95ee\u9898 Bjarne Stroustrup \u7684 C++ \u98ce\u683c\u548c\u6280\u5de7\u5e38\u89c1\u95ee\u9898","title":"\u5176\u4ed6"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-stl","text":"","title":"\ud83d\udce6 STL"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#stl-\u7d22\u5f15","text":"STL \u65b9\u6cd5\u542b\u4e49\u7d22\u5f15","title":"STL \u7d22\u5f15"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#stl-\u5bb9\u5668","text":"\u5bb9\u5668 \u5e95\u5c42\u6570\u636e\u7ed3\u6784 \u65f6\u95f4\u590d\u6742\u5ea6 \u6709\u65e0\u5e8f \u53ef\u4e0d\u53ef\u91cd\u590d \u5176\u4ed6 array \u6570\u7ec4 \u968f\u673a\u8bfb\u6539 O(1) \u65e0\u5e8f \u53ef\u91cd\u590d \u652f\u6301\u968f\u673a\u8bbf\u95ee vector \u6570\u7ec4 \u968f\u673a\u8bfb\u6539\u3001\u5c3e\u90e8\u63d2\u5165\u3001\u5c3e\u90e8\u5220\u9664 O(1) \u5934\u90e8\u63d2\u5165\u3001\u5934\u90e8\u5220\u9664 O(n) \u65e0\u5e8f \u53ef\u91cd\u590d \u652f\u6301\u968f\u673a\u8bbf\u95ee deque \u53cc\u7aef\u961f\u5217 \u5934\u5c3e\u63d2\u5165\u3001\u5934\u5c3e\u5220\u9664 O(1) \u65e0\u5e8f \u53ef\u91cd\u590d \u4e00\u4e2a\u4e2d\u592e\u63a7\u5236\u5668 + \u591a\u4e2a\u7f13\u51b2\u533a\uff0c\u652f\u6301\u9996\u5c3e\u5feb\u901f\u589e\u5220\uff0c\u652f\u6301\u968f\u673a\u8bbf\u95ee forward_list \u5355\u5411\u94fe\u8868 \u63d2\u5165\u3001\u5220\u9664 O(1) \u65e0\u5e8f \u53ef\u91cd\u590d \u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee list \u53cc\u5411\u94fe\u8868 \u63d2\u5165\u3001\u5220\u9664 O(1) \u65e0\u5e8f \u53ef\u91cd\u590d \u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee stack deque / list \u9876\u90e8\u63d2\u5165\u3001\u9876\u90e8\u5220\u9664 O(1) \u65e0\u5e8f \u53ef\u91cd\u590d deque \u6216 list \u5c01\u95ed\u5934\u7aef\u5f00\u53e3\uff0c\u4e0d\u7528 vector \u7684\u539f\u56e0\u5e94\u8be5\u662f\u5bb9\u91cf\u5927\u5c0f\u6709\u9650\u5236\uff0c\u6269\u5bb9\u8017\u65f6 queue deque / list \u5c3e\u90e8\u63d2\u5165\u3001\u5934\u90e8\u5220\u9664 O(1) \u65e0\u5e8f \u53ef\u91cd\u590d deque \u6216 list \u5c01\u95ed\u5934\u7aef\u5f00\u53e3\uff0c\u4e0d\u7528 vector \u7684\u539f\u56e0\u5e94\u8be5\u662f\u5bb9\u91cf\u5927\u5c0f\u6709\u9650\u5236\uff0c\u6269\u5bb9\u8017\u65f6 priority_queue vector + max-heap \u63d2\u5165\u3001\u5220\u9664 O(log 2 n) \u6709\u5e8f \u53ef\u91cd\u590d vector\u5bb9\u5668+heap\u5904\u7406\u89c4\u5219 set \u7ea2\u9ed1\u6811 \u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(log 2 n) \u6709\u5e8f \u4e0d\u53ef\u91cd\u590d multiset \u7ea2\u9ed1\u6811 \u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(log 2 n) \u6709\u5e8f \u53ef\u91cd\u590d map \u7ea2\u9ed1\u6811 \u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(log 2 n) \u6709\u5e8f \u4e0d\u53ef\u91cd\u590d multimap \u7ea2\u9ed1\u6811 \u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(log 2 n) \u6709\u5e8f \u53ef\u91cd\u590d unordered_set \u54c8\u5e0c\u8868 \u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(1) \u6700\u5dee O(n) \u65e0\u5e8f \u4e0d\u53ef\u91cd\u590d unordered_multiset \u54c8\u5e0c\u8868 \u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(1) \u6700\u5dee O(n) \u65e0\u5e8f \u53ef\u91cd\u590d unordered_map \u54c8\u5e0c\u8868 \u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(1) \u6700\u5dee O(n) \u65e0\u5e8f \u4e0d\u53ef\u91cd\u590d unordered_multimap \u54c8\u5e0c\u8868 \u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u627e O(1) \u6700\u5dee O(n) \u65e0\u5e8f \u53ef\u91cd\u590d","title":"STL \u5bb9\u5668"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#stl-\u7b97\u6cd5","text":"\u7b97\u6cd5 \u5e95\u5c42\u7b97\u6cd5 \u65f6\u95f4\u590d\u6742\u5ea6 \u53ef\u4e0d\u53ef\u91cd\u590d find \u987a\u5e8f\u67e5\u627e O(n) \u53ef\u91cd\u590d sort \u5185\u7701\u6392\u5e8f O(n*log 2 n) \u53ef\u91cd\u590d","title":"STL \u7b97\u6cd5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-\u6570\u636e\u7ed3\u6784","text":"","title":"\u303d\ufe0f \u6570\u636e\u7ed3\u6784"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u987a\u5e8f\u7ed3\u6784","text":"","title":"\u987a\u5e8f\u7ed3\u6784"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u987a\u5e8f\u6808sequence-stack","text":"SqStack.cpp \u987a\u5e8f\u6808\u6570\u636e\u7ed3\u6784\u548c\u56fe\u7247 typedef struct { ElemType * elem ; int top ; int size ; int increment ; } SqStack ;","title":"\u987a\u5e8f\u6808\uff08Sequence Stack\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u961f\u5217sequence-queue","text":"\u961f\u5217\u6570\u636e\u7ed3\u6784 typedef struct { ElemType * elem ; int front ; int rear ; int maxSize ; } SqQueue ;","title":"\u961f\u5217\uff08Sequence Queue\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u975e\u5faa\u73af\u961f\u5217","text":"\u975e\u5faa\u73af\u961f\u5217\u56fe\u7247 SqQueue.rear++","title":"\u975e\u5faa\u73af\u961f\u5217"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5faa\u73af\u961f\u5217","text":"\u5faa\u73af\u961f\u5217\u56fe\u7247 SqQueue.rear = (SqQueue.rear + 1) % SqQueue.maxSize","title":"\u5faa\u73af\u961f\u5217"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u987a\u5e8f\u8868sequence-list","text":"SqList.cpp \u987a\u5e8f\u8868\u6570\u636e\u7ed3\u6784\u548c\u56fe\u7247 typedef struct { ElemType * elem ; int length ; int size ; int increment ; } SqList ;","title":"\u987a\u5e8f\u8868\uff08Sequence List\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u94fe\u5f0f\u7ed3\u6784","text":"LinkList.cpp LinkList_with_head.cpp \u94fe\u5f0f\u6570\u636e\u7ed3\u6784 typedef struct LNode { ElemType data ; struct LNode * next ; } LNode , * LinkList ;","title":"\u94fe\u5f0f\u7ed3\u6784"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u94fe\u961f\u5217link-queue","text":"\u94fe\u961f\u5217\u56fe\u7247","title":"\u94fe\u961f\u5217\uff08Link Queue\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7ebf\u6027\u8868\u7684\u94fe\u5f0f\u8868\u793a","text":"","title":"\u7ebf\u6027\u8868\u7684\u94fe\u5f0f\u8868\u793a"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5355\u94fe\u8868link-list","text":"\u5355\u94fe\u8868\u56fe\u7247","title":"\u5355\u94fe\u8868\uff08Link List\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u53cc\u5411\u94fe\u8868du-link-list","text":"\u53cc\u5411\u94fe\u8868\u56fe\u7247","title":"\u53cc\u5411\u94fe\u8868\uff08Du-Link-List\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5faa\u73af\u94fe\u8868cir-link-list","text":"\u5faa\u73af\u94fe\u8868\u56fe\u7247","title":"\u5faa\u73af\u94fe\u8868\uff08Cir-Link-List\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u54c8\u5e0c\u8868","text":"HashTable.cpp","title":"\u54c8\u5e0c\u8868"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6982\u5ff5","text":"\u54c8\u5e0c\u51fd\u6570\uff1a H(key): K -> D , key \u2208 K","title":"\u6982\u5ff5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6784\u9020\u65b9\u6cd5","text":"\u76f4\u63a5\u5b9a\u5740\u6cd5 \u9664\u7559\u4f59\u6570\u6cd5 \u6570\u5b57\u5206\u6790\u6cd5 \u6298\u53e0\u6cd5 \u5e73\u65b9\u53d6\u4e2d\u6cd5","title":"\u6784\u9020\u65b9\u6cd5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u51b2\u7a81\u5904\u7406\u65b9\u6cd5","text":"\u94fe\u5730\u5740\u6cd5\uff1akey \u76f8\u540c\u7684\u7528\u5355\u94fe\u8868\u94fe\u63a5 \u5f00\u653e\u5b9a\u5740\u6cd5 \u7ebf\u6027\u63a2\u6d4b\u6cd5\uff1akey \u76f8\u540c -> \u653e\u5230 key \u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c Hi = (H(key) + i) % m \u4e8c\u6b21\u63a2\u6d4b\u6cd5\uff1akey \u76f8\u540c -> \u653e\u5230 Di = 1^2, -1^2, ..., \u00b1\uff08k)^2,(k<=m/2\uff09 \u968f\u673a\u63a2\u6d4b\u6cd5\uff1a H = (H(key) + \u4f2a\u968f\u673a\u6570) % m","title":"\u51b2\u7a81\u5904\u7406\u65b9\u6cd5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7ebf\u6027\u63a2\u6d4b\u7684\u54c8\u5e0c\u8868\u6570\u636e\u7ed3\u6784","text":"\u7ebf\u6027\u63a2\u6d4b\u7684\u54c8\u5e0c\u8868\u6570\u636e\u7ed3\u6784\u548c\u56fe\u7247 typedef char KeyType ; typedef struct { KeyType key ; } RcdType ; typedef struct { RcdType * rcd ; int size ; int count ; bool * tag ; } HashTable ;","title":"\u7ebf\u6027\u63a2\u6d4b\u7684\u54c8\u5e0c\u8868\u6570\u636e\u7ed3\u6784"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u9012\u5f52","text":"","title":"\u9012\u5f52"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6982\u5ff5_1","text":"\u51fd\u6570\u76f4\u63a5\u6216\u95f4\u63a5\u5730\u8c03\u7528\u81ea\u8eab","title":"\u6982\u5ff5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u9012\u5f52\u4e0e\u5206\u6cbb","text":"\u5206\u6cbb\u6cd5 \u95ee\u9898\u7684\u5206\u89e3 \u95ee\u9898\u89c4\u6a21\u7684\u5206\u89e3 \u6298\u534a\u67e5\u627e\uff08\u9012\u5f52\uff09 \u5f52\u5e76\u6392\u5e8f\uff08\u9012\u5f52\uff09 \u5feb\u901f\u6392\u5e8f\uff08\u9012\u5f52\uff09","title":"\u9012\u5f52\u4e0e\u5206\u6cbb"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u9012\u5f52\u4e0e\u8fed\u4ee3","text":"\u8fed\u4ee3\uff1a\u53cd\u590d\u5229\u7528\u53d8\u91cf\u65e7\u503c\u63a8\u51fa\u65b0\u503c \u6298\u534a\u67e5\u627e\uff08\u8fed\u4ee3\uff09 \u5f52\u5e76\u6392\u5e8f\uff08\u8fed\u4ee3\uff09","title":"\u9012\u5f52\u4e0e\u8fed\u4ee3"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5e7f\u4e49\u8868","text":"","title":"\u5e7f\u4e49\u8868"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5934\u5c3e\u94fe\u8868\u5b58\u50a8\u8868\u793a","text":"\u5e7f\u4e49\u8868\u7684\u5934\u5c3e\u94fe\u8868\u5b58\u50a8\u8868\u793a\u548c\u56fe\u7247 // \u5e7f\u4e49\u8868\u7684\u5934\u5c3e\u94fe\u8868\u5b58\u50a8\u8868\u793a typedef enum { ATOM , LIST } ElemTag ; // ATOM==0\uff1a\u539f\u5b50\uff0cLIST==1\uff1a\u5b50\u8868 typedef struct GLNode { ElemTag tag ; // \u516c\u5171\u90e8\u5206\uff0c\u7528\u4e8e\u533a\u5206\u539f\u5b50\u7ed3\u70b9\u548c\u8868\u7ed3\u70b9 union { // \u539f\u5b50\u7ed3\u70b9\u548c\u8868\u7ed3\u70b9\u7684\u8054\u5408\u90e8\u5206 AtomType atom ; // atom \u662f\u539f\u5b50\u7ed3\u70b9\u7684\u503c\u57df\uff0cAtomType \u7531\u7528\u6237\u5b9a\u4e49 struct { struct GLNode * hp , * tp ; } ptr ; // ptr \u662f\u8868\u7ed3\u70b9\u7684\u6307\u9488\u57df\uff0cprt.hp \u548c ptr.tp \u5206\u522b\u6307\u5411\u8868\u5934\u548c\u8868\u5c3e } a ; } * GList , GLNode ;","title":"\u5934\u5c3e\u94fe\u8868\u5b58\u50a8\u8868\u793a"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6269\u5c55\u7ebf\u6027\u94fe\u8868\u5b58\u50a8\u8868\u793a","text":"\u6269\u5c55\u7ebf\u6027\u94fe\u8868\u5b58\u50a8\u8868\u793a\u548c\u56fe\u7247 // \u5e7f\u4e49\u8868\u7684\u6269\u5c55\u7ebf\u6027\u94fe\u8868\u5b58\u50a8\u8868\u793a typedef enum { ATOM , LIST } ElemTag ; // ATOM==0\uff1a\u539f\u5b50\uff0cLIST==1\uff1a\u5b50\u8868 typedef struct GLNode1 { ElemTag tag ; // \u516c\u5171\u90e8\u5206\uff0c\u7528\u4e8e\u533a\u5206\u539f\u5b50\u7ed3\u70b9\u548c\u8868\u7ed3\u70b9 union { // \u539f\u5b50\u7ed3\u70b9\u548c\u8868\u7ed3\u70b9\u7684\u8054\u5408\u90e8\u5206 AtomType atom ; // \u539f\u5b50\u7ed3\u70b9\u7684\u503c\u57df struct GLNode1 * hp ; // \u8868\u7ed3\u70b9\u7684\u8868\u5934\u6307\u9488 } a ; struct GLNode1 * tp ; // \u76f8\u5f53\u4e8e\u7ebf\u6027\u94fe\u8868\u7684 next\uff0c\u6307\u5411\u4e0b\u4e00\u4e2a\u5143\u7d20\u7ed3\u70b9 } * GList1 , GLNode1 ;","title":"\u6269\u5c55\u7ebf\u6027\u94fe\u8868\u5b58\u50a8\u8868\u793a"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u4e8c\u53c9\u6811","text":"BinaryTree.cpp","title":"\u4e8c\u53c9\u6811"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6027\u8d28","text":"\u975e\u7a7a\u4e8c\u53c9\u6811\u7b2c i \u5c42\u6700\u591a 2 (i-1) \u4e2a\u7ed3\u70b9 \uff08i >= 1\uff09 \u6df1\u5ea6\u4e3a k \u7684\u4e8c\u53c9\u6811\u6700\u591a 2 k - 1 \u4e2a\u7ed3\u70b9 \uff08k >= 1\uff09 \u5ea6\u4e3a 0 \u7684\u7ed3\u70b9\u6570\u4e3a n 0 \uff0c\u5ea6\u4e3a 2 \u7684\u7ed3\u70b9\u6570\u4e3a n 2 \uff0c\u5219 n 0 = n 2 + 1 \u6709 n \u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u6df1\u5ea6 k = \u230a log 2 (n) \u230b + 1 \u5bf9\u4e8e\u542b n \u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u4e2d\u7f16\u53f7\u4e3a i \uff081 <= i <= n\uff09 \u7684\u7ed3\u70b9 \u82e5 i = 1\uff0c\u4e3a\u6839\uff0c\u5426\u5219\u53cc\u4eb2\u4e3a \u230a i / 2 \u230b \u82e5 2i > n\uff0c\u5219 i \u7ed3\u70b9\u6ca1\u6709\u5de6\u5b69\u5b50\uff0c\u5426\u5219\u5b69\u5b50\u7f16\u53f7\u4e3a 2i \u82e5 2i + 1 > n\uff0c\u5219 i \u7ed3\u70b9\u6ca1\u6709\u53f3\u5b69\u5b50\uff0c\u5426\u5219\u5b69\u5b50\u7f16\u53f7\u4e3a 2i + 1","title":"\u6027\u8d28"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5b58\u50a8\u7ed3\u6784","text":"\u4e8c\u53c9\u6811\u6570\u636e\u7ed3\u6784 typedef struct BiTNode { TElemType data ; struct BiTNode * lchild , * rchild ; } BiTNode , * BiTree ;","title":"\u5b58\u50a8\u7ed3\u6784"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u987a\u5e8f\u5b58\u50a8","text":"\u4e8c\u53c9\u6811\u987a\u5e8f\u5b58\u50a8\u56fe\u7247","title":"\u987a\u5e8f\u5b58\u50a8"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u94fe\u5f0f\u5b58\u50a8","text":"\u4e8c\u53c9\u6811\u94fe\u5f0f\u5b58\u50a8\u56fe\u7247","title":"\u94fe\u5f0f\u5b58\u50a8"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u904d\u5386\u65b9\u5f0f","text":"\u5148\u5e8f\u904d\u5386 \u4e2d\u5e8f\u904d\u5386 \u540e\u7eed\u904d\u5386 \u5c42\u6b21\u904d\u5386","title":"\u904d\u5386\u65b9\u5f0f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5206\u7c7b_1","text":"\u6ee1\u4e8c\u53c9\u6811 \u5b8c\u5168\u4e8c\u53c9\u6811\uff08\u5806\uff09 \u5927\u9876\u5806\uff1a\u6839 >= \u5de6 && \u6839 >= \u53f3 \u5c0f\u9876\u5806\uff1a\u6839 <= \u5de6 && \u6839 <= \u53f3 \u4e8c\u53c9\u67e5\u627e\u6811\uff08\u4e8c\u53c9\u6392\u5e8f\u6811\uff09\uff1a\u5de6 < \u6839 < \u53f3 \u5e73\u8861\u4e8c\u53c9\u6811\uff08AVL\u6811\uff09\uff1a| \u5de6\u5b50\u6811\u6811\u9ad8 - \u53f3\u5b50\u6811\u6811\u9ad8 | <= 1 \u6700\u5c0f\u5931\u8861\u6811\uff1a\u5e73\u8861\u4e8c\u53c9\u6811\u63d2\u5165\u65b0\u7ed3\u70b9\u5bfc\u81f4\u5931\u8861\u7684\u5b50\u6811\uff1a\u8c03\u6574\uff1a LL\u578b\uff1a\u6839\u7684\u5de6\u5b69\u5b50\u53f3\u65cb RR\u578b\uff1a\u6839\u7684\u53f3\u5b69\u5b50\u5de6\u65cb LR\u578b\uff1a\u6839\u7684\u5de6\u5b69\u5b50\u5de6\u65cb\uff0c\u518d\u53f3\u65cb RL\u578b\uff1a\u53f3\u5b69\u5b50\u7684\u5de6\u5b50\u6811\uff0c\u5148\u53f3\u65cb\uff0c\u518d\u5de6\u65cb","title":"\u5206\u7c7b"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5176\u4ed6\u6811\u53ca\u68ee\u6797","text":"","title":"\u5176\u4ed6\u6811\u53ca\u68ee\u6797"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6811\u7684\u5b58\u50a8\u7ed3\u6784","text":"\u53cc\u4eb2\u8868\u793a\u6cd5 \u53cc\u4eb2\u5b69\u5b50\u8868\u793a\u6cd5 \u5b69\u5b50\u5144\u5f1f\u8868\u793a\u6cd5","title":"\u6811\u7684\u5b58\u50a8\u7ed3\u6784"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5e76\u67e5\u96c6","text":"\u4e00\u79cd\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6\u6240\u6784\u6210\u7684\u96c6\u5408 S = {S1, S2, ..., Sn}","title":"\u5e76\u67e5\u96c6"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5e73\u8861\u4e8c\u53c9\u6811avl\u6811","text":"","title":"\u5e73\u8861\u4e8c\u53c9\u6811\uff08AVL\u6811\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6027\u8d28_1","text":"| \u5de6\u5b50\u6811\u6811\u9ad8 - \u53f3\u5b50\u6811\u6811\u9ad8 | <= 1 \u5e73\u8861\u4e8c\u53c9\u6811\u5fc5\u5b9a\u662f\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u53cd\u4e4b\u5219\u4e0d\u4e00\u5b9a \u6700\u5c0f\u4e8c\u53c9\u5e73\u8861\u6811\u7684\u8282\u70b9\u7684\u516c\u5f0f\uff1a F(n)=F(n-1)+F(n-2)+1 \uff081 \u662f\u6839\u8282\u70b9\uff0cF(n-1) \u662f\u5de6\u5b50\u6811\u7684\u8282\u70b9\u6570\u91cf\uff0cF(n-2) \u662f\u53f3\u5b50\u6811\u7684\u8282\u70b9\u6570\u91cf\uff09 \u5e73\u8861\u4e8c\u53c9\u6811\u56fe\u7247","title":"\u6027\u8d28"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6700\u5c0f\u5931\u8861\u6811","text":"\u5e73\u8861\u4e8c\u53c9\u6811\u63d2\u5165\u65b0\u7ed3\u70b9\u5bfc\u81f4\u5931\u8861\u7684\u5b50\u6811 \u8c03\u6574\uff1a LL \u578b\uff1a\u6839\u7684\u5de6\u5b69\u5b50\u53f3\u65cb RR \u578b\uff1a\u6839\u7684\u53f3\u5b69\u5b50\u5de6\u65cb LR \u578b\uff1a\u6839\u7684\u5de6\u5b69\u5b50\u5de6\u65cb\uff0c\u518d\u53f3\u65cb RL \u578b\uff1a\u53f3\u5b69\u5b50\u7684\u5de6\u5b50\u6811\uff0c\u5148\u53f3\u65cb\uff0c\u518d\u5de6\u65cb","title":"\u6700\u5c0f\u5931\u8861\u6811"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7ea2\u9ed1\u6811","text":"RedBlackTree.cpp","title":"\u7ea2\u9ed1\u6811"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7ea2\u9ed1\u6811\u7684\u7279\u5f81\u662f\u4ec0\u4e48","text":"\u8282\u70b9\u662f\u7ea2\u8272\u6216\u9ed1\u8272\u3002 \u6839\u662f\u9ed1\u8272\u3002 \u6240\u6709\u53f6\u5b50\u90fd\u662f\u9ed1\u8272\uff08\u53f6\u5b50\u662f NIL \u8282\u70b9\uff09\u3002 \u6bcf\u4e2a\u7ea2\u8272\u8282\u70b9\u5fc5\u987b\u6709\u4e24\u4e2a\u9ed1\u8272\u7684\u5b50\u8282\u70b9\u3002\uff08\u4ece\u6bcf\u4e2a\u53f6\u5b50\u5230\u6839\u7684\u6240\u6709\u8def\u5f84\u4e0a\u4e0d\u80fd\u6709\u4e24\u4e2a\u8fde\u7eed\u7684\u7ea2\u8272\u8282\u70b9\u3002\uff09\uff08\u65b0\u589e\u8282\u70b9\u7684\u7236\u8282\u70b9\u5fc5\u987b\u76f8\u540c\uff09 \u4ece\u4efb\u4e00\u8282\u70b9\u5230\u5176\u6bcf\u4e2a\u53f6\u5b50\u7684\u6240\u6709\u7b80\u5355\u8def\u5f84\u90fd\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8272\u8282\u70b9\u3002\uff08\u65b0\u589e\u8282\u70b9\u5fc5\u987b\u4e3a\u7ea2\uff09","title":"\u7ea2\u9ed1\u6811\u7684\u7279\u5f81\u662f\u4ec0\u4e48\uff1f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u8c03\u6574","text":"\u53d8\u8272 \u5de6\u65cb \u53f3\u65cb","title":"\u8c03\u6574"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5e94\u7528","text":"\u5173\u8054\u6570\u7ec4\uff1a\u5982 STL \u4e2d\u7684 map\u3001set","title":"\u5e94\u7528"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7ea2\u9ed1\u6811b-\u6811b-\u6811\u7684\u533a\u522b","text":"\u7ea2\u9ed1\u6811\u7684\u6df1\u5ea6\u6bd4\u8f83\u5927\uff0c\u800c B \u6811\u548c B+ \u6811\u7684\u6df1\u5ea6\u5219\u76f8\u5bf9\u8981\u5c0f\u4e00\u4e9b B+ \u6811\u5219\u5c06\u6570\u636e\u90fd\u4fdd\u5b58\u5728\u53f6\u5b50\u8282\u70b9\uff0c\u540c\u65f6\u901a\u8fc7\u94fe\u8868\u7684\u5f62\u5f0f\u5c06\u4ed6\u4eec\u8fde\u63a5\u5728\u4e00\u8d77\u3002","title":"\u7ea2\u9ed1\u6811\u3001B \u6811\u3001B+ \u6811\u7684\u533a\u522b\uff1f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#b-\u6811b-treeb-\u6811b-tree","text":"B \u6811\u3001B+ \u6811\u56fe\u7247","title":"B \u6811\uff08B-tree\uff09\u3001B+ \u6811\uff08B+-tree\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7279\u70b9","text":"\u4e00\u822c\u5316\u7684\u4e8c\u53c9\u67e5\u627e\u6811\uff08binary search tree\uff09 \u201c\u77ee\u80d6\u201d\uff0c\u5185\u90e8\uff08\u975e\u53f6\u5b50\uff09\u8282\u70b9\u53ef\u4ee5\u62e5\u6709\u53ef\u53d8\u6570\u91cf\u7684\u5b50\u8282\u70b9\uff08\u6570\u91cf\u8303\u56f4\u9884\u5148\u5b9a\u4e49\u597d\uff09","title":"\u7279\u70b9"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5e94\u7528_1","text":"\u5927\u90e8\u5206\u6587\u4ef6\u7cfb\u7edf\u3001\u6570\u636e\u5e93\u7cfb\u7edf\u90fd\u91c7\u7528B\u6811\u3001B+\u6811\u4f5c\u4e3a\u7d22\u5f15\u7ed3\u6784","title":"\u5e94\u7528"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u533a\u522b_1","text":"B+\u6811\u4e2d\u53ea\u6709\u53f6\u5b50\u8282\u70b9\u4f1a\u5e26\u6709\u6307\u5411\u8bb0\u5f55\u7684\u6307\u9488\uff08ROWID\uff09\uff0c\u800cB\u6811\u5219\u6240\u6709\u8282\u70b9\u90fd\u5e26\u6709\uff0c\u5728\u5185\u90e8\u8282\u70b9\u51fa\u73b0\u7684\u7d22\u5f15\u9879\u4e0d\u4f1a\u518d\u51fa\u73b0\u5728\u53f6\u5b50\u8282\u70b9\u4e2d\u3002 B+\u6811\u4e2d\u6240\u6709\u53f6\u5b50\u8282\u70b9\u90fd\u662f\u901a\u8fc7\u6307\u9488\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u800cB\u6811\u4e0d\u4f1a\u3002","title":"\u533a\u522b"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#b\u6811\u7684\u4f18\u70b9","text":"\u5bf9\u4e8e\u5728\u5185\u90e8\u8282\u70b9\u7684\u6570\u636e\uff0c\u53ef\u76f4\u63a5\u5f97\u5230\uff0c\u4e0d\u5fc5\u6839\u636e\u53f6\u5b50\u8282\u70b9\u6765\u5b9a\u4f4d\u3002","title":"B\u6811\u7684\u4f18\u70b9"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#b\u6811\u7684\u4f18\u70b9_1","text":"\u975e\u53f6\u5b50\u8282\u70b9\u4e0d\u4f1a\u5e26\u4e0a ROWID\uff0c\u8fd9\u6837\uff0c\u4e00\u4e2a\u5757\u4e2d\u53ef\u4ee5\u5bb9\u7eb3\u66f4\u591a\u7684\u7d22\u5f15\u9879\uff0c\u4e00\u662f\u53ef\u4ee5\u964d\u4f4e\u6811\u7684\u9ad8\u5ea6\u3002\u4e8c\u662f\u4e00\u4e2a\u5185\u90e8\u8282\u70b9\u53ef\u4ee5\u5b9a\u4f4d\u66f4\u591a\u7684\u53f6\u5b50\u8282\u70b9\u3002 \u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\u901a\u8fc7\u6307\u9488\u6765\u8fde\u63a5\uff0c\u8303\u56f4\u626b\u63cf\u5c06\u5341\u5206\u7b80\u5355\uff0c\u800c\u5bf9\u4e8eB\u6811\u6765\u8bf4\uff0c\u5219\u9700\u8981\u5728\u53f6\u5b50\u8282\u70b9\u548c\u5185\u90e8\u8282\u70b9\u4e0d\u505c\u7684\u5f80\u8fd4\u79fb\u52a8\u3002 B \u6811\u3001B+ \u6811\u533a\u522b\u6765\u81ea\uff1a differences-between-b-trees-and-b-trees \u3001 B\u6811\u548cB+\u6811\u7684\u533a\u522b","title":"B+\u6811\u7684\u4f18\u70b9"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u516b\u53c9\u6811","text":"\u516b\u53c9\u6811\u56fe\u7247 \u516b\u53c9\u6811\uff08octree\uff09\uff0c\u6216\u79f0\u516b\u5143\u6811\uff0c\u662f\u4e00\u79cd\u7528\u4e8e\u63cf\u8ff0\u4e09\u7ef4\u7a7a\u95f4\uff08\u5212\u5206\u7a7a\u95f4\uff09\u7684\u6811\u72b6\u6570\u636e\u7ed3\u6784\u3002\u516b\u53c9\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u4e00\u4e2a\u6b63\u65b9\u4f53\u7684\u4f53\u79ef\u5143\u7d20\uff0c\u6bcf\u4e2a\u8282\u70b9\u6709\u516b\u4e2a\u5b50\u8282\u70b9\uff0c\u8fd9\u516b\u4e2a\u5b50\u8282\u70b9\u6240\u8868\u793a\u7684\u4f53\u79ef\u5143\u7d20\u52a0\u5728\u4e00\u8d77\u5c31\u7b49\u4e8e\u7236\u8282\u70b9\u7684\u4f53\u79ef\u3002\u4e00\u822c\u4e2d\u5fc3\u70b9\u4f5c\u4e3a\u8282\u70b9\u7684\u5206\u53c9\u4e2d\u5fc3\u3002","title":"\u516b\u53c9\u6811"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7528\u9014","text":"\u4e09\u7ef4\u8ba1\u7b97\u673a\u56fe\u5f62 \u6700\u90bb\u8fd1\u641c\u7d22","title":"\u7528\u9014"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-\u7b97\u6cd5","text":"","title":"\u26a1\ufe0f \u7b97\u6cd5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6392\u5e8f","text":"\u6392\u5e8f\u7b97\u6cd5 \u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6 \u6700\u5dee\u65f6\u95f4\u590d\u6742\u5ea6 \u7a7a\u95f4\u590d\u6742\u5ea6 \u6570\u636e\u5bf9\u8c61\u7a33\u5b9a\u6027 \u5192\u6ce1\u6392\u5e8f O(n 2 ) O(n 2 ) O(1) \u7a33\u5b9a \u9009\u62e9\u6392\u5e8f O(n 2 ) O(n 2 ) O(1) \u6570\u7ec4\u4e0d\u7a33\u5b9a\u3001\u94fe\u8868\u7a33\u5b9a \u63d2\u5165\u6392\u5e8f O(n 2 ) O(n 2 ) O(1) \u7a33\u5b9a \u5feb\u901f\u6392\u5e8f O(n*log 2 n) O(n 2 ) O(log 2 n) \u4e0d\u7a33\u5b9a \u5806\u6392\u5e8f O(n*log 2 n) O(n*log 2 n) O(1) \u4e0d\u7a33\u5b9a \u5f52\u5e76\u6392\u5e8f O(n*log 2 n) O(n*log 2 n) O(n) \u7a33\u5b9a \u5e0c\u5c14\u6392\u5e8f O(n*log 2 n) O(n 2 ) O(1) \u4e0d\u7a33\u5b9a \u8ba1\u6570\u6392\u5e8f O(n+m) O(n+m) O(n+m) \u7a33\u5b9a \u6876\u6392\u5e8f O(n) O(n) O(m) \u7a33\u5b9a \u57fa\u6570\u6392\u5e8f O(k*n) O(n 2 ) \u7a33\u5b9a \u5747\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5217 k\uff1a\u4ee3\u8868\u6570\u503c\u4e2d\u7684 \u201c\u6570\u4f4d\u201d \u4e2a\u6570 n\uff1a\u4ee3\u8868\u6570\u636e\u89c4\u6a21 m\uff1a\u4ee3\u8868\u6570\u636e\u7684\u6700\u5927\u503c\u51cf\u6700\u5c0f\u503c \u6765\u81ea\uff1a wikipedia . \u6392\u5e8f\u7b97\u6cd5","title":"\u6392\u5e8f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u67e5\u627e","text":"\u67e5\u627e\u7b97\u6cd5 \u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6 \u7a7a\u95f4\u590d\u6742\u5ea6 \u67e5\u627e\u6761\u4ef6 \u987a\u5e8f\u67e5\u627e O(n) O(1) \u65e0\u5e8f\u6216\u6709\u5e8f \u4e8c\u5206\u67e5\u627e\uff08\u6298\u534a\u67e5\u627e\uff09 O(log 2 n) O(1) \u6709\u5e8f \u63d2\u503c\u67e5\u627e O(log 2 (log 2 n)) O(1) \u6709\u5e8f \u6590\u6ce2\u90a3\u5951\u67e5\u627e O(log 2 n) O(1) \u6709\u5e8f \u54c8\u5e0c\u67e5\u627e O(1) O(n) \u65e0\u5e8f\u6216\u6709\u5e8f \u4e8c\u53c9\u67e5\u627e\u6811\uff08\u4e8c\u53c9\u641c\u7d22\u6811\u67e5\u627e\uff09 O(log 2 n) \u7ea2\u9ed1\u6811 O(log 2 n) 2-3\u6811 O(log 2 n - log 3 n) B\u6811/B+\u6811 O(log 2 n)","title":"\u67e5\u627e"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u56fe\u641c\u7d22\u7b97\u6cd5","text":"\u56fe\u641c\u7d22\u7b97\u6cd5 \u6570\u636e\u7ed3\u6784 \u904d\u5386\u65f6\u95f4\u590d\u6742\u5ea6 \u7a7a\u95f4\u590d\u6742\u5ea6 BFS\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22 \u90bb\u63a5\u77e9\u9635 \u90bb\u63a5\u94fe\u8868 O(|v| 2 ) O(|v|+|E|) O(|v| 2 ) O(|v|+|E|) DFS\u6df1\u5ea6\u4f18\u5148\u641c\u7d22 \u90bb\u63a5\u77e9\u9635 \u90bb\u63a5\u94fe\u8868 O(|v| 2 ) O(|v|+|E|) O(|v| 2 ) O(|v|+|E|)","title":"\u56fe\u641c\u7d22\u7b97\u6cd5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5176\u4ed6\u7b97\u6cd5","text":"\u7b97\u6cd5 \u601d\u60f3 \u5e94\u7528 \u5206\u6cbb\u6cd5 \u628a\u4e00\u4e2a\u590d\u6742\u7684\u95ee\u9898\u5206\u6210\u4e24\u4e2a\u6216\u66f4\u591a\u7684\u76f8\u540c\u6216\u76f8\u4f3c\u7684\u5b50\u95ee\u9898\uff0c\u76f4\u5230\u6700\u540e\u5b50\u95ee\u9898\u53ef\u4ee5\u7b80\u5355\u7684\u76f4\u63a5\u6c42\u89e3\uff0c\u539f\u95ee\u9898\u7684\u89e3\u5373\u5b50\u95ee\u9898\u7684\u89e3\u7684\u5408\u5e76 \u5faa\u73af\u8d5b\u65e5\u7a0b\u5b89\u6392\u95ee\u9898 \u3001\u6392\u5e8f\u7b97\u6cd5\uff08\u5feb\u901f\u6392\u5e8f\u3001\u5f52\u5e76\u6392\u5e8f\uff09 \u52a8\u6001\u89c4\u5212 \u901a\u8fc7\u628a\u539f\u95ee\u9898\u5206\u89e3\u4e3a\u76f8\u5bf9\u7b80\u5355\u7684\u5b50\u95ee\u9898\u7684\u65b9\u5f0f\u6c42\u89e3\u590d\u6742\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u9002\u7528\u4e8e\u6709\u91cd\u53e0\u5b50\u95ee\u9898\u548c\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\u7684\u95ee\u9898 \u80cc\u5305\u95ee\u9898 \u3001\u6590\u6ce2\u90a3\u5951\u6570\u5217 \u8d2a\u5fc3\u6cd5 \u4e00\u79cd\u5728\u6bcf\u4e00\u6b65\u9009\u62e9\u4e2d\u90fd\u91c7\u53d6\u5728\u5f53\u524d\u72b6\u6001\u4e0b\u6700\u597d\u6216\u6700\u4f18\uff08\u5373\u6700\u6709\u5229\uff09\u7684\u9009\u62e9\uff0c\u4ece\u800c\u5e0c\u671b\u5bfc\u81f4\u7ed3\u679c\u662f\u6700\u597d\u6216\u6700\u4f18\u7684\u7b97\u6cd5 \u65c5\u884c\u63a8\u9500\u5458\u95ee\u9898\uff08\u6700\u77ed\u8def\u5f84\u95ee\u9898\uff09\u3001\u6700\u5c0f\u751f\u6210\u6811\u3001\u54c8\u592b\u66fc\u7f16\u7801","title":"\u5176\u4ed6\u7b97\u6cd5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-problems","text":"","title":"\u2753 Problems"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#single-problem","text":"Chessboard Coverage Problem\uff08\u68cb\u76d8\u8986\u76d6\u95ee\u9898\uff09 Knapsack Problem\uff08\u80cc\u5305\u95ee\u9898\uff09 Neumann Neighbor Problem\uff08\u51af\u8bfa\u4f9d\u66fc\u90bb\u5c45\u95ee\u9898\uff09 Round Robin Problem\uff08\u5faa\u73af\u8d5b\u65e5\u7a0b\u5b89\u6392\u95ee\u9898\uff09 Tubing Problem\uff08\u8f93\u6cb9\u7ba1\u9053\u95ee\u9898\uff09","title":"Single Problem"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#leetcode-problems","text":"Github . haoel/leetcode Github . pezy/LeetCode","title":"Leetcode Problems"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5251\u6307-offer","text":"Github . zhedahht/CodingInterviewChinese2 Github . gatieme/CodingInterviews","title":"\u5251\u6307 Offer"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#cracking-the-coding-interview-\u7a0b\u5e8f\u5458\u9762\u8bd5\u91d1\u5178","text":"Github . careercup/ctci \u725b\u5ba2\u7f51 . \u7a0b\u5e8f\u5458\u9762\u8bd5\u91d1\u5178","title":"Cracking the Coding Interview \u7a0b\u5e8f\u5458\u9762\u8bd5\u91d1\u5178"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u725b\u5ba2\u7f51","text":"\u725b\u5ba2\u7f51 . \u5728\u7ebf\u7f16\u7a0b\u4e13\u9898","title":"\u725b\u5ba2\u7f51"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-\u64cd\u4f5c\u7cfb\u7edf","text":"","title":"\ud83d\udcbb \u64cd\u4f5c\u7cfb\u7edf"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b","text":"\u5bf9\u4e8e\u6709\u7ebf\u7a0b\u7cfb\u7edf\uff1a * \u8fdb\u7a0b\u662f\u8d44\u6e90\u5206\u914d\u7684\u72ec\u7acb\u5355\u4f4d * \u7ebf\u7a0b\u662f\u8d44\u6e90\u8c03\u5ea6\u7684\u72ec\u7acb\u5355\u4f4d \u5bf9\u4e8e\u65e0\u7ebf\u7a0b\u7cfb\u7edf\uff1a * \u8fdb\u7a0b\u662f\u8d44\u6e90\u8c03\u5ea6\u3001\u5206\u914d\u7684\u72ec\u7acb\u5355\u4f4d","title":"\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u65b9\u5f0f\u4ee5\u53ca\u4f18\u7f3a\u70b9","text":"\u7ba1\u9053\uff08PIPE\uff09 \u6709\u540d\u7ba1\u9053\uff1a\u4e00\u79cd\u534a\u53cc\u5de5\u7684\u901a\u4fe1\u65b9\u5f0f\uff0c\u5b83\u5141\u8bb8\u65e0\u4eb2\u7f18\u5173\u7cfb\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1 \u4f18\u70b9\uff1a\u53ef\u4ee5\u5b9e\u73b0\u4efb\u610f\u5173\u7cfb\u7684\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1 \u7f3a\u70b9\uff1a \u957f\u671f\u5b58\u4e8e\u7cfb\u7edf\u4e2d\uff0c\u4f7f\u7528\u4e0d\u5f53\u5bb9\u6613\u51fa\u9519 \u7f13\u51b2\u533a\u6709\u9650 \u65e0\u540d\u7ba1\u9053\uff1a\u4e00\u79cd\u534a\u53cc\u5de5\u7684\u901a\u4fe1\u65b9\u5f0f\uff0c\u53ea\u80fd\u5728\u5177\u6709\u4eb2\u7f18\u5173\u7cfb\u7684\u8fdb\u7a0b\u95f4\u4f7f\u7528\uff08\u7236\u5b50\u8fdb\u7a0b\uff09 \u4f18\u70b9\uff1a\u7b80\u5355\u65b9\u4fbf \u7f3a\u70b9\uff1a \u5c40\u9650\u4e8e\u5355\u5411\u901a\u4fe1 \u53ea\u80fd\u521b\u5efa\u5728\u5b83\u7684\u8fdb\u7a0b\u4ee5\u53ca\u5176\u6709\u4eb2\u7f18\u5173\u7cfb\u7684\u8fdb\u7a0b\u4e4b\u95f4 \u7f13\u51b2\u533a\u6709\u9650 \u4fe1\u53f7\u91cf\uff08Semaphore\uff09\uff1a\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u53ef\u4ee5\u7528\u6765\u63a7\u5236\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u5171\u4eab\u8d44\u6e90\u7684\u8bbf\u95ee \u4f18\u70b9\uff1a\u53ef\u4ee5\u540c\u6b65\u8fdb\u7a0b \u7f3a\u70b9\uff1a\u4fe1\u53f7\u91cf\u6709\u9650 \u4fe1\u53f7\uff08Signal\uff09\uff1a\u4e00\u79cd\u6bd4\u8f83\u590d\u6742\u7684\u901a\u4fe1\u65b9\u5f0f\uff0c\u7528\u4e8e\u901a\u77e5\u63a5\u6536\u8fdb\u7a0b\u67d0\u4e2a\u4e8b\u4ef6\u5df2\u7ecf\u53d1\u751f \u6d88\u606f\u961f\u5217\uff08Message Queue\uff09\uff1a\u662f\u6d88\u606f\u7684\u94fe\u8868\uff0c\u5b58\u653e\u5728\u5185\u6838\u4e2d\u5e76\u7531\u6d88\u606f\u961f\u5217\u6807\u8bc6\u7b26\u6807\u8bc6 \u4f18\u70b9\uff1a\u53ef\u4ee5\u5b9e\u73b0\u4efb\u610f\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\uff0c\u5e76\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\u6765\u5b9e\u73b0\u6d88\u606f\u53d1\u9001\u548c\u63a5\u6536\u4e4b\u95f4\u7684\u540c\u6b65\uff0c\u65e0\u9700\u8003\u8651\u540c\u6b65\u95ee\u9898\uff0c\u65b9\u4fbf \u7f3a\u70b9\uff1a\u4fe1\u606f\u7684\u590d\u5236\u9700\u8981\u989d\u5916\u6d88\u8017 CPU \u7684\u65f6\u95f4\uff0c\u4e0d\u9002\u5b9c\u4e8e\u4fe1\u606f\u91cf\u5927\u6216\u64cd\u4f5c\u9891\u7e41\u7684\u573a\u5408 \u5171\u4eab\u5185\u5b58\uff08Shared Memory\uff09\uff1a\u6620\u5c04\u4e00\u6bb5\u80fd\u88ab\u5176\u4ed6\u8fdb\u7a0b\u6240\u8bbf\u95ee\u7684\u5185\u5b58\uff0c\u8fd9\u6bb5\u5171\u4eab\u5185\u5b58\u7531\u4e00\u4e2a\u8fdb\u7a0b\u521b\u5efa\uff0c\u4f46\u591a\u4e2a\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u8bbf\u95ee \u4f18\u70b9\uff1a\u65e0\u987b\u590d\u5236\uff0c\u5feb\u6377\uff0c\u4fe1\u606f\u91cf\u5927 \u7f3a\u70b9\uff1a \u901a\u4fe1\u662f\u901a\u8fc7\u5c06\u5171\u4eab\u7a7a\u95f4\u7f13\u51b2\u533a\u76f4\u63a5\u9644\u52a0\u5230\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e2d\u6765\u5b9e\u73b0\u7684\uff0c\u56e0\u6b64\u8fdb\u7a0b\u95f4\u7684\u8bfb\u5199\u64cd\u4f5c\u7684\u540c\u6b65\u95ee\u9898 \u5229\u7528\u5185\u5b58\u7f13\u51b2\u533a\u76f4\u63a5\u4ea4\u6362\u4fe1\u606f\uff0c\u5185\u5b58\u7684\u5b9e\u4f53\u5b58\u5728\u4e8e\u8ba1\u7b97\u673a\u4e2d\uff0c\u53ea\u80fd\u540c\u4e00\u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u7684\u8bf8\u591a\u8fdb\u7a0b\u5171\u4eab\uff0c\u4e0d\u65b9\u4fbf\u7f51\u7edc\u901a\u4fe1 \u5957\u63a5\u5b57\uff08Socket\uff09\uff1a\u53ef\u7528\u4e8e\u4e0d\u540c\u8ba1\u7b97\u673a\u95f4\u7684\u8fdb\u7a0b\u901a\u4fe1 \u4f18\u70b9\uff1a \u4f20\u8f93\u6570\u636e\u4e3a\u5b57\u8282\u7ea7\uff0c\u4f20\u8f93\u6570\u636e\u53ef\u81ea\u5b9a\u4e49\uff0c\u6570\u636e\u91cf\u5c0f\u6548\u7387\u9ad8 \u4f20\u8f93\u6570\u636e\u65f6\u95f4\u77ed\uff0c\u6027\u80fd\u9ad8 \u9002\u5408\u4e8e\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u4e4b\u95f4\u4fe1\u606f\u5b9e\u65f6\u4ea4\u4e92 \u53ef\u4ee5\u52a0\u5bc6,\u6570\u636e\u5b89\u5168\u6027\u5f3a \u7f3a\u70b9\uff1a\u9700\u5bf9\u4f20\u8f93\u7684\u6570\u636e\u8fdb\u884c\u89e3\u6790\uff0c\u8f6c\u5316\u6210\u5e94\u7528\u7ea7\u7684\u6570\u636e\u3002","title":"\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u65b9\u5f0f\u4ee5\u53ca\u4f18\u7f3a\u70b9"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7ebf\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u65b9\u5f0f","text":"\u9501\u673a\u5236\uff1a\u5305\u62ec\u4e92\u65a5\u9501/\u91cf\uff08mutex\uff09\u3001\u8bfb\u5199\u9501\uff08reader-writer lock\uff09\u3001\u81ea\u65cb\u9501\uff08spin lock\uff09\u3001\u6761\u4ef6\u53d8\u91cf\uff08condition\uff09 \u4e92\u65a5\u9501/\u91cf\uff08mutex\uff09\uff1a\u63d0\u4f9b\u4e86\u4ee5\u6392\u4ed6\u65b9\u5f0f\u9632\u6b62\u6570\u636e\u7ed3\u6784\u88ab\u5e76\u53d1\u4fee\u6539\u7684\u65b9\u6cd5\u3002 \u8bfb\u5199\u9501\uff08reader-writer lock\uff09\uff1a\u5141\u8bb8\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bfb\u5171\u4eab\u6570\u636e\uff0c\u800c\u5bf9\u5199\u64cd\u4f5c\u662f\u4e92\u65a5\u7684\u3002 \u81ea\u65cb\u9501\uff08spin lock\uff09\u4e0e\u4e92\u65a5\u9501\u7c7b\u4f3c\uff0c\u90fd\u662f\u4e3a\u4e86\u4fdd\u62a4\u5171\u4eab\u8d44\u6e90\u3002\u4e92\u65a5\u9501\u662f\u5f53\u8d44\u6e90\u88ab\u5360\u7528\uff0c\u7533\u8bf7\u8005\u8fdb\u5165\u7761\u7720\u72b6\u6001\uff1b\u800c\u81ea\u65cb\u9501\u5219\u5faa\u73af\u68c0\u6d4b\u4fdd\u6301\u8005\u662f\u5426\u5df2\u7ecf\u91ca\u653e\u9501\u3002 \u6761\u4ef6\u53d8\u91cf\uff08condition\uff09\uff1a\u53ef\u4ee5\u4ee5\u539f\u5b50\u7684\u65b9\u5f0f\u963b\u585e\u8fdb\u7a0b\uff0c\u76f4\u5230\u67d0\u4e2a\u7279\u5b9a\u6761\u4ef6\u4e3a\u771f\u4e3a\u6b62\u3002\u5bf9\u6761\u4ef6\u7684\u6d4b\u8bd5\u662f\u5728\u4e92\u65a5\u9501\u7684\u4fdd\u62a4\u4e0b\u8fdb\u884c\u7684\u3002\u6761\u4ef6\u53d8\u91cf\u59cb\u7ec8\u4e0e\u4e92\u65a5\u9501\u4e00\u8d77\u4f7f\u7528\u3002 \u4fe1\u53f7\u91cf\u673a\u5236(Semaphore) \u65e0\u540d\u7ebf\u7a0b\u4fe1\u53f7\u91cf \u547d\u540d\u7ebf\u7a0b\u4fe1\u53f7\u91cf \u4fe1\u53f7\u673a\u5236(Signal)\uff1a\u7c7b\u4f3c\u8fdb\u7a0b\u95f4\u7684\u4fe1\u53f7\u5904\u7406 \u5c4f\u969c\uff08barrier\uff09\uff1a\u5c4f\u969c\u5141\u8bb8\u6bcf\u4e2a\u7ebf\u7a0b\u7b49\u5f85\uff0c\u76f4\u5230\u6240\u6709\u7684\u5408\u4f5c\u7ebf\u7a0b\u90fd\u8fbe\u5230\u67d0\u4e00\u70b9\uff0c\u7136\u540e\u4ece\u8be5\u70b9\u7ee7\u7eed\u6267\u884c\u3002 \u7ebf\u7a0b\u95f4\u7684\u901a\u4fe1\u76ee\u7684\u4e3b\u8981\u662f\u7528\u4e8e\u7ebf\u7a0b\u540c\u6b65\uff0c\u6240\u4ee5\u7ebf\u7a0b\u6ca1\u6709\u50cf\u8fdb\u7a0b\u901a\u4fe1\u4e2d\u7684\u7528\u4e8e\u6570\u636e\u4ea4\u6362\u7684\u901a\u4fe1\u673a\u5236 \u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u65b9\u5f0f\u4ee5\u53ca\u4f18\u7f3a\u70b9\u6765\u6e90\u4e8e\uff1a \u8fdb\u7a0b\u7ebf\u7a0b\u9762\u8bd5\u9898\u603b\u7ed3","title":"\u7ebf\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u65b9\u5f0f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u8fdb\u7a0b\u4e4b\u95f4\u79c1\u6709\u548c\u5171\u4eab\u7684\u8d44\u6e90","text":"\u79c1\u6709\uff1a\u5730\u5740\u7a7a\u95f4\u3001\u5806\u3001\u5168\u5c40\u53d8\u91cf\u3001\u6808\u3001\u5bc4\u5b58\u5668 \u5171\u4eab\uff1a\u4ee3\u7801\u6bb5\uff0c\u516c\u5171\u6570\u636e\uff0c\u8fdb\u7a0b\u76ee\u5f55\uff0c\u8fdb\u7a0b ID","title":"\u8fdb\u7a0b\u4e4b\u95f4\u79c1\u6709\u548c\u5171\u4eab\u7684\u8d44\u6e90"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7ebf\u7a0b\u4e4b\u95f4\u79c1\u6709\u548c\u5171\u4eab\u7684\u8d44\u6e90","text":"\u79c1\u6709\uff1a\u7ebf\u7a0b\u6808\uff0c\u5bc4\u5b58\u5668\uff0c\u7a0b\u5e8f\u8ba1\u6570\u5668 \u5171\u4eab\uff1a\u5806\uff0c\u5730\u5740\u7a7a\u95f4\uff0c\u5168\u5c40\u53d8\u91cf\uff0c\u9759\u6001\u53d8\u91cf","title":"\u7ebf\u7a0b\u4e4b\u95f4\u79c1\u6709\u548c\u5171\u4eab\u7684\u8d44\u6e90"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u591a\u8fdb\u7a0b\u4e0e\u591a\u7ebf\u7a0b\u95f4\u7684\u5bf9\u6bd4\u4f18\u52a3\u4e0e\u9009\u62e9","text":"","title":"\u591a\u8fdb\u7a0b\u4e0e\u591a\u7ebf\u7a0b\u95f4\u7684\u5bf9\u6bd4\u3001\u4f18\u52a3\u4e0e\u9009\u62e9"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5bf9\u6bd4","text":"\u5bf9\u6bd4\u7ef4\u5ea6 \u591a\u8fdb\u7a0b \u591a\u7ebf\u7a0b \u603b\u7ed3 \u6570\u636e\u5171\u4eab\u3001\u540c\u6b65 \u6570\u636e\u5171\u4eab\u590d\u6742\uff0c\u9700\u8981\u7528 IPC\uff1b\u6570\u636e\u662f\u5206\u5f00\u7684\uff0c\u540c\u6b65\u7b80\u5355 \u56e0\u4e3a\u5171\u4eab\u8fdb\u7a0b\u6570\u636e\uff0c\u6570\u636e\u5171\u4eab\u7b80\u5355\uff0c\u4f46\u4e5f\u662f\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\u5bfc\u81f4\u540c\u6b65\u590d\u6742 \u5404\u6709\u4f18\u52bf \u5185\u5b58\u3001CPU \u5360\u7528\u5185\u5b58\u591a\uff0c\u5207\u6362\u590d\u6742\uff0cCPU \u5229\u7528\u7387\u4f4e \u5360\u7528\u5185\u5b58\u5c11\uff0c\u5207\u6362\u7b80\u5355\uff0cCPU \u5229\u7528\u7387\u9ad8 \u7ebf\u7a0b\u5360\u4f18 \u521b\u5efa\u9500\u6bc1\u3001\u5207\u6362 \u521b\u5efa\u9500\u6bc1\u3001\u5207\u6362\u590d\u6742\uff0c\u901f\u5ea6\u6162 \u521b\u5efa\u9500\u6bc1\u3001\u5207\u6362\u7b80\u5355\uff0c\u901f\u5ea6\u5f88\u5feb \u7ebf\u7a0b\u5360\u4f18 \u7f16\u7a0b\u3001\u8c03\u8bd5 \u7f16\u7a0b\u7b80\u5355\uff0c\u8c03\u8bd5\u7b80\u5355 \u7f16\u7a0b\u590d\u6742\uff0c\u8c03\u8bd5\u590d\u6742 \u8fdb\u7a0b\u5360\u4f18 \u53ef\u9760\u6027 \u8fdb\u7a0b\u95f4\u4e0d\u4f1a\u4e92\u76f8\u5f71\u54cd \u4e00\u4e2a\u7ebf\u7a0b\u6302\u6389\u5c06\u5bfc\u81f4\u6574\u4e2a\u8fdb\u7a0b\u6302\u6389 \u8fdb\u7a0b\u5360\u4f18 \u5206\u5e03\u5f0f \u9002\u5e94\u4e8e\u591a\u6838\u3001\u591a\u673a\u5206\u5e03\u5f0f\uff1b\u5982\u679c\u4e00\u53f0\u673a\u5668\u4e0d\u591f\uff0c\u6269\u5c55\u5230\u591a\u53f0\u673a\u5668\u6bd4\u8f83\u7b80\u5355 \u9002\u5e94\u4e8e\u591a\u6838\u5206\u5e03\u5f0f \u8fdb\u7a0b\u5360\u4f18","title":"\u5bf9\u6bd4"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u4f18\u52a3","text":"\u4f18\u52a3 \u591a\u8fdb\u7a0b \u591a\u7ebf\u7a0b \u4f18\u70b9 \u7f16\u7a0b\u3001\u8c03\u8bd5\u7b80\u5355\uff0c\u53ef\u9760\u6027\u8f83\u9ad8 \u521b\u5efa\u3001\u9500\u6bc1\u3001\u5207\u6362\u901f\u5ea6\u5feb\uff0c\u5185\u5b58\u3001\u8d44\u6e90\u5360\u7528\u5c0f \u7f3a\u70b9 \u521b\u5efa\u3001\u9500\u6bc1\u3001\u5207\u6362\u901f\u5ea6\u6162\uff0c\u5185\u5b58\u3001\u8d44\u6e90\u5360\u7528\u5927 \u7f16\u7a0b\u3001\u8c03\u8bd5\u590d\u6742\uff0c\u53ef\u9760\u6027\u8f83\u5dee","title":"\u4f18\u52a3"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u9009\u62e9","text":"\u9700\u8981\u9891\u7e41\u521b\u5efa\u9500\u6bc1\u7684\u4f18\u5148\u7528\u7ebf\u7a0b \u9700\u8981\u8fdb\u884c\u5927\u91cf\u8ba1\u7b97\u7684\u4f18\u5148\u4f7f\u7528\u7ebf\u7a0b \u5f3a\u76f8\u5173\u7684\u5904\u7406\u7528\u7ebf\u7a0b\uff0c\u5f31\u76f8\u5173\u7684\u5904\u7406\u7528\u8fdb\u7a0b \u53ef\u80fd\u8981\u6269\u5c55\u5230\u591a\u673a\u5206\u5e03\u7684\u7528\u8fdb\u7a0b\uff0c\u591a\u6838\u5206\u5e03\u7684\u7528\u7ebf\u7a0b \u90fd\u6ee1\u8db3\u9700\u6c42\u7684\u60c5\u51b5\u4e0b\uff0c\u7528\u4f60\u6700\u719f\u6089\u3001\u6700\u62ff\u624b\u7684\u65b9\u5f0f \u591a\u8fdb\u7a0b\u4e0e\u591a\u7ebf\u7a0b\u95f4\u7684\u5bf9\u6bd4\u3001\u4f18\u52a3\u4e0e\u9009\u62e9\u6765\u81ea\uff1a \u591a\u7ebf\u7a0b\u8fd8\u662f\u591a\u8fdb\u7a0b\u7684\u9009\u62e9\u53ca\u533a\u522b","title":"\u9009\u62e9"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#linux-\u5185\u6838\u7684\u540c\u6b65\u65b9\u5f0f","text":"","title":"Linux \u5185\u6838\u7684\u540c\u6b65\u65b9\u5f0f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u539f\u56e0","text":"\u5728\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u91cc\uff0c\u540c\u4e00\u65f6\u95f4\u53ef\u80fd\u6709\u591a\u4e2a\u5185\u6838\u6267\u884c\u6d41\u5728\u6267\u884c\uff0c\u56e0\u6b64\u5185\u6838\u5176\u5b9e\u50cf\u591a\u8fdb\u7a0b\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4e00\u6837\u4e5f\u9700\u8981\u4e00\u4e9b\u540c\u6b65\u673a\u5236\u6765\u540c\u6b65\u5404\u6267\u884c\u5355\u5143\u5bf9\u5171\u4eab\u6570\u636e\u7684\u8bbf\u95ee\u3002\u5c24\u5176\u662f\u5728\u591a\u5904\u7406\u5668\u7cfb\u7edf\u4e0a\uff0c\u66f4\u9700\u8981\u4e00\u4e9b\u540c\u6b65\u673a\u5236\u6765\u540c\u6b65\u4e0d\u540c\u5904\u7406\u5668\u4e0a\u7684\u6267\u884c\u5355\u5143\u5bf9\u5171\u4eab\u7684\u6570\u636e\u7684\u8bbf\u95ee\u3002","title":"\u539f\u56e0"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u540c\u6b65\u65b9\u5f0f","text":"\u539f\u5b50\u64cd\u4f5c \u4fe1\u53f7\u91cf\uff08semaphore\uff09 \u8bfb\u5199\u4fe1\u53f7\u91cf\uff08rw_semaphore\uff09 \u81ea\u65cb\u9501\uff08spinlock\uff09 \u5927\u5185\u6838\u9501\uff08BKL\uff0cBig Kernel Lock\uff09 \u8bfb\u5199\u9501\uff08rwlock\uff09 \u5927\u8bfb\u8005\u9501\uff08brlock-Big Reader Lock\uff09 \u8bfb-\u62f7\u8d1d\u4fee\u6539(RCU\uff0cRead-Copy Update) \u987a\u5e8f\u9501\uff08seqlock\uff09 \u6765\u81ea\uff1a Linux \u5185\u6838\u7684\u540c\u6b65\u673a\u5236\uff0c\u7b2c 1 \u90e8\u5206 \u3001 Linux \u5185\u6838\u7684\u540c\u6b65\u673a\u5236\uff0c\u7b2c 2 \u90e8\u5206","title":"\u540c\u6b65\u65b9\u5f0f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6b7b\u9501","text":"","title":"\u6b7b\u9501"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u539f\u56e0_1","text":"\u7cfb\u7edf\u8d44\u6e90\u4e0d\u8db3 \u8d44\u6e90\u5206\u914d\u4e0d\u5f53 \u8fdb\u7a0b\u8fd0\u884c\u63a8\u8fdb\u987a\u5e8f\u4e0d\u5408\u9002","title":"\u539f\u56e0"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u4ea7\u751f\u6761\u4ef6","text":"\u4e92\u65a5 \u8bf7\u6c42\u548c\u4fdd\u6301 \u4e0d\u5265\u593a \u73af\u8def","title":"\u4ea7\u751f\u6761\u4ef6"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u9884\u9632","text":"\u6253\u7834\u4e92\u65a5\u6761\u4ef6\uff1a\u6539\u9020\u72ec\u5360\u6027\u8d44\u6e90\u4e3a\u865a\u62df\u8d44\u6e90\uff0c\u5927\u90e8\u5206\u8d44\u6e90\u5df2\u65e0\u6cd5\u6539\u9020\u3002 \u6253\u7834\u4e0d\u53ef\u62a2\u5360\u6761\u4ef6\uff1a\u5f53\u4e00\u8fdb\u7a0b\u5360\u6709\u4e00\u72ec\u5360\u6027\u8d44\u6e90\u540e\u53c8\u7533\u8bf7\u4e00\u72ec\u5360\u6027\u8d44\u6e90\u800c\u65e0\u6cd5\u6ee1\u8db3\uff0c\u5219\u9000\u51fa\u539f\u5360\u6709\u7684\u8d44\u6e90\u3002 \u6253\u7834\u5360\u6709\u4e14\u7533\u8bf7\u6761\u4ef6\uff1a\u91c7\u7528\u8d44\u6e90\u9884\u5148\u5206\u914d\u7b56\u7565\uff0c\u5373\u8fdb\u7a0b\u8fd0\u884c\u524d\u7533\u8bf7\u5168\u90e8\u8d44\u6e90\uff0c\u6ee1\u8db3\u5219\u8fd0\u884c\uff0c\u4e0d\u7136\u5c31\u7b49\u5f85\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u5360\u6709\u4e14\u7533\u8bf7\u3002 \u6253\u7834\u5faa\u73af\u7b49\u5f85\u6761\u4ef6\uff1a\u5b9e\u73b0\u8d44\u6e90\u6709\u5e8f\u5206\u914d\u7b56\u7565\uff0c\u5bf9\u6240\u6709\u8bbe\u5907\u5b9e\u73b0\u5206\u7c7b\u7f16\u53f7\uff0c\u6240\u6709\u8fdb\u7a0b\u53ea\u80fd\u91c7\u7528\u6309\u5e8f\u53f7\u9012\u589e\u7684\u5f62\u5f0f\u7533\u8bf7\u8d44\u6e90\u3002 \u6709\u5e8f\u8d44\u6e90\u5206\u914d\u6cd5 \u94f6\u884c\u5bb6\u7b97\u6cd5","title":"\u9884\u9632"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6587\u4ef6\u7cfb\u7edf","text":"Windows\uff1aFCB \u8868 + FAT + \u4f4d\u56fe Unix\uff1ainode + \u6df7\u5408\u7d22\u5f15 + \u6210\u7ec4\u94fe\u63a5","title":"\u6587\u4ef6\u7cfb\u7edf"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u4e3b\u673a\u5b57\u8282\u5e8f\u4e0e\u7f51\u7edc\u5b57\u8282\u5e8f","text":"","title":"\u4e3b\u673a\u5b57\u8282\u5e8f\u4e0e\u7f51\u7edc\u5b57\u8282\u5e8f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u4e3b\u673a\u5b57\u8282\u5e8fcpu-\u5b57\u8282\u5e8f","text":"","title":"\u4e3b\u673a\u5b57\u8282\u5e8f\uff08CPU \u5b57\u8282\u5e8f\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6982\u5ff5_2","text":"\u4e3b\u673a\u5b57\u8282\u5e8f\u53c8\u53eb CPU \u5b57\u8282\u5e8f\uff0c\u5176\u4e0d\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u51b3\u5b9a\u7684\uff0c\u800c\u662f\u7531 CPU \u6307\u4ee4\u96c6\u67b6\u6784\u51b3\u5b9a\u7684\u3002\u4e3b\u673a\u5b57\u8282\u5e8f\u5206\u4e3a\u4e24\u79cd\uff1a \u5927\u7aef\u5b57\u8282\u5e8f\uff08Big Endian\uff09\uff1a\u9ad8\u5e8f\u5b57\u8282\u5b58\u50a8\u5728\u4f4e\u4f4d\u5730\u5740\uff0c\u4f4e\u5e8f\u5b57\u8282\u5b58\u50a8\u5728\u9ad8\u4f4d\u5730\u5740 \u5c0f\u7aef\u5b57\u8282\u5e8f\uff08Little Endian\uff09\uff1a\u9ad8\u5e8f\u5b57\u8282\u5b58\u50a8\u5728\u9ad8\u4f4d\u5730\u5740\uff0c\u4f4e\u5e8f\u5b57\u8282\u5b58\u50a8\u5728\u4f4e\u4f4d\u5730\u5740","title":"\u6982\u5ff5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5b58\u50a8\u65b9\u5f0f","text":"32 \u4f4d\u6574\u6570 0x12345678 \u662f\u4ece\u8d77\u59cb\u4f4d\u7f6e\u4e3a 0x00 \u7684\u5730\u5740\u5f00\u59cb\u5b58\u653e\uff0c\u5219\uff1a \u5185\u5b58\u5730\u5740 0x00 0x01 0x02 0x03 \u5927\u7aef 12 34 56 78 \u5c0f\u7aef 78 56 34 12 \u5927\u7aef\u5c0f\u7aef\u56fe\u7247","title":"\u5b58\u50a8\u65b9\u5f0f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5224\u65ad\u5927\u7aef\u5c0f\u7aef","text":"\u5224\u65ad\u5927\u7aef\u5c0f\u7aef \u53ef\u4ee5\u8fd9\u6837\u5224\u65ad\u81ea\u5df1 CPU \u5b57\u8282\u5e8f\u662f\u5927\u7aef\u8fd8\u662f\u5c0f\u7aef\uff1a #include <iostream> using namespace std ; int main () { int i = 0x12345678 ; if ( * (( char * ) & i ) == 0x12 ) cout << \"\u5927\u7aef\" << endl ; else cout << \"\u5c0f\u7aef\" << endl ; return 0 ; }","title":"\u5224\u65ad\u5927\u7aef\u5c0f\u7aef"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5404\u67b6\u6784\u5904\u7406\u5668\u7684\u5b57\u8282\u5e8f","text":"x86\uff08Intel\u3001AMD\uff09\u3001MOS Technology 6502\u3001Z80\u3001VAX\u3001PDP-11 \u7b49\u5904\u7406\u5668\u4e3a\u5c0f\u7aef\u5e8f\uff1b Motorola 6800\u3001Motorola 68000\u3001PowerPC 970\u3001System/370\u3001SPARC\uff08\u9664 V9 \u5916\uff09\u7b49\u5904\u7406\u5668\u4e3a\u5927\u7aef\u5e8f\uff1b ARM\uff08\u9ed8\u8ba4\u5c0f\u7aef\u5e8f\uff09\u3001PowerPC\uff08\u9664 PowerPC 970 \u5916\uff09\u3001DEC Alpha\u3001SPARC V9\u3001MIPS\u3001PA-RISC \u53ca IA64 \u7684\u5b57\u8282\u5e8f\u662f\u53ef\u914d\u7f6e\u7684\u3002","title":"\u5404\u67b6\u6784\u5904\u7406\u5668\u7684\u5b57\u8282\u5e8f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7f51\u7edc\u5b57\u8282\u5e8f","text":"\u7f51\u7edc\u5b57\u8282\u987a\u5e8f\u662f TCP/IP \u4e2d\u89c4\u5b9a\u597d\u7684\u4e00\u79cd\u6570\u636e\u8868\u793a\u683c\u5f0f\uff0c\u5b83\u4e0e\u5177\u4f53\u7684 CPU \u7c7b\u578b\u3001\u64cd\u4f5c\u7cfb\u7edf\u7b49\u65e0\u5173\uff0c\u4ece\u800c\u53ef\u4ee5\u4fdd\u8bc1\u6570\u636e\u5728\u4e0d\u540c\u4e3b\u673a\u4e4b\u95f4\u4f20\u8f93\u65f6\u80fd\u591f\u88ab\u6b63\u786e\u89e3\u91ca\u3002 \u7f51\u7edc\u5b57\u8282\u987a\u5e8f\u91c7\u7528\uff1a\u5927\u7aef\uff08Big Endian\uff09\u6392\u5217\u65b9\u5f0f\u3002","title":"\u7f51\u7edc\u5b57\u8282\u5e8f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u9875\u9762\u7f6e\u6362\u7b97\u6cd5","text":"\u5728\u5730\u5740\u6620\u5c04\u8fc7\u7a0b\u4e2d\uff0c\u82e5\u5728\u9875\u9762\u4e2d\u53d1\u73b0\u6240\u8981\u8bbf\u95ee\u7684\u9875\u9762\u4e0d\u5728\u5185\u5b58\u4e2d\uff0c\u5219\u4ea7\u751f\u7f3a\u9875\u4e2d\u65ad\u3002\u5f53\u53d1\u751f\u7f3a\u9875\u4e2d\u65ad\u65f6\uff0c\u5982\u679c\u64cd\u4f5c\u7cfb\u7edf\u5185\u5b58\u4e2d\u6ca1\u6709\u7a7a\u95f2\u9875\u9762\uff0c\u5219\u64cd\u4f5c\u7cfb\u7edf\u5fc5\u987b\u5728\u5185\u5b58\u9009\u62e9\u4e00\u4e2a\u9875\u9762\u5c06\u5176\u79fb\u51fa\u5185\u5b58\uff0c\u4ee5\u4fbf\u4e3a\u5373\u5c06\u8c03\u5165\u7684\u9875\u9762\u8ba9\u51fa\u7a7a\u95f4\u3002\u800c\u7528\u6765\u9009\u62e9\u6dd8\u6c70\u54ea\u4e00\u9875\u7684\u89c4\u5219\u53eb\u505a\u9875\u9762\u7f6e\u6362\u7b97\u6cd5\u3002","title":"\u9875\u9762\u7f6e\u6362\u7b97\u6cd5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5206\u7c7b_2","text":"\u5168\u5c40\u7f6e\u6362\uff1a\u5728\u6574\u4e2a\u5185\u5b58\u7a7a\u95f4\u7f6e\u6362 \u5c40\u90e8\u7f6e\u6362\uff1a\u5728\u672c\u8fdb\u7a0b\u4e2d\u8fdb\u884c\u7f6e\u6362","title":"\u5206\u7c7b"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7b97\u6cd5","text":"\u5168\u5c40\uff1a * \u5de5\u4f5c\u96c6\u7b97\u6cd5 * \u7f3a\u9875\u7387\u7f6e\u6362\u7b97\u6cd5 \u5c40\u90e8\uff1a * \u6700\u4f73\u7f6e\u6362\u7b97\u6cd5\uff08OPT\uff09 * \u5148\u8fdb\u5148\u51fa\u7f6e\u6362\u7b97\u6cd5\uff08FIFO\uff09 * \u6700\u8fd1\u6700\u4e45\u672a\u4f7f\u7528\uff08LRU\uff09\u7b97\u6cd5 * \u65f6\u949f\uff08Clock\uff09\u7f6e\u6362\u7b97\u6cd5","title":"\u7b97\u6cd5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-\u8ba1\u7b97\u673a\u7f51\u7edc","text":"\u672c\u8282\u90e8\u5206\u77e5\u8bc6\u70b9\u6765\u81ea\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\uff08\u7b2c 7 \u7248\uff09\u300b \u8ba1\u7b97\u673a\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\uff1a","title":"\u2601\ufe0f \u8ba1\u7b97\u673a\u7f51\u7edc"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5404\u5c42\u4f5c\u7528\u53ca\u534f\u8bae","text":"\u5206\u5c42 \u4f5c\u7528 \u534f\u8bae \u7269\u7406\u5c42 \u901a\u8fc7\u5a92\u4ecb\u4f20\u8f93\u6bd4\u7279\uff0c\u786e\u5b9a\u673a\u68b0\u53ca\u7535\u6c14\u89c4\u8303\uff08\u6bd4\u7279 Bit\uff09 RJ45\u3001CLOCK\u3001IEEE802.3\uff08\u4e2d\u7ee7\u5668\uff0c\u96c6\u7ebf\u5668\uff09 \u6570\u636e\u94fe\u8def\u5c42 \u5c06\u6bd4\u7279\u7ec4\u88c5\u6210\u5e27\u548c\u70b9\u5230\u70b9\u7684\u4f20\u9012\uff08\u5e27 Frame\uff09 PPP\u3001FR\u3001HDLC\u3001VLAN\u3001MAC\uff08\u7f51\u6865\uff0c\u4ea4\u6362\u673a\uff09 \u7f51\u7edc\u5c42 \u8d1f\u8d23\u6570\u636e\u5305\u4ece\u6e90\u5230\u5bbf\u7684\u4f20\u9012\u548c\u7f51\u9645\u4e92\u8fde\uff08\u5305 Packet\uff09 IP\u3001ICMP\u3001ARP\u3001RARP\u3001OSPF\u3001IPX\u3001RIP\u3001IGRP\uff08\u8def\u7531\u5668\uff09 \u8fd0\u8f93\u5c42 \u63d0\u4f9b\u7aef\u5230\u7aef\u7684\u53ef\u9760\u62a5\u6587\u4f20\u9012\u548c\u9519\u8bef\u6062\u590d\uff08 \u6bb5Segment\uff09 TCP\u3001UDP\u3001SPX \u4f1a\u8bdd\u5c42 \u5efa\u7acb\u3001\u7ba1\u7406\u548c\u7ec8\u6b62\u4f1a\u8bdd\uff08\u4f1a\u8bdd\u534f\u8bae\u6570\u636e\u5355\u5143 SPDU\uff09 NFS\u3001SQL\u3001NETBIOS\u3001RPC \u8868\u793a\u5c42 \u5bf9\u6570\u636e\u8fdb\u884c\u7ffb\u8bd1\u3001\u52a0\u5bc6\u548c\u538b\u7f29\uff08\u8868\u793a\u534f\u8bae\u6570\u636e\u5355\u5143 PPDU\uff09 JPEG\u3001MPEG\u3001ASII \u5e94\u7528\u5c42 \u5141\u8bb8\u8bbf\u95eeOSI\u73af\u5883\u7684\u624b\u6bb5\uff08\u5e94\u7528\u534f\u8bae\u6570\u636e\u5355\u5143 APDU\uff09 FTP\u3001DNS\u3001Telnet\u3001SMTP\u3001HTTP\u3001WWW\u3001NFS","title":"\u5404\u5c42\u4f5c\u7528\u53ca\u534f\u8bae"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7269\u7406\u5c42","text":"\u4f20\u8f93\u6570\u636e\u7684\u5355\u4f4d\uff1a\u6bd4\u7279 \u6570\u636e\u4f20\u8f93\u7cfb\u7edf\uff1a\u6e90\u7cfb\u7edf\uff08\u6e90\u70b9\u3001\u53d1\u9001\u5668\uff09 \u2192 \u4f20\u8f93\u7cfb\u7edf \u2192 \u76ee\u7684\u7cfb\u7edf\uff08\u63a5\u6536\u5668\u3001\u7ec8\u70b9\uff09 \u901a\u9053\uff1a * \u5355\u5411\u901a\u9053\uff08\u5355\u5de5\u901a\u9053\uff09\uff1a\u53ea\u6709\u4e00\u4e2a\u65b9\u5411\u901a\u4fe1\uff0c\u6ca1\u6709\u53cd\u65b9\u5411\u4ea4\u4e92\uff0c\u5982\u5e7f\u64ad * \u53cc\u5411\u4ea4\u66ff\u901a\u4fe1\uff08\u534a\u53cc\u5de5\u901a\u4fe1\uff09\uff1a\u901a\u4fe1\u53cc\u65b9\u90fd\u53ef\u53d1\u6d88\u606f\uff0c\u4f46\u4e0d\u80fd\u540c\u65f6\u53d1\u9001\u6216\u63a5\u6536 * \u53cc\u5411\u540c\u65f6\u901a\u4fe1\uff08\u5168\u53cc\u5de5\u901a\u4fe1\uff09\uff1a\u901a\u4fe1\u53cc\u65b9\u53ef\u4ee5\u540c\u65f6\u53d1\u9001\u548c\u63a5\u6536\u4fe1\u606f \u901a\u9053\u590d\u7528\u6280\u672f\uff1a * \u9891\u5206\u590d\u7528\uff08FDM\uff0cFrequency Division Multiplexing\uff09\uff1a\u4e0d\u540c\u7528\u6237\u5728\u4e0d\u540c\u9891\u5e26\uff0c\u6240\u7528\u7528\u6237\u5728\u540c\u6837\u65f6\u95f4\u5360\u7528\u4e0d\u540c\u5e26\u5bbd\u8d44\u6e90 * \u65f6\u5206\u590d\u7528\uff08TDM\uff0cTime Division Multiplexing\uff09\uff1a\u4e0d\u540c\u7528\u6237\u5728\u540c\u4e00\u65f6\u95f4\u6bb5\u7684\u4e0d\u540c\u65f6\u95f4\u7247\uff0c\u6240\u6709\u7528\u6237\u5728\u4e0d\u540c\u65f6\u95f4\u5360\u7528\u540c\u6837\u7684\u9891\u5e26\u5bbd\u5ea6 * \u6ce2\u5206\u590d\u7528\uff08WDM\uff0cWavelength Division Multiplexing\uff09\uff1a\u5149\u7684\u9891\u5206\u590d\u7528 * \u7801\u5206\u590d\u7528\uff08CDM\uff0cCode Division Multiplexing\uff09\uff1a\u4e0d\u540c\u7528\u6237\u4f7f\u7528\u4e0d\u540c\u7684\u7801\uff0c\u53ef\u4ee5\u5728\u540c\u6837\u65f6\u95f4\u4f7f\u7528\u540c\u6837\u9891\u5e26\u901a\u4fe1","title":"\u7269\u7406\u5c42"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6570\u636e\u94fe\u8def\u5c42","text":"\u4e3b\u8981\u4fe1\u9053\uff1a * \u70b9\u5bf9\u70b9\u4fe1\u9053 * \u5e7f\u64ad\u4fe1\u9053","title":"\u6570\u636e\u94fe\u8def\u5c42"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u70b9\u5bf9\u70b9\u4fe1\u9053","text":"\u6570\u636e\u5355\u5143\uff1a\u5e27 \u4e09\u4e2a\u57fa\u672c\u95ee\u9898\uff1a * \u5c01\u88c5\u6210\u5e27\uff1a\u628a\u7f51\u7edc\u5c42\u7684 IP \u6570\u636e\u62a5\u5c01\u88c5\u6210\u5e27\uff0c SOH - \u6570\u636e\u90e8\u5206 - EOT * \u900f\u660e\u4f20\u8f93\uff1a\u4e0d\u7ba1\u6570\u636e\u90e8\u5206\u4ec0\u4e48\u5b57\u7b26\uff0c\u90fd\u80fd\u4f20\u8f93\u51fa\u53bb\uff1b\u53ef\u4ee5\u901a\u8fc7\u5b57\u8282\u586b\u5145\u65b9\u6cd5\u89e3\u51b3\uff08\u51b2\u7a81\u5b57\u7b26\u524d\u52a0\u8f6c\u4e49\u5b57\u7b26\uff09 * \u5dee\u9519\u68c0\u6d4b\uff1a\u964d\u4f4e\u8bef\u7801\u7387\uff08BER\uff0cBit Error Rate\uff09\uff0c\u5e7f\u6cdb\u4f7f\u7528\u5faa\u73af\u5197\u4f59\u68c0\u6d4b\uff08CRC\uff0cCyclic Redundancy Check\uff09 \u70b9\u5bf9\u70b9\u534f\u8bae\uff08Point-to-Point Protocol\uff09\uff1a * \u70b9\u5bf9\u70b9\u534f\u8bae\uff08Point-to-Point Protocol\uff09\uff1a\u7528\u6237\u8ba1\u7b97\u673a\u548c ISP \u901a\u4fe1\u65f6\u6240\u4f7f\u7528\u7684\u534f\u8bae","title":"\u70b9\u5bf9\u70b9\u4fe1\u9053"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5e7f\u64ad\u4fe1\u9053","text":"\u5e7f\u64ad\u901a\u4fe1\uff1a * \u786c\u4ef6\u5730\u5740\uff08\u7269\u7406\u5730\u5740\u3001MAC \u5730\u5740\uff09 * \u5355\u64ad\uff08unicast\uff09\u5e27\uff08\u4e00\u5bf9\u4e00\uff09\uff1a\u6536\u5230\u7684\u5e27\u7684 MAC \u5730\u5740\u4e0e\u672c\u7ad9\u7684\u786c\u4ef6\u5730\u5740\u76f8\u540c * \u5e7f\u64ad\uff08broadcast\uff09\u5e27\uff08\u4e00\u5bf9\u5168\u4f53\uff09\uff1a\u53d1\u9001\u7ed9\u672c\u5c40\u57df\u7f51\u4e0a\u6240\u6709\u7ad9\u70b9\u7684\u5e27 * \u591a\u64ad\uff08multicast\uff09\u5e27\uff08\u4e00\u5bf9\u591a\uff09\uff1a\u53d1\u9001\u7ed9\u672c\u5c40\u57df\u7f51\u4e0a\u4e00\u90e8\u5206\u7ad9\u70b9\u7684\u5e27","title":"\u5e7f\u64ad\u4fe1\u9053"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7f51\u7edc\u5c42","text":"IP\uff08Internet Protocol\uff0c\u7f51\u9645\u534f\u8bae\uff09\u662f\u4e3a\u8ba1\u7b97\u673a\u7f51\u7edc\u76f8\u4e92\u8fde\u63a5\u8fdb\u884c\u901a\u4fe1\u800c\u8bbe\u8ba1\u7684\u534f\u8bae\u3002 ARP\uff08Address Resolution Protocol\uff0c\u5730\u5740\u89e3\u6790\u534f\u8bae\uff09 ICMP\uff08Internet Control Message Protocol\uff0c\u7f51\u9645\u63a7\u5236\u62a5\u6587\u534f\u8bae\uff09 IGMP\uff08Internet Group Management Protocol\uff0c\u7f51\u9645\u7ec4\u7ba1\u7406\u534f\u8bae\uff09","title":"\u7f51\u7edc\u5c42"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#ip-\u7f51\u9645\u534f\u8bae","text":"IP \u5730\u5740\u5206\u7c7b\uff1a * IP \u5730\u5740 ::= {<\u7f51\u7edc\u53f7>,<\u4e3b\u673a\u53f7>} IP \u5730\u5740\u7c7b\u522b \u7f51\u7edc\u53f7 \u7f51\u7edc\u8303\u56f4 \u4e3b\u673a\u53f7 IP \u5730\u5740\u8303\u56f4 A \u7c7b 8bit\uff0c\u7b2c\u4e00\u4f4d\u56fa\u5b9a\u4e3a 0 0 \u2014\u2014 127 24bit 1.0.0.0 \u2014\u2014 127.255.255.255 B \u7c7b 16bit\uff0c\u524d\u4e24\u4f4d\u56fa\u5b9a\u4e3a 10 128.0 \u2014\u2014 191.255 16bit 128.0.0.0 \u2014\u2014 191.255.255.255 C \u7c7b 24bit\uff0c\u524d\u4e09\u4f4d\u56fa\u5b9a\u4e3a 110 192.0.0 \u2014\u2014 223.255.255 8bit 192.0.0.0 \u2014\u2014 223.255.255.255 D \u7c7b \u524d\u56db\u4f4d\u56fa\u5b9a\u4e3a 1110\uff0c\u540e\u9762\u4e3a\u591a\u64ad\u5730\u5740 E \u7c7b \u524d\u4e94\u4f4d\u56fa\u5b9a\u4e3a 11110\uff0c\u540e\u9762\u4fdd\u7559\u4e3a\u4eca\u540e\u6240\u7528 IP \u6570\u636e\u62a5\u683c\u5f0f\uff1a","title":"IP \u7f51\u9645\u534f\u8bae"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#icmp-\u7f51\u9645\u63a7\u5236\u62a5\u6587\u534f\u8bae","text":"ICMP \u62a5\u6587\u683c\u5f0f\uff1a \u5e94\u7528\uff1a * PING\uff08Packet InterNet Groper\uff0c\u5206\u7ec4\u7f51\u95f4\u63a2\u6d4b\uff09\u6d4b\u8bd5\u4e24\u4e2a\u4e3b\u673a\u4e4b\u95f4\u7684\u8fde\u901a\u6027 * TTL\uff08Time To Live\uff0c\u751f\u5b58\u65f6\u95f4\uff09\u8be5\u5b57\u6bb5\u6307\u5b9a IP \u5305\u88ab\u8def\u7531\u5668\u4e22\u5f03\u4e4b\u524d\u5141\u8bb8\u901a\u8fc7\u7684\u6700\u5927\u7f51\u6bb5\u6570\u91cf","title":"ICMP \u7f51\u9645\u63a7\u5236\u62a5\u6587\u534f\u8bae"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5185\u90e8\u7f51\u5173\u534f\u8bae","text":"RIP\uff08Routing Information Protocol\uff0c\u8def\u7531\u4fe1\u606f\u534f\u8bae\uff09 OSPF\uff08Open Sortest Path First\uff0c\u5f00\u653e\u6700\u77ed\u8def\u5f84\u4f18\u5148\uff09","title":"\u5185\u90e8\u7f51\u5173\u534f\u8bae"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5916\u90e8\u7f51\u5173\u534f\u8bae","text":"BGP\uff08Border Gateway Protocol\uff0c\u8fb9\u754c\u7f51\u5173\u534f\u8bae\uff09","title":"\u5916\u90e8\u7f51\u5173\u534f\u8bae"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#ip\u591a\u64ad","text":"IGMP\uff08Internet Group Management Protocol\uff0c\u7f51\u9645\u7ec4\u7ba1\u7406\u534f\u8bae\uff09 \u591a\u64ad\u8def\u7531\u9009\u62e9\u534f\u8bae","title":"IP\u591a\u64ad"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#vpn-\u548c-nat","text":"VPN\uff08Virtual Private Network\uff0c\u865a\u62df\u4e13\u7528\u7f51\uff09 NAT\uff08Network Address Translation\uff0c\u7f51\u7edc\u5730\u5740\u8f6c\u6362\uff09","title":"VPN \u548c NAT"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u8def\u7531\u8868\u5305\u542b\u4ec0\u4e48","text":"\u7f51\u7edc ID\uff08Network ID, Network number\uff09\uff1a\u5c31\u662f\u76ee\u6807\u5730\u5740\u7684\u7f51\u7edc ID\u3002 \u5b50\u7f51\u63a9\u7801\uff08subnet mask\uff09\uff1a\u7528\u6765\u5224\u65ad IP \u6240\u5c5e\u7f51\u7edc \u4e0b\u4e00\u8df3\u5730\u5740/\u63a5\u53e3\uff08Next hop / interface\uff09\uff1a\u5c31\u662f\u6570\u636e\u5728\u53d1\u9001\u5230\u76ee\u6807\u5730\u5740\u7684\u65c5\u9014\u4e2d\u4e0b\u4e00\u7ad9\u7684\u5730\u5740\u3002\u5176\u4e2d interface \u6307\u5411 next hop\uff08\u5373\u4e3a\u4e0b\u4e00\u4e2a route\uff09\u3002\u4e00\u4e2a\u81ea\u6cbb\u7cfb\u7edf\uff08AS, Autonomous system\uff09\u4e2d\u7684 route \u5e94\u8be5\u5305\u542b\u533a\u57df\u5185\u6240\u6709\u7684\u5b50\u7f51\u7edc\uff0c\u800c\u9ed8\u8ba4\u7f51\u5173\uff08Network id: 0.0.0.0 , Netmask: 0.0.0.0 \uff09\u6307\u5411\u81ea\u6cbb\u7cfb\u7edf\u7684\u51fa\u53e3\u3002 \u6839\u636e\u5e94\u7528\u548c\u6267\u884c\u7684\u4e0d\u540c\uff0c\u8def\u7531\u8868\u53ef\u80fd\u542b\u6709\u5982\u4e0b\u9644\u52a0\u4fe1\u606f\uff1a \u82b1\u8d39\uff08Cost\uff09\uff1a\u5c31\u662f\u6570\u636e\u53d1\u9001\u8fc7\u7a0b\u4e2d\u901a\u8fc7\u8def\u5f84\u6240\u9700\u8981\u7684\u82b1\u8d39\u3002 \u8def\u7531\u7684\u670d\u52a1\u8d28\u91cf \u8def\u7531\u4e2d\u9700\u8981\u8fc7\u6ee4\u7684\u51fa/\u5165\u8fde\u63a5\u5217\u8868","title":"\u8def\u7531\u8868\u5305\u542b\u4ec0\u4e48\uff1f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u8fd0\u8f93\u5c42","text":"\u534f\u8bae\uff1a TCP\uff08Transmission Control Protocol\uff0c\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09 UDP\uff08User Datagram Protocol\uff0c\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae\uff09 \u7aef\u53e3\uff1a \u5e94\u7528\u7a0b\u5e8f FTP TELNET SMTP DNS TFTP HTTP HTTPS SNMP \u7aef\u53e3\u53f7 21 23 25 53 69 80 443 161","title":"\u8fd0\u8f93\u5c42"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#tcp","text":"TCP\uff08Transmission Control Protocol\uff0c\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09\u662f\u4e00\u79cd\u9762\u5411\u8fde\u63a5\u7684\u3001\u53ef\u9760\u7684\u3001\u57fa\u4e8e\u5b57\u8282\u6d41\u7684\u4f20\u8f93\u5c42\u901a\u4fe1\u534f\u8bae\uff0c\u5176\u4f20\u8f93\u7684\u5355\u4f4d\u662f\u62a5\u6587\u6bb5\u3002 \u7279\u5f81\uff1a * \u9762\u5411\u8fde\u63a5 * \u53ea\u80fd\u70b9\u5bf9\u70b9\uff08\u4e00\u5bf9\u4e00\uff09\u901a\u4fe1 * \u53ef\u9760\u4ea4\u4e92 * \u5168\u53cc\u5de5\u901a\u4fe1 * \u9762\u5411\u5b57\u8282\u6d41 TCP \u5982\u4f55\u4fdd\u8bc1\u53ef\u9760\u4f20\u8f93\uff1a * \u786e\u8ba4\u548c\u8d85\u65f6\u91cd\u4f20 * \u6570\u636e\u5408\u7406\u5206\u7247\u548c\u6392\u5e8f * \u6d41\u91cf\u63a7\u5236 * \u62e5\u585e\u63a7\u5236 * \u6570\u636e\u6821\u9a8c TCP \u62a5\u6587\u7ed3\u6784 TCP \u9996\u90e8 TCP\uff1a\u72b6\u6001\u63a7\u5236\u7801\uff08Code\uff0cControl Flag\uff09\uff0c\u5360 6 \u6bd4\u7279\uff0c\u542b\u4e49\u5982\u4e0b\uff1a * URG\uff1a\u7d27\u6025\u6bd4\u7279\uff08urgent\uff09\uff0c\u5f53 URG\uff1d1 \u65f6\uff0c\u8868\u660e\u7d27\u6025\u6307\u9488\u5b57\u6bb5\u6709\u6548\uff0c\u4ee3\u8868\u8be5\u5c01\u5305\u4e3a\u7d27\u6025\u5c01\u5305\u3002\u5b83\u544a\u8bc9\u7cfb\u7edf\u6b64\u62a5\u6587\u6bb5\u4e2d\u6709\u7d27\u6025\u6570\u636e\uff0c\u5e94\u5c3d\u5feb\u4f20\u9001(\u76f8\u5f53\u4e8e\u9ad8\u4f18\u5148\u7ea7\u7684\u6570\u636e)\uff0c \u4e14\u4e0a\u56fe\u4e2d\u7684 Urgent Pointer \u5b57\u6bb5\u4e5f\u4f1a\u88ab\u542f\u7528\u3002 * ACK\uff1a\u786e\u8ba4\u6bd4\u7279\uff08Acknowledge\uff09\u3002\u53ea\u6709\u5f53 ACK\uff1d1 \u65f6\u786e\u8ba4\u53f7\u5b57\u6bb5\u624d\u6709\u6548\uff0c\u4ee3\u8868\u8fd9\u4e2a\u5c01\u5305\u4e3a\u786e\u8ba4\u5c01\u5305\u3002\u5f53 ACK\uff1d0 \u65f6\uff0c\u786e\u8ba4\u53f7\u65e0\u6548\u3002 * PSH\uff1a\uff08Push function\uff09\u82e5\u4e3a 1 \u65f6\uff0c\u4ee3\u8868\u8981\u6c42\u5bf9\u65b9\u7acb\u5373\u4f20\u9001\u7f13\u51b2\u533a\u5185\u7684\u5176\u4ed6\u5bf9\u5e94\u5c01\u5305\uff0c\u800c\u65e0\u9700\u7b49\u7f13\u51b2\u6ee1\u4e86\u624d\u9001\u3002 * RST\uff1a\u590d\u4f4d\u6bd4\u7279(Reset)\uff0c\u5f53 RST\uff1d1 \u65f6\uff0c\u8868\u660e TCP \u8fde\u63a5\u4e2d\u51fa\u73b0\u4e25\u91cd\u5dee\u9519\uff08\u5982\u7531\u4e8e\u4e3b\u673a\u5d29\u6e83\u6216\u5176\u4ed6\u539f\u56e0\uff09\uff0c\u5fc5\u987b\u91ca\u653e\u8fde\u63a5\uff0c\u7136\u540e\u518d\u91cd\u65b0\u5efa\u7acb\u8fd0\u8f93\u8fde\u63a5\u3002 * SYN\uff1a\u540c\u6b65\u6bd4\u7279(Synchronous)\uff0cSYN \u7f6e\u4e3a 1\uff0c\u5c31\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u8fde\u63a5\u8bf7\u6c42\u6216\u8fde\u63a5\u63a5\u53d7\u62a5\u6587\uff0c\u901a\u5e38\u5e26\u6709 SYN \u6807\u5fd7\u7684\u5c01\u5305\u8868\u793a\u300e\u4e3b\u52a8\u300f\u8981\u8fde\u63a5\u5230\u5bf9\u65b9\u7684\u610f\u601d\u3002 * FIN\uff1a\u7ec8\u6b62\u6bd4\u7279(Final)\uff0c\u7528\u6765\u91ca\u653e\u4e00\u4e2a\u8fde\u63a5\u3002\u5f53 FIN\uff1d1 \u65f6\uff0c\u8868\u660e\u6b64\u62a5\u6587\u6bb5\u7684\u53d1\u9001\u7aef\u7684\u6570\u636e\u5df2\u53d1\u9001\u5b8c\u6bd5\uff0c\u5e76\u8981\u6c42\u91ca\u653e\u8fd0\u8f93\u8fde\u63a5\u3002","title":"TCP"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#udp","text":"UDP\uff08User Datagram Protocol\uff0c\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae\uff09\u662f OSI\uff08Open System Interconnection \u5f00\u653e\u5f0f\u7cfb\u7edf\u4e92\u8054\uff09 \u53c2\u8003\u6a21\u578b\u4e2d\u4e00\u79cd\u65e0\u8fde\u63a5\u7684\u4f20\u8f93\u5c42\u534f\u8bae\uff0c\u63d0\u4f9b\u9762\u5411\u4e8b\u52a1\u7684\u7b80\u5355\u4e0d\u53ef\u9760\u4fe1\u606f\u4f20\u9001\u670d\u52a1\uff0c\u5176\u4f20\u8f93\u7684\u5355\u4f4d\u662f\u7528\u6237\u6570\u636e\u62a5\u3002 \u7279\u5f81\uff1a * \u65e0\u8fde\u63a5 * \u5c3d\u6700\u5927\u52aa\u529b\u4ea4\u4ed8 * \u9762\u5411\u62a5\u6587 * \u6ca1\u6709\u62e5\u585e\u63a7\u5236 * \u652f\u6301\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u3001\u591a\u5bf9\u4e00\u3001\u591a\u5bf9\u591a\u7684\u4ea4\u4e92\u901a\u4fe1 * \u9996\u90e8\u5f00\u9500\u5c0f UDP \u62a5\u6587\u7ed3\u6784 UDP \u9996\u90e8 TCP/UDP \u56fe\u7247\u6765\u6e90\u4e8e\uff1a https://github.com/JerryC8080/understand-tcp-udp","title":"UDP"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#tcp-\u4e0e-udp-\u7684\u533a\u522b","text":"TCP \u9762\u5411\u8fde\u63a5\uff0cUDP \u662f\u65e0\u8fde\u63a5\u7684\uff1b TCP \u63d0\u4f9b\u53ef\u9760\u7684\u670d\u52a1\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u901a\u8fc7 TCP \u8fde\u63a5\u4f20\u9001\u7684\u6570\u636e\uff0c\u65e0\u5dee\u9519\uff0c\u4e0d\u4e22\u5931\uff0c\u4e0d\u91cd\u590d\uff0c\u4e14\u6309\u5e8f\u5230\u8fbe\uff1bUDP \u5c3d\u6700\u5927\u52aa\u529b\u4ea4\u4ed8\uff0c\u5373\u4e0d\u4fdd\u8bc1\u53ef\u9760\u4ea4\u4ed8 TCP \u7684\u903b\u8f91\u901a\u4fe1\u4fe1\u9053\u662f\u5168\u53cc\u5de5\u7684\u53ef\u9760\u4fe1\u9053\uff1bUDP \u5219\u662f\u4e0d\u53ef\u9760\u4fe1\u9053 \u6bcf\u4e00\u6761 TCP \u8fde\u63a5\u53ea\u80fd\u662f\u70b9\u5230\u70b9\u7684\uff1bUDP \u652f\u6301\u4e00\u5bf9\u4e00\uff0c\u4e00\u5bf9\u591a\uff0c\u591a\u5bf9\u4e00\u548c\u591a\u5bf9\u591a\u7684\u4ea4\u4e92\u901a\u4fe1 TCP \u9762\u5411\u5b57\u8282\u6d41\uff08\u53ef\u80fd\u51fa\u73b0\u9ecf\u5305\u95ee\u9898\uff09\uff0c\u5b9e\u9645\u4e0a\u662f TCP \u628a\u6570\u636e\u770b\u6210\u4e00\u8fde\u4e32\u65e0\u7ed3\u6784\u7684\u5b57\u8282\u6d41\uff1bUDP \u662f\u9762\u5411\u62a5\u6587\u7684\uff08\u4e0d\u4f1a\u51fa\u73b0\u9ecf\u5305\u95ee\u9898\uff09 UDP \u6ca1\u6709\u62e5\u585e\u63a7\u5236\uff0c\u56e0\u6b64\u7f51\u7edc\u51fa\u73b0\u62e5\u585e\u4e0d\u4f1a\u4f7f\u6e90\u4e3b\u673a\u7684\u53d1\u9001\u901f\u7387\u964d\u4f4e\uff08\u5bf9\u5b9e\u65f6\u5e94\u7528\u5f88\u6709\u7528\uff0c\u5982 IP \u7535\u8bdd\uff0c\u5b9e\u65f6\u89c6\u9891\u4f1a\u8bae\u7b49\uff09 TCP \u9996\u90e8\u5f00\u950020\u5b57\u8282\uff1bUDP \u7684\u9996\u90e8\u5f00\u9500\u5c0f\uff0c\u53ea\u6709 8 \u4e2a\u5b57\u8282","title":"TCP \u4e0e UDP \u7684\u533a\u522b"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#tcp-\u9ecf\u5305\u95ee\u9898","text":"","title":"TCP \u9ecf\u5305\u95ee\u9898"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u539f\u56e0_2","text":"TCP \u662f\u4e00\u4e2a\u57fa\u4e8e\u5b57\u8282\u6d41\u7684\u4f20\u8f93\u670d\u52a1\uff08UDP \u57fa\u4e8e\u62a5\u6587\u7684\uff09\uff0c\u201c\u6d41\u201d \u610f\u5473\u7740 TCP \u6240\u4f20\u8f93\u7684\u6570\u636e\u662f\u6ca1\u6709\u8fb9\u754c\u7684\u3002\u6240\u4ee5\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e24\u4e2a\u6570\u636e\u5305\u9ecf\u5728\u4e00\u8d77\u7684\u60c5\u51b5\u3002","title":"\u539f\u56e0"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u89e3\u51b3","text":"\u53d1\u9001\u5b9a\u957f\u5305\u3002\u5982\u679c\u6bcf\u4e2a\u6d88\u606f\u7684\u5927\u5c0f\u90fd\u662f\u4e00\u6837\u7684\uff0c\u90a3\u4e48\u5728\u63a5\u6536\u5bf9\u7b49\u65b9\u53ea\u8981\u7d2f\u8ba1\u63a5\u6536\u6570\u636e\uff0c\u76f4\u5230\u6570\u636e\u7b49\u4e8e\u4e00\u4e2a\u5b9a\u957f\u7684\u6570\u503c\u5c31\u5c06\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u6d88\u606f\u3002 \u5305\u5934\u52a0\u4e0a\u5305\u4f53\u957f\u5ea6\u3002\u5305\u5934\u662f\u5b9a\u957f\u7684 4 \u4e2a\u5b57\u8282\uff0c\u8bf4\u660e\u4e86\u5305\u4f53\u7684\u957f\u5ea6\u3002\u63a5\u6536\u5bf9\u7b49\u65b9\u5148\u63a5\u6536\u5305\u5934\u957f\u5ea6\uff0c\u4f9d\u636e\u5305\u5934\u957f\u5ea6\u6765\u63a5\u6536\u5305\u4f53\u3002 \u5728\u6570\u636e\u5305\u4e4b\u95f4\u8bbe\u7f6e\u8fb9\u754c\uff0c\u5982\u6dfb\u52a0\u7279\u6b8a\u7b26\u53f7 \\r\\n \u6807\u8bb0\u3002FTP \u534f\u8bae\u6b63\u662f\u8fd9\u4e48\u505a\u7684\u3002\u4f46\u95ee\u9898\u5728\u4e8e\u5982\u679c\u6570\u636e\u6b63\u6587\u4e2d\u4e5f\u542b\u6709 \\r\\n \uff0c\u5219\u4f1a\u8bef\u5224\u4e3a\u6d88\u606f\u7684\u8fb9\u754c\u3002 \u4f7f\u7528\u66f4\u52a0\u590d\u6742\u7684\u5e94\u7528\u5c42\u534f\u8bae\u3002","title":"\u89e3\u51b3"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#tcp-\u6d41\u91cf\u63a7\u5236","text":"","title":"TCP \u6d41\u91cf\u63a7\u5236"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6982\u5ff5_3","text":"\u6d41\u91cf\u63a7\u5236\uff08flow control\uff09\u5c31\u662f\u8ba9\u53d1\u9001\u65b9\u7684\u53d1\u9001\u901f\u7387\u4e0d\u8981\u592a\u5feb\uff0c\u8981\u8ba9\u63a5\u6536\u65b9\u6765\u5f97\u53ca\u63a5\u6536\u3002","title":"\u6982\u5ff5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u65b9\u6cd5","text":"\u5229\u7528\u53ef\u53d8\u7a97\u53e3\u8fdb\u884c\u6d41\u91cf\u63a7\u5236","title":"\u65b9\u6cd5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#tcp-\u62e5\u585e\u63a7\u5236","text":"","title":"TCP \u62e5\u585e\u63a7\u5236"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6982\u5ff5_4","text":"\u62e5\u585e\u63a7\u5236\u5c31\u662f\u9632\u6b62\u8fc7\u591a\u7684\u6570\u636e\u6ce8\u5165\u5230\u7f51\u7edc\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u7f51\u7edc\u4e2d\u7684\u8def\u7531\u5668\u6216\u94fe\u8def\u4e0d\u81f4\u8fc7\u8f7d\u3002","title":"\u6982\u5ff5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u65b9\u6cd5_1","text":"\u6162\u5f00\u59cb( slow-start ) \u62e5\u585e\u907f\u514d( congestion avoidance ) \u5feb\u91cd\u4f20( fast retransmit ) \u5feb\u6062\u590d( fast recovery ) TCP\u7684\u62e5\u585e\u63a7\u5236\u56fe","title":"\u65b9\u6cd5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#tcp-\u4f20\u8f93\u8fde\u63a5\u7ba1\u7406","text":"\u56e0\u4e3a TCP \u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u8fde\u63a5\u3001\u56db\u6b21\u6325\u624b\u91ca\u653e\u8fde\u63a5\u5f88\u91cd\u8981\uff0c\u6240\u4ee5\u9644\u4e0a\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\uff08\u7b2c 7 \u7248\uff09-\u8c22\u5e0c\u4ec1\u300b\u4e66\u4e2d\u5bf9\u6b64\u7ae0\u7684\u8be6\u7ec6\u63cf\u8ff0\uff1a https://gitee.com/huihut/interview/raw/master/images/TCP-transport-connection-management.png","title":"TCP \u4f20\u8f93\u8fde\u63a5\u7ba1\u7406"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#tcp-\u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u8fde\u63a5","text":"\u3010TCP \u5efa\u7acb\u8fde\u63a5\u5168\u8fc7\u7a0b\u89e3\u91ca\u3011 \u5ba2\u6237\u7aef\u53d1\u9001 SYN \u7ed9\u670d\u52a1\u5668\uff0c\u8bf4\u660e\u5ba2\u6237\u7aef\u8bf7\u6c42\u5efa\u7acb\u8fde\u63a5\uff1b \u670d\u52a1\u7aef\u6536\u5230\u5ba2\u6237\u7aef\u53d1\u7684 SYN\uff0c\u5e76\u56de\u590d SYN+ACK \u7ed9\u5ba2\u6237\u7aef\uff08\u540c\u610f\u5efa\u7acb\u8fde\u63a5\uff09\uff1b \u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u7aef\u7684 SYN+ACK \u540e\uff0c\u56de\u590d ACK \u7ed9\u670d\u52a1\u7aef\uff08\u8868\u793a\u5ba2\u6237\u7aef\u6536\u5230\u4e86\u670d\u52a1\u7aef\u53d1\u7684\u540c\u610f\u62a5\u6587\uff09\uff1b \u670d\u52a1\u7aef\u6536\u5230\u5ba2\u6237\u7aef\u7684 ACK\uff0c\u8fde\u63a5\u5df2\u5efa\u7acb\uff0c\u53ef\u4ee5\u6570\u636e\u4f20\u8f93\u3002","title":"TCP \u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u8fde\u63a5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#tcp-\u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u4e09\u6b21\u63e1\u624b","text":"\u3010\u7b54\u6848\u4e00\u3011\u56e0\u4e3a\u4fe1\u9053\u4e0d\u53ef\u9760\uff0c\u800c TCP \u60f3\u5728\u4e0d\u53ef\u9760\u4fe1\u9053\u4e0a\u5efa\u7acb\u53ef\u9760\u5730\u4f20\u8f93\uff0c\u90a3\u4e48\u4e09\u6b21\u901a\u4fe1\u662f\u7406\u8bba\u4e0a\u7684\u6700\u5c0f\u503c\u3002\uff08\u800c UDP \u5219\u4e0d\u9700\u5efa\u7acb\u53ef\u9760\u4f20\u8f93\uff0c\u56e0\u6b64 UDP \u4e0d\u9700\u8981\u4e09\u6b21\u63e1\u624b\u3002\uff09 Google Groups . TCP \u5efa\u7acb\u8fde\u63a5\u4e3a\u4ec0\u4e48\u662f\u4e09\u6b21\u63e1\u624b\uff1f{\u6280\u672f}{\u7f51\u7edc\u901a\u4fe1} \u3010\u7b54\u6848\u4e8c\u3011\u56e0\u4e3a\u53cc\u65b9\u90fd\u9700\u8981\u786e\u8ba4\u5bf9\u65b9\u6536\u5230\u4e86\u81ea\u5df1\u53d1\u9001\u7684\u5e8f\u5217\u53f7\uff0c\u786e\u8ba4\u8fc7\u7a0b\u6700\u5c11\u8981\u8fdb\u884c\u4e09\u6b21\u901a\u4fe1\u3002 \u77e5\u4e4e . TCP \u4e3a\u4ec0\u4e48\u662f\u4e09\u6b21\u63e1\u624b\uff0c\u800c\u4e0d\u662f\u4e24\u6b21\u6216\u56db\u6b21\uff1f \u3010\u7b54\u6848\u4e09\u3011\u4e3a\u4e86\u9632\u6b62\u5df2\u5931\u6548\u7684\u8fde\u63a5\u8bf7\u6c42\u62a5\u6587\u6bb5\u7a81\u7136\u53c8\u4f20\u9001\u5230\u4e86\u670d\u52a1\u7aef\uff0c\u56e0\u800c\u4ea7\u751f\u9519\u8bef\u3002 \u300a\u8ba1\u7b97\u673a\u7f51\u7edc\uff08\u7b2c 7 \u7248\uff09-\u8c22\u5e0c\u4ec1\u300b","title":"TCP \u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u4e09\u6b21\u63e1\u624b\uff1f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#tcp-\u56db\u6b21\u6325\u624b\u91ca\u653e\u8fde\u63a5","text":"\u3010TCP \u91ca\u653e\u8fde\u63a5\u5168\u8fc7\u7a0b\u89e3\u91ca\u3011 \u5ba2\u6237\u7aef\u53d1\u9001 FIN \u7ed9\u670d\u52a1\u5668\uff0c\u8bf4\u660e\u5ba2\u6237\u7aef\u4e0d\u5fc5\u53d1\u9001\u6570\u636e\u7ed9\u670d\u52a1\u5668\u4e86\uff08\u8bf7\u6c42\u91ca\u653e\u4ece\u5ba2\u6237\u7aef\u5230\u670d\u52a1\u5668\u7684\u8fde\u63a5\uff09\uff1b \u670d\u52a1\u5668\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u53d1\u7684 FIN\uff0c\u5e76\u56de\u590d ACK \u7ed9\u5ba2\u6237\u7aef\uff08\u540c\u610f\u91ca\u653e\u4ece\u5ba2\u6237\u7aef\u5230\u670d\u52a1\u5668\u7684\u8fde\u63a5\uff09\uff1b \u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u7aef\u56de\u590d\u7684 ACK\uff0c\u6b64\u65f6\u4ece\u5ba2\u6237\u7aef\u5230\u670d\u52a1\u5668\u7684\u8fde\u63a5\u5df2\u91ca\u653e\uff08\u4f46\u670d\u52a1\u7aef\u5230\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u8fd8\u672a\u91ca\u653e\uff0c\u5e76\u4e14\u5ba2\u6237\u7aef\u8fd8\u53ef\u4ee5\u63a5\u6536\u6570\u636e\uff09\uff1b \u670d\u52a1\u7aef\u7ee7\u7eed\u53d1\u9001\u4e4b\u524d\u6ca1\u53d1\u5b8c\u7684\u6570\u636e\u7ed9\u5ba2\u6237\u7aef\uff1b \u670d\u52a1\u7aef\u53d1\u9001 FIN+ACK \u7ed9\u5ba2\u6237\u7aef\uff0c\u8bf4\u660e\u670d\u52a1\u7aef\u53d1\u9001\u5b8c\u4e86\u6570\u636e\uff08\u8bf7\u6c42\u91ca\u653e\u4ece\u670d\u52a1\u7aef\u5230\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\uff0c\u5c31\u7b97\u6ca1\u6536\u5230\u5ba2\u6237\u7aef\u7684\u56de\u590d\uff0c\u8fc7\u6bb5\u65f6\u95f4\u4e5f\u4f1a\u81ea\u52a8\u91ca\u653e\uff09\uff1b \u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u7aef\u7684 FIN+ACK\uff0c\u5e76\u56de\u590d ACK \u7ed9\u670d\u52a1\u7aef\uff08\u540c\u610f\u91ca\u653e\u4ece\u670d\u52a1\u7aef\u5230\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\uff09\uff1b \u670d\u52a1\u7aef\u6536\u5230\u5ba2\u6237\u7aef\u7684 ACK \u540e\uff0c\u91ca\u653e\u4ece\u670d\u52a1\u7aef\u5230\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u3002","title":"TCP \u56db\u6b21\u6325\u624b\u91ca\u653e\u8fde\u63a5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#tcp-\u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u56db\u6b21\u6325\u624b","text":"\u3010\u95ee\u9898\u4e00\u3011TCP \u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u56db\u6b21\u6325\u624b\uff1f / \u4e3a\u4ec0\u4e48 TCP \u5efa\u7acb\u8fde\u63a5\u9700\u8981\u4e09\u6b21\uff0c\u800c\u91ca\u653e\u8fde\u63a5\u5219\u9700\u8981\u56db\u6b21\uff1f \u3010\u7b54\u6848\u4e00\u3011\u56e0\u4e3a TCP \u662f\u5168\u53cc\u5de5\u6a21\u5f0f\uff0c\u5ba2\u6237\u7aef\u8bf7\u6c42\u5173\u95ed\u8fde\u63a5\u540e\uff0c\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u7684\u8fde\u63a5\u5173\u95ed\uff08\u4e00\u4e8c\u6b21\u6325\u624b\uff09\uff0c\u670d\u52a1\u7aef\u7ee7\u7eed\u4f20\u8f93\u4e4b\u524d\u6ca1\u4f20\u5b8c\u7684\u6570\u636e\u7ed9\u5ba2\u6237\u7aef\uff08\u6570\u636e\u4f20\u8f93\uff09\uff0c\u670d\u52a1\u7aef\u5411\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u5173\u95ed\uff08\u4e09\u56db\u6b21\u6325\u624b\uff09\u3002\u6240\u4ee5 TCP \u91ca\u653e\u8fde\u63a5\u65f6\u670d\u52a1\u5668\u7684 ACK \u548c FIN \u662f\u5206\u5f00\u53d1\u9001\u7684\uff08\u4e2d\u95f4\u9694\u7740\u6570\u636e\u4f20\u8f93\uff09\uff0c\u800c TCP \u5efa\u7acb\u8fde\u63a5\u65f6\u670d\u52a1\u5668\u7684 ACK \u548c SYN \u662f\u4e00\u8d77\u53d1\u9001\u7684\uff08\u7b2c\u4e8c\u6b21\u63e1\u624b\uff09\uff0c\u6240\u4ee5 TCP \u5efa\u7acb\u8fde\u63a5\u9700\u8981\u4e09\u6b21\uff0c\u800c\u91ca\u653e\u8fde\u63a5\u5219\u9700\u8981\u56db\u6b21\u3002 \u3010\u95ee\u9898\u4e8c\u3011\u4e3a\u4ec0\u4e48 TCP \u8fde\u63a5\u65f6\u53ef\u4ee5 ACK \u548c SYN \u4e00\u8d77\u53d1\u9001\uff0c\u800c\u91ca\u653e\u65f6\u5219 ACK \u548c FIN \u5206\u5f00\u53d1\u9001\u5462\uff1f\uff08ACK \u548c FIN \u5206\u5f00\u662f\u6307\u7b2c\u4e8c\u6b21\u548c\u7b2c\u4e09\u6b21\u6325\u624b\uff09 \u3010\u7b54\u6848\u4e8c\u3011\u56e0\u4e3a\u5ba2\u6237\u7aef\u8bf7\u6c42\u91ca\u653e\u65f6\uff0c\u670d\u52a1\u5668\u53ef\u80fd\u8fd8\u6709\u6570\u636e\u9700\u8981\u4f20\u8f93\u7ed9\u5ba2\u6237\u7aef\uff0c\u56e0\u6b64\u670d\u52a1\u7aef\u8981\u5148\u54cd\u5e94\u5ba2\u6237\u7aef FIN \u8bf7\u6c42\uff08\u670d\u52a1\u7aef\u53d1\u9001 ACK\uff09\uff0c\u7136\u540e\u6570\u636e\u4f20\u8f93\uff0c\u4f20\u8f93\u5b8c\u6210\u540e\uff0c\u670d\u52a1\u7aef\u518d\u63d0\u51fa FIN \u8bf7\u6c42\uff08\u670d\u52a1\u7aef\u53d1\u9001 FIN\uff09\uff1b\u800c\u8fde\u63a5\u65f6\u5219\u6ca1\u6709\u4e2d\u95f4\u7684\u6570\u636e\u4f20\u8f93\uff0c\u56e0\u6b64\u8fde\u63a5\u65f6\u53ef\u4ee5 ACK \u548c SYN \u4e00\u8d77\u53d1\u9001\u3002 \u3010\u95ee\u9898\u4e09\u3011\u4e3a\u4ec0\u4e48\u5ba2\u6237\u7aef\u91ca\u653e\u6700\u540e\u9700\u8981 TIME-WAIT \u7b49\u5f85 2MSL \u5462\uff1f \u3010\u7b54\u6848\u4e09\u3011 \u4e3a\u4e86\u4fdd\u8bc1\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u6700\u540e\u4e00\u4e2a ACK \u62a5\u6587\u80fd\u591f\u5230\u8fbe\u670d\u52a1\u7aef\u3002\u82e5\u672a\u6210\u529f\u5230\u8fbe\uff0c\u5219\u670d\u52a1\u7aef\u8d85\u65f6\u91cd\u4f20 FIN+ACK \u62a5\u6587\u6bb5\uff0c\u5ba2\u6237\u7aef\u518d\u91cd\u4f20 ACK\uff0c\u5e76\u91cd\u65b0\u8ba1\u65f6\u3002 \u9632\u6b62\u5df2\u5931\u6548\u7684\u8fde\u63a5\u8bf7\u6c42\u62a5\u6587\u6bb5\u51fa\u73b0\u5728\u672c\u8fde\u63a5\u4e2d\u3002TIME-WAIT \u6301\u7eed 2MSL \u53ef\u4f7f\u672c\u8fde\u63a5\u6301\u7eed\u7684\u65f6\u95f4\u5185\u6240\u4ea7\u751f\u7684\u6240\u6709\u62a5\u6587\u6bb5\u90fd\u4ece\u7f51\u7edc\u4e2d\u6d88\u5931\uff0c\u8fd9\u6837\u53ef\u4f7f\u4e0b\u6b21\u8fde\u63a5\u4e2d\u4e0d\u4f1a\u51fa\u73b0\u65e7\u7684\u8fde\u63a5\u62a5\u6587\u6bb5\u3002","title":"TCP \u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u56db\u6b21\u6325\u624b\uff1f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#tcp-\u6709\u9650\u72b6\u6001\u673a","text":"TCP \u6709\u9650\u72b6\u6001\u673a\u56fe\u7247","title":"TCP \u6709\u9650\u72b6\u6001\u673a"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5e94\u7528\u5c42","text":"","title":"\u5e94\u7528\u5c42"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#dns","text":"DNS\uff08Domain Name System\uff0c\u57df\u540d\u7cfb\u7edf\uff09\u662f\u4e92\u8054\u7f51\u7684\u4e00\u9879\u670d\u52a1\u3002\u5b83\u4f5c\u4e3a\u5c06\u57df\u540d\u548c IP \u5730\u5740\u76f8\u4e92\u6620\u5c04\u7684\u4e00\u4e2a\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff0c\u80fd\u591f\u4f7f\u4eba\u66f4\u65b9\u4fbf\u5730\u8bbf\u95ee\u4e92\u8054\u7f51\u3002DNS \u4f7f\u7528 TCP \u548c UDP \u7aef\u53e3 53\u3002\u5f53\u524d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u7ea7\u57df\u540d\u957f\u5ea6\u7684\u9650\u5236\u662f 63 \u4e2a\u5b57\u7b26\uff0c\u57df\u540d\u603b\u957f\u5ea6\u5219\u4e0d\u80fd\u8d85\u8fc7 253 \u4e2a\u5b57\u7b26\u3002 \u57df\u540d\uff1a * \u57df\u540d ::= {<\u4e09\u7ea7\u57df\u540d>.<\u4e8c\u7ea7\u57df\u540d>.<\u9876\u7ea7\u57df\u540d>} \uff0c\u5982\uff1a blog.huihut.com","title":"DNS"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#ftp","text":"FTP\uff08File Transfer Protocol\uff0c\u6587\u4ef6\u4f20\u8f93\u534f\u8bae\uff09\u662f\u7528\u4e8e\u5728\u7f51\u7edc\u4e0a\u8fdb\u884c\u6587\u4ef6\u4f20\u8f93\u7684\u4e00\u5957\u6807\u51c6\u534f\u8bae\uff0c\u4f7f\u7528\u5ba2\u6237/\u670d\u52a1\u5668\u6a21\u5f0f\uff0c\u4f7f\u7528 TCP \u6570\u636e\u62a5\uff0c\u63d0\u4f9b\u4ea4\u4e92\u5f0f\u8bbf\u95ee\uff0c\u53cc\u5411\u4f20\u8f93\u3002 TFTP\uff08Trivial File Transfer Protocol\uff0c\u7b80\u5355\u6587\u4ef6\u4f20\u8f93\u534f\u8bae\uff09\u4e00\u4e2a\u5c0f\u4e14\u6613\u5b9e\u73b0\u7684\u6587\u4ef6\u4f20\u8f93\u534f\u8bae\uff0c\u4e5f\u4f7f\u7528\u5ba2\u6237-\u670d\u52a1\u5668\u65b9\u5f0f\uff0c\u4f7f\u7528UDP\u6570\u636e\u62a5\uff0c\u53ea\u652f\u6301\u6587\u4ef6\u4f20\u8f93\u800c\u4e0d\u652f\u6301\u4ea4\u4e92\uff0c\u6ca1\u6709\u5217\u76ee\u5f55\uff0c\u4e0d\u80fd\u5bf9\u7528\u6237\u8fdb\u884c\u8eab\u4efd\u9274\u5b9a","title":"FTP"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#telnet","text":"TELNET \u534f\u8bae\u662f TCP/IP \u534f\u8bae\u65cf\u4e2d\u7684\u4e00\u5458\uff0c\u662f Internet \u8fdc\u7a0b\u767b\u9646\u670d\u52a1\u7684\u6807\u51c6\u534f\u8bae\u548c\u4e3b\u8981\u65b9\u5f0f\u3002\u5b83\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u5728\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u5b8c\u6210\u8fdc\u7a0b\u4e3b\u673a\u5de5\u4f5c\u7684\u80fd\u529b\u3002 HTTP\uff08HyperText Transfer Protocol\uff0c\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff09\u662f\u7528\u4e8e\u4ece WWW\uff08World Wide Web\uff0c\u4e07\u7ef4\u7f51\uff09\u670d\u52a1\u5668\u4f20\u8f93\u8d85\u6587\u672c\u5230\u672c\u5730\u6d4f\u89c8\u5668\u7684\u4f20\u9001\u534f\u8bae\u3002 SMTP\uff08Simple Mail Transfer Protocol\uff0c\u7b80\u5355\u90ae\u4ef6\u4f20\u8f93\u534f\u8bae\uff09\u662f\u4e00\u7ec4\u7528\u4e8e\u7531\u6e90\u5730\u5740\u5230\u76ee\u7684\u5730\u5740\u4f20\u9001\u90ae\u4ef6\u7684\u89c4\u5219\uff0c\u7531\u5b83\u6765\u63a7\u5236\u4fe1\u4ef6\u7684\u4e2d\u8f6c\u65b9\u5f0f\u3002SMTP \u534f\u8bae\u5c5e\u4e8e TCP/IP \u534f\u8bae\u7c07\uff0c\u5b83\u5e2e\u52a9\u6bcf\u53f0\u8ba1\u7b97\u673a\u5728\u53d1\u9001\u6216\u4e2d\u8f6c\u4fe1\u4ef6\u65f6\u627e\u5230\u4e0b\u4e00\u4e2a\u76ee\u7684\u5730\u3002 Socket \u5efa\u7acb\u7f51\u7edc\u901a\u4fe1\u8fde\u63a5\u81f3\u5c11\u8981\u4e00\u5bf9\u7aef\u53e3\u53f7\uff08Socket\uff09\u3002Socket \u672c\u8d28\u662f\u7f16\u7a0b\u63a5\u53e3\uff08API\uff09\uff0c\u5bf9 TCP/IP \u7684\u5c01\u88c5\uff0cTCP/IP \u4e5f\u8981\u63d0\u4f9b\u53ef\u4f9b\u7a0b\u5e8f\u5458\u505a\u7f51\u7edc\u5f00\u53d1\u6240\u7528\u7684\u63a5\u53e3\uff0c\u8fd9\u5c31\u662f Socket \u7f16\u7a0b\u63a5\u53e3\u3002","title":"TELNET"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#www","text":"WWW\uff08World Wide Web\uff0c\u73af\u7403\u4fe1\u606f\u7f51\uff0c\u4e07\u7ef4\u7f51\uff09\u662f\u4e00\u4e2a\u7531\u8bb8\u591a\u4e92\u76f8\u94fe\u63a5\u7684\u8d85\u6587\u672c\u7ec4\u6210\u7684\u7cfb\u7edf\uff0c\u901a\u8fc7\u4e92\u8054\u7f51\u8bbf\u95ee","title":"WWW"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#url","text":"URL\uff08Uniform Resource Locator\uff0c\u7edf\u4e00\u8d44\u6e90\u5b9a\u4f4d\u7b26\uff09\u662f\u56e0\u7279\u7f51\u4e0a\u6807\u51c6\u7684\u8d44\u6e90\u7684\u5730\u5740\uff08Address\uff09 \u6807\u51c6\u683c\u5f0f\uff1a \u534f\u8bae\u7c7b\u578b:[//\u670d\u52a1\u5668\u5730\u5740[:\u7aef\u53e3\u53f7]][/\u8d44\u6e90\u5c42\u7ea7UNIX\u6587\u4ef6\u8def\u5f84]\u6587\u4ef6\u540d[?\u67e5\u8be2][#\u7247\u6bb5ID] \u5b8c\u6574\u683c\u5f0f\uff1a \u534f\u8bae\u7c7b\u578b:[//[\u8bbf\u95ee\u8d44\u6e90\u9700\u8981\u7684\u51ed\u8bc1\u4fe1\u606f@]\u670d\u52a1\u5668\u5730\u5740[:\u7aef\u53e3\u53f7]][/\u8d44\u6e90\u5c42\u7ea7UNIX\u6587\u4ef6\u8def\u5f84]\u6587\u4ef6\u540d[?\u67e5\u8be2][#\u7247\u6bb5ID] \u5176\u4e2d\u3010\u8bbf\u95ee\u51ed\u8bc1\u4fe1\u606f@\uff1b:\u7aef\u53e3\u53f7\uff1b?\u67e5\u8be2\uff1b#\u7247\u6bb5ID\u3011\u90fd\u5c5e\u4e8e\u9009\u586b\u9879 \u5982\uff1a https://github.com/huihut/interview#cc","title":"URL"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#http","text":"HTTP\uff08HyperText Transfer Protocol\uff0c\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u5206\u5e03\u5f0f\u3001\u534f\u4f5c\u5f0f\u548c\u8d85\u5a92\u4f53\u4fe1\u606f\u7cfb\u7edf\u7684\u5e94\u7528\u5c42\u534f\u8bae\u3002HTTP \u662f\u4e07\u7ef4\u7f51\u7684\u6570\u636e\u901a\u4fe1\u7684\u57fa\u7840\u3002 \u8bf7\u6c42\u65b9\u6cd5 \u65b9\u6cd5 \u610f\u4e49 OPTIONS \u8bf7\u6c42\u4e00\u4e9b\u9009\u9879\u4fe1\u606f\uff0c\u5141\u8bb8\u5ba2\u6237\u7aef\u67e5\u770b\u670d\u52a1\u5668\u7684\u6027\u80fd GET \u8bf7\u6c42\u6307\u5b9a\u7684\u9875\u9762\u4fe1\u606f\uff0c\u5e76\u8fd4\u56de\u5b9e\u4f53\u4e3b\u4f53 HEAD \u7c7b\u4f3c\u4e8e get \u8bf7\u6c42\uff0c\u53ea\u4e0d\u8fc7\u8fd4\u56de\u7684\u54cd\u5e94\u4e2d\u6ca1\u6709\u5177\u4f53\u7684\u5185\u5bb9\uff0c\u7528\u4e8e\u83b7\u53d6\u62a5\u5934 POST \u5411\u6307\u5b9a\u8d44\u6e90\u63d0\u4ea4\u6570\u636e\u8fdb\u884c\u5904\u7406\u8bf7\u6c42\uff08\u4f8b\u5982\u63d0\u4ea4\u8868\u5355\u6216\u8005\u4e0a\u4f20\u6587\u4ef6\uff09\u3002\u6570\u636e\u88ab\u5305\u542b\u5728\u8bf7\u6c42\u4f53\u4e2d\u3002POST\u8bf7\u6c42\u53ef\u80fd\u4f1a\u5bfc\u81f4\u65b0\u7684\u8d44\u6e90\u7684\u5efa\u7acb\u548c/\u6216\u5df2\u6709\u8d44\u6e90\u7684\u4fee\u6539 PUT \u4ece\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u4f20\u9001\u7684\u6570\u636e\u53d6\u4ee3\u6307\u5b9a\u7684\u6587\u6863\u7684\u5185\u5bb9 DELETE \u8bf7\u6c42\u670d\u52a1\u5668\u5220\u9664\u6307\u5b9a\u7684\u9875\u9762 TRACE \u56de\u663e\u670d\u52a1\u5668\u6536\u5230\u7684\u8bf7\u6c42\uff0c\u4e3b\u8981\u7528\u4e8e\u6d4b\u8bd5\u6216\u8bca\u65ad \u72b6\u6001\u7801\uff08Status-Code\uff09 1xx\uff1a\u8868\u793a\u901a\u77e5\u4fe1\u606f\uff0c\u5982\u8bf7\u6c42\u6536\u5230\u4e86\u6216\u6b63\u5728\u8fdb\u884c\u5904\u7406 100 Continue\uff1a\u7ee7\u7eed\uff0c\u5ba2\u6237\u7aef\u5e94\u7ee7\u7eed\u5176\u8bf7\u6c42 101 Switching Protocols \u5207\u6362\u534f\u8bae\u3002\u670d\u52a1\u5668\u6839\u636e\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u5207\u6362\u534f\u8bae\u3002\u53ea\u80fd\u5207\u6362\u5230\u66f4\u9ad8\u7ea7\u7684\u534f\u8bae\uff0c\u4f8b\u5982\uff0c\u5207\u6362\u5230 HTTP \u7684\u65b0\u7248\u672c\u534f\u8bae 2xx\uff1a\u8868\u793a\u6210\u529f\uff0c\u5982\u63a5\u6536\u6216\u77e5\u9053\u4e86 200 OK: \u8bf7\u6c42\u6210\u529f 3xx\uff1a\u8868\u793a\u91cd\u5b9a\u5411\uff0c\u5982\u8981\u5b8c\u6210\u8bf7\u6c42\u8fd8\u5fc5\u987b\u91c7\u53d6\u8fdb\u4e00\u6b65\u7684\u884c\u52a8 301 Moved Permanently: \u6c38\u4e45\u79fb\u52a8\u3002\u8bf7\u6c42\u7684\u8d44\u6e90\u5df2\u88ab\u6c38\u4e45\u7684\u79fb\u52a8\u5230\u65b0 URL\uff0c\u8fd4\u56de\u4fe1\u606f\u4f1a\u5305\u62ec\u65b0\u7684 URL\uff0c\u6d4f\u89c8\u5668\u4f1a\u81ea\u52a8\u5b9a\u5411\u5230\u65b0 URL\u3002\u4eca\u540e\u4efb\u4f55\u65b0\u7684\u8bf7\u6c42\u90fd\u5e94\u4f7f\u7528\u65b0\u7684 URL \u4ee3\u66ff 4xx\uff1a\u8868\u793a\u5ba2\u6237\u7684\u5dee\u9519\uff0c\u5982\u8bf7\u6c42\u4e2d\u6709\u9519\u8bef\u7684\u8bed\u6cd5\u6216\u4e0d\u80fd\u5b8c\u6210 400 Bad Request: \u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u8bed\u6cd5\u9519\u8bef\uff0c\u670d\u52a1\u5668\u65e0\u6cd5\u7406\u89e3 401 Unauthorized: \u8bf7\u6c42\u8981\u6c42\u7528\u6237\u7684\u8eab\u4efd\u8ba4\u8bc1 403 Forbidden: \u670d\u52a1\u5668\u7406\u89e3\u8bf7\u6c42\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff0c\u4f46\u662f\u62d2\u7edd\u6267\u884c\u6b64\u8bf7\u6c42\uff08\u6743\u9650\u4e0d\u591f\uff09 404 Not Found: \u670d\u52a1\u5668\u65e0\u6cd5\u6839\u636e\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u627e\u5230\u8d44\u6e90\uff08\u7f51\u9875\uff09\u3002\u901a\u8fc7\u6b64\u4ee3\u7801\uff0c\u7f51\u7ad9\u8bbe\u8ba1\u4eba\u5458\u53ef\u8bbe\u7f6e \u201c\u60a8\u6240\u8bf7\u6c42\u7684\u8d44\u6e90\u65e0\u6cd5\u627e\u5230\u201d \u7684\u4e2a\u6027\u9875\u9762 408 Request Timeout: \u670d\u52a1\u5668\u7b49\u5f85\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u8bf7\u6c42\u65f6\u95f4\u8fc7\u957f\uff0c\u8d85\u65f6 5xx\uff1a\u8868\u793a\u670d\u52a1\u5668\u7684\u5dee\u9519\uff0c\u5982\u670d\u52a1\u5668\u5931\u6548\u65e0\u6cd5\u5b8c\u6210\u8bf7\u6c42 500 Internal Server Error: \u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef\uff0c\u65e0\u6cd5\u5b8c\u6210\u8bf7\u6c42 503 Service Unavailable: \u7531\u4e8e\u8d85\u8f7d\u6216\u7cfb\u7edf\u7ef4\u62a4\uff0c\u670d\u52a1\u5668\u6682\u65f6\u7684\u65e0\u6cd5\u5904\u7406\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u3002\u5ef6\u65f6\u7684\u957f\u5ea6\u53ef\u5305\u542b\u5728\u670d\u52a1\u5668\u7684 Retry-After \u5934\u4fe1\u606f\u4e2d 504 Gateway Timeout: \u5145\u5f53\u7f51\u5173\u6216\u4ee3\u7406\u7684\u670d\u52a1\u5668\uff0c\u672a\u53ca\u65f6\u4ece\u8fdc\u7aef\u670d\u52a1\u5668\u83b7\u53d6\u8bf7\u6c42 \u66f4\u591a\u72b6\u6001\u7801\uff1a \u83dc\u9e1f\u6559\u7a0b . HTTP\u72b6\u6001\u7801","title":"HTTP"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5176\u4ed6\u534f\u8bae","text":"SMTP\uff08Simple Main Transfer Protocol\uff0c\u7b80\u5355\u90ae\u4ef6\u4f20\u8f93\u534f\u8bae\uff09\u662f\u5728 Internet \u4f20\u8f93 Email \u7684\u6807\u51c6\uff0c\u662f\u4e00\u4e2a\u76f8\u5bf9\u7b80\u5355\u7684\u57fa\u4e8e\u6587\u672c\u7684\u534f\u8bae\u3002\u5728\u5176\u4e4b\u4e0a\u6307\u5b9a\u4e86\u4e00\u6761\u6d88\u606f\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u63a5\u6536\u8005\uff08\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u88ab\u786e\u8ba4\u662f\u5b58\u5728\u7684\uff09\uff0c\u7136\u540e\u6d88\u606f\u6587\u672c\u4f1a\u88ab\u4f20\u8f93\u3002\u53ef\u4ee5\u5f88\u7b80\u5355\u5730\u901a\u8fc7 Telnet \u7a0b\u5e8f\u6765\u6d4b\u8bd5\u4e00\u4e2a SMTP \u670d\u52a1\u5668\u3002SMTP \u4f7f\u7528 TCP \u7aef\u53e3 25\u3002 DHCP\uff08Dynamic Host Configuration Protocol\uff0c\u52a8\u6001\u4e3b\u673a\u8bbe\u7f6e\u534f\u8bae\uff09\u662f\u4e00\u4e2a\u5c40\u57df\u7f51\u7684\u7f51\u7edc\u534f\u8bae\uff0c\u4f7f\u7528 UDP \u534f\u8bae\u5de5\u4f5c\uff0c\u4e3b\u8981\u6709\u4e24\u4e2a\u7528\u9014\uff1a \u7528\u4e8e\u5185\u90e8\u7f51\u7edc\u6216\u7f51\u7edc\u670d\u52a1\u4f9b\u5e94\u5546\u81ea\u52a8\u5206\u914d IP \u5730\u5740\u7ed9\u7528\u6237 \u7528\u4e8e\u5185\u90e8\u7f51\u7edc\u7ba1\u7406\u5458\u4f5c\u4e3a\u5bf9\u6240\u6709\u7535\u8111\u4f5c\u4e2d\u592e\u7ba1\u7406\u7684\u624b\u6bb5 SNMP\uff08Simple Network Management Protocol\uff0c\u7b80\u5355\u7f51\u7edc\u7ba1\u7406\u534f\u8bae\uff09\u6784\u6210\u4e86\u4e92\u8054\u7f51\u5de5\u7a0b\u5de5\u4f5c\u5c0f\u7ec4\uff08IETF\uff0cInternet Engineering Task Force\uff09\u5b9a\u4e49\u7684 Internet \u534f\u8bae\u65cf\u7684\u4e00\u90e8\u5206\u3002\u8be5\u534f\u8bae\u80fd\u591f\u652f\u6301\u7f51\u7edc\u7ba1\u7406\u7cfb\u7edf\uff0c\u7528\u4ee5\u76d1\u6d4b\u8fde\u63a5\u5230\u7f51\u7edc\u4e0a\u7684\u8bbe\u5907\u662f\u5426\u6709\u4efb\u4f55\u5f15\u8d77\u7ba1\u7406\u4e0a\u5173\u6ce8\u7684\u60c5\u51b5\u3002","title":"\u5176\u4ed6\u534f\u8bae"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-\u7f51\u7edc\u7f16\u7a0b","text":"","title":"\ud83c\udf29 \u7f51\u7edc\u7f16\u7a0b"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#socket","text":"Linux Socket \u7f16\u7a0b\uff08\u4e0d\u9650 Linux\uff09","title":"Socket"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#socket-\u4e2d\u7684-readwrite-\u51fd\u6570","text":"ssize_t read ( int fd , void * buf , size_t count ); ssize_t write ( int fd , const void * buf , size_t count );","title":"Socket \u4e2d\u7684 read()\u3001write() \u51fd\u6570"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#read","text":"read \u51fd\u6570\u662f\u8d1f\u8d23\u4ece fd \u4e2d\u8bfb\u53d6\u5185\u5bb9\u3002 \u5f53\u8bfb\u6210\u529f\u65f6\uff0cread \u8fd4\u56de\u5b9e\u9645\u6240\u8bfb\u7684\u5b57\u8282\u6570\u3002 \u5982\u679c\u8fd4\u56de\u7684\u503c\u662f 0 \u8868\u793a\u5df2\u7ecf\u8bfb\u5230\u6587\u4ef6\u7684\u7ed3\u675f\u4e86\uff0c\u5c0f\u4e8e 0 \u8868\u793a\u51fa\u73b0\u4e86\u9519\u8bef\u3002 \u5982\u679c\u9519\u8bef\u4e3a EINTR \u8bf4\u660e\u8bfb\u662f\u7531\u4e2d\u65ad\u5f15\u8d77\u7684\uff1b\u5982\u679c\u662f ECONNREST \u8868\u793a\u7f51\u7edc\u8fde\u63a5\u51fa\u4e86\u95ee\u9898\u3002","title":"read()"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#write","text":"write \u51fd\u6570\u5c06 buf \u4e2d\u7684 nbytes \u5b57\u8282\u5185\u5bb9\u5199\u5165\u6587\u4ef6\u63cf\u8ff0\u7b26 fd\u3002 \u6210\u529f\u65f6\u8fd4\u56de\u5199\u7684\u5b57\u8282\u6570\u3002\u5931\u8d25\u65f6\u8fd4\u56de -1\uff0c\u5e76\u8bbe\u7f6e errno \u53d8\u91cf\u3002 \u5728\u7f51\u7edc\u7a0b\u5e8f\u4e2d\uff0c\u5f53\u6211\u4eec\u5411\u5957\u63a5\u5b57\u6587\u4ef6\u63cf\u8ff0\u7b26\u5199\u65f6\u6709\u4fe9\u79cd\u53ef\u80fd\u3002 \uff081\uff09write \u7684\u8fd4\u56de\u503c\u5927\u4e8e 0\uff0c\u8868\u793a\u5199\u4e86\u90e8\u5206\u6216\u8005\u662f\u5168\u90e8\u7684\u6570\u636e\u3002 \uff082\uff09\u8fd4\u56de\u7684\u503c\u5c0f\u4e8e 0\uff0c\u6b64\u65f6\u51fa\u73b0\u4e86\u9519\u8bef\u3002 \u5982\u679c\u9519\u8bef\u4e3a EINTR \u8868\u793a\u5728\u5199\u7684\u65f6\u5019\u51fa\u73b0\u4e86\u4e2d\u65ad\u9519\u8bef\uff1b\u5982\u679c\u4e3a EPIPE \u8868\u793a\u7f51\u7edc\u8fde\u63a5\u51fa\u73b0\u4e86\u95ee\u9898\uff08\u5bf9\u65b9\u5df2\u7ecf\u5173\u95ed\u4e86\u8fde\u63a5\uff09\u3002","title":"write()"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#socket-\u4e2d-tcp-\u7684\u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u8fde\u63a5","text":"\u6211\u4eec\u77e5\u9053 TCP \u5efa\u7acb\u8fde\u63a5\u8981\u8fdb\u884c \u201c\u4e09\u6b21\u63e1\u624b\u201d\uff0c\u5373\u4ea4\u6362\u4e09\u4e2a\u5206\u7ec4\u3002\u5927\u81f4\u6d41\u7a0b\u5982\u4e0b\uff1a \u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u53d1\u9001\u4e00\u4e2a SYN J \u670d\u52a1\u5668\u5411\u5ba2\u6237\u7aef\u54cd\u5e94\u4e00\u4e2a SYN K\uff0c\u5e76\u5bf9 SYN J \u8fdb\u884c\u786e\u8ba4 ACK J+1 \u5ba2\u6237\u7aef\u518d\u60f3\u670d\u52a1\u5668\u53d1\u4e00\u4e2a\u786e\u8ba4 ACK K+1 \u53ea\u6709\u5c31\u5b8c\u4e86\u4e09\u6b21\u63e1\u624b\uff0c\u4f46\u662f\u8fd9\u4e2a\u4e09\u6b21\u63e1\u624b\u53d1\u751f\u5728 Socket \u7684\u90a3\u51e0\u4e2a\u51fd\u6570\u4e2d\u5462\uff1f\u8bf7\u770b\u4e0b\u56fe\uff1a \u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff1a 1. \u5f53\u5ba2\u6237\u7aef\u8c03\u7528 connect \u65f6\uff0c\u89e6\u53d1\u4e86\u8fde\u63a5\u8bf7\u6c42\uff0c\u5411\u670d\u52a1\u5668\u53d1\u9001\u4e86 SYN J \u5305\uff0c\u8fd9\u65f6 connect \u8fdb\u5165\u963b\u585e\u72b6\u6001\uff1b 2. \u670d\u52a1\u5668\u76d1\u542c\u5230\u8fde\u63a5\u8bf7\u6c42\uff0c\u5373\u6536\u5230 SYN J \u5305\uff0c\u8c03\u7528 accept \u51fd\u6570\u63a5\u6536\u8bf7\u6c42\u5411\u5ba2\u6237\u7aef\u53d1\u9001 SYN K \uff0cACK J+1\uff0c\u8fd9\u65f6 accept \u8fdb\u5165\u963b\u585e\u72b6\u6001\uff1b 3. \u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u7684 SYN K \uff0cACK J+1 \u4e4b\u540e\uff0c\u8fd9\u65f6 connect \u8fd4\u56de\uff0c\u5e76\u5bf9 SYN K \u8fdb\u884c\u786e\u8ba4\uff1b 4. \u670d\u52a1\u5668\u6536\u5230 ACK K+1 \u65f6\uff0caccept \u8fd4\u56de\uff0c\u81f3\u6b64\u4e09\u6b21\u63e1\u624b\u5b8c\u6bd5\uff0c\u8fde\u63a5\u5efa\u7acb\u3002","title":"Socket \u4e2d TCP \u7684\u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u8fde\u63a5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#socket-\u4e2d-tcp-\u7684\u56db\u6b21\u63e1\u624b\u91ca\u653e\u8fde\u63a5","text":"\u4e0a\u9762\u4ecb\u7ecd\u4e86 socket \u4e2d TCP \u7684\u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u8fc7\u7a0b\uff0c\u53ca\u5176\u6d89\u53ca\u7684 socket \u51fd\u6570\u3002\u73b0\u5728\u6211\u4eec\u4ecb\u7ecd socket \u4e2d\u7684\u56db\u6b21\u63e1\u624b\u91ca\u653e\u8fde\u63a5\u7684\u8fc7\u7a0b\uff0c\u8bf7\u770b\u4e0b\u56fe\uff1a \u56fe\u793a\u8fc7\u7a0b\u5982\u4e0b\uff1a \u67d0\u4e2a\u5e94\u7528\u8fdb\u7a0b\u9996\u5148\u8c03\u7528 close \u4e3b\u52a8\u5173\u95ed\u8fde\u63a5\uff0c\u8fd9\u65f6 TCP \u53d1\u9001\u4e00\u4e2a FIN M\uff1b \u53e6\u4e00\u7aef\u63a5\u6536\u5230 FIN M \u4e4b\u540e\uff0c\u6267\u884c\u88ab\u52a8\u5173\u95ed\uff0c\u5bf9\u8fd9\u4e2a FIN \u8fdb\u884c\u786e\u8ba4\u3002\u5b83\u7684\u63a5\u6536\u4e5f\u4f5c\u4e3a\u6587\u4ef6\u7ed3\u675f\u7b26\u4f20\u9012\u7ed9\u5e94\u7528\u8fdb\u7a0b\uff0c\u56e0\u4e3a FIN \u7684\u63a5\u6536\u610f\u5473\u7740\u5e94\u7528\u8fdb\u7a0b\u5728\u76f8\u5e94\u7684\u8fde\u63a5\u4e0a\u518d\u4e5f\u63a5\u6536\u4e0d\u5230\u989d\u5916\u6570\u636e\uff1b \u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\uff0c\u63a5\u6536\u5230\u6587\u4ef6\u7ed3\u675f\u7b26\u7684\u5e94\u7528\u8fdb\u7a0b\u8c03\u7528 close \u5173\u95ed\u5b83\u7684 socket\u3002\u8fd9\u5bfc\u81f4\u5b83\u7684 TCP \u4e5f\u53d1\u9001\u4e00\u4e2a FIN N\uff1b \u63a5\u6536\u5230\u8fd9\u4e2a FIN \u7684\u6e90\u53d1\u9001\u7aef TCP \u5bf9\u5b83\u8fdb\u884c\u786e\u8ba4\u3002 \u8fd9\u6837\u6bcf\u4e2a\u65b9\u5411\u4e0a\u90fd\u6709\u4e00\u4e2a FIN \u548c ACK\u3002","title":"Socket \u4e2d TCP \u7684\u56db\u6b21\u63e1\u624b\u91ca\u653e\u8fde\u63a5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-\u6570\u636e\u5e93","text":"\u672c\u8282\u90e8\u5206\u77e5\u8bc6\u70b9\u6765\u81ea\u300a\u6570\u636e\u5e93\u7cfb\u7edf\u6982\u8bba\uff08\u7b2c 5 \u7248\uff09\u300b","title":"\ud83d\udcbe \u6570\u636e\u5e93"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u57fa\u672c\u6982\u5ff5","text":"\u6570\u636e\uff08data\uff09\uff1a\u63cf\u8ff0\u4e8b\u7269\u7684\u7b26\u53f7\u8bb0\u5f55\u79f0\u4e3a\u6570\u636e\u3002 \u6570\u636e\u5e93\uff08DataBase\uff0cDB\uff09\uff1a\u662f\u957f\u671f\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u5185\u3001\u6709\u7ec4\u7ec7\u7684\u3001\u53ef\u5171\u4eab\u7684\u5927\u91cf\u6570\u636e\u7684\u96c6\u5408\uff0c\u5177\u6709\u6c38\u4e45\u5b58\u50a8\u3001\u6709\u7ec4\u7ec7\u3001\u53ef\u5171\u4eab\u4e09\u4e2a\u57fa\u672c\u7279\u70b9\u3002 \u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff08DataBase Management System\uff0cDBMS\uff09\uff1a\u662f\u4f4d\u4e8e\u7528\u6237\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u95f4\u7684\u4e00\u5c42\u6570\u636e\u7ba1\u7406\u8f6f\u4ef6\u3002 \u6570\u636e\u5e93\u7cfb\u7edf\uff08DataBase System\uff0cDBS\uff09\uff1a\u662f\u6709\u6570\u636e\u5e93\u3001\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff08\u53ca\u5176\u5e94\u7528\u5f00\u53d1\u5de5\u5177\uff09\u3001\u5e94\u7528\u7a0b\u5e8f\u548c\u6570\u636e\u5e93\u7ba1\u7406\u5458\uff08DataBase Administrator DBA\uff09\u7ec4\u6210\u7684\u5b58\u50a8\u3001\u7ba1\u7406\u3001\u5904\u7406\u548c\u7ef4\u62a4\u6570\u636e\u7684\u7cfb\u7edf\u3002 \u5b9e\u4f53\uff08entity\uff09\uff1a\u5ba2\u89c2\u5b58\u5728\u5e76\u53ef\u76f8\u4e92\u533a\u522b\u7684\u4e8b\u7269\u79f0\u4e3a\u5b9e\u4f53\u3002 \u5c5e\u6027\uff08attribute\uff09\uff1a\u5b9e\u4f53\u6240\u5177\u6709\u7684\u67d0\u4e00\u7279\u6027\u79f0\u4e3a\u5c5e\u6027\u3002 \u7801\uff08key\uff09\uff1a\u552f\u4e00\u6807\u8bc6\u5b9e\u4f53\u7684\u5c5e\u6027\u96c6\u79f0\u4e3a\u7801\u3002 \u5b9e\u4f53\u578b\uff08entity type\uff09\uff1a\u7528\u5b9e\u4f53\u540d\u53ca\u5176\u5c5e\u6027\u540d\u96c6\u5408\u6765\u62bd\u8c61\u548c\u523b\u753b\u540c\u7c7b\u5b9e\u4f53\uff0c\u79f0\u4e3a\u5b9e\u4f53\u578b\u3002 \u5b9e\u4f53\u96c6\uff08entity set\uff09\uff1a\u540c\u4e00\u5b9e\u4f53\u578b\u7684\u96c6\u5408\u79f0\u4e3a\u5b9e\u4f53\u96c6\u3002 \u8054\u7cfb\uff08relationship\uff09\uff1a\u5b9e\u4f53\u4e4b\u95f4\u7684\u8054\u7cfb\u901a\u5e38\u662f\u6307\u4e0d\u540c\u5b9e\u4f53\u96c6\u4e4b\u95f4\u7684\u8054\u7cfb\u3002 \u6a21\u5f0f\uff08schema\uff09\uff1a\u6a21\u5f0f\u4e5f\u79f0\u903b\u8f91\u6a21\u5f0f\uff0c\u662f\u6570\u636e\u5e93\u5168\u4f53\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u548c\u7279\u5f81\u7684\u63cf\u8ff0\uff0c\u662f\u6240\u6709\u7528\u6237\u7684\u516c\u5171\u6570\u636e\u89c6\u56fe\u3002 \u5916\u6a21\u5f0f\uff08external schema\uff09\uff1a\u5916\u6a21\u5f0f\u4e5f\u79f0\u5b50\u6a21\u5f0f\uff08subschema\uff09\u6216\u7528\u6237\u6a21\u5f0f\uff0c\u5b83\u662f\u6570\u636e\u5e93\u7528\u6237\uff08\u5305\u62ec\u5e94\u7528\u7a0b\u5e8f\u5458\u548c\u6700\u7ec8\u7528\u6237\uff09\u80fd\u591f\u770b\u89c1\u548c\u4f7f\u7528\u7684\u5c40\u90e8\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u548c\u7279\u5f81\u7684\u63cf\u8ff0\uff0c\u662f\u6570\u636e\u5e93\u7528\u6237\u7684\u6570\u636e\u89c6\u56fe\uff0c\u662f\u4e0e\u67d0\u4e00\u5e94\u7528\u6709\u5173\u7684\u6570\u636e\u7684\u903b\u8f91\u8868\u793a\u3002 \u5185\u6a21\u5f0f\uff08internal schema\uff09\uff1a\u5185\u6a21\u5f0f\u4e5f\u79f0\u4e3a\u5b58\u50a8\u6a21\u5f0f\uff08storage schema\uff09\uff0c\u4e00\u4e2a\u6570\u636e\u5e93\u53ea\u6709\u4e00\u4e2a\u5185\u6a21\u5f0f\u3002\u4ed6\u662f\u6570\u636e\u7269\u7406\u7ed3\u6784\u548c\u5b58\u50a8\u65b9\u5f0f\u7684\u63cf\u8ff0\uff0c\u662f\u6570\u636e\u5e93\u5728\u6570\u636e\u5e93\u5185\u90e8\u7684\u7ec4\u7ec7\u65b9\u5f0f\u3002","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5e38\u7528\u6570\u636e\u6a21\u578b","text":"\u5c42\u6b21\u6a21\u578b\uff08hierarchical model\uff09 \u7f51\u72b6\u6a21\u578b\uff08network model\uff09 \u5173\u7cfb\u6a21\u578b\uff08relational model\uff09 \u5173\u7cfb\uff08relation\uff09\uff1a\u4e00\u4e2a\u5173\u7cfb\u5bf9\u5e94\u901a\u5e38\u8bf4\u7684\u4e00\u5f20\u8868 \u5143\u7ec4\uff08tuple\uff09\uff1a\u8868\u4e2d\u7684\u4e00\u884c\u5373\u4e3a\u4e00\u4e2a\u5143\u7ec4 \u5c5e\u6027\uff08attribute\uff09\uff1a\u8868\u4e2d\u7684\u4e00\u5217\u5373\u4e3a\u4e00\u4e2a\u5c5e\u6027 \u7801\uff08key\uff09\uff1a\u8868\u4e2d\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u4e00\u4e2a\u5143\u7ec4\u7684\u67d0\u4e2a\u5c5e\u6027\u7ec4 \u57df\uff08domain\uff09\uff1a\u4e00\u7ec4\u5177\u6709\u76f8\u540c\u6570\u636e\u7c7b\u578b\u7684\u503c\u7684\u96c6\u5408 \u5206\u91cf\uff1a\u5143\u7ec4\u4e2d\u7684\u4e00\u4e2a\u5c5e\u6027\u503c \u5173\u7cfb\u6a21\u5f0f\uff1a\u5bf9\u5173\u7cfb\u7684\u63cf\u8ff0\uff0c\u4e00\u822c\u8868\u793a\u4e3a \u5173\u7cfb\u540d(\u5c5e\u60271, \u5c5e\u60272, ..., \u5c5e\u6027n) \u9762\u5411\u5bf9\u8c61\u6570\u636e\u6a21\u578b\uff08object oriented data model\uff09 \u5bf9\u8c61\u5173\u7cfb\u6570\u636e\u6a21\u578b\uff08object relational data model\uff09 \u534a\u7ed3\u6784\u5316\u6570\u636e\u6a21\u578b\uff08semistructure data model\uff09","title":"\u5e38\u7528\u6570\u636e\u6a21\u578b"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5e38\u7528-sql-\u64cd\u4f5c","text":"\u5bf9\u8c61\u7c7b\u578b \u5bf9\u8c61 \u64cd\u4f5c\u7c7b\u578b \u6570\u636e\u5e93\u6a21\u5f0f \u6a21\u5f0f CREATE SCHEMA \u57fa\u672c\u8868 CREATE SCHEMA \uff0c ALTER TABLE \u89c6\u56fe CREATE VIEW \u7d22\u5f15 CREATE INDEX \u6570\u636e \u57fa\u672c\u8868\u548c\u89c6\u56fe SELECT \uff0c INSERT \uff0c UPDATE \uff0c DELETE \uff0c REFERENCES \uff0c ALL PRIVILEGES \u5c5e\u6027\u5217 SELECT \uff0c INSERT \uff0c UPDATE \uff0c REFERENCES \uff0c ALL PRIVILEGES SQL \u8bed\u6cd5\u6559\u7a0b\uff1a runoob . SQL \u6559\u7a0b","title":"\u5e38\u7528 SQL \u64cd\u4f5c"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5173\u7cfb\u578b\u6570\u636e\u5e93","text":"\u57fa\u672c\u5173\u7cfb\u64cd\u4f5c\uff1a\u67e5\u8be2\uff08\u9009\u62e9\u3001\u6295\u5f71\u3001\u8fde\u63a5\uff08\u7b49\u503c\u8fde\u63a5\u3001\u81ea\u7136\u8fde\u63a5\u3001\u5916\u8fde\u63a5\uff08\u5de6\u5916\u8fde\u63a5\u3001\u53f3\u5916\u8fde\u63a5\uff09\uff09\u3001\u9664\u3001\u5e76\u3001\u5dee\u3001\u4ea4\u3001\u7b1b\u5361\u5c14\u79ef\u7b49\uff09\u3001\u63d2\u5165\u3001\u5220\u9664\u3001\u4fee\u6539 \u5173\u7cfb\u6a21\u578b\u4e2d\u7684\u4e09\u7c7b\u5b8c\u6574\u6027\u7ea6\u675f\uff1a\u5b9e\u4f53\u5b8c\u6574\u6027\u3001\u53c2\u7167\u5b8c\u6574\u6027\u3001\u7528\u6237\u5b9a\u4e49\u7684\u5b8c\u6574\u6027","title":"\u5173\u7cfb\u578b\u6570\u636e\u5e93"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7d22\u5f15","text":"\u6570\u636e\u5e93\u7d22\u5f15\uff1a\u987a\u5e8f\u7d22\u5f15\u3001B+ \u6811\u7d22\u5f15\u3001hash \u7d22\u5f15 MySQL \u7d22\u5f15\u80cc\u540e\u7684\u6570\u636e\u7ed3\u6784\u53ca\u7b97\u6cd5\u539f\u7406","title":"\u7d22\u5f15"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6570\u636e\u5e93\u5b8c\u6574\u6027","text":"\u6570\u636e\u5e93\u7684\u5b8c\u6574\u6027\u662f\u6307\u6570\u636e\u7684\u6b63\u786e\u6027\u548c\u76f8\u5bb9\u6027\u3002 \u5b8c\u6574\u6027\uff1a\u4e3a\u4e86\u9632\u6b62\u6570\u636e\u5e93\u4e2d\u5b58\u5728\u4e0d\u7b26\u5408\u8bed\u4e49\uff08\u4e0d\u6b63\u786e\uff09\u7684\u6570\u636e\u3002 \u5b89\u5168\u6027\uff1a\u4e3a\u4e86\u4fdd\u62a4\u6570\u636e\u5e93\u9632\u6b62\u6076\u610f\u7834\u574f\u548c\u975e\u6cd5\u5b58\u53d6\u3002 \u89e6\u53d1\u5668\uff1a\u662f\u7528\u6237\u5b9a\u4e49\u5728\u5173\u7cfb\u8868\u4e2d\u7684\u4e00\u7c7b\u7531\u4e8b\u4ef6\u9a71\u52a8\u7684\u7279\u6b8a\u8fc7\u7a0b\u3002","title":"\u6570\u636e\u5e93\u5b8c\u6574\u6027"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5173\u7cfb\u6570\u636e\u7406\u8bba","text":"\u6570\u636e\u4f9d\u8d56\u662f\u4e00\u4e2a\u5173\u7cfb\u5185\u90e8\u5c5e\u6027\u4e0e\u5c5e\u6027\u4e4b\u95f4\u7684\u4e00\u79cd\u7ea6\u675f\u5173\u7cfb\uff0c\u662f\u901a\u8fc7\u5c5e\u6027\u95f4\u503c\u7684\u76f8\u7b49\u4e0e\u5426\u4f53\u73b0\u51fa\u6765\u7684\u6570\u636e\u95f4\u76f8\u5173\u8054\u7cfb\u3002 \u6700\u91cd\u8981\u7684\u6570\u636e\u4f9d\u8d56\uff1a\u51fd\u6570\u4f9d\u8d56\u3001\u591a\u503c\u4f9d\u8d56\u3002","title":"\u5173\u7cfb\u6570\u636e\u7406\u8bba"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u8303\u5f0f","text":"\u7b2c\u4e00\u8303\u5f0f\uff081NF\uff09\uff1a\u5c5e\u6027\uff08\u5b57\u6bb5\uff09\u662f\u6700\u5c0f\u5355\u4f4d\u4e0d\u53ef\u518d\u5206\u3002 \u7b2c\u4e8c\u8303\u5f0f\uff082NF\uff09\uff1a\u6ee1\u8db3 1NF\uff0c\u6bcf\u4e2a\u975e\u4e3b\u5c5e\u6027\u5b8c\u5168\u4f9d\u8d56\u4e8e\u4e3b\u952e\uff08\u6d88\u9664 1NF \u975e\u4e3b\u5c5e\u6027\u5bf9\u7801\u7684\u90e8\u5206\u51fd\u6570\u4f9d\u8d56\uff09\u3002 \u7b2c\u4e09\u8303\u5f0f\uff083NF\uff09\uff1a\u6ee1\u8db3 2NF\uff0c\u4efb\u4f55\u975e\u4e3b\u5c5e\u6027\u4e0d\u4f9d\u8d56\u4e8e\u5176\u4ed6\u975e\u4e3b\u5c5e\u6027\uff08\u6d88\u9664 2NF \u975e\u4e3b\u5c5e\u6027\u5bf9\u7801\u7684\u4f20\u9012\u51fd\u6570\u4f9d\u8d56\uff09\u3002 \u9c8d\u4f9d\u65af-\u79d1\u5f97\u8303\u5f0f\uff08BCNF\uff09\uff1a\u6ee1\u8db3 3NF\uff0c\u4efb\u4f55\u975e\u4e3b\u5c5e\u6027\u4e0d\u80fd\u5bf9\u4e3b\u952e\u5b50\u96c6\u4f9d\u8d56\uff08\u6d88\u9664 3NF \u4e3b\u5c5e\u6027\u5bf9\u7801\u7684\u90e8\u5206\u548c\u4f20\u9012\u51fd\u6570\u4f9d\u8d56\uff09\u3002 \u7b2c\u56db\u8303\u5f0f\uff084NF\uff09\uff1a\u6ee1\u8db3 3NF\uff0c\u5c5e\u6027\u4e4b\u95f4\u4e0d\u80fd\u6709\u975e\u5e73\u51e1\u4e14\u975e\u51fd\u6570\u4f9d\u8d56\u7684\u591a\u503c\u4f9d\u8d56\uff08\u6d88\u9664 3NF \u975e\u5e73\u51e1\u4e14\u975e\u51fd\u6570\u4f9d\u8d56\u7684\u591a\u503c\u4f9d\u8d56\uff09\u3002","title":"\u8303\u5f0f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6570\u636e\u5e93\u6062\u590d","text":"\u4e8b\u52a1\uff1a\u662f\u7528\u6237\u5b9a\u4e49\u7684\u4e00\u4e2a\u6570\u636e\u5e93\u64cd\u4f5c\u5e8f\u5217\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u8981\u4e48\u5168\u505a\uff0c\u8981\u4e48\u5168\u4e0d\u505a\uff0c\u662f\u4e00\u4e2a\u4e0d\u53ef\u5206\u5272\u7684\u5de5\u4f5c\u5355\u4f4d\u3002 \u4e8b\u7269\u7684 ACID \u7279\u6027\uff1a\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u9694\u79bb\u6027\u3001\u6301\u7eed\u6027\u3002 \u6062\u590d\u7684\u5b9e\u73b0\u6280\u672f\uff1a\u5efa\u7acb\u5197\u4f59\u6570\u636e -> \u5229\u7528\u5197\u4f59\u6570\u636e\u5b9e\u65bd\u6570\u636e\u5e93\u6062\u590d\u3002 \u5efa\u7acb\u5197\u4f59\u6570\u636e\u5e38\u7528\u6280\u672f\uff1a\u6570\u636e\u8f6c\u50a8\uff08\u52a8\u6001\u6d77\u91cf\u8f6c\u50a8\u3001\u52a8\u6001\u589e\u91cf\u8f6c\u50a8\u3001\u9759\u6001\u6d77\u91cf\u8f6c\u50a8\u3001\u9759\u6001\u589e\u91cf\u8f6c\u50a8\uff09\u3001\u767b\u8bb0\u65e5\u5fd7\u6587\u4ef6\u3002","title":"\u6570\u636e\u5e93\u6062\u590d"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5e76\u53d1\u63a7\u5236","text":"\u4e8b\u52a1\u662f\u5e76\u53d1\u63a7\u5236\u7684\u57fa\u672c\u5355\u4f4d\u3002 \u5e76\u53d1\u64cd\u4f5c\u5e26\u6765\u7684\u6570\u636e\u4e0d\u4e00\u81f4\u6027\u5305\u62ec\uff1a\u4e22\u5931\u4fee\u6539\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u3001\u8bfb \u201c\u810f\u201d \u6570\u636e\u3002 \u5e76\u53d1\u63a7\u5236\u4e3b\u8981\u6280\u672f\uff1a\u5c01\u9501\u3001\u65f6\u95f4\u6233\u3001\u4e50\u89c2\u63a7\u5236\u6cd5\u3001\u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236\u7b49\u3002 \u57fa\u672c\u5c01\u9501\u7c7b\u578b\uff1a\u6392\u4ed6\u9501\uff08X \u9501 / \u5199\u9501\uff09\u3001\u5171\u4eab\u9501\uff08S \u9501 / \u8bfb\u9501\uff09\u3002 \u6d3b\u9501\u6b7b\u9501\uff1a \u6d3b\u9501\uff1a\u4e8b\u52a1\u6c38\u8fdc\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\uff0c\u53ef\u901a\u8fc7\u5148\u6765\u5148\u670d\u52a1\u7684\u7b56\u7565\u907f\u514d\u3002 \u6b7b\u9501\uff1a\u4e8b\u52a1\u6c38\u8fdc\u4e0d\u80fd\u7ed3\u675f \u9884\u9632\uff1a\u4e00\u6b21\u5c01\u9501\u6cd5\u3001\u987a\u5e8f\u5c01\u9501\u6cd5\uff1b \u8bca\u65ad\uff1a\u8d85\u65f6\u6cd5\u3001\u7b49\u5f85\u56fe\u6cd5\uff1b \u89e3\u9664\uff1a\u64a4\u9500\u5904\u7406\u6b7b\u9501\u4ee3\u4ef7\u6700\u5c0f\u7684\u4e8b\u52a1\uff0c\u5e76\u91ca\u653e\u6b64\u4e8b\u52a1\u7684\u6240\u6709\u7684\u9501\uff0c\u4f7f\u5176\u4ed6\u4e8b\u52a1\u5f97\u4ee5\u7ee7\u7eed\u8fd0\u884c\u4e0b\u53bb\u3002 \u53ef\u4e32\u884c\u5316\u8c03\u5ea6\uff1a\u591a\u4e2a\u4e8b\u52a1\u7684\u5e76\u53d1\u6267\u884c\u662f\u6b63\u786e\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u7ed3\u679c\u4e0e\u6309\u67d0\u4e00\u6b21\u5e8f\u4e32\u884c\u5730\u6267\u884c\u8fd9\u4e9b\u4e8b\u52a1\u65f6\u7684\u7ed3\u679c\u76f8\u540c\u3002\u53ef\u4e32\u884c\u6027\u65f6\u5e76\u53d1\u4e8b\u52a1\u6b63\u786e\u8c03\u5ea6\u7684\u51c6\u5219\u3002","title":"\u5e76\u53d1\u63a7\u5236"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-\u8bbe\u8ba1\u6a21\u5f0f","text":"\u5404\u5927\u8bbe\u8ba1\u6a21\u5f0f\u4f8b\u5b50\u53c2\u8003\uff1a CSDN\u4e13\u680f . C++ \u8bbe\u8ba1\u6a21\u5f0f \u7cfb\u5217\u535a\u6587 \u8bbe\u8ba1\u6a21\u5f0f\u5de5\u7a0b\u76ee\u5f55","title":"\ud83d\udccf \u8bbe\u8ba1\u6a21\u5f0f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5355\u4f8b\u6a21\u5f0f","text":"\u5355\u4f8b\u6a21\u5f0f\u4f8b\u5b50","title":"\u5355\u4f8b\u6a21\u5f0f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f","text":"\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u4f8b\u5b50","title":"\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u9002\u914d\u5668\u6a21\u5f0f","text":"\u9002\u914d\u5668\u6a21\u5f0f\u4f8b\u5b50","title":"\u9002\u914d\u5668\u6a21\u5f0f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6865\u63a5\u6a21\u5f0f","text":"\u6865\u63a5\u6a21\u5f0f\u4f8b\u5b50","title":"\u6865\u63a5\u6a21\u5f0f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u89c2\u5bdf\u8005\u6a21\u5f0f","text":"\u89c2\u5bdf\u8005\u6a21\u5f0f\u4f8b\u5b50","title":"\u89c2\u5bdf\u8005\u6a21\u5f0f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u8bbe\u8ba1\u6a21\u5f0f\u7684\u516d\u5927\u539f\u5219","text":"\u5355\u4e00\u804c\u8d23\u539f\u5219\uff08SRP\uff0cSingle Responsibility Principle\uff09 \u91cc\u6c0f\u66ff\u6362\u539f\u5219\uff08LSP\uff0cLiskov Substitution Principle\uff09 \u4f9d\u8d56\u5012\u7f6e\u539f\u5219\uff08DIP\uff0cDependence Inversion Principle\uff09 \u63a5\u53e3\u9694\u79bb\u539f\u5219\uff08ISP\uff0cInterface Segregation Principle\uff09 \u8fea\u7c73\u7279\u6cd5\u5219\uff08LoD\uff0cLaw of Demeter\uff09 \u5f00\u653e\u5c01\u95ed\u539f\u5219\uff08OCP\uff0cOpen Close Principle\uff09","title":"\u8bbe\u8ba1\u6a21\u5f0f\u7684\u516d\u5927\u539f\u5219"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-\u94fe\u63a5\u88c5\u8f7d\u5e93","text":"\u672c\u8282\u90e8\u5206\u77e5\u8bc6\u70b9\u6765\u81ea\u300a\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b\u2014\u2014\u94fe\u63a5\u88c5\u8f7d\u5e93\u300b","title":"\u2699\ufe0f \u94fe\u63a5\u88c5\u8f7d\u5e93"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5185\u5b58\u6808\u5806","text":"\u4e00\u822c\u5e94\u7528\u7a0b\u5e8f\u5185\u5b58\u7a7a\u95f4\u6709\u5982\u4e0b\u533a\u57df\uff1a \u6808\uff1a\u7531\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u5206\u914d\u91ca\u653e\uff0c\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\u3001\u5c40\u90e8\u53d8\u91cf\u7b49\u7684\u503c\uff0c\u7528\u4e8e\u7ef4\u62a4\u51fd\u6570\u8c03\u7528\u7684\u4e0a\u4e0b\u6587 \u5806\uff1a\u4e00\u822c\u7531\u7a0b\u5e8f\u5458\u5206\u914d\u91ca\u653e\uff0c\u82e5\u7a0b\u5e8f\u5458\u4e0d\u91ca\u653e\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\u53ef\u80fd\u7531\u64cd\u4f5c\u7cfb\u7edf\u56de\u6536\uff0c\u7528\u6765\u5bb9\u7eb3\u5e94\u7528\u7a0b\u5e8f\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u533a\u57df \u53ef\u6267\u884c\u6587\u4ef6\u6620\u50cf\uff1a\u5b58\u50a8\u7740\u53ef\u6267\u884c\u6587\u4ef6\u5728\u5185\u5b58\u4e2d\u7684\u6620\u50cf\uff0c\u7531\u88c5\u8f7d\u5668\u88c5\u8f7d\u662f\u5c06\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5185\u5b58\u8bfb\u53d6\u6216\u6620\u5c04\u5230\u8fd9\u91cc \u4fdd\u7559\u533a\uff1a\u4fdd\u7559\u533a\u5e76\u4e0d\u662f\u4e00\u4e2a\u5355\u4e00\u7684\u5185\u5b58\u533a\u57df\uff0c\u800c\u662f\u5bf9\u5185\u5b58\u4e2d\u53d7\u5230\u4fdd\u62a4\u800c\u7981\u6b62\u8bbf\u95ee\u7684\u5185\u5b58\u533a\u57df\u7684\u603b\u79f0\uff0c\u5982\u901a\u5e38 C \u8bed\u8a00\u8bb2\u65e0\u6548\u6307\u9488\u8d4b\u503c\u4e3a 0\uff08NULL\uff09\uff0c\u56e0\u6b64 0 \u5730\u5740\u6b63\u5e38\u60c5\u51b5\u4e0b\u4e0d\u53ef\u80fd\u6709\u6548\u7684\u8bbf\u95ee\u6570\u636e","title":"\u5185\u5b58\u3001\u6808\u3001\u5806"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6808","text":"\u6808\u4fdd\u5b58\u4e86\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u6240\u9700\u8981\u7684\u7ef4\u62a4\u4fe1\u606f\uff0c\u5e38\u88ab\u79f0\u4e3a\u5806\u6808\u5e27\uff08Stack Frame\uff09\u6216\u6d3b\u52a8\u8bb0\u5f55\uff08Activate Record\uff09\uff0c\u4e00\u822c\u5305\u542b\u4ee5\u4e0b\u51e0\u65b9\u9762\uff1a \u51fd\u6570\u7684\u8fd4\u56de\u5730\u5740\u548c\u53c2\u6570 \u4e34\u65f6\u53d8\u91cf\uff1a\u5305\u62ec\u51fd\u6570\u7684\u975e\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u4ee5\u53ca\u7f16\u8bd1\u5668\u81ea\u52a8\u751f\u6210\u7684\u5176\u4ed6\u4e34\u65f6\u53d8\u91cf \u4fdd\u5b58\u4e0a\u4e0b\u6587\uff1a\u5305\u62ec\u51fd\u6570\u8c03\u7528\u524d\u540e\u9700\u8981\u4fdd\u6301\u4e0d\u53d8\u7684\u5bc4\u5b58\u5668","title":"\u6808"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5806","text":"\u5806\u5206\u914d\u7b97\u6cd5\uff1a \u7a7a\u95f2\u94fe\u8868\uff08Free List\uff09 \u4f4d\u56fe\uff08Bitmap\uff09 \u5bf9\u8c61\u6c60","title":"\u5806"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6bb5\u9519\u8befsegment-fault-\u6216-\u975e\u6cd5\u64cd\u4f5c\u8be5\u5185\u5b58\u5730\u5740\u4e0d\u80fd-readwrite","text":"\u5178\u578b\u7684\u975e\u6cd5\u6307\u9488\u89e3\u5f15\u7528\u9020\u6210\u7684\u9519\u8bef\u3002\u5f53\u6307\u9488\u6307\u5411\u4e00\u4e2a\u4e0d\u5141\u8bb8\u8bfb\u5199\u7684\u5185\u5b58\u5730\u5740\uff0c\u800c\u7a0b\u5e8f\u5374\u8bd5\u56fe\u5229\u7528\u6307\u9488\u6765\u8bfb\u6216\u5199\u8be5\u5730\u5740\u65f6\uff0c\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u9519\u8bef\u3002 \u666e\u904d\u539f\u56e0\uff1a \u5c06\u6307\u9488\u521d\u59cb\u5316\u4e3a NULL\uff0c\u4e4b\u540e\u6ca1\u6709\u7ed9\u5b83\u4e00\u4e2a\u5408\u7406\u7684\u503c\u5c31\u5f00\u59cb\u4f7f\u7528\u6307\u9488 \u6ca1\u7528\u521d\u59cb\u5316\u6808\u4e2d\u7684\u6307\u9488\uff0c\u6307\u9488\u7684\u503c\u4e00\u822c\u4f1a\u662f\u968f\u673a\u6570\uff0c\u4e4b\u540e\u5c31\u76f4\u63a5\u5f00\u59cb\u4f7f\u7528\u6307\u9488","title":"\u201c\u6bb5\u9519\u8bef\uff08segment fault\uff09\u201d \u6216 \u201c\u975e\u6cd5\u64cd\u4f5c\uff0c\u8be5\u5185\u5b58\u5730\u5740\u4e0d\u80fd read/write\u201d"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7f16\u8bd1\u94fe\u63a5","text":"","title":"\u7f16\u8bd1\u94fe\u63a5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5404\u5e73\u53f0\u6587\u4ef6\u683c\u5f0f","text":"\u5e73\u53f0 \u53ef\u6267\u884c\u6587\u4ef6 \u76ee\u6807\u6587\u4ef6 \u52a8\u6001\u5e93/\u5171\u4eab\u5bf9\u8c61 \u9759\u6001\u5e93 Windows exe obj dll lib Unix/Linux ELF\u3001out o so a Mac Mach-O o dylib\u3001tbd\u3001framework a\u3001framework","title":"\u5404\u5e73\u53f0\u6587\u4ef6\u683c\u5f0f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7f16\u8bd1\u94fe\u63a5\u8fc7\u7a0b","text":"\u9884\u7f16\u8bd1\uff08\u9884\u7f16\u8bd1\u5668\u5904\u7406\u5982 #include \u3001 #define \u7b49\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u751f\u6210 .i \u6216 .ii \u6587\u4ef6\uff09 \u7f16\u8bd1\uff08\u7f16\u8bd1\u5668\u8fdb\u884c\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u3001\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u3001\u76ee\u6807\u4ee3\u7801\u751f\u6210\u3001\u4f18\u5316\uff0c\u751f\u6210 .s \u6587\u4ef6\uff09 \u6c47\u7f16\uff08\u6c47\u7f16\u5668\u628a\u6c47\u7f16\u7801\u7ffb\u8bd1\u6210\u673a\u5668\u7801\uff0c\u751f\u6210 .o \u6587\u4ef6\uff09 \u94fe\u63a5\uff08\u8fde\u63a5\u5668\u8fdb\u884c\u5730\u5740\u548c\u7a7a\u95f4\u5206\u914d\u3001\u7b26\u53f7\u51b3\u8bae\u3001\u91cd\u5b9a\u4f4d\uff0c\u751f\u6210 .out \u6587\u4ef6\uff09 \u73b0\u5728\u7248\u672c GCC \u628a\u9884\u7f16\u8bd1\u548c\u7f16\u8bd1\u5408\u6210\u4e00\u6b65\uff0c\u9884\u7f16\u8bd1\u7f16\u8bd1\u7a0b\u5e8f cc1\u3001\u6c47\u7f16\u5668 as\u3001\u8fde\u63a5\u5668 ld MSVC \u7f16\u8bd1\u73af\u5883\uff0c\u7f16\u8bd1\u5668 cl\u3001\u8fde\u63a5\u5668 link\u3001\u53ef\u6267\u884c\u6587\u4ef6\u67e5\u770b\u5668 dumpbin","title":"\u7f16\u8bd1\u94fe\u63a5\u8fc7\u7a0b"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u76ee\u6807\u6587\u4ef6","text":"\u7f16\u8bd1\u5668\u7f16\u8bd1\u6e90\u4ee3\u7801\u540e\u751f\u6210\u7684\u6587\u4ef6\u53eb\u505a\u76ee\u6807\u6587\u4ef6\u3002\u76ee\u6807\u6587\u4ef6\u4ece\u7ed3\u6784\u4e0a\u8bb2\uff0c\u5b83\u662f\u5df2\u7ecf\u7f16\u8bd1\u540e\u7684\u53ef\u6267\u884c\u6587\u4ef6\u683c\u5f0f\uff0c\u53ea\u662f\u8fd8\u6ca1\u6709\u7ecf\u8fc7\u94fe\u63a5\u7684\u8fc7\u7a0b\uff0c\u5176\u4e2d\u53ef\u80fd\u6709\u4e9b\u7b26\u53f7\u6216\u6709\u4e9b\u5730\u5740\u8fd8\u6ca1\u6709\u88ab\u8c03\u6574\u3002 \u53ef\u6267\u884c\u6587\u4ef6\uff08Windows \u7684 .exe \u548c Linux \u7684 ELF \uff09\u3001\u52a8\u6001\u94fe\u63a5\u5e93\uff08Windows \u7684 .dll \u548c Linux \u7684 .so \uff09\u3001\u9759\u6001\u94fe\u63a5\u5e93\uff08Windows \u7684 .lib \u548c Linux \u7684 .a \uff09\u90fd\u662f\u6309\u7167\u53ef\u6267\u884c\u6587\u4ef6\u683c\u5f0f\u5b58\u50a8\uff08Windows \u6309\u7167 PE-COFF\uff0cLinux \u6309\u7167 ELF\uff09","title":"\u76ee\u6807\u6587\u4ef6"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u76ee\u6807\u6587\u4ef6\u683c\u5f0f","text":"Windows \u7684 PE\uff08Portable Executable\uff09\uff0c\u6216\u79f0\u4e3a PE-COFF\uff0c .obj \u683c\u5f0f Linux \u7684 ELF\uff08Executable Linkable Format\uff09\uff0c .o \u683c\u5f0f Intel/Microsoft \u7684 OMF\uff08Object Module Format\uff09 Unix \u7684 a.out \u683c\u5f0f MS-DOS \u7684 .COM \u683c\u5f0f PE \u548c ELF \u90fd\u662f COFF\uff08Common File Format\uff09\u7684\u53d8\u79cd","title":"\u76ee\u6807\u6587\u4ef6\u683c\u5f0f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u76ee\u6807\u6587\u4ef6\u5b58\u50a8\u7ed3\u6784","text":"\u6bb5 \u529f\u80fd File Header \u6587\u4ef6\u5934\uff0c\u63cf\u8ff0\u6574\u4e2a\u6587\u4ef6\u7684\u6587\u4ef6\u5c5e\u6027\uff08\u5305\u62ec\u6587\u4ef6\u662f\u5426\u53ef\u6267\u884c\u3001\u662f\u9759\u6001\u94fe\u63a5\u6216\u52a8\u6001\u8fde\u63a5\u53ca\u5165\u53e3\u5730\u5740\u3001\u76ee\u6807\u786c\u4ef6\u3001\u76ee\u6807\u64cd\u4f5c\u7cfb\u7edf\u7b49\uff09 .text section \u4ee3\u7801\u6bb5\uff0c\u6267\u884c\u8bed\u53e5\u7f16\u8bd1\u6210\u7684\u673a\u5668\u4ee3\u7801 .data section \u6570\u636e\u6bb5\uff0c\u5df2\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u9759\u6001\u53d8\u91cf .bss section BSS \u6bb5\uff08Block Started by Symbol\uff09\uff0c\u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u9759\u6001\u53d8\u91cf\uff08\u56e0\u4e3a\u9ed8\u8ba4\u503c\u4e3a 0\uff0c\u6240\u4ee5\u53ea\u662f\u5728\u6b64\u9884\u7559\u4f4d\u7f6e\uff0c\u4e0d\u5360\u7a7a\u95f4\uff09 .rodata section \u53ea\u8bfb\u6570\u636e\u6bb5\uff0c\u5b58\u653e\u53ea\u8bfb\u6570\u636e\uff0c\u4e00\u822c\u662f\u7a0b\u5e8f\u91cc\u9762\u7684\u53ea\u8bfb\u53d8\u91cf\uff08\u5982 const \u4fee\u9970\u7684\u53d8\u91cf\uff09\u548c\u5b57\u7b26\u4e32\u5e38\u91cf .comment section \u6ce8\u91ca\u4fe1\u606f\u6bb5\uff0c\u5b58\u653e\u7f16\u8bd1\u5668\u7248\u672c\u4fe1\u606f .note.GNU-stack section \u5806\u6808\u63d0\u793a\u6bb5 \u5176\u4ed6\u6bb5\u7565","title":"\u76ee\u6807\u6587\u4ef6\u5b58\u50a8\u7ed3\u6784"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u94fe\u63a5\u7684\u63a5\u53e3\u7b26\u53f7","text":"\u5728\u94fe\u63a5\u4e2d\uff0c\u76ee\u6807\u6587\u4ef6\u4e4b\u95f4\u76f8\u4e92\u62fc\u5408\u5b9e\u9645\u4e0a\u662f\u76ee\u6807\u6587\u4ef6\u4e4b\u95f4\u5bf9\u5730\u5740\u7684\u5f15\u7528\uff0c\u5373\u5bf9\u51fd\u6570\u548c\u53d8\u91cf\u7684\u5730\u5740\u7684\u5f15\u7528\u3002\u6211\u4eec\u5c06\u51fd\u6570\u548c\u53d8\u91cf\u7edf\u79f0\u4e3a\u7b26\u53f7\uff08Symbol\uff09\uff0c\u51fd\u6570\u540d\u6216\u53d8\u91cf\u540d\u5c31\u662f\u7b26\u53f7\u540d\uff08Symbol Name\uff09\u3002 \u5982\u4e0b\u7b26\u53f7\u8868\uff08Symbol Table\uff09\uff1a Symbol\uff08\u7b26\u53f7\u540d\uff09 Symbol Value \uff08\u5730\u5740\uff09 main 0x100 Add 0x123 ... ...","title":"\u94fe\u63a5\u7684\u63a5\u53e3\u2014\u2014\u2014\u2014\u7b26\u53f7"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#linux-\u7684\u5171\u4eab\u5e93shared-library","text":"Linux \u4e0b\u7684\u5171\u4eab\u5e93\u5c31\u662f\u666e\u901a\u7684 ELF \u5171\u4eab\u5bf9\u8c61\u3002 \u5171\u4eab\u5e93\u7248\u672c\u66f4\u65b0\u5e94\u8be5\u4fdd\u8bc1\u4e8c\u8fdb\u5236\u63a5\u53e3 ABI\uff08Application Binary Interface\uff09\u7684\u517c\u5bb9","title":"Linux \u7684\u5171\u4eab\u5e93\uff08Shared Library\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u547d\u540d","text":"libname.so.x.y.z x\uff1a\u4e3b\u7248\u672c\u53f7\uff0c\u4e0d\u540c\u4e3b\u7248\u672c\u53f7\u7684\u5e93\u4e4b\u95f4\u4e0d\u517c\u5bb9\uff0c\u9700\u8981\u91cd\u65b0\u7f16\u8bd1 y\uff1a\u6b21\u7248\u672c\u53f7\uff0c\u9ad8\u7248\u672c\u53f7\u5411\u540e\u517c\u5bb9\u4f4e\u7248\u672c\u53f7 z\uff1a\u53d1\u5e03\u7248\u672c\u53f7\uff0c\u4e0d\u5bf9\u63a5\u53e3\u8fdb\u884c\u66f4\u6539\uff0c\u5b8c\u5168\u517c\u5bb9","title":"\u547d\u540d"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u8def\u5f84","text":"\u5927\u90e8\u5206\u5305\u62ec Linux \u5728\u5185\u7684\u5f00\u6e90\u7cfb\u7edf\u9075\u5faa FHS\uff08File Hierarchy Standard\uff09\u7684\u6807\u51c6\uff0c\u8fd9\u6807\u51c6\u89c4\u5b9a\u4e86\u7cfb\u7edf\u6587\u4ef6\u5982\u4f55\u5b58\u653e\uff0c\u5305\u62ec\u5404\u4e2a\u76ee\u5f55\u7ed3\u6784\u3001\u7ec4\u7ec7\u548c\u4f5c\u7528\u3002 /lib \uff1a\u5b58\u653e\u7cfb\u7edf\u6700\u5173\u952e\u548c\u6700\u57fa\u7840\u7684\u5171\u4eab\u5e93\uff0c\u5982\u52a8\u6001\u94fe\u63a5\u5668\u3001C \u8bed\u8a00\u8fd0\u884c\u5e93\u3001\u6570\u5b66\u5e93\u7b49 /usr/lib \uff1a\u5b58\u653e\u975e\u7cfb\u7edf\u8fd0\u884c\u65f6\u6240\u9700\u8981\u7684\u5173\u952e\u6027\u7684\u5e93\uff0c\u4e3b\u8981\u662f\u5f00\u53d1\u5e93 /usr/local/lib \uff1a\u5b58\u653e\u8ddf\u64cd\u4f5c\u7cfb\u7edf\u672c\u8eab\u5e76\u4e0d\u5341\u5206\u76f8\u5173\u7684\u5e93\uff0c\u4e3b\u8981\u662f\u4e00\u4e9b\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\u7684\u5e93 \u52a8\u6001\u94fe\u63a5\u5668\u4f1a\u5728 /lib \u3001 /usr/lib \u548c\u7531 /etc/ld.so.conf \u914d\u7f6e\u6587\u4ef6\u6307\u5b9a\u7684\uff0c\u76ee\u5f55\u4e2d\u67e5\u627e\u5171\u4eab\u5e93","title":"\u8def\u5f84"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u73af\u5883\u53d8\u91cf","text":"LD_LIBRARY_PATH \uff1a\u4e34\u65f6\u6539\u53d8\u67d0\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u5171\u4eab\u5e93\u67e5\u627e\u8def\u5f84\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f LD_PRELOAD \uff1a\u6307\u5b9a\u9884\u5148\u88c5\u8f7d\u7684\u4e00\u4e9b\u5171\u4eab\u5e93\u751a\u81f3\u662f\u76ee\u6807\u6587\u4ef6 LD_DEBUG \uff1a\u6253\u5f00\u52a8\u6001\u94fe\u63a5\u5668\u7684\u8c03\u8bd5\u529f\u80fd","title":"\u73af\u5883\u53d8\u91cf"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#so-\u5171\u4eab\u5e93\u7684\u7f16\u5199","text":"\u4f7f\u7528 CLion \u7f16\u5199\u5171\u4eab\u5e93 \u521b\u5efa\u4e00\u4e2a\u540d\u4e3a MySharedLib \u7684\u5171\u4eab\u5e93 CMakeLists.txt cmake_minimum_required ( VERSION 3.10 ) project ( MySharedLib ) set ( CMAKE_CXX_STANDARD 11 ) add_library ( MySharedLib SHARED library.cpp library.h ) library.h #ifndef MYSHAREDLIB_LIBRARY_H #define MYSHAREDLIB_LIBRARY_H // \u6253\u5370 Hello World! void hello (); // \u4f7f\u7528\u53ef\u53d8\u6a21\u7248\u53c2\u6570\u6c42\u548c template < typename T > T sum ( T t ) { return t ; } template < typename T , typename ... Types > T sum ( T first , Types ... rest ) { return first + sum < T > ( rest ...); } #endif library.cpp #include <iostream> #include \"library.h\" void hello () { std :: cout << \"Hello, World!\" << std :: endl ; }","title":"so \u5171\u4eab\u5e93\u7684\u7f16\u5199"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#so-\u5171\u4eab\u5e93\u7684\u4f7f\u7528\u88ab\u53ef\u6267\u884c\u9879\u76ee\u8c03\u7528","text":"\u4f7f\u7528 CLion \u8c03\u7528\u5171\u4eab\u5e93 \u521b\u5efa\u4e00\u4e2a\u540d\u4e3a TestSharedLib \u7684\u53ef\u6267\u884c\u9879\u76ee CMakeLists.txt cmake_minimum_required ( VERSION 3.10 ) project ( TestSharedLib ) # C++11 \u7f16\u8bd1 set ( CMAKE_CXX_STANDARD 11 ) # \u5934\u6587\u4ef6\u8def\u5f84 set ( INC_DIR /home/xx/code/clion/MySharedLib ) # \u5e93\u6587\u4ef6\u8def\u5f84 set ( LIB_DIR /home/xx/code/clion/MySharedLib/cmake-build-debug ) include_directories ( ${ INC_DIR } ) link_directories ( ${ LIB_DIR } ) link_libraries ( MySharedLib ) add_executable ( TestSharedLib main.cpp ) # \u94fe\u63a5 MySharedLib \u5e93 target_link_libraries ( TestSharedLib MySharedLib ) main.cpp #include <iostream> #include \"library.h\" using std :: cout ; using std :: endl ; int main () { hello (); cout << \"1 + 2 = \" << sum ( 1 , 2 ) << endl ; cout << \"1 + 2 + 3 = \" << sum ( 1 , 2 , 3 ) << endl ; return 0 ; } \u6267\u884c\u7ed3\u679c Hello, World! 1 + 2 = 3 1 + 2 + 3 = 6","title":"so \u5171\u4eab\u5e93\u7684\u4f7f\u7528\uff08\u88ab\u53ef\u6267\u884c\u9879\u76ee\u8c03\u7528\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#windows-\u5e94\u7528\u7a0b\u5e8f\u5165\u53e3\u51fd\u6570","text":"GUI\uff08Graphical User Interface\uff09\u5e94\u7528\uff0c\u94fe\u63a5\u5668\u9009\u9879\uff1a /SUBSYSTEM:WINDOWS CUI\uff08Console User Interface\uff09\u5e94\u7528\uff0c\u94fe\u63a5\u5668\u9009\u9879\uff1a /SUBSYSTEM:CONSOLE _tWinMain \u4e0e _tmain \u51fd\u6570\u58f0\u660e Int WINAPI _tWinMain ( HINSTANCE hInstanceExe , HINSTANCE , PTSTR pszCmdLine , int nCmdShow ); int _tmain ( int argc , TCHAR * argv [], TCHAR * envp []); \u5e94\u7528\u7a0b\u5e8f\u7c7b\u578b \u5165\u53e3\u70b9\u51fd\u6570 \u5d4c\u5165\u53ef\u6267\u884c\u6587\u4ef6\u7684\u542f\u52a8\u51fd\u6570 \u5904\u7406ANSI\u5b57\u7b26\uff08\u4e32\uff09\u7684GUI\u5e94\u7528\u7a0b\u5e8f _tWinMain(WinMain) WinMainCRTSartup \u5904\u7406Unicode\u5b57\u7b26\uff08\u4e32\uff09\u7684GUI\u5e94\u7528\u7a0b\u5e8f _tWinMain(wWinMain) wWinMainCRTSartup \u5904\u7406ANSI\u5b57\u7b26\uff08\u4e32\uff09\u7684CUI\u5e94\u7528\u7a0b\u5e8f _tmain(Main) mainCRTSartup \u5904\u7406Unicode\u5b57\u7b26\uff08\u4e32\uff09\u7684CUI\u5e94\u7528\u7a0b\u5e8f _tmain(wMain) wmainCRTSartup \u52a8\u6001\u94fe\u63a5\u5e93\uff08Dynamic-Link Library\uff09 DllMain _DllMainCRTStartup","title":"Windows \u5e94\u7528\u7a0b\u5e8f\u5165\u53e3\u51fd\u6570"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#windows-\u7684\u52a8\u6001\u94fe\u63a5\u5e93dynamic-link-library","text":"\u90e8\u5206\u77e5\u8bc6\u70b9\u6765\u81ea\u300aWindows \u6838\u5fc3\u7f16\u7a0b\uff08\u7b2c\u4e94\u7248\uff09\u300b","title":"Windows \u7684\u52a8\u6001\u94fe\u63a5\u5e93\uff08Dynamic-Link Library\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7528\u5904","text":"\u6269\u5c55\u4e86\u5e94\u7528\u7a0b\u5e8f\u7684\u7279\u6027 \u7b80\u5316\u4e86\u9879\u76ee\u7ba1\u7406 \u6709\u52a9\u4e8e\u8282\u7701\u5185\u5b58 \u4fc3\u8fdb\u4e86\u8d44\u6e90\u7684\u5171\u4eab \u4fc3\u8fdb\u4e86\u672c\u5730\u5316 \u6709\u52a9\u4e8e\u89e3\u51b3\u5e73\u53f0\u95f4\u7684\u5dee\u5f02 \u53ef\u4ee5\u7528\u4e8e\u7279\u6b8a\u76ee\u7684","title":"\u7528\u5904"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6ce8\u610f","text":"\u521b\u5efa DLL\uff0c\u4e8b\u5b9e\u4e0a\u662f\u5728\u521b\u5efa\u53ef\u4f9b\u4e00\u4e2a\u53ef\u6267\u884c\u6a21\u5757\u8c03\u7528\u7684\u51fd\u6570 \u5f53\u4e00\u4e2a\u6a21\u5757\u63d0\u4f9b\u4e00\u4e2a\u5185\u5b58\u5206\u914d\u51fd\u6570\uff08malloc\u3001new\uff09\u7684\u65f6\u5019\uff0c\u5b83\u5fc5\u987b\u540c\u65f6\u63d0\u4f9b\u53e6\u4e00\u4e2a\u5185\u5b58\u91ca\u653e\u51fd\u6570\uff08free\u3001delete\uff09 \u5728\u4f7f\u7528 C \u548c C++ \u6df7\u7f16\u7684\u65f6\u5019\uff0c\u8981\u4f7f\u7528 extern \"C\" \u4fee\u9970\u7b26 \u4e00\u4e2a DLL \u53ef\u4ee5\u5bfc\u51fa\u51fd\u6570\u3001\u53d8\u91cf\uff08\u907f\u514d\u5bfc\u51fa\uff09\u3001C++ \u7c7b\uff08\u5bfc\u51fa\u5bfc\u5165\u9700\u8981\u540c\u7f16\u8bd1\u5668\uff0c\u5426\u5219\u907f\u514d\u5bfc\u51fa\uff09 DLL \u6a21\u5757\uff1acpp \u6587\u4ef6\u4e2d\u7684 __declspec(dllexport) \u5199\u5728 include \u5934\u6587\u4ef6\u4e4b\u524d \u8c03\u7528 DLL \u7684\u53ef\u6267\u884c\u6a21\u5757\uff1acpp \u6587\u4ef6\u7684 __declspec(dllimport) \u4e4b\u524d\u4e0d\u5e94\u8be5\u5b9a\u4e49 MYLIBAPI","title":"\u6ce8\u610f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u52a0\u8f7d-windows-\u7a0b\u5e8f\u7684\u641c\u7d22\u987a\u5e8f","text":"\u5305\u542b\u53ef\u6267\u884c\u6587\u4ef6\u7684\u76ee\u5f55 Windows \u7684\u7cfb\u7edf\u76ee\u5f55\uff0c\u53ef\u4ee5\u901a\u8fc7 GetSystemDirectory \u5f97\u5230 16 \u4f4d\u7684\u7cfb\u7edf\u76ee\u5f55\uff0c\u5373 Windows \u76ee\u5f55\u4e2d\u7684 System \u5b50\u76ee\u5f55 Windows \u76ee\u5f55\uff0c\u53ef\u4ee5\u901a\u8fc7 GetWindowsDirectory \u5f97\u5230 \u8fdb\u7a0b\u7684\u5f53\u524d\u76ee\u5f55 PATH \u73af\u5883\u53d8\u91cf\u4e2d\u6240\u5217\u51fa\u7684\u76ee\u5f55","title":"\u52a0\u8f7d Windows \u7a0b\u5e8f\u7684\u641c\u7d22\u987a\u5e8f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#dll-\u5165\u53e3\u51fd\u6570","text":"DllMain \u51fd\u6570 BOOL WINAPI DllMain ( HINSTANCE hinstDLL , DWORD fdwReason , LPVOID lpvReserved ) { switch ( fdwReason ) { case DLL_PROCESS_ATTACH : // \u7b2c\u4e00\u6b21\u5c06\u4e00\u4e2aDLL\u6620\u5c04\u5230\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u65f6\u8c03\u7528 // The DLL is being mapped into the process' address space. break ; case DLL_THREAD_ATTACH : // \u5f53\u8fdb\u7a0b\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u7684\u65f6\u5019\uff0c\u7528\u4e8e\u544a\u8bc9DLL\u6267\u884c\u4e0e\u7ebf\u7a0b\u76f8\u5173\u7684\u521d\u59cb\u5316\uff08\u975e\u4e3b\u7ebf\u7a0b\u6267\u884c\uff09 // A thread is bing created. break ; case DLL_THREAD_DETACH : // \u7cfb\u7edf\u8c03\u7528 ExitThread \u7ebf\u7a0b\u9000\u51fa\u524d\uff0c\u5373\u5c06\u7ec8\u6b62\u7684\u7ebf\u7a0b\u901a\u8fc7\u544a\u8bc9DLL\u6267\u884c\u4e0e\u7ebf\u7a0b\u76f8\u5173\u7684\u6e05\u7406 // A thread is exiting cleanly. break ; case DLL_PROCESS_DETACH : // \u5c06\u4e00\u4e2aDLL\u4ece\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u65f6\u8c03\u7528 // The DLL is being unmapped from the process' address space. break ; } return ( TRUE ); // Used only for DLL_PROCESS_ATTACH }","title":"DLL \u5165\u53e3\u51fd\u6570"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u8f7d\u5165\u5378\u8f7d\u5e93","text":"LoadLibrary\u3001LoadLibraryExA\u3001LoadPackagedLibrary\u3001FreeLibrary\u3001FreeLibraryAndExitThread \u51fd\u6570\u58f0\u660e // \u8f7d\u5165\u5e93 HMODULE WINAPI LoadLibrary ( _In_ LPCTSTR lpFileName ); HMODULE LoadLibraryExA ( LPCSTR lpLibFileName , HANDLE hFile , DWORD dwFlags ); // \u82e5\u8981\u5728\u901a\u7528 Windows \u5e73\u53f0\uff08UWP\uff09\u5e94\u7528\u4e2d\u52a0\u8f7d Win32 DLL\uff0c\u9700\u8981\u8c03\u7528 LoadPackagedLibrary\uff0c\u800c\u4e0d\u662f LoadLibrary \u6216 LoadLibraryEx HMODULE LoadPackagedLibrary ( LPCWSTR lpwLibFileName , DWORD Reserved ); // \u5378\u8f7d\u5e93 BOOL WINAPI FreeLibrary ( _In_ HMODULE hModule ); // \u5378\u8f7d\u5e93\u548c\u9000\u51fa\u7ebf\u7a0b VOID WINAPI FreeLibraryAndExitThread ( _In_ HMODULE hModule , _In_ DWORD dwExitCode );","title":"\u8f7d\u5165\u5378\u8f7d\u5e93"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u663e\u793a\u5730\u94fe\u63a5\u5230\u5bfc\u51fa\u7b26\u53f7","text":"GetProcAddress \u51fd\u6570\u58f0\u660e FARPROC GetProcAddress ( HMODULE hInstDll , PCSTR pszSymbolName // \u53ea\u80fd\u63a5\u53d7 ANSI \u5b57\u7b26\u4e32\uff0c\u4e0d\u80fd\u662f Unicode );","title":"\u663e\u793a\u5730\u94fe\u63a5\u5230\u5bfc\u51fa\u7b26\u53f7"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#dumpbinexe-\u67e5\u770b-dll-\u4fe1\u606f","text":"\u5728 VS \u7684\u5f00\u53d1\u4eba\u5458\u547d\u4ee4\u63d0\u793a\u7b26 \u4f7f\u7528 DumpBin.exe \u53ef\u67e5\u770b DLL \u5e93\u7684\u5bfc\u51fa\u6bb5\uff08\u5bfc\u51fa\u7684\u53d8\u91cf\u3001\u51fd\u6570\u3001\u7c7b\u540d\u7684\u7b26\u53f7\uff09\u3001\u76f8\u5bf9\u865a\u62df\u5730\u5740\uff08RVA\uff0crelative virtual address\uff09\u3002\u5982\uff1a DUMPBIN -exports D:\\mydll.dll","title":"DumpBin.exe \u67e5\u770b DLL \u4fe1\u606f"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#loadlibrary-\u4e0e-freelibrary-\u6d41\u7a0b\u56fe","text":"LoadLibrary \u4e0e FreeLibrary \u6d41\u7a0b\u56fe","title":"LoadLibrary \u4e0e FreeLibrary \u6d41\u7a0b\u56fe"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#loadlibrary","text":"","title":"LoadLibrary"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#freelibrary","text":"","title":"FreeLibrary"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#dll-\u5e93\u7684\u7f16\u5199\u5bfc\u51fa\u4e00\u4e2a-dll-\u6a21\u5757","text":"DLL \u5e93\u7684\u7f16\u5199\uff08\u5bfc\u51fa\u4e00\u4e2a DLL \u6a21\u5757\uff09 DLL \u5934\u6587\u4ef6 // MyLib.h #ifdef MYLIBAPI // MYLIBAPI \u5e94\u8be5\u5728\u5168\u90e8 DLL \u6e90\u6587\u4ef6\u7684 include \"Mylib.h\" \u4e4b\u524d\u88ab\u5b9a\u4e49 // \u5168\u90e8\u51fd\u6570/\u53d8\u91cf\u6b63\u5728\u88ab\u5bfc\u51fa #else // \u8fd9\u4e2a\u5934\u6587\u4ef6\u88ab\u4e00\u4e2aexe\u6e90\u4ee3\u7801\u6a21\u5757\u5305\u542b\uff0c\u610f\u5473\u7740\u5168\u90e8\u51fd\u6570/\u53d8\u91cf\u88ab\u5bfc\u5165 #define MYLIBAPI extern \"C\" __declspec(dllimport) #endif // \u8fd9\u91cc\u5b9a\u4e49\u4efb\u4f55\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b26\u53f7 // \u5b9a\u4e49\u5bfc\u51fa\u7684\u53d8\u91cf\uff08\u907f\u514d\u5bfc\u51fa\u53d8\u91cf\uff09 MYLIBAPI int g_nResult ; // \u5b9a\u4e49\u5bfc\u51fa\u51fd\u6570\u539f\u578b MYLIBAPI int Add ( int nLeft , int nRight ); DLL \u6e90\u6587\u4ef6 // MyLibFile1.cpp // \u5305\u542b\u6807\u51c6Windows\u548cC\u8fd0\u884c\u65f6\u5934\u6587\u4ef6 #include <windows.h> // DLL\u6e90\u7801\u6587\u4ef6\u5bfc\u51fa\u7684\u51fd\u6570\u548c\u53d8\u91cf #define MYLIBAPI extern \"C\" __declspec(dllexport) // \u5305\u542b\u5bfc\u51fa\u7684\u6570\u636e\u7ed3\u6784\u3001\u7b26\u53f7\u3001\u51fd\u6570\u3001\u53d8\u91cf #include \"MyLib.h\" // \u5c06\u6b64DLL\u6e90\u4ee3\u7801\u6587\u4ef6\u7684\u4ee3\u7801\u653e\u5728\u6b64\u5904 int g_nResult ; int Add ( int nLeft , int nRight ) { g_nResult = nLeft + nRight ; return g_nResult ; }","title":"DLL \u5e93\u7684\u7f16\u5199\uff08\u5bfc\u51fa\u4e00\u4e2a DLL \u6a21\u5757\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#dll-\u5e93\u7684\u4f7f\u7528\u8fd0\u884c\u65f6\u52a8\u6001\u94fe\u63a5-dll","text":"DLL \u5e93\u7684\u4f7f\u7528\uff08\u8fd0\u884c\u65f6\u52a8\u6001\u94fe\u63a5 DLL\uff09 // A simple program that uses LoadLibrary and // GetProcAddress to access myPuts from Myputs.dll. #include <windows.h> #include <stdio.h> typedef int ( __cdecl * MYPROC )( LPWSTR ); int main ( void ) { HINSTANCE hinstLib ; MYPROC ProcAdd ; BOOL fFreeResult , fRunTimeLinkSuccess = FALSE ; // Get a handle to the DLL module. hinstLib = LoadLibrary ( TEXT ( \"MyPuts.dll\" )); // If the handle is valid, try to get the function address. if ( hinstLib != NULL ) { ProcAdd = ( MYPROC ) GetProcAddress ( hinstLib , \"myPuts\" ); // If the function address is valid, call the function. if ( NULL != ProcAdd ) { fRunTimeLinkSuccess = TRUE ; ( ProcAdd ) ( L \"Message sent to the DLL function \\n \" ); } // Free the DLL module. fFreeResult = FreeLibrary ( hinstLib ); } // If unable to call the DLL function, use an alternative. if ( ! fRunTimeLinkSuccess ) printf ( \"Message printed from executable \\n \" ); return 0 ; }","title":"DLL \u5e93\u7684\u4f7f\u7528\uff08\u8fd0\u884c\u65f6\u52a8\u6001\u94fe\u63a5 DLL\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u8fd0\u884c\u5e93runtime-library","text":"","title":"\u8fd0\u884c\u5e93\uff08Runtime Library\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5178\u578b\u7a0b\u5e8f\u8fd0\u884c\u6b65\u9aa4","text":"\u64cd\u4f5c\u7cfb\u7edf\u521b\u5efa\u8fdb\u7a0b\uff0c\u628a\u63a7\u5236\u6743\u4ea4\u7ed9\u7a0b\u5e8f\u7684\u5165\u53e3\uff08\u5f80\u5f80\u662f\u8fd0\u884c\u5e93\u4e2d\u7684\u67d0\u4e2a\u5165\u53e3\u51fd\u6570\uff09 \u5165\u53e3\u51fd\u6570\u5bf9\u8fd0\u884c\u5e93\u548c\u7a0b\u5e8f\u8fd0\u884c\u73af\u5883\u8fdb\u884c\u521d\u59cb\u5316\uff08\u5305\u62ec\u5806\u3001I/O\u3001\u7ebf\u7a0b\u3001\u5168\u5c40\u53d8\u91cf\u6784\u9020\u7b49\u7b49\uff09\u3002 \u5165\u53e3\u51fd\u6570\u521d\u59cb\u5316\u540e\uff0c\u8c03\u7528 main \u51fd\u6570\uff0c\u6b63\u5f0f\u5f00\u59cb\u6267\u884c\u7a0b\u5e8f\u4e3b\u4f53\u90e8\u5206\u3002 main \u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u8fd4\u56de\u5230\u5165\u53e3\u51fd\u6570\u8fdb\u884c\u6e05\u7406\u5de5\u4f5c\uff08\u5305\u62ec\u5168\u5c40\u53d8\u91cf\u6790\u6784\u3001\u5806\u9500\u6bc1\u3001\u5173\u95edI/O\u7b49\uff09\uff0c\u7136\u540e\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u7ed3\u675f\u8fdb\u7a0b\u3002 \u4e00\u4e2a\u7a0b\u5e8f\u7684 I/O \u6307\u4ee3\u7a0b\u5e8f\u4e0e\u5916\u754c\u7684\u4ea4\u4e92\uff0c\u5305\u62ec\u6587\u4ef6\u3001\u7ba1\u7a0b\u3001\u7f51\u7edc\u3001\u547d\u4ee4\u884c\u3001\u4fe1\u53f7\u7b49\u3002\u66f4\u5e7f\u4e49\u5730\u8bb2\uff0cI/O \u6307\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u7406\u89e3\u4e3a \u201c\u6587\u4ef6\u201d \u7684\u4e8b\u7269\u3002","title":"\u5178\u578b\u7a0b\u5e8f\u8fd0\u884c\u6b65\u9aa4"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#glibc-\u5165\u53e3","text":"_start -> __libc_start_main -> exit -> _exit \u5176\u4e2d main(argc, argv, __environ) \u51fd\u6570\u5728 __libc_start_main \u91cc\u6267\u884c\u3002","title":"glibc \u5165\u53e3"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#msvc-crt-\u5165\u53e3","text":"int mainCRTStartup(void) \u6267\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a \u521d\u59cb\u5316\u548c OS \u7248\u672c\u6709\u5173\u7684\u5168\u5c40\u53d8\u91cf\u3002 \u521d\u59cb\u5316\u5806\u3002 \u521d\u59cb\u5316 I/O\u3002 \u83b7\u53d6\u547d\u4ee4\u884c\u53c2\u6570\u548c\u73af\u5883\u53d8\u91cf\u3002 \u521d\u59cb\u5316 C \u5e93\u7684\u4e00\u4e9b\u6570\u636e\u3002 \u8c03\u7528 main \u5e76\u8bb0\u5f55\u8fd4\u56de\u503c\u3002 \u68c0\u67e5\u9519\u8bef\u5e76\u5c06 main \u7684\u8fd4\u56de\u503c\u8fd4\u56de\u3002","title":"MSVC CRT \u5165\u53e3"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#c-\u8bed\u8a00\u8fd0\u884c\u5e93crt","text":"\u5927\u81f4\u5305\u542b\u5982\u4e0b\u529f\u80fd\uff1a \u542f\u52a8\u4e0e\u9000\u51fa\uff1a\u5305\u62ec\u5165\u53e3\u51fd\u6570\u53ca\u5165\u53e3\u51fd\u6570\u6240\u4f9d\u8d56\u7684\u5176\u4ed6\u51fd\u6570\u7b49\u3002 \u6807\u51c6\u51fd\u6570\uff1a\u6709 C \u8bed\u8a00\u6807\u51c6\u89c4\u5b9a\u7684C\u8bed\u8a00\u6807\u51c6\u5e93\u6240\u62e5\u6709\u7684\u51fd\u6570\u5b9e\u73b0\u3002 I/O\uff1aI/O \u529f\u80fd\u7684\u5c01\u88c5\u548c\u5b9e\u73b0\u3002 \u5806\uff1a\u5806\u7684\u5c01\u88c5\u548c\u5b9e\u73b0\u3002 \u8bed\u8a00\u5b9e\u73b0\uff1a\u8bed\u8a00\u4e2d\u4e00\u4e9b\u7279\u6b8a\u529f\u80fd\u7684\u5b9e\u73b0\u3002 \u8c03\u8bd5\uff1a\u5b9e\u73b0\u8c03\u8bd5\u529f\u80fd\u7684\u4ee3\u7801\u3002","title":"C \u8bed\u8a00\u8fd0\u884c\u5e93\uff08CRT\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#c\u8bed\u8a00\u6807\u51c6\u5e93ansi-c","text":"\u5305\u542b\uff1a \u6807\u51c6\u8f93\u5165\u8f93\u51fa\uff08stdio.h\uff09 \u6587\u4ef6\u64cd\u4f5c\uff08stdio.h\uff09 \u5b57\u7b26\u64cd\u4f5c\uff08ctype.h\uff09 \u5b57\u7b26\u4e32\u64cd\u4f5c\uff08string.h\uff09 \u6570\u5b66\u51fd\u6570\uff08math.h\uff09 \u8d44\u6e90\u7ba1\u7406\uff08stdlib.h\uff09 \u683c\u5f0f\u8f6c\u6362\uff08stdlib.h\uff09 \u65f6\u95f4/\u65e5\u671f\uff08time.h\uff09 \u65ad\u8a00\uff08assert.h\uff09 \u5404\u79cd\u7c7b\u578b\u4e0a\u7684\u5e38\u6570\uff08limits.h & float.h\uff09 \u53d8\u957f\u53c2\u6570\uff08stdarg.h\uff09 \u975e\u5c40\u90e8\u8df3\u8f6c\uff08setjmp.h\uff09","title":"C\u8bed\u8a00\u6807\u51c6\u5e93\uff08ANSI C\uff09"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-\u4e66\u7c4d","text":"huihut/CS-Books \uff1a\ud83d\udcda Computer Science Books \u8ba1\u7b97\u673a\u6280\u672f\u7c7b\u4e66\u7c4d PDF","title":"\ud83d\udcda \u4e66\u7c4d"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u8bed\u8a00","text":"\u300aC++ Primer\u300b \u300aEffective C++\u300b \u300aMore Effective C++\u300b \u300a\u6df1\u5ea6\u63a2\u7d22 C++ \u5bf9\u8c61\u6a21\u578b\u300b \u300a\u6df1\u5165\u7406\u89e3 C++11\u300b \u300aSTL \u6e90\u7801\u5256\u6790\u300b","title":"\u8bed\u8a00"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7b97\u6cd5_1","text":"\u300a\u5251\u6307 Offer\u300b \u300a\u7f16\u7a0b\u73e0\u7391\u300b \u300a\u7a0b\u5e8f\u5458\u9762\u8bd5\u5b9d\u5178\u300b","title":"\u7b97\u6cd5"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7cfb\u7edf","text":"\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b \u300aWindows \u6838\u5fc3\u7f16\u7a0b\u300b \u300aUnix \u73af\u5883\u9ad8\u7ea7\u7f16\u7a0b\u300b","title":"\u7cfb\u7edf"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7f51\u7edc","text":"\u300aUnix \u7f51\u7edc\u7f16\u7a0b\u300b \u300aTCP/IP \u8be6\u89e3\u300b","title":"\u7f51\u7edc"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5176\u4ed6_1","text":"\u300a\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b\u300b","title":"\u5176\u4ed6"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-cc-\u53d1\u5c55\u65b9\u5411","text":"C/C++ \u53d1\u5c55\u65b9\u5411\u751a\u5e7f\uff0c\u5305\u62ec\u4e0d\u9650\u4e8e\u4ee5\u4e0b\u65b9\u5411\uff0c \u4ee5\u4e0b\u5217\u4e3e\u4e00\u4e9b\u5927\u5382\u6821\u62db\u5c97\u4f4d\u8981\u6c42\u3002","title":"\ud83d\udd31 C/C++ \u53d1\u5c55\u65b9\u5411"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u540e\u53f0\u670d\u52a1\u5668","text":"\u3010\u540e\u53f0\u5f00\u53d1\u3011 \u7f16\u7a0b\u57fa\u672c\u529f\u624e\u5b9e\uff0c\u638c\u63e1 C/C++/JAVA \u7b49\u5f00\u53d1\u8bed\u8a00\u3001\u5e38\u7528\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\uff1b \u719f\u6089 TCP/UDP \u7f51\u7edc\u534f\u8bae\u53ca\u76f8\u5173\u7f16\u7a0b\u3001\u8fdb\u7a0b\u95f4\u901a\u8baf\u7f16\u7a0b\uff1b \u4e86\u89e3 Python\u3001Shell\u3001Perl \u7b49\u811a\u672c\u8bed\u8a00\uff1b \u4e86\u89e3 MYSQL \u53ca SQL \u8bed\u8a00\u3001\u7f16\u7a0b\uff0c\u4e86\u89e3 NoSQL, key-value \u5b58\u50a8\u539f\u7406\uff1b \u5168\u9762\u3001\u624e\u5b9e\u7684\u8f6f\u4ef6\u77e5\u8bc6\u7ed3\u6784\uff0c\u638c\u63e1\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f6f\u4ef6\u5de5\u7a0b\u3001\u8bbe\u8ba1\u6a21\u5f0f\u3001\u6570\u636e\u7ed3\u6784\u3001\u6570\u636e\u5e93\u7cfb\u7edf\u3001\u7f51\u7edc\u5b89\u5168\u7b49\u4e13\u4e1a\u77e5\u8bc6\uff1b \u4e86\u89e3\u5206\u5e03\u5f0f\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5f00\u53d1\u3001\u8d1f\u8f7d\u5747\u8861\u6280\u672f\uff0c\u7cfb\u7edf\u5bb9\u707e\u8bbe\u8ba1\uff0c\u9ad8\u53ef\u7528\u7cfb\u7edf\u7b49\u77e5\u8bc6\u3002","title":"\u540e\u53f0/\u670d\u52a1\u5668"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u684c\u9762\u5ba2\u6237\u7aef","text":"\u3010PC \u5ba2\u6237\u7aef\u5f00\u53d1\u3011 \u8ba1\u7b97\u673a\u8f6f\u4ef6\u76f8\u5173\u4e13\u4e1a\u672c\u79d1\u6216\u4ee5\u4e0a\u5b66\u5386\uff0c\u70ed\u7231\u7f16\u7a0b\uff0c\u57fa\u7840\u624e\u5b9e\uff0c\u7406\u89e3\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u76f8\u5173\u77e5\u8bc6\uff1b \u719f\u6089 windows \u64cd\u4f5c\u7cfb\u7edf\u7684\u5185\u5b58\u7ba1\u7406\u3001\u6587\u4ef6\u7cfb\u7edf\u3001\u8fdb\u7a0b\u7ebf\u7a0b\u8c03\u5ea6\uff1b \u719f\u6089 MFC/windows \u754c\u9762\u5b9e\u73b0\u673a\u5236\uff0c\u719f\u7ec3\u4f7f\u7528 VC\uff0c\u7cbe\u901a C/C++\uff0c\u719f\u7ec3\u4f7f\u7528 STL\uff0c\u4ee5\u53ca Windows \u4e0b\u7f51\u7edc\u7f16\u7a0b\u7ecf\u9a8c\uff1b \u719f\u7ec3\u638c\u63e1 Windows \u5ba2\u6237\u7aef\u5f00\u53d1\u3001\u8c03\u8bd5\uff0c\u6709 Windows \u5e94\u7528\u8f6f\u4ef6\u5f00\u53d1\u7ecf\u9a8c\u4f18\u5148\uff1b \u5bf9\u4e8e\u521b\u65b0\u53ca\u89e3\u51b3\u5177\u6709\u6311\u6218\u6027\u7684\u95ee\u9898\u5145\u6ee1\u6fc0\u60c5\uff0c\u5177\u6709\u826f\u597d\u7684\u7b97\u6cd5\u57fa\u7840\u53ca\u7cfb\u7edf\u5206\u6790\u80fd\u529b\u3002","title":"\u684c\u9762\u5ba2\u6237\u7aef"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u56fe\u5f62\u5b66\u6e38\u620fvrar","text":"\u3010\u6e38\u620f\u5ba2\u6237\u7aef\u5f00\u53d1\u3011 \u8ba1\u7b97\u673a\u79d1\u5b66/\u5de5\u7a0b\u76f8\u5173\u4e13\u4e1a\u672c\u79d1\u6216\u4ee5\u4e0a\u5b66\u5386\uff0c\u70ed\u7231\u7f16\u7a0b\uff0c\u57fa\u7840\u624e\u5b9e\uff0c\u7406\u89e3\u7b97\u6cd5\u3001\u6570\u636e\u7ed3\u6784\u3001\u8f6f\u4ef6\u8bbe\u8ba1\u76f8\u5173\u77e5\u8bc6\uff1b \u81f3\u5c11\u638c\u63e1\u4e00\u79cd\u6e38\u620f\u5f00\u53d1\u5e38\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5177 C++/C# \u7f16\u7a0b\u7ecf\u9a8c\u4f18\u5148\uff1b \u5177\u6e38\u620f\u5f15\u64ce\uff08\u5982 Unity\u3001Unreal\uff09\u4f7f\u7528\u7ecf\u9a8c\u8005\u4f18\u5148\uff1b \u4e86\u89e3\u67d0\u65b9\u9762\u7684\u6e38\u620f\u5ba2\u6237\u7aef\u6280\u672f\uff08\u5982\u56fe\u5f62\u3001\u97f3\u9891\u3001\u52a8\u753b\u3001\u7269\u7406\u3001\u4eba\u5de5\u667a\u80fd\u3001\u7f51\u7edc\u540c\u6b65\uff09\u8005\u4f18\u5148\u8003\u8651\uff1b \u5bf9\u4e8e\u521b\u65b0\u53ca\u89e3\u51b3\u5177\u6709\u6311\u6218\u6027\u7684\u95ee\u9898\u5145\u6ee1\u6fc0\u60c5\uff0c\u6709\u8f83\u5f3a\u7684\u5b66\u4e60\u80fd\u529b\u3001\u5206\u6790\u53ca\u89e3\u51b3\u95ee\u9898\u80fd\u529b\uff0c\u5177\u5907\u826f\u597d\u7684\u56e2\u961f\u5408\u4f5c\u610f\u8bc6\uff1b \u5177\u9605\u8bfb\u82f1\u6587\u6280\u672f\u6587\u6863\u80fd\u529b\uff1b \u70ed\u7231\u6e38\u620f\u3002","title":"\u56fe\u5f62\u5b66/\u6e38\u620f/VR/AR"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u6d4b\u8bd5\u5f00\u53d1","text":"\u3010\u6d4b\u8bd5\u5f00\u53d1\u3011 \u8ba1\u7b97\u673a\u6216\u76f8\u5173\u4e13\u4e1a\u672c\u79d1\u53ca\u4ee5\u4e0a\u5b66\u5386\uff1b \u4e00\u81f3\u4e24\u5e74\u7684 C/C++/Python \u6216\u5176\u4ed6\u8ba1\u7b97\u673a\u8bed\u8a00\u7684\u7f16\u7a0b\u7ecf\u9a8c\uff1b \u5177\u5907\u64b0\u5199\u6d4b\u8bd5\u8ba1\u5212\u3001\u6d4b\u8bd5\u7528\u4f8b\u3001\u4ee5\u53ca\u5b9e\u73b0\u6027\u80fd\u548c\u5b89\u5168\u7b49\u6d4b\u8bd5\u7684\u80fd\u529b\uff1b \u5177\u5907\u5b9e\u73b0\u81ea\u52a8\u5316\u7cfb\u7edf\u7684\u80fd\u529b\uff1b \u5177\u5907\u5b9a\u4f4d\u8c03\u67e5\u4ea7\u54c1\u7f3a\u9677\u80fd\u529b\u3001\u4ee5\u53ca\u4ee3\u7801\u7ea7\u522b\u8c03\u8bd5\u7f3a\u9677\u7684\u80fd\u529b\uff1b \u5de5\u4f5c\u4e3b\u52a8\u79ef\u6781\uff0c\u6709\u8d23\u4efb\u5fc3\uff0c\u5177\u6709\u826f\u597d\u7684\u56e2\u961f\u5408\u4f5c\u7cbe\u795e\u3002","title":"\u6d4b\u8bd5\u5f00\u53d1"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u7f51\u7edc\u5b89\u5168\u9006\u5411","text":"\u3010\u5b89\u5168\u6280\u672f\u3011 \u70ed\u7231\u4e92\u8054\u7f51\uff0c\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f51\u7edc\u5b89\u5168\u6709\u72c2\u70ed\u7684\u8ffd\u6c42\uff0c\u4e13\u4e1a\u4e0d\u9650\uff1b \u719f\u6089\u6f0f\u6d1e\u6316\u6398\u3001\u7f51\u7edc\u5b89\u5168\u653b\u9632\u6280\u672f\uff0c\u4e86\u89e3\u5e38\u89c1\u9ed1\u5ba2\u653b\u51fb\u624b\u6cd5\uff1b \u638c\u63e1\u57fa\u672c\u5f00\u53d1\u80fd\u529b\uff0c\u719f\u7ec3\u4f7f\u7528 C/C++ \u8bed\u8a00\uff1b \u5bf9\u6570\u636e\u5e93\u3001\u64cd\u4f5c\u7cfb\u7edf\u3001\u7f51\u7edc\u539f\u7406\u6709\u8f83\u597d\u638c\u63e1\uff1b \u5177\u6709\u8f6f\u4ef6\u9006\u5411\uff0c\u7f51\u7edc\u5b89\u5168\u653b\u9632\u6216\u5b89\u5168\u7cfb\u7edf\u5f00\u53d1\u7ecf\u9a8c\u8005\u4f18\u5148\u3002","title":"\u7f51\u7edc\u5b89\u5168/\u9006\u5411"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u5d4c\u5165\u5f0f\u7269\u8054\u7f51","text":"\u3010\u5d4c\u5165\u5f0f\u5e94\u7528\u5f00\u53d1\u3011 \u6709\u826f\u597d\u7684\u7f16\u7a0b\u57fa\u7840\uff0c\u719f\u7ec3\u638c\u63e1 C/C++ \u8bed\u8a00\uff1b \u638c\u63e1\u64cd\u4f5c\u7cfb\u7edf\u3001\u6570\u636e\u7ed3\u6784\u7b49\u8f6f\u4ef6\u5f00\u53d1\u5fc5\u5907\u77e5\u8bc6\uff1b \u5177\u5907\u8f83\u5f3a\u7684\u6c9f\u901a\u7406\u89e3\u80fd\u529b\u53ca\u826f\u597d\u7684\u56e2\u961f\u5408\u4f5c\u610f\u8bc6\uff1b \u6709 Linux/Android \u7cfb\u7edf\u5e73\u53f0\u7684\u5f00\u53d1\u7ecf\u9a8c\u8005\u4f18\u5148\u3002","title":"\u5d4c\u5165\u5f0f/\u7269\u8054\u7f51"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u97f3\u89c6\u9891\u6d41\u5a92\u4f53sdk","text":"\u3010\u97f3\u89c6\u9891\u7f16\u89e3\u7801\u3011 \u7855\u58eb\u53ca\u4ee5\u4e0a\u5b66\u5386\uff0c\u8ba1\u7b97\u673a\u3001\u4fe1\u53f7\u5904\u7406\u3001\u6570\u5b66\u3001\u4fe1\u606f\u7c7b\u53ca\u76f8\u5173\u4e13\u4e1a\u548c\u65b9\u5411\uff1b \u89c6\u9891\u7f16\u89e3\u7801\u57fa\u7840\u624e\u5b9e\uff0c\u719f\u5e38\u7528\u7684 HEVC \u6216 H264\uff0c\u6709\u8f83\u597d\u7684\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u57fa\u7840\uff1b \u638c\u63e1 C/C++\uff0c\u4ee3\u7801\u80fd\u529b\u5f3a, \u719f\u6089\u4e00\u79cd\u6c47\u7f16\u8bed\u8a00\u5c24\u4f73\uff1b \u8f83\u5f3a\u7684\u82f1\u6587\u6587\u732e\u9605\u8bfb\u80fd\u529b\uff1b \u5b66\u4e60\u80fd\u529b\u5f3a\uff0c\u5177\u6709\u56e2\u961f\u534f\u4f5c\u7cbe\u795e\uff0c\u6709\u8f83\u5f3a\u7684\u6297\u538b\u80fd\u529b\u3002","title":"\u97f3\u89c6\u9891/\u6d41\u5a92\u4f53/SDK"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#\u8ba1\u7b97\u673a\u89c6\u89c9\u673a\u5668\u5b66\u4e60","text":"\u3010\u8ba1\u7b97\u673a\u89c6\u89c9\u7814\u7a76\u3011 \u8ba1\u7b97\u673a\u3001\u5e94\u7528\u6570\u5b66\u3001\u6a21\u5f0f\u8bc6\u522b\u3001\u4eba\u5de5\u667a\u80fd\u3001\u81ea\u63a7\u3001\u7edf\u8ba1\u5b66\u3001\u8fd0\u7b79\u5b66\u3001\u751f\u7269\u4fe1\u606f\u3001\u7269\u7406\u5b66/\u91cf\u5b50\u8ba1\u7b97\u3001\u795e\u7ecf\u79d1\u5b66\u3001\u793e\u4f1a\u5b66/\u5fc3\u7406\u5b66\u7b49\u4e13\u4e1a\uff0c\u56fe\u50cf\u5904\u7406\u3001\u6a21\u5f0f\u8bc6\u522b\u3001\u673a\u5668\u5b66\u4e60\u76f8\u5173\u7814\u7a76\u65b9\u5411\uff0c\u672c\u79d1\u53ca\u4ee5\u4e0a\uff0c\u535a\u58eb\u4f18\u5148\uff1b \u719f\u7ec3\u638c\u63e1\u8ba1\u7b97\u673a\u89c6\u89c9\u548c\u56fe\u50cf\u5904\u7406\u76f8\u5173\u7684\u57fa\u672c\u7b97\u6cd5\u53ca\u5e94\u7528\uff1b \u8f83\u5f3a\u7684\u7b97\u6cd5\u5b9e\u73b0\u80fd\u529b\uff0c\u719f\u7ec3\u638c\u63e1 C/C++ \u7f16\u7a0b\uff0c\u719f\u6089 Shell/Python/Matlab \u81f3\u5c11\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff1b \u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u3001\u6a21\u5f0f\u8bc6\u522b\u7b49\u5b66\u672f\u4f1a\u8bae\u6216\u8005\u671f\u520a\u4e0a\u53d1\u8868\u8bba\u6587\u3001\u76f8\u5173\u56fd\u9645\u6bd4\u8d5b\u83b7\u5956\u3001\u53ca\u6709\u76f8\u5173\u4e13\u5229\u8005\u4f18\u5148\u3002","title":"\u8ba1\u7b97\u673a\u89c6\u89c9/\u673a\u5668\u5b66\u4e60"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-\u590d\u4e60\u5237\u9898\u7f51\u7ad9","text":"cplusplus cppreference runoob leetcode | leetcode-cn lintcode nowcoder","title":"\ud83d\udcaf \u590d\u4e60\u5237\u9898\u7f51\u7ad9"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-\u9762\u8bd5\u9898\u76ee\u7ecf\u9a8c","text":"\u725b\u5ba2\u7f51 . 2020\u79cb\u62db\u9762\u7ecf\u5927\u6c47\u603b\uff01\uff08\u5c97\u4f4d\u5212\u5206\uff09 \u725b\u5ba2\u7f51 . \u3010\u5907\u6218\u79cb\u62db\u30112020\u5c4a\u79cb\u62db\u5907\u6218\u653b\u7565 \u725b\u5ba2\u7f51 . 2019\u6821\u62db\u9762\u7ecf\u5927\u6c47\u603b\uff01\u3010\u6bcf\u65e5\u66f4\u65b0\u4e2d\u3011 \u725b\u5ba2\u7f51 . 2019\u6821\u62db\u6280\u672f\u7c7b\u5c97\u4f4d\u9762\u7ecf\u6c47\u603b\u3010\u6280\u672f\u7c7b\u3011 \u725b\u5ba2\u7f51 . 2018\u6821\u62db\u7b14\u8bd5\u771f\u9898\u6c47\u603b \u725b\u5ba2\u7f51 . 2017\u79cb\u5b63\u6821\u56ed\u62db\u8058\u7b14\u7ecf\u9762\u7ecf\u4e13\u9898\u6c47\u603b \u725b\u5ba2\u7f51 . \u53f2\u4e0a\u6700\u51682017\u6625\u62db\u9762\u7ecf\u5927\u5408\u96c6\uff01\uff01 \u725b\u5ba2\u7f51 . \u9762\u8bd5\u9898\u5e72\u8d27\u5728\u6b64 \u77e5\u4e4e . \u4e92\u8054\u7f51\u6c42\u804c\u8def\u4e0a\uff0c\u4f60\u89c1\u8fc7\u54ea\u4e9b\u5199\u5f97\u5f88\u597d\u3001\u5f88\u7528\u5fc3\u7684\u9762\u7ecf\uff1f\u6700\u597d\u80fd\u5206\u4eab\u81ea\u5df1\u7684\u9762\u7ecf\u3001\u5fc3\u8def\u5386\u7a0b\u3002 \u77e5\u4e4e . \u4e92\u8054\u7f51\u516c\u53f8\u6700\u5e38\u89c1\u7684\u9762\u8bd5\u7b97\u6cd5\u9898\u6709\u54ea\u4e9b\uff1f CSDN . \u5168\u9762\u6574\u7406\u7684C++\u9762\u8bd5\u9898 CSDN . \u767e\u5ea6\u7814\u53d1\u7c7b\u9762\u8bd5\u9898\uff08C++\u65b9\u5411\uff09 CSDN . c++\u5e38\u89c1\u9762\u8bd5\u989830\u9053 CSDN . \u817e\u8baf2016\u5b9e\u4e60\u751f\u9762\u8bd5\u7ecf\u9a8c\uff08\u5df2\u7ecf\u62ff\u5230offer) cnblogs . C++\u9762\u8bd5\u96c6\u9526( \u9762\u8bd5\u88ab\u95ee\u5230\u7684\u95ee\u9898 ) cnblogs . C/C++ \u7b14\u8bd5\u3001\u9762\u8bd5\u9898\u76ee\u5927\u6c47\u603b cnblogs . \u5e38\u89c1C++\u9762\u8bd5\u9898\u53ca\u57fa\u672c\u77e5\u8bc6\u70b9\u603b\u7ed3\uff08\u4e00\uff09 segmentfault . C++\u5e38\u89c1\u9762\u8bd5\u95ee\u9898\u603b\u7ed3","title":"\ud83d\udcdd \u9762\u8bd5\u9898\u76ee\u7ecf\u9a8c"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-\u62db\u8058\u65f6\u95f4\u5c97\u4f4d","text":"\u725b\u5ba2\u7f51 . \u540d\u4f01\u6821\u62db\u65e5\u7a0b","title":"\ud83d\udcc6 \u62db\u8058\u65f6\u95f4\u5c97\u4f4d"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-\u5185\u63a8","text":"Github . CyC2018/Job-Recommend \uff1a\ud83d\udd0e \u4e92\u8054\u7f51\u5185\u63a8\u4fe1\u606f\uff08\u793e\u62db\u3001\u6821\u62db\u3001\u5b9e\u4e60\uff09 Github . amusi/AI-Job-Recommend \uff1a\u56fd\u5185\u516c\u53f8\u4eba\u5de5\u667a\u80fd\u65b9\u5411\uff08\u542b\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u3001\u8ba1\u7b97\u673a\u89c6\u89c9\u548c\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff09\u5c97\u4f4d\u7684\u62db\u8058\u4fe1\u606f\uff08\u542b\u5168\u804c\u3001\u5b9e\u4e60\u548c\u6821\u62db\uff09","title":"\ud83d\udc4d \u5185\u63a8"},{"location":"wiki/Cpp%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#-license","text":"\u672c\u4ed3\u5e93\u9075\u5faa CC BY-NC-SA 4.0\uff08\u7f72\u540d - \u975e\u5546\u4e1a\u6027\u4f7f\u7528 - \u76f8\u540c\u65b9\u5f0f\u5171\u4eab\uff09 \u534f\u8bae\uff0c\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\uff0c\u4e0d\u5f97\u7528\u4e8e\u5546\u4e1a\u76ee\u7684\u3002","title":"\ud83d\udcdc License"},{"location":"wiki/OTU/","text":"10GE_OTU2 #","title":"OTU"},{"location":"wiki/OTU/#10ge_otu2","text":"","title":"10GE_OTU2"},{"location":"wiki/TCP_IP/","text":"ARP\uff08Address Resolve Protocol\uff0c\u5730\u5740\u89e3\u6790\u534f\u8bae\uff09 RARP\uff08Reverse Address Resolve Protocol\uff0c\u9006\u5730\u5740\u89e3\u6790\u534f\u8bae\uff09 ICMP\u534f\u8bae\uff08Internet Control Message Protocol\uff0c\u56e0\u7279\u7f51\u63a7\u5236\u62a5\u6587\u534f\u8bae\uff09 TCP\u534f\u8bae\uff08Transmission Control Protocol\uff0c\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09 UDP\u534f\u8bae\uff08User Datagram Protocol\uff0c\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae\uff09 SCTP\u534f\u8bae\uff08Stream Control Transmission Protocol\uff0c\u6d41\u63a7\u5236\u4f20\u8f93\u534f\u8bae\uff09 OSPF\uff08Open Shortest Path First\uff0c\u5f00\u653e\u6700\u77ed\u8def\u5f84\u4f18\u5148\uff09 DNS\uff08Domain Name Service\uff0c\u57df\u540d\u670d\u52a1\uff09 MTU Max Transmit Unit \u6700\u5927\u4f20\u8f93\u5355\u5143 BGP\uff08Border Gateway Protocol\uff0c\u8fb9\u9645\u7f51\u5173\u534f\u8bae\uff09 RIP\uff08Routing Information Protocol\uff0c\u8def\u7531\u4fe1\u606f\u534f\u8bae\uff09 \u534f\u8bae\u65cf # \u5c01\u88c5 # ethernet framer # ARP # ARP\u534f\u8bae\u80fd\u5b9e\u73b0\u4efb\u610f\u7f51\u7edc\u5c42\u5730\u5740\u5230\u4efb\u610f\u7269\u7406\u5730\u5740\u7684\u8f6c\u6362 \u5176\u5de5\u4f5c\u539f\u7406\u662f\uff1a\u4e3b\u673a\u5411\u81ea\u5df1\u6240\u5728\u7684\u7f51\u7edc\u5e7f\u64ad\u4e00\u4e2aARP\u8bf7\u6c42\uff0c\u8be5\u8bf7\u6c42\u5305\u542b\u76ee\u6807\u673a\u5668\u7684\u7f51\u7edc\u5730\u5740\u3002\u6b64\u7f51\u7edc\u4e0a\u7684\u5176\u4ed6\u673a\u5668\u90fd\u5c06\u6536\u5230\u8fd9\u4e2a\u8bf7\u6c42\uff0c\u4f46\u53ea\u6709\u88ab\u8bf7\u6c42\u7684\u76ee\u6807\u673a\u5668\u4f1a\u56de\u5e94\u4e00\u4e2aARP\u5e94\u7b54\uff0c\u5176\u4e2d\u5305\u542b\u81ea\u5df1\u7684\u7269\u7406\u5730\u5740\u3002 \u786c\u4ef6\u7c7b\u578b\u5b57\u6bb5\u5b9a\u4e49\u7269\u7406\u5730\u5740\u7684\u7c7b\u578b\uff0c\u5b83\u7684\u503c\u4e3a1\u8868\u793aMAC\u5730\u5740\u3002 \u534f\u8bae\u7c7b\u578b\u5b57\u6bb5\u8868\u793a\u8981\u6620\u5c04\u7684\u534f\u8bae\u5730\u5740\u7c7b\u578b\uff0c\u5b83\u7684\u503c\u4e3a0x800\uff0c\u8868\u793aIP\u5730\u5740\u3002 \u786c\u4ef6\u5730\u5740\u957f\u5ea6\u5b57\u6bb5\u548c\u534f\u8bae\u5730\u5740\u957f\u5ea6\u5b57\u6bb5\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5176\u5355\u4f4d\u662f\u5b57\u8282\u3002\u5bf9MAC\u5730\u5740\u6765\u8bf4\uff0c\u5176\u957f\u5ea6\u4e3a6\uff1b\u5bf9IP\uff08v4\uff09\u5730\u5740\u6765\u8bf4\uff0c\u5176\u957f\u5ea6\u4e3a4\u3002 \u64cd\u4f5c\u5b57\u6bb5\u6307\u51fa4\u79cd\u64cd\u4f5c\u7c7b\u578b\uff1aARP\u8bf7\u6c42\uff08\u503c\u4e3a1\uff09\u3001ARP\u5e94\u7b54\uff08\u503c\u4e3a2\uff09\u3001RARP\u8bf7\u6c42\uff08\u503c\u4e3a3\uff09\u548cRARP\u5e94\u7b54\uff08\u503c\u4e3a4\uff09\u3002 \u6700\u540e4\u4e2a\u5b57\u6bb5\u6307\u5b9a\u901a\u4fe1\u53cc\u65b9\u7684\u4ee5\u592a\u7f51\u5730\u5740\u548cIP\u5730\u5740\u3002 DNS # - 16\u4f4d\u6807\u8bc6\u5b57\u6bb5\u7528\u4e8e\u6807\u8bb0\u4e00\u5bf9DNS\u67e5\u8be2\u548c\u5e94\u7b54\uff0c\u4ee5\u6b64\u533a\u5206\u4e00\u4e2aDNS\u5e94\u7b54\u662f\u54ea\u4e2aDNS\u67e5\u8be2\u7684\u56de - 16\u4f4d\u6807\u5fd7\u5b57\u6bb5\u7528\u4e8e\u534f\u5546\u5177\u4f53\u7684\u901a\u4fe1\u65b9\u5f0f\u548c\u53cd\u9988\u901a\u4fe1\u72b6\u6001\u3002 - - QR\uff0c\u67e5\u8be2/\u5e94\u7b54\u6807\u5fd7\u30020\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u67e5\u8be2\u62a5\u6587\uff0c1\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u5e94\u7b54\u62a5\u6587 - opcode\uff0c\u5b9a\u4e49\u67e5\u8be2\u548c\u5e94\u7b54\u7684\u7c7b\u578b\u30020\u8868\u793a\u6807\u51c6\u67e5\u8be2\uff0c1\u8868\u793a\u53cd\u5411\u67e5\u8be2\uff08\u7531IP\u5730\u5740\u83b7\u5f97\u4e3b\u673a\u57df\u540d\uff09\uff0c2\u8868\u793a\u8bf7\u6c42\u670d\u52a1\u5668\u72b6\u6001\u3002 - AA\uff0c\u6388\u6743\u5e94\u7b54\u6807\u5fd7\uff0c\u4ec5\u7531\u5e94\u7b54\u62a5\u6587\u4f7f\u7528\u30021\u8868\u793a\u57df\u540d\u670d\u52a1\u5668\u662f\u6388\u6743\u670d\u52a1\u5668\u3002 - TC\uff0c\u622a\u65ad\u6807\u5fd7\uff0c\u4ec5\u5f53DNS\u62a5\u6587\u4f7f\u7528UDP\u670d\u52a1\u65f6\u4f7f\u7528\u3002\u56e0\u4e3aUDP\u6570\u636e\u62a5\u6709\u957f\u5ea6\u9650\u5236\uff0c\u6240\u4ee5\u8fc7\u957f\u7684DNS\u62a5\u6587\u5c06\u88ab\u622a\u65ad\u30021\u8868\u793aDNS\u62a5\u6587\u8d85\u8fc7512\u5b57\u8282\uff0c\u5e76\u88ab\u622a\u65ad\u3002 - RD\uff0c\u9012\u5f52\u67e5\u8be2\u6807\u5fd7\u30021\u8868\u793a\u6267\u884c\u9012\u5f52\u67e5\u8be2\uff0c\u5373\u5982\u679c\u76ee\u6807DNS\u670d\u52a1\u5668\u65e0\u6cd5\u89e3\u6790\u67d0\u4e2a\u4e3b\u673a\u540d\uff0c\u5219\u5b83\u5c06\u5411\u5176\u4ed6DNS\u670d\u52a1\u5668\u7ee7\u7eed\u67e5\u8be2\uff0c\u5982\u6b64\u9012\u5f52\uff0c\u76f4\u5230\u83b7\u5f97\u7ed3\u679c\u5e76\u628a\u8be5\u7ed3\u679c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u30020\u8868\u793a\u6267\u884c\u8fed\u4ee3\u67e5\u8be2\uff0c\u5373\u5982\u679c\u76ee\u6807DNS\u670d\u52a1\u5668\u65e0\u6cd5\u89e3\u6790\u67d0\u4e2a\u4e3b\u673a\u540d\uff0c\u5219\u5b83\u5c06\u81ea\u5df1\u77e5\u9053\u7684\u5176\u4ed6DNS\u670d\u52a1\u5668\u7684IP\u5730\u5740\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u4ee5\u4f9b\u5ba2\u6237\u7aef\u53c2\u8003\u3002 - RA\uff0c\u5141\u8bb8\u9012\u5f52\u6807\u5fd7\u3002\u4ec5\u7531\u5e94\u7b54\u62a5\u6587\u4f7f\u7528\uff0c1\u8868\u793aDNS\u670d\u52a1\u5668\u652f\u6301\u9012\u5f52\u67e5\u8be2\u3002 - zero\uff0c\u8fd93\u4f4d\u672a\u7528\uff0c\u5fc5\u987b\u90fd\u8bbe\u7f6e\u4e3a0\u3002 - rcode\uff0c4\u4f4d\u8fd4\u56de\u7801\uff0c\u8868\u793a\u5e94\u7b54\u7684\u72b6\u6001\u3002\u5e38\u7528\u503c\u67090\uff08\u65e0\u9519\u8bef\uff09\u548c3\u57df\u540d\u4e0d\u5b58\u5728 \u63a5\u4e0b\u6765\u76844\u4e2a\u5b57\u6bb5\u5219\u5206\u522b\u6307\u51faDNS\u62a5\u6587\u7684\u6700\u540e4\u4e2a\u5b57\u6bb5\u7684\u8d44\u6e90\u8bb0\u5f55\u6570\u76ee\u3002\u5bf9\u67e5\u8be2\u62a5\u6587\u800c\u8a00\uff0c\u5b83\u4e00\u822c\u5305\u542b1\u4e2a\u67e5\u8be2\u95ee\u9898\uff0c\u800c\u5e94\u7b54\u8d44\u6e90\u8bb0\u5f55\u6570\u3001\u6388\u6743\u8d44\u6e90\u8bb0\u5f55\u6570\u548c\u989d\u5916\u8d44\u6e90\u8bb0\u5f55\u6570\u5219\u4e3a0\u3002\u5e94\u7b54\u62a5\u6587\u7684\u5e94\u7b54\u8d44\u6e90\u8bb0\u5f55\u6570\u5219\u81f3\u5c11\u4e3a1\uff0c\u800c\u6388\u6743\u8d44\u6e90\u8bb0\u5f55\u6570\u548c\u989d\u5916\u8d44\u6e90\u8bb0\u5f55\u6570\u53ef\u4e3a0\u6216\u975e0\u3002 - \u67e5\u8be2\u540d\u4ee5\u4e00\u5b9a\u7684\u683c\u5f0f\u5c01\u88c5\u4e86\u8981\u67e5\u8be2\u7684\u4e3b\u673a\u57df\u540d\u3002 IP # IP\u534f\u8bae\u662fTCP/IP\u534f\u8bae\u65cf\u7684\u52a8\u529b\uff0c\u5b83\u4e3a\u4e0a\u5c42\u534f\u8bae\u63d0\u4f9b**\u65e0\u72b6\u6001**\u3001 \u65e0\u8fde\u63a5 \u3001**\u4e0d\u53ef\u9760**\u7684\u670d\u52a1\u3002 - \u65e0\u72b6\u6001\uff08stateless\uff09\u662f\u6307IP\u901a\u4fe1\u53cc\u65b9\u4e0d\u540c\u6b65\u4f20\u8f93\u6570\u636e\u7684\u72b6\u6001\u4fe1\u606f - \u65e0\u8fde\u63a5\uff08connectionless\uff09\u662f\u6307IP\u901a\u4fe1\u53cc\u65b9\u90fd\u4e0d\u957f\u4e45\u5730\u7ef4\u6301\u5bf9\u65b9\u7684\u4efb\u4f55\u4fe1\u606f\u3002 - \u4e0d\u53ef\u9760\u662f\u6307IP\u534f\u8bae\u4e0d\u80fd\u4fdd\u8bc1IP\u6570\u636e\u62a5\u51c6\u786e\u5730\u5230\u8fbe\u63a5\u6536\u7aef\uff0c\u5b83\u53ea\u662f\u627f\u8bfa\u5c3d\u6700\u5927\u52aa\u529b\uff08best effort\uff09 4\u4f4d\u7248\u672c\u53f7\uff08version\uff09\u6307\u5b9aIP\u534f\u8bae\u7684\u7248\u672c\u3002\u5bf9IPv4\u6765\u8bf4\uff0c\u5176\u503c\u662f4\u3002 4\u4f4d\u5934\u90e8\u957f\u5ea6\uff08header length\uff09\u6807\u8bc6\u8be5IP\u5934\u90e8\u6709\u591a\u5c11\u4e2a32 bit\u5b57 8\u4f4d\u670d\u52a1\u7c7b\u578b\uff08Type Of Service\uff0cTOS\uff09 \u4e00\u4e2a3\u4f4d\u7684\u4f18\u5148\u6743\u5b57\u6bb5\uff08\u73b0\u5728\u5df2\u7ecf\u88ab\u5ffd\u7565\uff09 4\u4f4d\u7684TOS\u5b57\u6bb5 \u6700\u5c0f\u5ef6\u65f6 \u6700\u5927\u541e\u5410\u91cf \u6700\u9ad8\u53ef\u9760\u6027 \u6700\u5c0f\u8d39\u7528 1\u4f4d\u4fdd\u7559\u5b57\u6bb5\uff08\u5fc5\u987b\u7f6e0\uff09 16\u4f4d\u603b\u957f\u5ea6\uff08total length\uff09\u662f\u6307\u6574\u4e2aIP\u6570\u636e\u62a5\u7684\u957f\u5ea6\uff0c\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff0c\u56e0\u6b64IP\u6570\u636e\u62a5\u7684\u6700\u5927\u957f\u5ea6\u4e3a65 535\uff08216 -1\uff09\u5b57\u8282\u3002\u4f46**\u7531\u4e8eMTU\u7684\u9650\u5236\uff0c\u957f\u5ea6\u8d85\u8fc7MTU\u7684\u6570\u636e\u62a5\u90fd\u5c06\u88ab\u5206\u7247\u4f20\u8f93**\uff0c\u6240\u4ee5\u5b9e\u9645\u4f20\u8f93\u7684IP\u6570\u636e\u62a5\uff08\u6216\u5206\u7247\uff09\u7684\u957f\u5ea6\u90fd\u8fdc\u8fdc\u6ca1\u6709\u8fbe\u5230\u6700\u5927\u503c\u3002 16\u4f4d\u6807\u8bc6\uff08identification\uff09\u552f\u4e00\u5730\u6807\u8bc6\u4e3b\u673a\u53d1\u9001\u7684\u6bcf\u4e00\u4e2a\u6570\u636e\u62a5\u3002\u5176\u521d\u59cb\u503c\u7531\u7cfb\u7edf\u968f\u673a\u751f\u6210\uff1b\u6bcf\u53d1\u9001\u4e00\u4e2a\u6570\u636e\u62a5\uff0c\u5176\u503c\u5c31\u52a01\u3002 3\u4f4d\u6807\u5fd7\u5b57\u6bb5\u7684 \u7b2c\u4e00\u4f4d\u4fdd\u7559\u3002 \u7b2c\u4e8c\u4f4d\uff08Don\u2019t Fragment\uff0cDF\uff09\u8868\u793a\u201c\u7981\u6b62\u5206\u7247\u201d\u3002\u5982\u679c\u8bbe\u7f6e\u4e86\u8fd9\u4e2a\u4f4d\uff0cIP\u6a21\u5757\u5c06\u4e0d\u5bf9\u6570\u636e\u62a5\u8fdb\u884c\u5206\u7247\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679cIP\u6570\u636e\u62a5\u957f\u5ea6\u8d85\u8fc7MTU\u7684\u8bdd\uff0cIP\u6a21\u5757\u5c06\u4e22\u5f03\u8be5\u6570\u636e\u62a5\u5e76\u8fd4\u56de\u4e00\u4e2aICMP\u5dee\u9519\u62a5\u6587\u3002 \u7b2c\u4e09\u4f4d\uff08More Fragment\uff0cMF\uff09\u8868\u793a\u201c\u66f4\u591a\u5206\u7247\u201d\u3002\u9664\u4e86\u6570\u636e\u62a5\u7684\u6700\u540e\u4e00\u4e2a\u5206\u7247\u5916\uff0c\u5176\u4ed6\u5206\u7247\u90fd\u8981\u628a\u5b83\u7f6e1\u3002 13\u4f4d\u5206\u7247\u504f\u79fb\uff08fragmentation offset\uff09\u662f\u5206\u7247\u76f8\u5bf9\u539f\u59cbIP\u6570\u636e\u62a5\u5f00\u59cb\u5904\uff08\u4ec5\u6307\u6570\u636e\u90e8\u5206\uff09\u7684\u504f\u79fb\u3002\u5b9e\u9645\u7684\u504f\u79fb\u503c\u662f\u8be5\u503c\u5de6\u79fb3\u4f4d\uff08\u4e588\uff09\u540e\u5f97\u5230\u7684\u3002\u7531\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u9664\u4e86\u6700\u540e\u4e00\u4e2aIP\u5206\u7247\u5916\uff0c\u6bcf\u4e2aIP\u5206\u7247\u7684\u6570\u636e\u90e8\u5206\u7684\u957f\u5ea6\u5fc5\u987b\u662f8\u7684\u6574\u6570\u500d 8\u4f4d\u751f\u5b58\u65f6\u95f4\uff08Time To Live\uff0cTTL\uff09\u662f\u6570\u636e\u62a5\u5230\u8fbe\u76ee\u7684\u5730\u4e4b\u524d\u5141\u8bb8\u7ecf\u8fc7\u7684\u8def\u7531\u5668\u8df3\u6570\u3002TTL\u503c\u88ab\u53d1\u9001\u7aef\u8bbe\u7f6e\uff08\u5e38\u89c1\u7684\u503c\u662f64\uff09\u3002\u6570\u636e\u62a5\u5728\u8f6c\u53d1\u8fc7\u7a0b\u4e2d\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u8def\u7531\uff0c\u8be5\u503c\u5c31\u88ab\u8def\u7531\u5668\u51cf1\u3002\u5f53TTL\u503c\u51cf\u4e3a0\u65f6\uff0c\u8def\u7531\u5668\u5c06\u4e22\u5f03\u6570\u636e\u62a5\uff0c\u5e76\u5411\u6e90\u7aef\u53d1\u9001\u4e00\u4e2aICMP\u5dee\u9519\u62a5\u6587\u3002 8\u4f4d\u534f\u8bae\uff08protocol\uff09\u7528\u6765\u533a\u5206\u4e0a\u5c42\u534f\u8bae 16\u4f4d\u5934\u90e8\u6821\u9a8c\u548c\uff08header checksum\uff09\u7531\u53d1\u9001\u7aef\u586b\u5145\uff0c\u63a5\u6536\u7aef\u5bf9\u5176\u4f7f\u7528CRC\u7b97\u6cd5\u4ee5\u68c0\u9a8cIP\u6570\u636e\u62a5\u5934\u90e8\uff08\u6ce8\u610f\uff0c\u4ec5\u68c0\u9a8c\u5934\u90e8\uff09\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u662f\u5426\u635f\u574f\u3002 32\u4f4d\u7684\u6e90\u7aefIP\u5730\u5740\u548c\u76ee\u7684\u7aefIP\u5730\u5740\u7528\u6765\u6807\u8bc6\u6570\u636e\u62a5\u7684\u53d1\u9001\u7aef\u548c\u63a5\u6536\u7aef\u3002 IPv4\u6700\u540e\u4e00\u4e2a\u9009\u9879\u5b57\u6bb5\uff08option\uff09\u662f\u53ef\u53d8\u957f\u7684\u53ef\u9009\u4fe1\u606f\u3002\u8fd9\u90e8\u5206\u6700\u591a\u5305\u542b40\u5b57\u8282\uff0c\u56e0\u4e3aIP\u5934\u90e8\u6700\u957f\u662f60\u5b57\u8282\uff08\u5176\u4e2d\u8fd8\u5305\u542b\u524d\u9762\u8ba8\u8bba\u768420\u5b57\u8282\u7684\u56fa\u5b9a\u90e8\u5206\uff09\u3002\u53ef\u7528\u7684IP\u9009\u9879\u5305\u62ec\uff1a \u8bb0\u5f55\u8def\u7531\uff08record route\uff09\uff0c\u544a\u8bc9\u6570\u636e\u62a5\u9014\u7ecf\u7684\u6240\u6709\u8def\u7531\u5668\u90fd\u5c06\u81ea\u5df1\u7684IP\u5730\u5740\u586b\u5165IP\u5934\u90e8\u7684\u9009\u9879\u90e8\u5206\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u8ddf\u8e2a\u6570\u636e\u62a5\u7684\u4f20\u9012\u8def\u5f84\u3002 \u65f6\u95f4\u6233\uff08timestamp\uff09\uff0c\u544a\u8bc9\u6bcf\u4e2a\u8def\u7531\u5668\u90fd\u5c06\u6570\u636e\u62a5\u88ab\u8f6c\u53d1\u7684\u65f6\u95f4\uff08\u6216\u65f6\u95f4\u4e0eIP\u5730\u5740\u5bf9\uff09\u586b\u5165IP\u5934\u90e8\u7684\u9009\u9879\u90e8\u5206\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6d4b\u91cf\u9014\u7ecf\u8def\u7531\u4e4b\u95f4\u6570\u636e\u62a5\u4f20\u8f93\u7684\u65f6\u95f4\u3002 \u677e\u6563\u6e90\u8def\u7531\u9009\u62e9\uff08loose source routing\uff09\uff0c\u6307\u5b9a\u4e00\u4e2a\u8def\u7531\u5668IP\u5730\u5740\u5217\u8868\uff0c\u6570\u636e\u62a5\u53d1\u9001\u8fc7\u7a0b\u4e2d\u5fc5\u987b\u7ecf\u8fc7\u5176\u4e2d\u6240\u6709\u7684\u8def\u7531\u5668\u3002 \u4e25\u683c\u6e90\u8def\u7531\u9009\u62e9\uff08strict source routing\uff09\uff0c\u548c\u677e\u6563\u6e90\u8def\u7531\u9009\u62e9\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u6570\u636e\u62a5\u53ea\u80fd\u7ecf\u8fc7\u88ab\u6307\u5b9a\u7684\u8def\u7531\u5668\u3002 IP\u8def\u7531 # - \u5f53IP\u6a21\u5757\u63a5\u6536\u5230\u6765\u81ea\u6570\u636e\u94fe\u8def\u5c42\u7684IP\u6570\u636e\u62a5\u65f6\uff0c\u5b83\u9996\u5148\u5bf9\u8be5\u6570\u636e\u62a5\u7684\u5934\u90e8\u505aCRC\u6821\u9a8c\uff0c\u786e\u8ba4\u65e0\u8bef\u4e4b\u540e\u5c31\u5206\u6790\u5176\u5934\u90e8\u7684\u5177\u4f53\u4fe1\u606f\u3002 - \u5982\u679c\u8be5IP\u6570\u636e\u62a5\u7684\u5934\u90e8\u8bbe\u7f6e\u4e86\u6e90\u7ad9\u9009\u8def\u9009\u9879\uff08\u677e\u6563\u6e90\u8def\u7531\u9009\u62e9\u6216\u4e25\u683c\u6e90\u8def\u7531\u9009\u62e9\uff09\uff0c\u5219IP\u6a21\u5757\u8c03\u7528\u6570\u636e\u62a5\u8f6c\u53d1\u5b50\u6a21\u5757\u6765\u5904\u7406\u8be5\u6570\u636e\u62a5\u3002 - \u5982\u679c\u8be5IP\u6570\u636e\u62a5\u7684\u5934\u90e8\u4e2d\u76ee\u6807IP\u5730\u5740\u662f\u672c\u673a\u7684\u67d0\u4e2aIP\u5730\u5740\uff0c\u6216\u8005\u662f\u5e7f\u64ad\u5730\u5740\uff0c\u5373\u8be5\u6570\u636e\u62a5\u662f\u53d1\u9001\u7ed9\u672c\u673a\u7684\uff0c\u5219IP\u6a21\u5757\u5c31\u6839\u636e\u6570\u636e\u62a5\u5934\u90e8\u4e2d\u7684\u534f\u8bae\u5b57\u6bb5\u6765\u51b3\u5b9a\u5c06\u5b83\u6d3e\u53d1\u7ed9\u54ea\u4e2a\u4e0a\u5c42\u5e94\u7528\uff08\u5206\u7528\uff09\u3002 - \u5982\u679cIP\u6a21\u5757\u53d1\u73b0\u8fd9\u4e2a\u6570\u636e\u62a5\u4e0d\u662f\u53d1\u9001\u7ed9\u672c\u673a\u7684\uff0c\u5219\u4e5f\u8c03\u7528\u6570\u636e\u62a5\u8f6c\u53d1\u5b50\u6a21\u5757\u6765\u5904\u7406\u8be5\u6570\u636e\u62a5\u3002 - \u6570\u636e\u62a5\u8f6c\u53d1\u5b50\u6a21\u5757\u5c06\u9996\u5148\u68c0\u6d4b\u7cfb\u7edf\u662f\u5426\u5141\u8bb8\u8f6c\u53d1\uff0c\u5982\u679c\u4e0d\u5141\u8bb8\uff0cIP\u6a21\u5757\u5c31\u5c06\u6570\u636e\u62a5\u4e22\u5f03\u3002\u5982\u679c\u5141\u8bb8\uff0c\u6570\u636e\u62a5\u8f6c\u53d1\u5b50\u6a21\u5757\u5c06\u5bf9\u8be5\u6570\u636e\u62a5\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u7136\u540e\u5c06\u5b83\u4ea4\u7ed9IP\u6570\u636e\u62a5\u8f93\u51fa\u5b50\u6a21\u5757\u3002 - IP\u6570\u636e\u62a5\u5e94\u8be5\u53d1\u9001\u81f3\u54ea\u4e2a\u4e0b\u4e00\u8df3\u8def\u7531\uff08\u6216\u8005\u76ee\u6807\u673a\u5668\uff09\uff0c\u4ee5\u53ca\u7ecf\u8fc7\u54ea\u4e2a\u7f51\u5361\u6765\u53d1\u9001\uff0c\u5c31\u662fIP\u8def\u7531\u8fc7\u7a0b - IP\u6a21\u5757\u5b9e\u73b0\u6570\u636e\u62a5\u8def\u7531\u7684\u6838\u5fc3\u6570\u636e\u7ed3\u6784\u662f\u8def\u7531\u8868\u3002\u8fd9\u4e2a\u8868\u6309\u7167\u6570\u636e\u62a5\u7684\u76ee\u6807IP\u5730\u5740\u5206\u7c7b\uff0c\u540c\u4e00\u7c7b\u578b\u7684IP\u6570\u636e\u62a5\u5c06\u88ab\u53d1\u5f80\u76f8\u540c\u7684\u4e0b\u4e00\u8df3\u8def\u7531\u5668\uff08\u6216\u8005\u76ee\u6807\u673a\u5668\uff09\u3002 ICMP # 8\u4f4d\u7c7b\u578b\u5b57\u6bb5\u7528\u4e8e\u533a\u5206\u62a5\u6587\u7c7b\u578b\u3002\u5b83\u5c06ICMP\u62a5\u6587\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a\u4e00\u7c7b\u662f\u5dee\u9519\u62a5\u6587\uff0c\u8fd9\u7c7b\u62a5\u6587\u4e3b\u8981\u7528\u6765\u56de\u5e94\u7f51\u7edc\u9519\u8bef\uff0c\u6bd4\u5982\u76ee\u6807\u4e0d\u53ef\u5230\u8fbe\uff08\u7c7b\u578b\u503c\u4e3a3\uff09\u548c\u91cd\u5b9a\u5411\uff08\u7c7b\u578b\u503c\u4e3a5\uff09\uff1b\u53e6\u4e00\u7c7b\u662f\u67e5\u8be2\u62a5\u6587\uff0c\u8fd9\u7c7b\u62a5\u6587\u7528\u6765\u67e5\u8be2\u7f51\u7edc\u4fe1\u606f\uff0c\u6bd4\u5982ping\u7a0b\u5e8f\u5c31\u662f\u4f7f\u7528ICMP\u62a5\u6587\u67e5\u770b\u76ee\u6807\u662f\u5426\u53ef\u5230\u8fbe\uff08\u7c7b\u578b\u503c\u4e3a8\uff09\u7684\u3002 \u4ee3\u7801\u5b57\u6bb5\u67094\u4e2a\u53ef\u9009\u503c\uff0c\u7528\u6765\u533a\u5206\u4e0d\u540c\u7684\u91cd\u5b9a\u5411\u7c7b\u578b\u3002\u4e3b\u673a\u91cd\u5b9a\u5411\u4ee3\u7801\u503c\u4e3a1\u3002 ICMP\u534f\u8bae\u7684\u6807\u51c6\u6587\u6863RFC 792\u3002 IPV6 # 4\u4f4d\u7248\u672c\u53f7\uff08version\uff09\u6307\u5b9aIP\u534f\u8bae\u7684\u7248\u672c\u3002\u5bf9IPv6\u6765\u8bf4\uff0c\u5176\u503c\u662f6\u3002 8\u4f4d\u901a\u4fe1\u7c7b\u578b\uff08traffic class\uff09\u6307\u793a\u6570\u636e\u6d41\u901a\u4fe1\u7c7b\u578b\u6216\u4f18\u5148\u7ea7\uff0c\u548cIPv4\u4e2d\u7684TOS\u7c7b\u4f3c\u3002 20\u4f4d\u6d41\u6807\u7b7e\uff08flow label\uff09\u662fIPv6\u65b0\u589e\u52a0\u7684\u5b57\u6bb5\uff0c\u7528\u4e8e\u67d0\u4e9b\u5bf9\u8fde\u63a5\u7684\u670d\u52a1\u8d28\u91cf\u6709\u7279\u6b8a\u8981\u6c42\u7684\u901a\u4fe1\uff0c\u6bd4\u5982\u97f3\u9891\u6216\u89c6\u9891\u7b49\u5b9e\u65f6\u6570\u636e\u4f20\u8f93\u3002 16\u4f4d\u51c0\u8377\u957f\u5ea6\uff08payload length\uff09\u6307\u7684\u662fIPv6\u6269\u5c55\u5934\u90e8\u548c\u5e94\u7528\u7a0b\u5e8f\u6570\u636e\u957f\u5ea6\u4e4b\u548c\uff0c\u4e0d\u5305\u62ec\u56fa\u5b9a\u5934\u90e8\u957f\u5ea6\u3002 8\u4f4d\u4e0b\u4e00\u4e2a\u5305\u5934\uff08next header\uff09\u6307\u51fa\u7d27\u8ddfIPv6\u56fa\u5b9a\u5934\u90e8\u540e\u7684\u5305\u5934\u7c7b\u578b,\u5982\u6269\u5c55\u5934\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u6216\u67d0\u4e2a\u4e0a\u5c42\u534f\u8bae\u5934\uff08\u6bd4\u5982TCP\uff0cUDP\u6216ICMP\uff09\u3002 8\u4f4d\u8df3\u6570\u9650\u5236\uff08hop limit\uff09\u548cIPv4\u4e2d\u7684TTL\u542b\u4e49\u76f8\u540c\u3002 IPv6\u7528128\u4f4d\uff0816\u5b57\u8282\uff09\u6765\u8868\u793aIP\u5730\u5740 TCP # \u9762\u5411\u8fde\u63a5\u3001\u5b57\u8282\u6d41\u548c\u53ef\u9760\u4f20\u8f93 - TCP\u534f\u8bae\u7684\u8fd9\u79cd\u8fde\u63a5\u662f\u4e00\u5bf9\u4e00\u7684\uff0c\u6240\u4ee5\u57fa\u4e8e\u5e7f\u64ad\u548c\u591a\u64ad\uff08\u76ee\u6807\u662f\u591a\u4e2a\u4e3b\u673a\u5730\u5740\uff09\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u80fd\u4f7f\u7528TCP\u670d\u52a1\u3002 TCP\u6a21\u5757\u53d1\u9001\u51fa\u7684TCP\u62a5\u6587\u6bb5\u7684\u4e2a\u6570\u548c\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u7684\u5199\u64cd\u4f5c\u6b21\u6570\u4e4b\u95f4\u6ca1\u6709\u56fa\u5b9a\u7684\u6570\u91cf\u5173\u7cfb\u3002 \u5f53\u63a5\u6536\u7aef\u6536\u5230\u4e00\u4e2a\u6216\u591a\u4e2aTCP\u62a5\u6587\u6bb5\u540e\uff0cTCP\u6a21\u5757\u5c06\u5b83\u4eec\u643a\u5e26\u7684\u5e94\u7528\u7a0b\u5e8f\u6570\u636e\u6309\u7167TCP\u62a5\u6587\u6bb5\u7684\u5e8f\u53f7\uff08\u89c1\u540e\u6587\uff09\u4f9d\u6b21\u653e\u5165TCP\u63a5\u6536\u7f13\u51b2\u533a\u4e2d\uff0c\u5e76\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u8bfb\u53d6\u6570\u636e\u3002 \u5b57\u8282\u6d41\u7684\u6982\u5ff5\uff1a\u5e94\u7528\u7a0b\u5e8f\u5bf9\u6570\u636e\u7684\u53d1\u9001\u548c\u63a5\u6536\u662f\u6ca1\u6709\u8fb9\u754c\u9650\u5236\u7684\u3002 UDP\u5219\u4e0d\u7136\u3002\u53d1\u9001\u7aef\u5e94\u7528\u7a0b\u5e8f\u6bcf\u6267\u884c\u4e00\u6b21\u5199\u64cd\u4f5c\uff0cUDP\u6a21\u5757\u5c31\u5c06\u5176\u5c01\u88c5\u6210\u4e00\u4e2aUDP\u6570\u636e\u62a5\u5e76\u53d1\u9001\u4e4b\u3002\u63a5\u6536\u7aef\u5fc5\u987b\u53ca\u65f6\u9488\u5bf9\u6bcf\u4e00\u4e2aUDP\u6570\u636e\u62a5\u6267\u884c\u8bfb\u64cd\u4f5c\uff08\u901a\u8fc7recvfrom\u7cfb\u7edf\u8c03\u7528\uff09\uff0c\u5426\u5219\u5c31\u4f1a\u4e22\u5305\uff08\u8fd9\u7ecf\u5e38\u53d1\u751f\u5728\u8f83\u6162\u7684\u670d\u52a1\u5668\u4e0a\uff09\u3002 TCP\u534f\u8bae\u91c7\u7528\u53d1\u9001\u5e94\u7b54\u673a\u5236\uff0c\u5373\u53d1\u9001\u7aef\u53d1\u9001\u7684\u6bcf\u4e2aTCP\u62a5\u6587\u6bb5\u90fd\u5fc5\u987b\u5f97\u5230\u63a5\u6536\u65b9\u7684\u5e94\u7b54 TCP\u534f\u8bae\u91c7\u7528\u8d85\u65f6\u91cd\u4f20\u673a\u5236\uff0c\u53d1\u9001\u7aef\u5728\u53d1\u9001\u51fa\u4e00\u4e2aTCP\u62a5\u6587\u6bb5\u4e4b\u540e\u542f\u52a8\u5b9a\u65f6\u5668\uff0c\u5982\u679c\u5728\u5b9a\u65f6\u65f6\u95f4\u5185\u672a\u6536\u5230\u5e94\u7b54\uff0c\u5b83\u5c06\u91cd\u53d1\u8be5\u62a5\u6587\u6bb5\u3002 TCP\u62a5\u6587\u6bb5\u6700\u7ec8\u662f\u4ee5IP\u6570\u636e\u62a5\u53d1\u9001\u7684\uff0c\u800cIP\u6570\u636e\u62a5\u5230\u8fbe\u63a5\u6536\u7aef\u53ef\u80fd\u4e71\u5e8f\u3001\u91cd\u590d\uff0c\u6240\u4ee5TCP\u534f\u8bae\u8fd8\u4f1a\u5bf9\u63a5\u6536\u5230\u7684TCP\u62a5\u6587\u6bb5\u91cd\u6392\u3001\u6574\u7406\uff0c\u518d\u4ea4\u4ed8\u7ed9\u5e94\u7528\u5c42\u3002 16\u4f4d\u7aef\u53e3\u53f7\uff08port number\uff09\uff1a\u544a\u77e5\u4e3b\u673a\u8be5\u62a5\u6587\u6bb5\u662f\u6765\u81ea\u54ea\u91cc\uff08\u6e90\u7aef\u53e3\uff09\u4ee5\u53ca\u4f20\u7ed9\u54ea\u4e2a\u4e0a\u5c42\u534f\u8bae\u6216\u5e94\u7528\u7a0b\u5e8f\uff08\u76ee\u7684\u7aef\u53e3\uff09\u7684\u3002 32\u4f4d\u5e8f\u53f7\uff08sequence number\uff09\uff1a\u4e00\u6b21TCP\u901a\u4fe1\uff08\u4eceTCP\u8fde\u63a5\u5efa\u7acb\u5230\u65ad\u5f00\uff09\u8fc7\u7a0b\u4e2d\u67d0\u4e00\u4e2a\u4f20\u8f93\u65b9\u5411\u4e0a\u7684\u5b57\u8282\u6d41\u7684\u6bcf\u4e2a\u5b57\u8282\u7684\u7f16\u53f7\u3002A\u53d1\u9001\u7ed9B\u7684\u7b2c\u4e00\u4e2aTCP\u62a5\u6587\u6bb5\u4e2d\uff0c\u5e8f\u53f7\u503c\u88ab\u7cfb\u7edf\u521d\u59cb\u5316\u4e3a\u67d0\u4e2a\u968f\u673a\u503cISN\uff08Initial Sequence Number\uff0c\u521d\u59cb\u5e8f\u53f7\u503c\uff09\u3002\u90a3\u4e48\u5728\u8be5\u4f20\u8f93\u65b9\u5411\u4e0a\uff08\u4eceA\u5230B\uff09\uff0c\u540e\u7eed\u7684TCP\u62a5\u6587\u6bb5\u4e2d\u5e8f\u53f7\u503c\u5c06\u88ab\u7cfb\u7edf\u8bbe\u7f6e\u6210ISN\u52a0\u4e0a\u8be5\u62a5\u6587\u6bb5\u6240\u643a\u5e26\u6570\u636e\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\u5728\u6574\u4e2a\u5b57\u8282\u6d41\u4e2d\u7684\u504f\u79fb\u3002 32\u4f4d\u786e\u8ba4\u53f7\uff08acknowledgement number\uff09\uff1a\u7528\u4f5c\u5bf9\u53e6\u4e00\u65b9\u53d1\u9001\u6765\u7684TCP\u62a5\u6587\u6bb5\u7684\u54cd\u5e94\u3002\u5176\u503c\u662f\u6536\u5230\u7684TCP\u62a5\u6587\u6bb5\u7684\u5e8f\u53f7\u503c\u52a01\u3002 4\u4f4d\u5934\u90e8\u957f\u5ea6\uff08header length\uff09\uff1a\u6807\u8bc6\u8be5TCP\u5934\u90e8\u6709\u591a\u5c11\u4e2a32bit\u5b57 6\u4f4d\u6807\u5fd7\u4f4d URG\u6807\u5fd7\uff0c\u8868\u793a\u7d27\u6025\u6307\u9488\uff08urgent pointer\uff09\u662f\u5426\u6709\u6548\u3002 ACK\u6807\u5fd7\uff0c\u8868\u793a\u786e\u8ba4\u53f7\u662f\u5426\u6709\u6548\u3002\u6211\u4eec\u79f0\u643a\u5e26ACK\u6807\u5fd7\u7684TCP\u62a5\u6587\u6bb5\u4e3a\u786e\u8ba4\u62a5\u6587\u6bb5\u3002 PSH\u6807\u5fd7\uff0c\u63d0\u793a\u63a5\u6536\u7aef\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u7acb\u5373\u4eceTCP\u63a5\u6536\u7f13\u51b2\u533a\u4e2d\u8bfb\u8d70\u6570\u636e\uff0c\u4e3a\u63a5\u6536\u540e\u7eed\u6570\u636e\u817e\u51fa\u7a7a\u95f4\uff08\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u4e0d\u5c06\u63a5\u6536\u5230\u7684\u6570\u636e\u8bfb\u8d70\uff0c\u5b83\u4eec\u5c31\u4f1a\u4e00\u76f4\u505c\u7559\u5728TCP\u63a5\u6536\u7f13\u51b2\u533a\u4e2d\uff09\u3002 RST\u6807\u5fd7\uff0c\u8868\u793a\u8981\u6c42\u5bf9\u65b9\u91cd\u65b0\u5efa\u7acb\u8fde\u63a5\u3002\u6211\u4eec\u79f0\u643a\u5e26RST\u6807\u5fd7\u7684TCP\u62a5\u6587\u6bb5\u4e3a\u590d\u4f4d\u62a5\u6587\u6bb5\u3002 SYN\u6807\u5fd7\uff0c\u8868\u793a\u8bf7\u6c42\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\u3002\u6211\u4eec\u79f0\u643a\u5e26SYN\u6807\u5fd7\u7684TCP\u62a5\u6587\u6bb5\u4e3a\u540c\u6b65\u62a5\u6587\u6bb5\u3002 FIN\u6807\u5fd7\uff0c\u8868\u793a\u901a\u77e5\u5bf9\u65b9\u672c\u7aef\u8981\u5173\u95ed\u8fde\u63a5\u4e86\u3002\u6211\u4eec\u79f0\u643a\u5e26FIN\u6807\u5fd7\u7684TCP\u62a5\u6587\u6bb5\u4e3a\u7ed3\u675f\u62a5\u6587\u6bb5\u3002 16\u4f4d\u7a97\u53e3\u5927\u5c0f\uff08window size\uff09\uff1a\u662fTCP\u6d41\u91cf\u63a7\u5236\u7684\u4e00\u4e2a\u624b\u6bb5\u3002\u8fd9\u91cc\u8bf4\u7684\u7a97\u53e3\uff0c\u6307\u7684\u662f\u63a5\u6536\u901a\u544a\u7a97\u53e3\uff08Receiver Window\uff0cRWND\uff09\u3002\u5b83\u544a\u8bc9\u5bf9\u65b9\u672c\u7aef\u7684TCP\u63a5\u6536\u7f13\u51b2\u533a\u8fd8\u80fd\u5bb9\u7eb3\u591a\u5c11\u5b57\u8282\u7684\u6570\u636e\uff0c\u8fd9\u6837\u5bf9\u65b9\u5c31\u53ef\u4ee5\u63a7\u5236\u53d1\u9001\u6570\u636e\u7684\u901f\u5ea6\u3002 16\u4f4d\u6821\u9a8c\u548c\uff08TCP checksum\uff09\uff1a\u7531\u53d1\u9001\u7aef\u586b\u5145\uff0c\u63a5\u6536\u7aef\u5bf9TCP\u62a5\u6587\u6bb5\u6267\u884cCRC\u7b97\u6cd5\u4ee5\u68c0\u9a8cTCP\u62a5\u6587\u6bb5\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u662f\u5426\u635f\u574f\u3002\u6ce8\u610f\uff0c\u8fd9\u4e2a\u6821\u9a8c\u4e0d\u4ec5\u5305\u62ecTCP\u5934\u90e8\uff0c\u4e5f\u5305\u62ec\u6570\u636e\u90e8\u5206\u3002 16\u4f4d\u7d27\u6025\u6307\u9488\uff08urgent pointer\uff09\uff1a\u662f\u4e00\u4e2a\u6b63\u7684\u504f\u79fb\u91cf\u3002\u5b83\u548c\u5e8f\u53f7\u5b57\u6bb5\u7684\u503c\u76f8\u52a0\u8868\u793a\u6700\u540e\u4e00\u4e2a\u7d27\u6025\u6570\u636e\u7684\u4e0b\u4e00\u5b57\u8282\u7684\u5e8f\u53f7\u3002 option \u9009\u9879\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bb5kind\u8bf4\u660e\u9009\u9879\u7684\u7c7b\u578b\u3002\u6709\u7684TCP\u9009\u9879\u6ca1\u6709\u540e\u9762\u4e24\u4e2a\u5b57\u6bb5\uff0c\u4ec5\u5305\u542b1\u5b57\u8282\u7684kind\u5b57\u6bb5\u3002 \u7b2c\u4e8c\u4e2a\u5b57\u6bb5length\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u6307\u5b9a\u8be5\u9009\u9879\u7684\u603b\u957f\u5ea6\uff0c\u8be5\u957f\u5ea6\u5305\u62eckind\u5b57\u6bb5\u548clength\u5b57\u6bb5\u5360\u636e\u76842\u5b57\u8282\u3002 \u7b2c\u4e09\u4e2a\u5b57\u6bb5info\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u662f\u9009\u9879\u7684\u5177\u4f53\u4fe1\u606f\u3002 kind=0\u662f\u9009\u9879\u8868\u7ed3\u675f\u9009\u9879\u3002 kind=1\u662f\u7a7a\u64cd\u4f5c\uff08nop\uff09\u9009\u9879\uff0c\u6ca1\u6709\u7279\u6b8a\u542b\u4e49\uff0c\u4e00\u822c\u7528\u4e8e\u5c06TCP\u9009\u9879\u7684\u603b\u957f\u5ea6\u586b\u5145\u4e3a4\u5b57\u8282\u7684\u6574\u6570\u500d\u3002 kind=2\u662f\u6700\u5927\u62a5\u6587\u6bb5\u957f\u5ea6\u9009\u9879\u3002TCP\u8fde\u63a5\u521d\u59cb\u5316\u65f6\uff0c\u901a\u4fe1\u53cc\u65b9\u4f7f\u7528\u8be5\u9009\u9879\u6765\u534f\u5546\u6700\u5927\u62a5\u6587\u6bb5\u957f\u5ea6\uff08Max Segment Size\uff0cMSS\uff09\u3002TCP\u6a21\u5757\u901a\u5e38\u5c06MSS\u8bbe\u7f6e\u4e3a\uff08MTU-40\uff09\u5b57\u8282 kind=3\u662f\u7a97\u53e3\u6269\u5927\u56e0\u5b50\u9009\u9879\u3002TCP\u8fde\u63a5\u521d\u59cb\u5316\u65f6\uff0c\u901a\u4fe1\u53cc\u65b9\u4f7f\u7528\u8be5\u9009\u9879\u6765\u534f\u5546\u63a5\u6536\u901a\u544a\u7a97\u53e3\u7684\u6269\u5927\u56e0\u5b50\u3002\u5047\u8bbeTCP\u5934\u90e8\u4e2d\u7684\u63a5\u6536\u901a\u544a\u7a97\u53e3\u5927\u5c0f\u662fN\uff0c\u7a97\u53e3\u6269\u5927\u56e0\u5b50\uff08\u79fb\u4f4d\u6570\uff09\u662fM\uff0c\u90a3\u4e48TCP\u62a5\u6587\u6bb5\u7684\u5b9e\u9645\u63a5\u6536\u901a\u544a\u7a97\u53e3\u5927\u5c0f\u662fN\u4e582M \uff0c\u6216\u8005\u8bf4N\u5de6\u79fbM\u4f4d\u3002\u6ce8\u610f\uff0cM\u7684\u53d6\u503c\u8303\u56f4\u662f0\uff5e14\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539/proc/sys/net/ipv4/tcp_window_scaling\u5185\u6838\u53d8\u91cf\u6765\u542f\u7528\u6216\u5173\u95ed\u7a97\u53e3\u6269\u5927\u56e0\u5b50\u9009\u9879\u3002 kind=4\u662f\u9009\u62e9\u6027\u786e\u8ba4\uff08Selective Acknowledgment\uff0cSACK\uff09\u9009\u9879\u3002TCP\u901a\u4fe1\u65f6\uff0c\u5982\u679c\u67d0\u4e2aTCP\u62a5\u6587\u6bb5\u4e22\u5931\uff0c\u5219TCP\u6a21\u5757\u4f1a\u91cd\u4f20\u6700\u540e\u88ab\u786e\u8ba4\u7684TCP\u62a5\u6587\u6bb5\u540e\u7eed\u7684\u6240\u6709\u62a5\u6587\u6bb5\uff0c\u8fd9\u6837\u539f\u5148\u5df2\u7ecf\u6b63\u786e\u4f20\u8f93\u7684TCP\u62a5\u6587\u6bb5\u4e5f\u53ef\u80fd\u91cd\u590d\u53d1\u9001\uff0c\u4ece\u800c\u964d\u4f4e\u4e86TCP\u6027\u80fd\u3002 kind=5\u662fSACK\u5b9e\u9645\u5de5\u4f5c\u7684\u9009\u9879\u3002\u8be5\u9009\u9879\u7684\u53c2\u6570\u544a\u8bc9\u53d1\u9001\u65b9\u672c\u7aef\u5df2\u7ecf\u6536\u5230\u5e76\u7f13\u5b58\u7684\u4e0d\u8fde\u7eed\u7684\u6570\u636e\u5757\uff0c\u4ece\u800c\u8ba9\u53d1\u9001\u7aef\u53ef\u4ee5\u636e\u6b64\u68c0\u67e5\u5e76\u91cd\u53d1\u4e22\u5931\u7684\u6570\u636e\u5757\u3002 kind=8\u662f\u65f6\u95f4\u6233\u9009\u9879\u3002\u8be5\u9009\u9879\u63d0\u4f9b\u4e86\u8f83\u4e3a\u51c6\u786e\u7684\u8ba1\u7b97\u901a\u4fe1\u53cc\u65b9\u4e4b\u95f4\u7684\u56de\u8def\u65f6\u95f4\uff08Round Trip Time\uff0cRTT\uff09\u7684\u65b9\u6cd5\uff0c\u4ece\u800c\u4e3aTCP\u6d41\u91cf\u63a7\u5236\u63d0\u4f9b\u91cd\u8981\u4fe1\u606f\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539/proc/sys/net/ipv4/tcp_timestamps\u5185\u6838\u53d8\u91cf\u6765\u542f\u7528\u6216\u5173\u95ed\u65f6\u95f4\u6233\u9009\u9879\u3002 TCP\u8fde\u63a5\u7684\u5efa\u7acb\u548c\u5173\u95ed # \u7b2c1\u4e2aTCP\u62a5\u6587\u6bb5\u5305\u542bSYN\u6807\u5fd7\uff0c\u56e0\u6b64\u5b83\u662f\u4e00\u4e2a\u540c\u6b65\u62a5\u6587\u6bb5 \u7b2c2\u4e2aTCP\u62a5\u6587\u6bb5\u4e5f\u662f\u540c\u6b65\u62a5\u6587\u6bb5 \u7b2c3\u4e2aTCP\u62a5\u6587\u6bb5\u662fernest-laptop\u5bf9\u7b2c2\u4e2a\u540c\u6b65\u62a5\u6587\u6bb5\u7684\u786e\u8ba4 \u4ece\u7b2c3\u4e2aTCP\u62a5\u6587\u6bb5\u5f00\u59cb\uff0ctcpdump\u8f93\u51fa\u7684\u5e8f\u53f7\u503c\u548c\u786e\u8ba4\u503c\u90fd\u662f\u76f8\u5bf9\u521d\u59cbISN\u503c\u7684\u504f\u79fb\u3002\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u542ftcpdump\u7684-S\u9009\u9879\u6765\u9009\u62e9\u6253\u5370\u5e8f\u53f7\u7684\u7edd\u5bf9\u503c\u3002 \u7b2c4\u4e2aTCP\u62a5\u6587\u6bb5\u5305\u542bFIN\u6807\u5fd7\uff0c\u56e0\u6b64\u5b83\u662f\u4e00\u4e2a\u7ed3\u675f\u62a5\u6587\u6bb5 \u7528TCP\u62a5\u6587\u6bb55\u6765\u786e\u8ba4\u8be5\u7ed3\u675f\u62a5\u6587\u6bb5\u3002 \u53d1\u9001\u81ea\u5df1\u7684\u7ed3\u675f\u62a5\u6587\u6bb56 \u7528TCP\u62a5\u6587\u6bb57\u7ed9\u4e88\u786e\u8ba4 \u534a\u5173\u95ed\u72b6\u6001 # TCP\u8fde\u63a5\u662f\u5168\u53cc\u5de5\u7684\uff0c\u6240\u4ee5\u5b83\u5141\u8bb8\u4e24\u4e2a\u65b9\u5411\u7684\u6570\u636e\u4f20\u8f93\u88ab\u72ec\u7acb\u5173\u95ed\u3002 \u901a\u4fe1\u7684\u4e00\u7aef\u53ef\u4ee5\u53d1\u9001\u7ed3\u675f\u62a5\u6587\u6bb5\u7ed9\u5bf9\u65b9\uff0c\u544a\u8bc9\u5b83\u672c\u7aef\u5df2\u7ecf\u5b8c\u6210\u4e86\u6570\u636e\u7684\u53d1\u9001\uff0c\u4f46\u5141\u8bb8\u7ee7\u7eed\u63a5\u6536\u6765\u81ea\u5bf9\u65b9\u7684\u6570\u636e\uff0c\u76f4\u5230\u5bf9\u65b9\u4e5f\u53d1\u9001\u7ed3\u675f\u62a5\u6587\u6bb5\u4ee5\u5173\u95ed\u8fde\u63a5\u3002TCP\u8fde\u63a5\u7684\u8fd9\u79cd\u72b6\u6001\u79f0\u4e3a\u534a\u5173\u95ed\uff08half close\uff09\u72b6\u6001\uff0c \u8fde\u63a5\u8d85\u65f6 # TCP\u62a5\u6587\u6bb5\u7684\u8d85\u65f6\u65f6\u95f4\u662f32s\uff0863s-16s-8s-4s-2s-1s\uff09 TCP\u6a21\u5757\u4e00\u5171\u6267\u884c\u4e865\u6b21\u91cd\u8fde\u64cd\u4f5c \u7531/proc/sys/net/ipv4/tcp_syn_retries\u5185\u6838\u53d8\u91cf\u6240\u5b9a\u4e49\u7684\u3002 TCP\u72b6\u6001\u8f6c\u79fb # Linux\u4e3a\u4e86\u9632\u6b62\u5b64\u513f\u8fde\u63a5\u957f\u65f6\u95f4\u5b58\u7559\u5728\u5185\u6838\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e24\u4e2a\u5185\u6838\u53d8\u91cf\uff1a - /proc/sys/net/ipv4/tcp_max_orphans\u6307\u5b9a\u5185\u6838\u80fd\u63a5\u7ba1\u7684\u5b64\u513f\u8fde\u63a5\u6570\u76ee - /proc/sys/net/ipv4/tcp_fin_timeout\u6307\u5b9a\u5b64\u513f\u8fde\u63a5\u5728\u5185\u6838\u4e2d\u751f\u5b58\u7684\u65f6\u95f4 \u590d\u4f4d\u62a5\u6587\u6bb5 # TCP\u8fde\u63a5\u7684\u4e00\u7aef\u4f1a\u5411\u53e6\u4e00\u7aef\u53d1\u9001\u643a\u5e26RST\u6807\u5fd7\u7684\u62a5\u6587\u6bb5\uff0c\u5373\u590d\u4f4d\u62a5\u6587\u6bb5\uff0c\u4ee5\u901a\u77e5\u5bf9\u65b9\u5173\u95ed\u8fde\u63a5\u6216\u91cd\u65b0\u5efa\u7acb\u8fde\u63a5\u3002 \u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528socket\u9009\u9879SO_LINGER\u6765\u53d1\u9001\u590d\u4f4d\u62a5\u6587\u6bb5\uff0c\u4ee5\u5f02\u5e38\u7ec8\u6b62\u4e00\u4e2a\u8fde\u63a5\u3002 TCP\u4ea4\u4e92\u6570\u636e\u6d41 # Nagle\u7b97\u6cd5\u8981\u6c42\u4e00\u4e2aTCP\u8fde\u63a5\u7684\u901a\u4fe1\u53cc\u65b9\u5728\u4efb\u610f\u65f6\u523b\u90fd\u6700\u591a\u53ea\u80fd\u53d1\u9001\u4e00\u4e2a\u672a\u88ab\u786e\u8ba4\u7684TCP\u62a5\u6587\u6bb5\uff0c\u5728\u8be5TCP\u62a5\u6587\u6bb5\u7684\u786e\u8ba4\u5230\u8fbe\u4e4b\u524d\u4e0d\u80fd\u53d1\u9001\u5176\u4ed6TCP\u62a5\u6587\u6bb5\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u53d1\u9001\u65b9\u5728\u7b49\u5f85\u786e\u8ba4\u7684\u540c\u65f6\u6536\u96c6\u672c\u7aef\u9700\u8981\u53d1\u9001\u7684\u5fae\u91cf\u6570\u636e\uff0c\u5e76\u5728\u786e\u8ba4\u5230\u6765\u65f6\u4ee5\u4e00\u4e2aTCP\u62a5\u6587\u6bb5\u5c06\u5b83\u4eec\u5168\u90e8\u53d1\u51fa\u3002\u8fd9\u6837\u5c31\u6781\u5927\u5730\u51cf\u5c11\u4e86\u7f51\u7edc\u4e0a\u7684\u5fae\u5c0fTCP\u62a5\u6587\u6bb5\u7684\u6570\u91cf\u3002 \u5e26\u5916\u6570\u636e # \u5e26\u5916\uff08Out Of Band\uff0cOOB\uff09\u6570\u636e\u7684\u6982\u5ff5\uff0c\u7528\u4e8e\u8fc5\u901f\u901a\u544a\u5bf9\u65b9\u672c\u7aef\u53d1\u751f\u7684\u91cd\u8981\u4e8b\u4ef6\u3002 \u5e26\u5916\u6570\u636e\u7684\u4f7f\u7528\u5f88\u5c11\u89c1\uff0c\u5df2\u77e5\u7684\u4ec5\u6709telnet\u3001ftp\u7b49\u8fdc\u7a0b\u975e\u6d3b\u8dc3\u7a0b\u5e8f\u3002 TCP\u8d85\u65f6\u91cd\u4f20 # TCP\u670d\u52a1\u5fc5\u987b\u80fd\u591f\u91cd\u4f20\u8d85\u65f6\u65f6\u95f4\u5185\u672a\u6536\u5230\u786e\u8ba4\u7684TCP\u62a5\u6587\u6bb5\u3002\u4e3a\u6b64\uff0cTCP\u6a21\u5757\u4e3a\u6bcf\u4e2aTCP\u62a5\u6587\u6bb5\u90fd\u7ef4\u62a4\u4e00\u4e2a\u91cd\u4f20\u5b9a\u65f6\u5668\uff0c\u8be5\u5b9a\u65f6\u5668\u5728TCP\u62a5\u6587\u6bb5\u7b2c\u4e00\u6b21\u88ab\u53d1\u9001\u65f6\u542f\u52a8\u3002\u5982\u679c\u8d85\u65f6\u65f6\u95f4\u5185\u672a\u6536\u5230\u63a5\u6536\u65b9\u7684\u5e94\u7b54\uff0cTCP\u6a21\u5757\u5c06\u91cd\u4f20TCP\u62a5\u6587\u6bb5\u5e76\u91cd\u7f6e\u5b9a\u65f6\u5668\u3002\u81f3\u4e8e\u4e0b\u6b21\u91cd\u4f20\u7684\u8d85\u65f6\u65f6\u95f4\u5982\u4f55\u9009\u62e9\uff0c\u4ee5\u53ca\u6700\u591a\u6267\u884c\u591a\u5c11\u6b21\u91cd\u4f20\uff0c\u5c31\u662fTCP\u7684\u91cd\u4f20\u7b56\u7565\u3002 /proc/sys/net/ipv4/tcp_retries1\u6307\u5b9a\u5728\u5e95\u5c42IP\u63a5\u7ba1\u4e4b\u524dTCP\u6700\u5c11\u6267\u884c\u7684\u91cd\u4f20\u6b21\u6570\uff0c\u9ed8\u8ba4\u503c\u662f3\u3002 /proc/sys/net/ipv4/tcp_retries2\u6307\u5b9a\u8fde\u63a5\u653e\u5f03\u524dTCP\u6700\u591a\u53ef\u4ee5\u6267\u884c\u7684\u91cd\u4f20\u6b21\u6570\uff0c\u9ed8\u8ba4\u503c\u662f15\uff08\u4e00\u822c\u5bf9\u5e9413\uff5e30 min\uff09\u3002 \u62e5\u585e\u63a7\u5236 # \u62e5\u585e\u63a7\u5236\u7684\u56db\u4e2a\u90e8\u5206\uff1a\u6162\u542f\u52a8\uff08slow start\uff09\u3001\u62e5\u585e\u907f\u514d\uff08congestion avoidance\uff09\u3001\u5feb\u901f\u91cd\u4f20\uff08fast retransmit\uff09\u548c\u5feb\u901f\u6062\u590d\uff08fast recovery\uff09\u3002 \u62e5\u585e\u63a7\u5236\u7b97\u6cd5\u5728Linux\u4e0b\u6709\u591a\u79cd\u5b9e\u73b0\uff0c\u6bd4\u5982reno\u7b97\u6cd5\u3001vegas\u7b97\u6cd5\u548ccubic\u7b97\u6cd5\u7b49\u3002\u5b83\u4eec\u6216\u8005\u90e8\u5206\u6216\u8005\u5168\u90e8\u5b9e\u73b0\u4e86\u4e0a\u8ff0\u56db\u4e2a\u90e8\u5206\u3002 /proc/sys/net/ipv4/tcp_congestion_control\u6587\u4ef6\u6307\u793a\u673a\u5668\u5f53\u524d\u6240\u4f7f\u7528\u7684\u62e5\u585e\u63a7\u5236\u7b97\u6cd5\u3002","title":"TCP IP"},{"location":"wiki/TCP_IP/#\u534f\u8bae\u65cf","text":"","title":"\u534f\u8bae\u65cf"},{"location":"wiki/TCP_IP/#\u5c01\u88c5","text":"","title":"\u5c01\u88c5"},{"location":"wiki/TCP_IP/#ethernet-framer","text":"","title":"ethernet framer"},{"location":"wiki/TCP_IP/#arp","text":"ARP\u534f\u8bae\u80fd\u5b9e\u73b0\u4efb\u610f\u7f51\u7edc\u5c42\u5730\u5740\u5230\u4efb\u610f\u7269\u7406\u5730\u5740\u7684\u8f6c\u6362 \u5176\u5de5\u4f5c\u539f\u7406\u662f\uff1a\u4e3b\u673a\u5411\u81ea\u5df1\u6240\u5728\u7684\u7f51\u7edc\u5e7f\u64ad\u4e00\u4e2aARP\u8bf7\u6c42\uff0c\u8be5\u8bf7\u6c42\u5305\u542b\u76ee\u6807\u673a\u5668\u7684\u7f51\u7edc\u5730\u5740\u3002\u6b64\u7f51\u7edc\u4e0a\u7684\u5176\u4ed6\u673a\u5668\u90fd\u5c06\u6536\u5230\u8fd9\u4e2a\u8bf7\u6c42\uff0c\u4f46\u53ea\u6709\u88ab\u8bf7\u6c42\u7684\u76ee\u6807\u673a\u5668\u4f1a\u56de\u5e94\u4e00\u4e2aARP\u5e94\u7b54\uff0c\u5176\u4e2d\u5305\u542b\u81ea\u5df1\u7684\u7269\u7406\u5730\u5740\u3002 \u786c\u4ef6\u7c7b\u578b\u5b57\u6bb5\u5b9a\u4e49\u7269\u7406\u5730\u5740\u7684\u7c7b\u578b\uff0c\u5b83\u7684\u503c\u4e3a1\u8868\u793aMAC\u5730\u5740\u3002 \u534f\u8bae\u7c7b\u578b\u5b57\u6bb5\u8868\u793a\u8981\u6620\u5c04\u7684\u534f\u8bae\u5730\u5740\u7c7b\u578b\uff0c\u5b83\u7684\u503c\u4e3a0x800\uff0c\u8868\u793aIP\u5730\u5740\u3002 \u786c\u4ef6\u5730\u5740\u957f\u5ea6\u5b57\u6bb5\u548c\u534f\u8bae\u5730\u5740\u957f\u5ea6\u5b57\u6bb5\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5176\u5355\u4f4d\u662f\u5b57\u8282\u3002\u5bf9MAC\u5730\u5740\u6765\u8bf4\uff0c\u5176\u957f\u5ea6\u4e3a6\uff1b\u5bf9IP\uff08v4\uff09\u5730\u5740\u6765\u8bf4\uff0c\u5176\u957f\u5ea6\u4e3a4\u3002 \u64cd\u4f5c\u5b57\u6bb5\u6307\u51fa4\u79cd\u64cd\u4f5c\u7c7b\u578b\uff1aARP\u8bf7\u6c42\uff08\u503c\u4e3a1\uff09\u3001ARP\u5e94\u7b54\uff08\u503c\u4e3a2\uff09\u3001RARP\u8bf7\u6c42\uff08\u503c\u4e3a3\uff09\u548cRARP\u5e94\u7b54\uff08\u503c\u4e3a4\uff09\u3002 \u6700\u540e4\u4e2a\u5b57\u6bb5\u6307\u5b9a\u901a\u4fe1\u53cc\u65b9\u7684\u4ee5\u592a\u7f51\u5730\u5740\u548cIP\u5730\u5740\u3002","title":"ARP"},{"location":"wiki/TCP_IP/#dns","text":"- 16\u4f4d\u6807\u8bc6\u5b57\u6bb5\u7528\u4e8e\u6807\u8bb0\u4e00\u5bf9DNS\u67e5\u8be2\u548c\u5e94\u7b54\uff0c\u4ee5\u6b64\u533a\u5206\u4e00\u4e2aDNS\u5e94\u7b54\u662f\u54ea\u4e2aDNS\u67e5\u8be2\u7684\u56de - 16\u4f4d\u6807\u5fd7\u5b57\u6bb5\u7528\u4e8e\u534f\u5546\u5177\u4f53\u7684\u901a\u4fe1\u65b9\u5f0f\u548c\u53cd\u9988\u901a\u4fe1\u72b6\u6001\u3002 - - QR\uff0c\u67e5\u8be2/\u5e94\u7b54\u6807\u5fd7\u30020\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u67e5\u8be2\u62a5\u6587\uff0c1\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u5e94\u7b54\u62a5\u6587 - opcode\uff0c\u5b9a\u4e49\u67e5\u8be2\u548c\u5e94\u7b54\u7684\u7c7b\u578b\u30020\u8868\u793a\u6807\u51c6\u67e5\u8be2\uff0c1\u8868\u793a\u53cd\u5411\u67e5\u8be2\uff08\u7531IP\u5730\u5740\u83b7\u5f97\u4e3b\u673a\u57df\u540d\uff09\uff0c2\u8868\u793a\u8bf7\u6c42\u670d\u52a1\u5668\u72b6\u6001\u3002 - AA\uff0c\u6388\u6743\u5e94\u7b54\u6807\u5fd7\uff0c\u4ec5\u7531\u5e94\u7b54\u62a5\u6587\u4f7f\u7528\u30021\u8868\u793a\u57df\u540d\u670d\u52a1\u5668\u662f\u6388\u6743\u670d\u52a1\u5668\u3002 - TC\uff0c\u622a\u65ad\u6807\u5fd7\uff0c\u4ec5\u5f53DNS\u62a5\u6587\u4f7f\u7528UDP\u670d\u52a1\u65f6\u4f7f\u7528\u3002\u56e0\u4e3aUDP\u6570\u636e\u62a5\u6709\u957f\u5ea6\u9650\u5236\uff0c\u6240\u4ee5\u8fc7\u957f\u7684DNS\u62a5\u6587\u5c06\u88ab\u622a\u65ad\u30021\u8868\u793aDNS\u62a5\u6587\u8d85\u8fc7512\u5b57\u8282\uff0c\u5e76\u88ab\u622a\u65ad\u3002 - RD\uff0c\u9012\u5f52\u67e5\u8be2\u6807\u5fd7\u30021\u8868\u793a\u6267\u884c\u9012\u5f52\u67e5\u8be2\uff0c\u5373\u5982\u679c\u76ee\u6807DNS\u670d\u52a1\u5668\u65e0\u6cd5\u89e3\u6790\u67d0\u4e2a\u4e3b\u673a\u540d\uff0c\u5219\u5b83\u5c06\u5411\u5176\u4ed6DNS\u670d\u52a1\u5668\u7ee7\u7eed\u67e5\u8be2\uff0c\u5982\u6b64\u9012\u5f52\uff0c\u76f4\u5230\u83b7\u5f97\u7ed3\u679c\u5e76\u628a\u8be5\u7ed3\u679c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u30020\u8868\u793a\u6267\u884c\u8fed\u4ee3\u67e5\u8be2\uff0c\u5373\u5982\u679c\u76ee\u6807DNS\u670d\u52a1\u5668\u65e0\u6cd5\u89e3\u6790\u67d0\u4e2a\u4e3b\u673a\u540d\uff0c\u5219\u5b83\u5c06\u81ea\u5df1\u77e5\u9053\u7684\u5176\u4ed6DNS\u670d\u52a1\u5668\u7684IP\u5730\u5740\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u4ee5\u4f9b\u5ba2\u6237\u7aef\u53c2\u8003\u3002 - RA\uff0c\u5141\u8bb8\u9012\u5f52\u6807\u5fd7\u3002\u4ec5\u7531\u5e94\u7b54\u62a5\u6587\u4f7f\u7528\uff0c1\u8868\u793aDNS\u670d\u52a1\u5668\u652f\u6301\u9012\u5f52\u67e5\u8be2\u3002 - zero\uff0c\u8fd93\u4f4d\u672a\u7528\uff0c\u5fc5\u987b\u90fd\u8bbe\u7f6e\u4e3a0\u3002 - rcode\uff0c4\u4f4d\u8fd4\u56de\u7801\uff0c\u8868\u793a\u5e94\u7b54\u7684\u72b6\u6001\u3002\u5e38\u7528\u503c\u67090\uff08\u65e0\u9519\u8bef\uff09\u548c3\u57df\u540d\u4e0d\u5b58\u5728 \u63a5\u4e0b\u6765\u76844\u4e2a\u5b57\u6bb5\u5219\u5206\u522b\u6307\u51faDNS\u62a5\u6587\u7684\u6700\u540e4\u4e2a\u5b57\u6bb5\u7684\u8d44\u6e90\u8bb0\u5f55\u6570\u76ee\u3002\u5bf9\u67e5\u8be2\u62a5\u6587\u800c\u8a00\uff0c\u5b83\u4e00\u822c\u5305\u542b1\u4e2a\u67e5\u8be2\u95ee\u9898\uff0c\u800c\u5e94\u7b54\u8d44\u6e90\u8bb0\u5f55\u6570\u3001\u6388\u6743\u8d44\u6e90\u8bb0\u5f55\u6570\u548c\u989d\u5916\u8d44\u6e90\u8bb0\u5f55\u6570\u5219\u4e3a0\u3002\u5e94\u7b54\u62a5\u6587\u7684\u5e94\u7b54\u8d44\u6e90\u8bb0\u5f55\u6570\u5219\u81f3\u5c11\u4e3a1\uff0c\u800c\u6388\u6743\u8d44\u6e90\u8bb0\u5f55\u6570\u548c\u989d\u5916\u8d44\u6e90\u8bb0\u5f55\u6570\u53ef\u4e3a0\u6216\u975e0\u3002 - \u67e5\u8be2\u540d\u4ee5\u4e00\u5b9a\u7684\u683c\u5f0f\u5c01\u88c5\u4e86\u8981\u67e5\u8be2\u7684\u4e3b\u673a\u57df\u540d\u3002","title":"DNS"},{"location":"wiki/TCP_IP/#ip","text":"IP\u534f\u8bae\u662fTCP/IP\u534f\u8bae\u65cf\u7684\u52a8\u529b\uff0c\u5b83\u4e3a\u4e0a\u5c42\u534f\u8bae\u63d0\u4f9b**\u65e0\u72b6\u6001**\u3001 \u65e0\u8fde\u63a5 \u3001**\u4e0d\u53ef\u9760**\u7684\u670d\u52a1\u3002 - \u65e0\u72b6\u6001\uff08stateless\uff09\u662f\u6307IP\u901a\u4fe1\u53cc\u65b9\u4e0d\u540c\u6b65\u4f20\u8f93\u6570\u636e\u7684\u72b6\u6001\u4fe1\u606f - \u65e0\u8fde\u63a5\uff08connectionless\uff09\u662f\u6307IP\u901a\u4fe1\u53cc\u65b9\u90fd\u4e0d\u957f\u4e45\u5730\u7ef4\u6301\u5bf9\u65b9\u7684\u4efb\u4f55\u4fe1\u606f\u3002 - \u4e0d\u53ef\u9760\u662f\u6307IP\u534f\u8bae\u4e0d\u80fd\u4fdd\u8bc1IP\u6570\u636e\u62a5\u51c6\u786e\u5730\u5230\u8fbe\u63a5\u6536\u7aef\uff0c\u5b83\u53ea\u662f\u627f\u8bfa\u5c3d\u6700\u5927\u52aa\u529b\uff08best effort\uff09 4\u4f4d\u7248\u672c\u53f7\uff08version\uff09\u6307\u5b9aIP\u534f\u8bae\u7684\u7248\u672c\u3002\u5bf9IPv4\u6765\u8bf4\uff0c\u5176\u503c\u662f4\u3002 4\u4f4d\u5934\u90e8\u957f\u5ea6\uff08header length\uff09\u6807\u8bc6\u8be5IP\u5934\u90e8\u6709\u591a\u5c11\u4e2a32 bit\u5b57 8\u4f4d\u670d\u52a1\u7c7b\u578b\uff08Type Of Service\uff0cTOS\uff09 \u4e00\u4e2a3\u4f4d\u7684\u4f18\u5148\u6743\u5b57\u6bb5\uff08\u73b0\u5728\u5df2\u7ecf\u88ab\u5ffd\u7565\uff09 4\u4f4d\u7684TOS\u5b57\u6bb5 \u6700\u5c0f\u5ef6\u65f6 \u6700\u5927\u541e\u5410\u91cf \u6700\u9ad8\u53ef\u9760\u6027 \u6700\u5c0f\u8d39\u7528 1\u4f4d\u4fdd\u7559\u5b57\u6bb5\uff08\u5fc5\u987b\u7f6e0\uff09 16\u4f4d\u603b\u957f\u5ea6\uff08total length\uff09\u662f\u6307\u6574\u4e2aIP\u6570\u636e\u62a5\u7684\u957f\u5ea6\uff0c\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff0c\u56e0\u6b64IP\u6570\u636e\u62a5\u7684\u6700\u5927\u957f\u5ea6\u4e3a65 535\uff08216 -1\uff09\u5b57\u8282\u3002\u4f46**\u7531\u4e8eMTU\u7684\u9650\u5236\uff0c\u957f\u5ea6\u8d85\u8fc7MTU\u7684\u6570\u636e\u62a5\u90fd\u5c06\u88ab\u5206\u7247\u4f20\u8f93**\uff0c\u6240\u4ee5\u5b9e\u9645\u4f20\u8f93\u7684IP\u6570\u636e\u62a5\uff08\u6216\u5206\u7247\uff09\u7684\u957f\u5ea6\u90fd\u8fdc\u8fdc\u6ca1\u6709\u8fbe\u5230\u6700\u5927\u503c\u3002 16\u4f4d\u6807\u8bc6\uff08identification\uff09\u552f\u4e00\u5730\u6807\u8bc6\u4e3b\u673a\u53d1\u9001\u7684\u6bcf\u4e00\u4e2a\u6570\u636e\u62a5\u3002\u5176\u521d\u59cb\u503c\u7531\u7cfb\u7edf\u968f\u673a\u751f\u6210\uff1b\u6bcf\u53d1\u9001\u4e00\u4e2a\u6570\u636e\u62a5\uff0c\u5176\u503c\u5c31\u52a01\u3002 3\u4f4d\u6807\u5fd7\u5b57\u6bb5\u7684 \u7b2c\u4e00\u4f4d\u4fdd\u7559\u3002 \u7b2c\u4e8c\u4f4d\uff08Don\u2019t Fragment\uff0cDF\uff09\u8868\u793a\u201c\u7981\u6b62\u5206\u7247\u201d\u3002\u5982\u679c\u8bbe\u7f6e\u4e86\u8fd9\u4e2a\u4f4d\uff0cIP\u6a21\u5757\u5c06\u4e0d\u5bf9\u6570\u636e\u62a5\u8fdb\u884c\u5206\u7247\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679cIP\u6570\u636e\u62a5\u957f\u5ea6\u8d85\u8fc7MTU\u7684\u8bdd\uff0cIP\u6a21\u5757\u5c06\u4e22\u5f03\u8be5\u6570\u636e\u62a5\u5e76\u8fd4\u56de\u4e00\u4e2aICMP\u5dee\u9519\u62a5\u6587\u3002 \u7b2c\u4e09\u4f4d\uff08More Fragment\uff0cMF\uff09\u8868\u793a\u201c\u66f4\u591a\u5206\u7247\u201d\u3002\u9664\u4e86\u6570\u636e\u62a5\u7684\u6700\u540e\u4e00\u4e2a\u5206\u7247\u5916\uff0c\u5176\u4ed6\u5206\u7247\u90fd\u8981\u628a\u5b83\u7f6e1\u3002 13\u4f4d\u5206\u7247\u504f\u79fb\uff08fragmentation offset\uff09\u662f\u5206\u7247\u76f8\u5bf9\u539f\u59cbIP\u6570\u636e\u62a5\u5f00\u59cb\u5904\uff08\u4ec5\u6307\u6570\u636e\u90e8\u5206\uff09\u7684\u504f\u79fb\u3002\u5b9e\u9645\u7684\u504f\u79fb\u503c\u662f\u8be5\u503c\u5de6\u79fb3\u4f4d\uff08\u4e588\uff09\u540e\u5f97\u5230\u7684\u3002\u7531\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u9664\u4e86\u6700\u540e\u4e00\u4e2aIP\u5206\u7247\u5916\uff0c\u6bcf\u4e2aIP\u5206\u7247\u7684\u6570\u636e\u90e8\u5206\u7684\u957f\u5ea6\u5fc5\u987b\u662f8\u7684\u6574\u6570\u500d 8\u4f4d\u751f\u5b58\u65f6\u95f4\uff08Time To Live\uff0cTTL\uff09\u662f\u6570\u636e\u62a5\u5230\u8fbe\u76ee\u7684\u5730\u4e4b\u524d\u5141\u8bb8\u7ecf\u8fc7\u7684\u8def\u7531\u5668\u8df3\u6570\u3002TTL\u503c\u88ab\u53d1\u9001\u7aef\u8bbe\u7f6e\uff08\u5e38\u89c1\u7684\u503c\u662f64\uff09\u3002\u6570\u636e\u62a5\u5728\u8f6c\u53d1\u8fc7\u7a0b\u4e2d\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u8def\u7531\uff0c\u8be5\u503c\u5c31\u88ab\u8def\u7531\u5668\u51cf1\u3002\u5f53TTL\u503c\u51cf\u4e3a0\u65f6\uff0c\u8def\u7531\u5668\u5c06\u4e22\u5f03\u6570\u636e\u62a5\uff0c\u5e76\u5411\u6e90\u7aef\u53d1\u9001\u4e00\u4e2aICMP\u5dee\u9519\u62a5\u6587\u3002 8\u4f4d\u534f\u8bae\uff08protocol\uff09\u7528\u6765\u533a\u5206\u4e0a\u5c42\u534f\u8bae 16\u4f4d\u5934\u90e8\u6821\u9a8c\u548c\uff08header checksum\uff09\u7531\u53d1\u9001\u7aef\u586b\u5145\uff0c\u63a5\u6536\u7aef\u5bf9\u5176\u4f7f\u7528CRC\u7b97\u6cd5\u4ee5\u68c0\u9a8cIP\u6570\u636e\u62a5\u5934\u90e8\uff08\u6ce8\u610f\uff0c\u4ec5\u68c0\u9a8c\u5934\u90e8\uff09\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u662f\u5426\u635f\u574f\u3002 32\u4f4d\u7684\u6e90\u7aefIP\u5730\u5740\u548c\u76ee\u7684\u7aefIP\u5730\u5740\u7528\u6765\u6807\u8bc6\u6570\u636e\u62a5\u7684\u53d1\u9001\u7aef\u548c\u63a5\u6536\u7aef\u3002 IPv4\u6700\u540e\u4e00\u4e2a\u9009\u9879\u5b57\u6bb5\uff08option\uff09\u662f\u53ef\u53d8\u957f\u7684\u53ef\u9009\u4fe1\u606f\u3002\u8fd9\u90e8\u5206\u6700\u591a\u5305\u542b40\u5b57\u8282\uff0c\u56e0\u4e3aIP\u5934\u90e8\u6700\u957f\u662f60\u5b57\u8282\uff08\u5176\u4e2d\u8fd8\u5305\u542b\u524d\u9762\u8ba8\u8bba\u768420\u5b57\u8282\u7684\u56fa\u5b9a\u90e8\u5206\uff09\u3002\u53ef\u7528\u7684IP\u9009\u9879\u5305\u62ec\uff1a \u8bb0\u5f55\u8def\u7531\uff08record route\uff09\uff0c\u544a\u8bc9\u6570\u636e\u62a5\u9014\u7ecf\u7684\u6240\u6709\u8def\u7531\u5668\u90fd\u5c06\u81ea\u5df1\u7684IP\u5730\u5740\u586b\u5165IP\u5934\u90e8\u7684\u9009\u9879\u90e8\u5206\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u8ddf\u8e2a\u6570\u636e\u62a5\u7684\u4f20\u9012\u8def\u5f84\u3002 \u65f6\u95f4\u6233\uff08timestamp\uff09\uff0c\u544a\u8bc9\u6bcf\u4e2a\u8def\u7531\u5668\u90fd\u5c06\u6570\u636e\u62a5\u88ab\u8f6c\u53d1\u7684\u65f6\u95f4\uff08\u6216\u65f6\u95f4\u4e0eIP\u5730\u5740\u5bf9\uff09\u586b\u5165IP\u5934\u90e8\u7684\u9009\u9879\u90e8\u5206\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6d4b\u91cf\u9014\u7ecf\u8def\u7531\u4e4b\u95f4\u6570\u636e\u62a5\u4f20\u8f93\u7684\u65f6\u95f4\u3002 \u677e\u6563\u6e90\u8def\u7531\u9009\u62e9\uff08loose source routing\uff09\uff0c\u6307\u5b9a\u4e00\u4e2a\u8def\u7531\u5668IP\u5730\u5740\u5217\u8868\uff0c\u6570\u636e\u62a5\u53d1\u9001\u8fc7\u7a0b\u4e2d\u5fc5\u987b\u7ecf\u8fc7\u5176\u4e2d\u6240\u6709\u7684\u8def\u7531\u5668\u3002 \u4e25\u683c\u6e90\u8def\u7531\u9009\u62e9\uff08strict source routing\uff09\uff0c\u548c\u677e\u6563\u6e90\u8def\u7531\u9009\u62e9\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u6570\u636e\u62a5\u53ea\u80fd\u7ecf\u8fc7\u88ab\u6307\u5b9a\u7684\u8def\u7531\u5668\u3002","title":"IP"},{"location":"wiki/TCP_IP/#ip\u8def\u7531","text":"- \u5f53IP\u6a21\u5757\u63a5\u6536\u5230\u6765\u81ea\u6570\u636e\u94fe\u8def\u5c42\u7684IP\u6570\u636e\u62a5\u65f6\uff0c\u5b83\u9996\u5148\u5bf9\u8be5\u6570\u636e\u62a5\u7684\u5934\u90e8\u505aCRC\u6821\u9a8c\uff0c\u786e\u8ba4\u65e0\u8bef\u4e4b\u540e\u5c31\u5206\u6790\u5176\u5934\u90e8\u7684\u5177\u4f53\u4fe1\u606f\u3002 - \u5982\u679c\u8be5IP\u6570\u636e\u62a5\u7684\u5934\u90e8\u8bbe\u7f6e\u4e86\u6e90\u7ad9\u9009\u8def\u9009\u9879\uff08\u677e\u6563\u6e90\u8def\u7531\u9009\u62e9\u6216\u4e25\u683c\u6e90\u8def\u7531\u9009\u62e9\uff09\uff0c\u5219IP\u6a21\u5757\u8c03\u7528\u6570\u636e\u62a5\u8f6c\u53d1\u5b50\u6a21\u5757\u6765\u5904\u7406\u8be5\u6570\u636e\u62a5\u3002 - \u5982\u679c\u8be5IP\u6570\u636e\u62a5\u7684\u5934\u90e8\u4e2d\u76ee\u6807IP\u5730\u5740\u662f\u672c\u673a\u7684\u67d0\u4e2aIP\u5730\u5740\uff0c\u6216\u8005\u662f\u5e7f\u64ad\u5730\u5740\uff0c\u5373\u8be5\u6570\u636e\u62a5\u662f\u53d1\u9001\u7ed9\u672c\u673a\u7684\uff0c\u5219IP\u6a21\u5757\u5c31\u6839\u636e\u6570\u636e\u62a5\u5934\u90e8\u4e2d\u7684\u534f\u8bae\u5b57\u6bb5\u6765\u51b3\u5b9a\u5c06\u5b83\u6d3e\u53d1\u7ed9\u54ea\u4e2a\u4e0a\u5c42\u5e94\u7528\uff08\u5206\u7528\uff09\u3002 - \u5982\u679cIP\u6a21\u5757\u53d1\u73b0\u8fd9\u4e2a\u6570\u636e\u62a5\u4e0d\u662f\u53d1\u9001\u7ed9\u672c\u673a\u7684\uff0c\u5219\u4e5f\u8c03\u7528\u6570\u636e\u62a5\u8f6c\u53d1\u5b50\u6a21\u5757\u6765\u5904\u7406\u8be5\u6570\u636e\u62a5\u3002 - \u6570\u636e\u62a5\u8f6c\u53d1\u5b50\u6a21\u5757\u5c06\u9996\u5148\u68c0\u6d4b\u7cfb\u7edf\u662f\u5426\u5141\u8bb8\u8f6c\u53d1\uff0c\u5982\u679c\u4e0d\u5141\u8bb8\uff0cIP\u6a21\u5757\u5c31\u5c06\u6570\u636e\u62a5\u4e22\u5f03\u3002\u5982\u679c\u5141\u8bb8\uff0c\u6570\u636e\u62a5\u8f6c\u53d1\u5b50\u6a21\u5757\u5c06\u5bf9\u8be5\u6570\u636e\u62a5\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u7136\u540e\u5c06\u5b83\u4ea4\u7ed9IP\u6570\u636e\u62a5\u8f93\u51fa\u5b50\u6a21\u5757\u3002 - IP\u6570\u636e\u62a5\u5e94\u8be5\u53d1\u9001\u81f3\u54ea\u4e2a\u4e0b\u4e00\u8df3\u8def\u7531\uff08\u6216\u8005\u76ee\u6807\u673a\u5668\uff09\uff0c\u4ee5\u53ca\u7ecf\u8fc7\u54ea\u4e2a\u7f51\u5361\u6765\u53d1\u9001\uff0c\u5c31\u662fIP\u8def\u7531\u8fc7\u7a0b - IP\u6a21\u5757\u5b9e\u73b0\u6570\u636e\u62a5\u8def\u7531\u7684\u6838\u5fc3\u6570\u636e\u7ed3\u6784\u662f\u8def\u7531\u8868\u3002\u8fd9\u4e2a\u8868\u6309\u7167\u6570\u636e\u62a5\u7684\u76ee\u6807IP\u5730\u5740\u5206\u7c7b\uff0c\u540c\u4e00\u7c7b\u578b\u7684IP\u6570\u636e\u62a5\u5c06\u88ab\u53d1\u5f80\u76f8\u540c\u7684\u4e0b\u4e00\u8df3\u8def\u7531\u5668\uff08\u6216\u8005\u76ee\u6807\u673a\u5668\uff09\u3002","title":"IP\u8def\u7531"},{"location":"wiki/TCP_IP/#icmp","text":"8\u4f4d\u7c7b\u578b\u5b57\u6bb5\u7528\u4e8e\u533a\u5206\u62a5\u6587\u7c7b\u578b\u3002\u5b83\u5c06ICMP\u62a5\u6587\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a\u4e00\u7c7b\u662f\u5dee\u9519\u62a5\u6587\uff0c\u8fd9\u7c7b\u62a5\u6587\u4e3b\u8981\u7528\u6765\u56de\u5e94\u7f51\u7edc\u9519\u8bef\uff0c\u6bd4\u5982\u76ee\u6807\u4e0d\u53ef\u5230\u8fbe\uff08\u7c7b\u578b\u503c\u4e3a3\uff09\u548c\u91cd\u5b9a\u5411\uff08\u7c7b\u578b\u503c\u4e3a5\uff09\uff1b\u53e6\u4e00\u7c7b\u662f\u67e5\u8be2\u62a5\u6587\uff0c\u8fd9\u7c7b\u62a5\u6587\u7528\u6765\u67e5\u8be2\u7f51\u7edc\u4fe1\u606f\uff0c\u6bd4\u5982ping\u7a0b\u5e8f\u5c31\u662f\u4f7f\u7528ICMP\u62a5\u6587\u67e5\u770b\u76ee\u6807\u662f\u5426\u53ef\u5230\u8fbe\uff08\u7c7b\u578b\u503c\u4e3a8\uff09\u7684\u3002 \u4ee3\u7801\u5b57\u6bb5\u67094\u4e2a\u53ef\u9009\u503c\uff0c\u7528\u6765\u533a\u5206\u4e0d\u540c\u7684\u91cd\u5b9a\u5411\u7c7b\u578b\u3002\u4e3b\u673a\u91cd\u5b9a\u5411\u4ee3\u7801\u503c\u4e3a1\u3002 ICMP\u534f\u8bae\u7684\u6807\u51c6\u6587\u6863RFC 792\u3002","title":"ICMP"},{"location":"wiki/TCP_IP/#ipv6","text":"4\u4f4d\u7248\u672c\u53f7\uff08version\uff09\u6307\u5b9aIP\u534f\u8bae\u7684\u7248\u672c\u3002\u5bf9IPv6\u6765\u8bf4\uff0c\u5176\u503c\u662f6\u3002 8\u4f4d\u901a\u4fe1\u7c7b\u578b\uff08traffic class\uff09\u6307\u793a\u6570\u636e\u6d41\u901a\u4fe1\u7c7b\u578b\u6216\u4f18\u5148\u7ea7\uff0c\u548cIPv4\u4e2d\u7684TOS\u7c7b\u4f3c\u3002 20\u4f4d\u6d41\u6807\u7b7e\uff08flow label\uff09\u662fIPv6\u65b0\u589e\u52a0\u7684\u5b57\u6bb5\uff0c\u7528\u4e8e\u67d0\u4e9b\u5bf9\u8fde\u63a5\u7684\u670d\u52a1\u8d28\u91cf\u6709\u7279\u6b8a\u8981\u6c42\u7684\u901a\u4fe1\uff0c\u6bd4\u5982\u97f3\u9891\u6216\u89c6\u9891\u7b49\u5b9e\u65f6\u6570\u636e\u4f20\u8f93\u3002 16\u4f4d\u51c0\u8377\u957f\u5ea6\uff08payload length\uff09\u6307\u7684\u662fIPv6\u6269\u5c55\u5934\u90e8\u548c\u5e94\u7528\u7a0b\u5e8f\u6570\u636e\u957f\u5ea6\u4e4b\u548c\uff0c\u4e0d\u5305\u62ec\u56fa\u5b9a\u5934\u90e8\u957f\u5ea6\u3002 8\u4f4d\u4e0b\u4e00\u4e2a\u5305\u5934\uff08next header\uff09\u6307\u51fa\u7d27\u8ddfIPv6\u56fa\u5b9a\u5934\u90e8\u540e\u7684\u5305\u5934\u7c7b\u578b,\u5982\u6269\u5c55\u5934\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u6216\u67d0\u4e2a\u4e0a\u5c42\u534f\u8bae\u5934\uff08\u6bd4\u5982TCP\uff0cUDP\u6216ICMP\uff09\u3002 8\u4f4d\u8df3\u6570\u9650\u5236\uff08hop limit\uff09\u548cIPv4\u4e2d\u7684TTL\u542b\u4e49\u76f8\u540c\u3002 IPv6\u7528128\u4f4d\uff0816\u5b57\u8282\uff09\u6765\u8868\u793aIP\u5730\u5740","title":"IPV6"},{"location":"wiki/TCP_IP/#tcp","text":"\u9762\u5411\u8fde\u63a5\u3001\u5b57\u8282\u6d41\u548c\u53ef\u9760\u4f20\u8f93 - TCP\u534f\u8bae\u7684\u8fd9\u79cd\u8fde\u63a5\u662f\u4e00\u5bf9\u4e00\u7684\uff0c\u6240\u4ee5\u57fa\u4e8e\u5e7f\u64ad\u548c\u591a\u64ad\uff08\u76ee\u6807\u662f\u591a\u4e2a\u4e3b\u673a\u5730\u5740\uff09\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u80fd\u4f7f\u7528TCP\u670d\u52a1\u3002 TCP\u6a21\u5757\u53d1\u9001\u51fa\u7684TCP\u62a5\u6587\u6bb5\u7684\u4e2a\u6570\u548c\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u7684\u5199\u64cd\u4f5c\u6b21\u6570\u4e4b\u95f4\u6ca1\u6709\u56fa\u5b9a\u7684\u6570\u91cf\u5173\u7cfb\u3002 \u5f53\u63a5\u6536\u7aef\u6536\u5230\u4e00\u4e2a\u6216\u591a\u4e2aTCP\u62a5\u6587\u6bb5\u540e\uff0cTCP\u6a21\u5757\u5c06\u5b83\u4eec\u643a\u5e26\u7684\u5e94\u7528\u7a0b\u5e8f\u6570\u636e\u6309\u7167TCP\u62a5\u6587\u6bb5\u7684\u5e8f\u53f7\uff08\u89c1\u540e\u6587\uff09\u4f9d\u6b21\u653e\u5165TCP\u63a5\u6536\u7f13\u51b2\u533a\u4e2d\uff0c\u5e76\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u8bfb\u53d6\u6570\u636e\u3002 \u5b57\u8282\u6d41\u7684\u6982\u5ff5\uff1a\u5e94\u7528\u7a0b\u5e8f\u5bf9\u6570\u636e\u7684\u53d1\u9001\u548c\u63a5\u6536\u662f\u6ca1\u6709\u8fb9\u754c\u9650\u5236\u7684\u3002 UDP\u5219\u4e0d\u7136\u3002\u53d1\u9001\u7aef\u5e94\u7528\u7a0b\u5e8f\u6bcf\u6267\u884c\u4e00\u6b21\u5199\u64cd\u4f5c\uff0cUDP\u6a21\u5757\u5c31\u5c06\u5176\u5c01\u88c5\u6210\u4e00\u4e2aUDP\u6570\u636e\u62a5\u5e76\u53d1\u9001\u4e4b\u3002\u63a5\u6536\u7aef\u5fc5\u987b\u53ca\u65f6\u9488\u5bf9\u6bcf\u4e00\u4e2aUDP\u6570\u636e\u62a5\u6267\u884c\u8bfb\u64cd\u4f5c\uff08\u901a\u8fc7recvfrom\u7cfb\u7edf\u8c03\u7528\uff09\uff0c\u5426\u5219\u5c31\u4f1a\u4e22\u5305\uff08\u8fd9\u7ecf\u5e38\u53d1\u751f\u5728\u8f83\u6162\u7684\u670d\u52a1\u5668\u4e0a\uff09\u3002 TCP\u534f\u8bae\u91c7\u7528\u53d1\u9001\u5e94\u7b54\u673a\u5236\uff0c\u5373\u53d1\u9001\u7aef\u53d1\u9001\u7684\u6bcf\u4e2aTCP\u62a5\u6587\u6bb5\u90fd\u5fc5\u987b\u5f97\u5230\u63a5\u6536\u65b9\u7684\u5e94\u7b54 TCP\u534f\u8bae\u91c7\u7528\u8d85\u65f6\u91cd\u4f20\u673a\u5236\uff0c\u53d1\u9001\u7aef\u5728\u53d1\u9001\u51fa\u4e00\u4e2aTCP\u62a5\u6587\u6bb5\u4e4b\u540e\u542f\u52a8\u5b9a\u65f6\u5668\uff0c\u5982\u679c\u5728\u5b9a\u65f6\u65f6\u95f4\u5185\u672a\u6536\u5230\u5e94\u7b54\uff0c\u5b83\u5c06\u91cd\u53d1\u8be5\u62a5\u6587\u6bb5\u3002 TCP\u62a5\u6587\u6bb5\u6700\u7ec8\u662f\u4ee5IP\u6570\u636e\u62a5\u53d1\u9001\u7684\uff0c\u800cIP\u6570\u636e\u62a5\u5230\u8fbe\u63a5\u6536\u7aef\u53ef\u80fd\u4e71\u5e8f\u3001\u91cd\u590d\uff0c\u6240\u4ee5TCP\u534f\u8bae\u8fd8\u4f1a\u5bf9\u63a5\u6536\u5230\u7684TCP\u62a5\u6587\u6bb5\u91cd\u6392\u3001\u6574\u7406\uff0c\u518d\u4ea4\u4ed8\u7ed9\u5e94\u7528\u5c42\u3002 16\u4f4d\u7aef\u53e3\u53f7\uff08port number\uff09\uff1a\u544a\u77e5\u4e3b\u673a\u8be5\u62a5\u6587\u6bb5\u662f\u6765\u81ea\u54ea\u91cc\uff08\u6e90\u7aef\u53e3\uff09\u4ee5\u53ca\u4f20\u7ed9\u54ea\u4e2a\u4e0a\u5c42\u534f\u8bae\u6216\u5e94\u7528\u7a0b\u5e8f\uff08\u76ee\u7684\u7aef\u53e3\uff09\u7684\u3002 32\u4f4d\u5e8f\u53f7\uff08sequence number\uff09\uff1a\u4e00\u6b21TCP\u901a\u4fe1\uff08\u4eceTCP\u8fde\u63a5\u5efa\u7acb\u5230\u65ad\u5f00\uff09\u8fc7\u7a0b\u4e2d\u67d0\u4e00\u4e2a\u4f20\u8f93\u65b9\u5411\u4e0a\u7684\u5b57\u8282\u6d41\u7684\u6bcf\u4e2a\u5b57\u8282\u7684\u7f16\u53f7\u3002A\u53d1\u9001\u7ed9B\u7684\u7b2c\u4e00\u4e2aTCP\u62a5\u6587\u6bb5\u4e2d\uff0c\u5e8f\u53f7\u503c\u88ab\u7cfb\u7edf\u521d\u59cb\u5316\u4e3a\u67d0\u4e2a\u968f\u673a\u503cISN\uff08Initial Sequence Number\uff0c\u521d\u59cb\u5e8f\u53f7\u503c\uff09\u3002\u90a3\u4e48\u5728\u8be5\u4f20\u8f93\u65b9\u5411\u4e0a\uff08\u4eceA\u5230B\uff09\uff0c\u540e\u7eed\u7684TCP\u62a5\u6587\u6bb5\u4e2d\u5e8f\u53f7\u503c\u5c06\u88ab\u7cfb\u7edf\u8bbe\u7f6e\u6210ISN\u52a0\u4e0a\u8be5\u62a5\u6587\u6bb5\u6240\u643a\u5e26\u6570\u636e\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\u5728\u6574\u4e2a\u5b57\u8282\u6d41\u4e2d\u7684\u504f\u79fb\u3002 32\u4f4d\u786e\u8ba4\u53f7\uff08acknowledgement number\uff09\uff1a\u7528\u4f5c\u5bf9\u53e6\u4e00\u65b9\u53d1\u9001\u6765\u7684TCP\u62a5\u6587\u6bb5\u7684\u54cd\u5e94\u3002\u5176\u503c\u662f\u6536\u5230\u7684TCP\u62a5\u6587\u6bb5\u7684\u5e8f\u53f7\u503c\u52a01\u3002 4\u4f4d\u5934\u90e8\u957f\u5ea6\uff08header length\uff09\uff1a\u6807\u8bc6\u8be5TCP\u5934\u90e8\u6709\u591a\u5c11\u4e2a32bit\u5b57 6\u4f4d\u6807\u5fd7\u4f4d URG\u6807\u5fd7\uff0c\u8868\u793a\u7d27\u6025\u6307\u9488\uff08urgent pointer\uff09\u662f\u5426\u6709\u6548\u3002 ACK\u6807\u5fd7\uff0c\u8868\u793a\u786e\u8ba4\u53f7\u662f\u5426\u6709\u6548\u3002\u6211\u4eec\u79f0\u643a\u5e26ACK\u6807\u5fd7\u7684TCP\u62a5\u6587\u6bb5\u4e3a\u786e\u8ba4\u62a5\u6587\u6bb5\u3002 PSH\u6807\u5fd7\uff0c\u63d0\u793a\u63a5\u6536\u7aef\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u7acb\u5373\u4eceTCP\u63a5\u6536\u7f13\u51b2\u533a\u4e2d\u8bfb\u8d70\u6570\u636e\uff0c\u4e3a\u63a5\u6536\u540e\u7eed\u6570\u636e\u817e\u51fa\u7a7a\u95f4\uff08\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u4e0d\u5c06\u63a5\u6536\u5230\u7684\u6570\u636e\u8bfb\u8d70\uff0c\u5b83\u4eec\u5c31\u4f1a\u4e00\u76f4\u505c\u7559\u5728TCP\u63a5\u6536\u7f13\u51b2\u533a\u4e2d\uff09\u3002 RST\u6807\u5fd7\uff0c\u8868\u793a\u8981\u6c42\u5bf9\u65b9\u91cd\u65b0\u5efa\u7acb\u8fde\u63a5\u3002\u6211\u4eec\u79f0\u643a\u5e26RST\u6807\u5fd7\u7684TCP\u62a5\u6587\u6bb5\u4e3a\u590d\u4f4d\u62a5\u6587\u6bb5\u3002 SYN\u6807\u5fd7\uff0c\u8868\u793a\u8bf7\u6c42\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\u3002\u6211\u4eec\u79f0\u643a\u5e26SYN\u6807\u5fd7\u7684TCP\u62a5\u6587\u6bb5\u4e3a\u540c\u6b65\u62a5\u6587\u6bb5\u3002 FIN\u6807\u5fd7\uff0c\u8868\u793a\u901a\u77e5\u5bf9\u65b9\u672c\u7aef\u8981\u5173\u95ed\u8fde\u63a5\u4e86\u3002\u6211\u4eec\u79f0\u643a\u5e26FIN\u6807\u5fd7\u7684TCP\u62a5\u6587\u6bb5\u4e3a\u7ed3\u675f\u62a5\u6587\u6bb5\u3002 16\u4f4d\u7a97\u53e3\u5927\u5c0f\uff08window size\uff09\uff1a\u662fTCP\u6d41\u91cf\u63a7\u5236\u7684\u4e00\u4e2a\u624b\u6bb5\u3002\u8fd9\u91cc\u8bf4\u7684\u7a97\u53e3\uff0c\u6307\u7684\u662f\u63a5\u6536\u901a\u544a\u7a97\u53e3\uff08Receiver Window\uff0cRWND\uff09\u3002\u5b83\u544a\u8bc9\u5bf9\u65b9\u672c\u7aef\u7684TCP\u63a5\u6536\u7f13\u51b2\u533a\u8fd8\u80fd\u5bb9\u7eb3\u591a\u5c11\u5b57\u8282\u7684\u6570\u636e\uff0c\u8fd9\u6837\u5bf9\u65b9\u5c31\u53ef\u4ee5\u63a7\u5236\u53d1\u9001\u6570\u636e\u7684\u901f\u5ea6\u3002 16\u4f4d\u6821\u9a8c\u548c\uff08TCP checksum\uff09\uff1a\u7531\u53d1\u9001\u7aef\u586b\u5145\uff0c\u63a5\u6536\u7aef\u5bf9TCP\u62a5\u6587\u6bb5\u6267\u884cCRC\u7b97\u6cd5\u4ee5\u68c0\u9a8cTCP\u62a5\u6587\u6bb5\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u662f\u5426\u635f\u574f\u3002\u6ce8\u610f\uff0c\u8fd9\u4e2a\u6821\u9a8c\u4e0d\u4ec5\u5305\u62ecTCP\u5934\u90e8\uff0c\u4e5f\u5305\u62ec\u6570\u636e\u90e8\u5206\u3002 16\u4f4d\u7d27\u6025\u6307\u9488\uff08urgent pointer\uff09\uff1a\u662f\u4e00\u4e2a\u6b63\u7684\u504f\u79fb\u91cf\u3002\u5b83\u548c\u5e8f\u53f7\u5b57\u6bb5\u7684\u503c\u76f8\u52a0\u8868\u793a\u6700\u540e\u4e00\u4e2a\u7d27\u6025\u6570\u636e\u7684\u4e0b\u4e00\u5b57\u8282\u7684\u5e8f\u53f7\u3002 option \u9009\u9879\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bb5kind\u8bf4\u660e\u9009\u9879\u7684\u7c7b\u578b\u3002\u6709\u7684TCP\u9009\u9879\u6ca1\u6709\u540e\u9762\u4e24\u4e2a\u5b57\u6bb5\uff0c\u4ec5\u5305\u542b1\u5b57\u8282\u7684kind\u5b57\u6bb5\u3002 \u7b2c\u4e8c\u4e2a\u5b57\u6bb5length\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u6307\u5b9a\u8be5\u9009\u9879\u7684\u603b\u957f\u5ea6\uff0c\u8be5\u957f\u5ea6\u5305\u62eckind\u5b57\u6bb5\u548clength\u5b57\u6bb5\u5360\u636e\u76842\u5b57\u8282\u3002 \u7b2c\u4e09\u4e2a\u5b57\u6bb5info\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u662f\u9009\u9879\u7684\u5177\u4f53\u4fe1\u606f\u3002 kind=0\u662f\u9009\u9879\u8868\u7ed3\u675f\u9009\u9879\u3002 kind=1\u662f\u7a7a\u64cd\u4f5c\uff08nop\uff09\u9009\u9879\uff0c\u6ca1\u6709\u7279\u6b8a\u542b\u4e49\uff0c\u4e00\u822c\u7528\u4e8e\u5c06TCP\u9009\u9879\u7684\u603b\u957f\u5ea6\u586b\u5145\u4e3a4\u5b57\u8282\u7684\u6574\u6570\u500d\u3002 kind=2\u662f\u6700\u5927\u62a5\u6587\u6bb5\u957f\u5ea6\u9009\u9879\u3002TCP\u8fde\u63a5\u521d\u59cb\u5316\u65f6\uff0c\u901a\u4fe1\u53cc\u65b9\u4f7f\u7528\u8be5\u9009\u9879\u6765\u534f\u5546\u6700\u5927\u62a5\u6587\u6bb5\u957f\u5ea6\uff08Max Segment Size\uff0cMSS\uff09\u3002TCP\u6a21\u5757\u901a\u5e38\u5c06MSS\u8bbe\u7f6e\u4e3a\uff08MTU-40\uff09\u5b57\u8282 kind=3\u662f\u7a97\u53e3\u6269\u5927\u56e0\u5b50\u9009\u9879\u3002TCP\u8fde\u63a5\u521d\u59cb\u5316\u65f6\uff0c\u901a\u4fe1\u53cc\u65b9\u4f7f\u7528\u8be5\u9009\u9879\u6765\u534f\u5546\u63a5\u6536\u901a\u544a\u7a97\u53e3\u7684\u6269\u5927\u56e0\u5b50\u3002\u5047\u8bbeTCP\u5934\u90e8\u4e2d\u7684\u63a5\u6536\u901a\u544a\u7a97\u53e3\u5927\u5c0f\u662fN\uff0c\u7a97\u53e3\u6269\u5927\u56e0\u5b50\uff08\u79fb\u4f4d\u6570\uff09\u662fM\uff0c\u90a3\u4e48TCP\u62a5\u6587\u6bb5\u7684\u5b9e\u9645\u63a5\u6536\u901a\u544a\u7a97\u53e3\u5927\u5c0f\u662fN\u4e582M \uff0c\u6216\u8005\u8bf4N\u5de6\u79fbM\u4f4d\u3002\u6ce8\u610f\uff0cM\u7684\u53d6\u503c\u8303\u56f4\u662f0\uff5e14\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539/proc/sys/net/ipv4/tcp_window_scaling\u5185\u6838\u53d8\u91cf\u6765\u542f\u7528\u6216\u5173\u95ed\u7a97\u53e3\u6269\u5927\u56e0\u5b50\u9009\u9879\u3002 kind=4\u662f\u9009\u62e9\u6027\u786e\u8ba4\uff08Selective Acknowledgment\uff0cSACK\uff09\u9009\u9879\u3002TCP\u901a\u4fe1\u65f6\uff0c\u5982\u679c\u67d0\u4e2aTCP\u62a5\u6587\u6bb5\u4e22\u5931\uff0c\u5219TCP\u6a21\u5757\u4f1a\u91cd\u4f20\u6700\u540e\u88ab\u786e\u8ba4\u7684TCP\u62a5\u6587\u6bb5\u540e\u7eed\u7684\u6240\u6709\u62a5\u6587\u6bb5\uff0c\u8fd9\u6837\u539f\u5148\u5df2\u7ecf\u6b63\u786e\u4f20\u8f93\u7684TCP\u62a5\u6587\u6bb5\u4e5f\u53ef\u80fd\u91cd\u590d\u53d1\u9001\uff0c\u4ece\u800c\u964d\u4f4e\u4e86TCP\u6027\u80fd\u3002 kind=5\u662fSACK\u5b9e\u9645\u5de5\u4f5c\u7684\u9009\u9879\u3002\u8be5\u9009\u9879\u7684\u53c2\u6570\u544a\u8bc9\u53d1\u9001\u65b9\u672c\u7aef\u5df2\u7ecf\u6536\u5230\u5e76\u7f13\u5b58\u7684\u4e0d\u8fde\u7eed\u7684\u6570\u636e\u5757\uff0c\u4ece\u800c\u8ba9\u53d1\u9001\u7aef\u53ef\u4ee5\u636e\u6b64\u68c0\u67e5\u5e76\u91cd\u53d1\u4e22\u5931\u7684\u6570\u636e\u5757\u3002 kind=8\u662f\u65f6\u95f4\u6233\u9009\u9879\u3002\u8be5\u9009\u9879\u63d0\u4f9b\u4e86\u8f83\u4e3a\u51c6\u786e\u7684\u8ba1\u7b97\u901a\u4fe1\u53cc\u65b9\u4e4b\u95f4\u7684\u56de\u8def\u65f6\u95f4\uff08Round Trip Time\uff0cRTT\uff09\u7684\u65b9\u6cd5\uff0c\u4ece\u800c\u4e3aTCP\u6d41\u91cf\u63a7\u5236\u63d0\u4f9b\u91cd\u8981\u4fe1\u606f\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539/proc/sys/net/ipv4/tcp_timestamps\u5185\u6838\u53d8\u91cf\u6765\u542f\u7528\u6216\u5173\u95ed\u65f6\u95f4\u6233\u9009\u9879\u3002","title":"TCP"},{"location":"wiki/TCP_IP/#tcp\u8fde\u63a5\u7684\u5efa\u7acb\u548c\u5173\u95ed","text":"\u7b2c1\u4e2aTCP\u62a5\u6587\u6bb5\u5305\u542bSYN\u6807\u5fd7\uff0c\u56e0\u6b64\u5b83\u662f\u4e00\u4e2a\u540c\u6b65\u62a5\u6587\u6bb5 \u7b2c2\u4e2aTCP\u62a5\u6587\u6bb5\u4e5f\u662f\u540c\u6b65\u62a5\u6587\u6bb5 \u7b2c3\u4e2aTCP\u62a5\u6587\u6bb5\u662fernest-laptop\u5bf9\u7b2c2\u4e2a\u540c\u6b65\u62a5\u6587\u6bb5\u7684\u786e\u8ba4 \u4ece\u7b2c3\u4e2aTCP\u62a5\u6587\u6bb5\u5f00\u59cb\uff0ctcpdump\u8f93\u51fa\u7684\u5e8f\u53f7\u503c\u548c\u786e\u8ba4\u503c\u90fd\u662f\u76f8\u5bf9\u521d\u59cbISN\u503c\u7684\u504f\u79fb\u3002\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u542ftcpdump\u7684-S\u9009\u9879\u6765\u9009\u62e9\u6253\u5370\u5e8f\u53f7\u7684\u7edd\u5bf9\u503c\u3002 \u7b2c4\u4e2aTCP\u62a5\u6587\u6bb5\u5305\u542bFIN\u6807\u5fd7\uff0c\u56e0\u6b64\u5b83\u662f\u4e00\u4e2a\u7ed3\u675f\u62a5\u6587\u6bb5 \u7528TCP\u62a5\u6587\u6bb55\u6765\u786e\u8ba4\u8be5\u7ed3\u675f\u62a5\u6587\u6bb5\u3002 \u53d1\u9001\u81ea\u5df1\u7684\u7ed3\u675f\u62a5\u6587\u6bb56 \u7528TCP\u62a5\u6587\u6bb57\u7ed9\u4e88\u786e\u8ba4","title":"TCP\u8fde\u63a5\u7684\u5efa\u7acb\u548c\u5173\u95ed"},{"location":"wiki/TCP_IP/#\u534a\u5173\u95ed\u72b6\u6001","text":"TCP\u8fde\u63a5\u662f\u5168\u53cc\u5de5\u7684\uff0c\u6240\u4ee5\u5b83\u5141\u8bb8\u4e24\u4e2a\u65b9\u5411\u7684\u6570\u636e\u4f20\u8f93\u88ab\u72ec\u7acb\u5173\u95ed\u3002 \u901a\u4fe1\u7684\u4e00\u7aef\u53ef\u4ee5\u53d1\u9001\u7ed3\u675f\u62a5\u6587\u6bb5\u7ed9\u5bf9\u65b9\uff0c\u544a\u8bc9\u5b83\u672c\u7aef\u5df2\u7ecf\u5b8c\u6210\u4e86\u6570\u636e\u7684\u53d1\u9001\uff0c\u4f46\u5141\u8bb8\u7ee7\u7eed\u63a5\u6536\u6765\u81ea\u5bf9\u65b9\u7684\u6570\u636e\uff0c\u76f4\u5230\u5bf9\u65b9\u4e5f\u53d1\u9001\u7ed3\u675f\u62a5\u6587\u6bb5\u4ee5\u5173\u95ed\u8fde\u63a5\u3002TCP\u8fde\u63a5\u7684\u8fd9\u79cd\u72b6\u6001\u79f0\u4e3a\u534a\u5173\u95ed\uff08half close\uff09\u72b6\u6001\uff0c","title":"\u534a\u5173\u95ed\u72b6\u6001"},{"location":"wiki/TCP_IP/#\u8fde\u63a5\u8d85\u65f6","text":"TCP\u62a5\u6587\u6bb5\u7684\u8d85\u65f6\u65f6\u95f4\u662f32s\uff0863s-16s-8s-4s-2s-1s\uff09 TCP\u6a21\u5757\u4e00\u5171\u6267\u884c\u4e865\u6b21\u91cd\u8fde\u64cd\u4f5c \u7531/proc/sys/net/ipv4/tcp_syn_retries\u5185\u6838\u53d8\u91cf\u6240\u5b9a\u4e49\u7684\u3002","title":"\u8fde\u63a5\u8d85\u65f6"},{"location":"wiki/TCP_IP/#tcp\u72b6\u6001\u8f6c\u79fb","text":"Linux\u4e3a\u4e86\u9632\u6b62\u5b64\u513f\u8fde\u63a5\u957f\u65f6\u95f4\u5b58\u7559\u5728\u5185\u6838\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e24\u4e2a\u5185\u6838\u53d8\u91cf\uff1a - /proc/sys/net/ipv4/tcp_max_orphans\u6307\u5b9a\u5185\u6838\u80fd\u63a5\u7ba1\u7684\u5b64\u513f\u8fde\u63a5\u6570\u76ee - /proc/sys/net/ipv4/tcp_fin_timeout\u6307\u5b9a\u5b64\u513f\u8fde\u63a5\u5728\u5185\u6838\u4e2d\u751f\u5b58\u7684\u65f6\u95f4","title":"TCP\u72b6\u6001\u8f6c\u79fb"},{"location":"wiki/TCP_IP/#\u590d\u4f4d\u62a5\u6587\u6bb5","text":"TCP\u8fde\u63a5\u7684\u4e00\u7aef\u4f1a\u5411\u53e6\u4e00\u7aef\u53d1\u9001\u643a\u5e26RST\u6807\u5fd7\u7684\u62a5\u6587\u6bb5\uff0c\u5373\u590d\u4f4d\u62a5\u6587\u6bb5\uff0c\u4ee5\u901a\u77e5\u5bf9\u65b9\u5173\u95ed\u8fde\u63a5\u6216\u91cd\u65b0\u5efa\u7acb\u8fde\u63a5\u3002 \u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528socket\u9009\u9879SO_LINGER\u6765\u53d1\u9001\u590d\u4f4d\u62a5\u6587\u6bb5\uff0c\u4ee5\u5f02\u5e38\u7ec8\u6b62\u4e00\u4e2a\u8fde\u63a5\u3002","title":"\u590d\u4f4d\u62a5\u6587\u6bb5"},{"location":"wiki/TCP_IP/#tcp\u4ea4\u4e92\u6570\u636e\u6d41","text":"Nagle\u7b97\u6cd5\u8981\u6c42\u4e00\u4e2aTCP\u8fde\u63a5\u7684\u901a\u4fe1\u53cc\u65b9\u5728\u4efb\u610f\u65f6\u523b\u90fd\u6700\u591a\u53ea\u80fd\u53d1\u9001\u4e00\u4e2a\u672a\u88ab\u786e\u8ba4\u7684TCP\u62a5\u6587\u6bb5\uff0c\u5728\u8be5TCP\u62a5\u6587\u6bb5\u7684\u786e\u8ba4\u5230\u8fbe\u4e4b\u524d\u4e0d\u80fd\u53d1\u9001\u5176\u4ed6TCP\u62a5\u6587\u6bb5\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u53d1\u9001\u65b9\u5728\u7b49\u5f85\u786e\u8ba4\u7684\u540c\u65f6\u6536\u96c6\u672c\u7aef\u9700\u8981\u53d1\u9001\u7684\u5fae\u91cf\u6570\u636e\uff0c\u5e76\u5728\u786e\u8ba4\u5230\u6765\u65f6\u4ee5\u4e00\u4e2aTCP\u62a5\u6587\u6bb5\u5c06\u5b83\u4eec\u5168\u90e8\u53d1\u51fa\u3002\u8fd9\u6837\u5c31\u6781\u5927\u5730\u51cf\u5c11\u4e86\u7f51\u7edc\u4e0a\u7684\u5fae\u5c0fTCP\u62a5\u6587\u6bb5\u7684\u6570\u91cf\u3002","title":"TCP\u4ea4\u4e92\u6570\u636e\u6d41"},{"location":"wiki/TCP_IP/#\u5e26\u5916\u6570\u636e","text":"\u5e26\u5916\uff08Out Of Band\uff0cOOB\uff09\u6570\u636e\u7684\u6982\u5ff5\uff0c\u7528\u4e8e\u8fc5\u901f\u901a\u544a\u5bf9\u65b9\u672c\u7aef\u53d1\u751f\u7684\u91cd\u8981\u4e8b\u4ef6\u3002 \u5e26\u5916\u6570\u636e\u7684\u4f7f\u7528\u5f88\u5c11\u89c1\uff0c\u5df2\u77e5\u7684\u4ec5\u6709telnet\u3001ftp\u7b49\u8fdc\u7a0b\u975e\u6d3b\u8dc3\u7a0b\u5e8f\u3002","title":"\u5e26\u5916\u6570\u636e"},{"location":"wiki/TCP_IP/#tcp\u8d85\u65f6\u91cd\u4f20","text":"TCP\u670d\u52a1\u5fc5\u987b\u80fd\u591f\u91cd\u4f20\u8d85\u65f6\u65f6\u95f4\u5185\u672a\u6536\u5230\u786e\u8ba4\u7684TCP\u62a5\u6587\u6bb5\u3002\u4e3a\u6b64\uff0cTCP\u6a21\u5757\u4e3a\u6bcf\u4e2aTCP\u62a5\u6587\u6bb5\u90fd\u7ef4\u62a4\u4e00\u4e2a\u91cd\u4f20\u5b9a\u65f6\u5668\uff0c\u8be5\u5b9a\u65f6\u5668\u5728TCP\u62a5\u6587\u6bb5\u7b2c\u4e00\u6b21\u88ab\u53d1\u9001\u65f6\u542f\u52a8\u3002\u5982\u679c\u8d85\u65f6\u65f6\u95f4\u5185\u672a\u6536\u5230\u63a5\u6536\u65b9\u7684\u5e94\u7b54\uff0cTCP\u6a21\u5757\u5c06\u91cd\u4f20TCP\u62a5\u6587\u6bb5\u5e76\u91cd\u7f6e\u5b9a\u65f6\u5668\u3002\u81f3\u4e8e\u4e0b\u6b21\u91cd\u4f20\u7684\u8d85\u65f6\u65f6\u95f4\u5982\u4f55\u9009\u62e9\uff0c\u4ee5\u53ca\u6700\u591a\u6267\u884c\u591a\u5c11\u6b21\u91cd\u4f20\uff0c\u5c31\u662fTCP\u7684\u91cd\u4f20\u7b56\u7565\u3002 /proc/sys/net/ipv4/tcp_retries1\u6307\u5b9a\u5728\u5e95\u5c42IP\u63a5\u7ba1\u4e4b\u524dTCP\u6700\u5c11\u6267\u884c\u7684\u91cd\u4f20\u6b21\u6570\uff0c\u9ed8\u8ba4\u503c\u662f3\u3002 /proc/sys/net/ipv4/tcp_retries2\u6307\u5b9a\u8fde\u63a5\u653e\u5f03\u524dTCP\u6700\u591a\u53ef\u4ee5\u6267\u884c\u7684\u91cd\u4f20\u6b21\u6570\uff0c\u9ed8\u8ba4\u503c\u662f15\uff08\u4e00\u822c\u5bf9\u5e9413\uff5e30 min\uff09\u3002","title":"TCP\u8d85\u65f6\u91cd\u4f20"},{"location":"wiki/TCP_IP/#\u62e5\u585e\u63a7\u5236","text":"\u62e5\u585e\u63a7\u5236\u7684\u56db\u4e2a\u90e8\u5206\uff1a\u6162\u542f\u52a8\uff08slow start\uff09\u3001\u62e5\u585e\u907f\u514d\uff08congestion avoidance\uff09\u3001\u5feb\u901f\u91cd\u4f20\uff08fast retransmit\uff09\u548c\u5feb\u901f\u6062\u590d\uff08fast recovery\uff09\u3002 \u62e5\u585e\u63a7\u5236\u7b97\u6cd5\u5728Linux\u4e0b\u6709\u591a\u79cd\u5b9e\u73b0\uff0c\u6bd4\u5982reno\u7b97\u6cd5\u3001vegas\u7b97\u6cd5\u548ccubic\u7b97\u6cd5\u7b49\u3002\u5b83\u4eec\u6216\u8005\u90e8\u5206\u6216\u8005\u5168\u90e8\u5b9e\u73b0\u4e86\u4e0a\u8ff0\u56db\u4e2a\u90e8\u5206\u3002 /proc/sys/net/ipv4/tcp_congestion_control\u6587\u4ef6\u6307\u793a\u673a\u5668\u5f53\u524d\u6240\u4f7f\u7528\u7684\u62e5\u585e\u63a7\u5236\u7b97\u6cd5\u3002","title":"\u62e5\u585e\u63a7\u5236"},{"location":"wiki/aes/","text":"AES # \u9ad8\u7ea7\u52a0\u5bc6\u6807\u51c6\uff08\u82f1\u8bed\uff1aAdvanced Encryption Standard\uff0c\u7f29\u5199\uff1aAES\uff09\uff0c\u5728\u5bc6\u7801\u5b66\u4e2d\u53c8\u79f0Rijndael\u52a0\u5bc6\u6cd5\uff0c\u662f\u7f8e\u56fd\u8054\u90a6\u653f\u5e9c\u91c7\u7528\u7684\u4e00\u79cd\u533a\u5757\u52a0\u5bc6\u6807\u51c6\u3002\u8fd9\u4e2a\u6807\u51c6\u7528\u6765\u66ff\u4ee3\u539f\u5148\u7684DES\uff0c\u5df2\u7ecf\u88ab\u591a\u65b9\u5206\u6790\u4e14\u5e7f\u4e3a\u5168\u4e16\u754c\u6240\u4f7f\u7528\u3002\u7ecf\u8fc7\u4e94\u5e74\u7684\u7504\u9009\u6d41\u7a0b\uff0c\u9ad8\u7ea7\u52a0\u5bc6\u6807\u51c6\u7531\u7f8e\u56fd\u56fd\u5bb6\u6807\u51c6\u4e0e\u6280\u672f\u7814\u7a76\u9662\uff08NIST\uff09\u4e8e2001\u5e7411\u670826\u65e5\u53d1\u5e03\u4e8eFIPS PUB 197\uff0c\u5e76\u57282002\u5e745\u670826\u65e5\u6210\u4e3a\u6709\u6548\u7684\u6807\u51c6\u30022006\u5e74\uff0c\u9ad8\u7ea7\u52a0\u5bc6\u6807\u51c6\u5df2\u7136\u6210\u4e3a\u5bf9\u79f0\u5bc6\u94a5\u52a0\u5bc6\u4e2d\u6700\u6d41\u884c\u7684\u7b97\u6cd5\u4e4b\u4e00\u3002 AES\u52a0\u5bc6\u4e5f\u53eb\u5bf9\u79f0\u52a0\u5bc6\uff1aA\u7528\u5bc6\u7801\u5bf9\u6570\u636e\u8fdb\u884cAES\u52a0\u5bc6\u540e\uff0cB\u7528\u540c\u6837\u7684\u5bc6\u7801\u5bf9\u5bc6\u6587\u8fdb\u884cAES\u89e3\u5bc6\u3002 \u57fa\u672c\u52a0\u5bc6\u89e3\u5bc6\u6587\u672c\u547d\u4ee4 openssl enc -aes-256-cbc -in plain.txt -out secure.txt -p enter aes-256-cbc encryption password: Verifying - enter aes-256-cbc encryption password: salt = 3A46ADF7C82AE59A key = 67280929EB69F4C49733A32E4850A3B65A50C1860158F6B9BBF2CE9F9AACBB59 iv = 72EBD765FEB94E3760EFC7E1FFBB5EB6 openssl enc -aes-256-cbc -d -in secure.txt -out secure.txt.out -p enter aes-256-cbc decryption password: salt = 3A46ADF7C82AE59A key = 67280929EB69F4C49733A32E4850A3B65A50C1860158F6B9BBF2CE9F9AACBB59 iv = 72EBD765FEB94E3760EFC7E1FFBB5EB6","title":"Aes"},{"location":"wiki/aes/#aes","text":"\u9ad8\u7ea7\u52a0\u5bc6\u6807\u51c6\uff08\u82f1\u8bed\uff1aAdvanced Encryption Standard\uff0c\u7f29\u5199\uff1aAES\uff09\uff0c\u5728\u5bc6\u7801\u5b66\u4e2d\u53c8\u79f0Rijndael\u52a0\u5bc6\u6cd5\uff0c\u662f\u7f8e\u56fd\u8054\u90a6\u653f\u5e9c\u91c7\u7528\u7684\u4e00\u79cd\u533a\u5757\u52a0\u5bc6\u6807\u51c6\u3002\u8fd9\u4e2a\u6807\u51c6\u7528\u6765\u66ff\u4ee3\u539f\u5148\u7684DES\uff0c\u5df2\u7ecf\u88ab\u591a\u65b9\u5206\u6790\u4e14\u5e7f\u4e3a\u5168\u4e16\u754c\u6240\u4f7f\u7528\u3002\u7ecf\u8fc7\u4e94\u5e74\u7684\u7504\u9009\u6d41\u7a0b\uff0c\u9ad8\u7ea7\u52a0\u5bc6\u6807\u51c6\u7531\u7f8e\u56fd\u56fd\u5bb6\u6807\u51c6\u4e0e\u6280\u672f\u7814\u7a76\u9662\uff08NIST\uff09\u4e8e2001\u5e7411\u670826\u65e5\u53d1\u5e03\u4e8eFIPS PUB 197\uff0c\u5e76\u57282002\u5e745\u670826\u65e5\u6210\u4e3a\u6709\u6548\u7684\u6807\u51c6\u30022006\u5e74\uff0c\u9ad8\u7ea7\u52a0\u5bc6\u6807\u51c6\u5df2\u7136\u6210\u4e3a\u5bf9\u79f0\u5bc6\u94a5\u52a0\u5bc6\u4e2d\u6700\u6d41\u884c\u7684\u7b97\u6cd5\u4e4b\u4e00\u3002 AES\u52a0\u5bc6\u4e5f\u53eb\u5bf9\u79f0\u52a0\u5bc6\uff1aA\u7528\u5bc6\u7801\u5bf9\u6570\u636e\u8fdb\u884cAES\u52a0\u5bc6\u540e\uff0cB\u7528\u540c\u6837\u7684\u5bc6\u7801\u5bf9\u5bc6\u6587\u8fdb\u884cAES\u89e3\u5bc6\u3002 \u57fa\u672c\u52a0\u5bc6\u89e3\u5bc6\u6587\u672c\u547d\u4ee4 openssl enc -aes-256-cbc -in plain.txt -out secure.txt -p enter aes-256-cbc encryption password: Verifying - enter aes-256-cbc encryption password: salt = 3A46ADF7C82AE59A key = 67280929EB69F4C49733A32E4850A3B65A50C1860158F6B9BBF2CE9F9AACBB59 iv = 72EBD765FEB94E3760EFC7E1FFBB5EB6 openssl enc -aes-256-cbc -d -in secure.txt -out secure.txt.out -p enter aes-256-cbc decryption password: salt = 3A46ADF7C82AE59A key = 67280929EB69F4C49733A32E4850A3B65A50C1860158F6B9BBF2CE9F9AACBB59 iv = 72EBD765FEB94E3760EFC7E1FFBB5EB6","title":"AES"},{"location":"wiki/altera/","text":"Altera FPGA\u5de5\u7a0b\u4e2d\uff0c\u5e38\u89c1\u7684\u6587\u4ef6\u7c7b\u578b\u53ca\u5176\u4f5c\u7528\u5982\u4e0b\uff1a .qpf\u6587\u4ef6 \uff08Quartus Project File\uff09\uff1a \u4f5c\u7528 \uff1a\u8fd9\u662fQuartus\u5de5\u7a0b\u6587\u4ef6\uff0c\u5305\u542b\u5de5\u7a0b\u7684\u57fa\u672c\u4fe1\u606f\u548c\u8bbe\u7f6e\u3002\u6253\u5f00\u8fd9\u4e2a\u6587\u4ef6\u53ef\u4ee5\u52a0\u8f7d\u6574\u4e2a\u5de5\u7a0b\u3002 .qsf\u6587\u4ef6 \uff08Quartus Settings File\uff09\uff1a \u4f5c\u7528 \uff1a\u8fd9\u662fQuartus\u8bbe\u7f6e\u6587\u4ef6\uff0c\u5305\u542b\u5de5\u7a0b\u7684\u8be6\u7ec6\u8bbe\u7f6e\u548c\u7ea6\u675f\u4fe1\u606f\uff0c\u5982\u5f15\u811a\u5206\u914d\u3001\u65f6\u5e8f\u7ea6\u675f\u7b49\u3002 .v\u6216.vhd\u6587\u4ef6 \uff08Verilog\u6216VHDL\u6587\u4ef6\uff09\uff1a \u4f5c\u7528 \uff1a\u8fd9\u4e9b\u662f\u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00\u6587\u4ef6\uff0c\u7528\u4e8e\u63cf\u8ff0FPGA\u7684\u903b\u8f91\u8bbe\u8ba1\u3002Verilog\u6587\u4ef6\u4ee5.v\u4e3a\u540e\u7f00\uff0cVHDL\u6587\u4ef6\u4ee5.vhd\u4e3a\u540e\u7f00\u3002 .sdc\u6587\u4ef6 \uff08Synopsys Design Constraints File\uff09\uff1a \u4f5c\u7528 \uff1a\u8fd9\u662f\u65f6\u5e8f\u7ea6\u675f\u6587\u4ef6\uff0c\u7528\u4e8e\u5b9a\u4e49\u8bbe\u8ba1\u7684\u65f6\u5e8f\u7ea6\u675f\uff0c\u5982\u65f6\u949f\u9891\u7387\u3001\u8f93\u5165\u8f93\u51fa\u5ef6\u8fdf\u7b49\u3002 .sof\u6587\u4ef6 \uff08SRAM Object File\uff09\uff1a \u4f5c\u7528 \uff1a\u8fd9\u662f\u7f16\u8bd1\u751f\u6210\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7JTAG\u63a5\u53e3\u4e0b\u8f7d\u5230FPGA\u7684SRAM\u4e2d\u8fdb\u884c\u4e34\u65f6\u914d\u7f6e\u3002 .pof\u6587\u4ef6 \uff08Programmer Object File\uff09\uff1a \u4f5c\u7528 \uff1a\u8fd9\u662f\u7f16\u8bd1\u751f\u6210\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u7528\u4e8e\u901a\u8fc7\u914d\u7f6e\u82af\u7247\u8fdb\u884c\u6c38\u4e45\u914d\u7f6e\u3002 .jic\u6587\u4ef6 \uff08JTAG Indirect Configuration File\uff09\uff1a \u4f5c\u7528 \uff1a\u8fd9\u662f\u901a\u8fc7Quartus II\u8f6f\u4ef6\u7684\u201cConvert Programming File\u201d\u529f\u80fd\u751f\u6210\u7684\u6587\u4ef6\uff0c\u7528\u4e8e\u901a\u8fc7JTAG\u63a5\u53e3\u95f4\u63a5\u914d\u7f6eFPGA\u3002","title":"Altera"},{"location":"wiki/k8s/","text":"To list all the running nodes: kubectl get nodes To list pods in particular namespace: kubectl get pods -n To list services: kubectl get svc To list namespaces: kubectl get namespaces To create namespace: kubectl create namespace To list services in particular namespace: kubectl get svc -n To describe a pod: kubectl describe pod To describe a service: kubectl describe svc To get output of pod in yaml format: kubectl get pod -o yaml To get services of services in yaml format: kubectl get svc -o yaml To get logs of a pod: kubectl logs To execute command inside a pod: kubectl exec -it -- bash To get cpu and memory used for a pod: kubectl top pod To create a resource from a yaml file: kubectl create -f To modify a resource from a yaml file: kubectl apply -f To delete a resource defined in yaml file: kubectl delete -f To get all deployment details running in all the namespace: kubectl get all \u2013all-namespace To list ingress: kubectl get ingress To list ingress running in a particular namespace: kubectl get ingress -n To get events happening on a cluster: kubectl get events To list secrets running: kubectl get secrets To list secrets running in a namespace: kubectl get secrets -n To list all deployments: kubectl get deployments To list all deployments in a namespace: kubectl get deployments -n To edit deployments: kubectl edit deployments To edit a service: kubectl edit svc To list all HPA: kubectl get hpa To list all hpa in a namespace: kubectl get hpa -n To edit a hpa: kubectl edit hpa To list persistent volumes: kubectl get pv To list persistent volume claims: kubectl get pvc To get information about statefulset: kubectl get statefulset To list all running nodes: kubectl get nodes To know labels to the node: kubectl get nodes --show-labels To list pods running with node names or node IP: kubectl get pods -o wide To show the status of rolling update to a deployment: kubectl rollout status deployments To get rollout history of deployment: kubectl rollout history deployments To rollout to an previous version of deployments: kubectl rollout undo deployments --to-revision","title":"K8s"},{"location":"wiki/linux_misc_cmds/","text":"#### search lib ldconfig -p | grep libjpeg search deb # dpkg -l |grep busybox #### linux dev driver $ ls -l /dev/vda brw-rw---- 1 root disk 252 , 0 Jun 21 17 :06 /dev/vda $ readlink /sys/dev/block/252 \\: 0 /device/driver ../../../../bus/virtio/drivers/virtio_blk $ ls -l /sys/dev/*/*/device/driver lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/block/11:0/device/driver -> ../../../../../../../bus/scsi/drivers/sr lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/block/2:0/device/driver -> ../../../bus/platform/drivers/floppy lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/block/252:0/device/driver -> ../../../../bus/virtio/drivers/virtio_blk lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/char/21:0/device/driver -> ../../../../../../../bus/scsi/drivers/sr lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/char/226:0/device/driver -> ../../../bus/pci/drivers/virtio-pci lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/char/226:128/device/driver -> ../../../bus/pci/drivers/virtio-pci lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/char/240:0/device/driver -> ../../../../../../../bus/hid/drivers/hid-generic lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/char/243:0/device/driver -> ../../../../../../../bus/scsi/drivers/sr lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/char/248:0/device/driver -> ../../../bus/pnp/drivers/rtc_cmos lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/char/29:0/device/driver -> ../../../bus/pci/drivers/virtio-pci ... usb speed # usb2.0 speed read about 25M, write 35M read sh -c \"sync && echo 3 > /proc/sys/vm/drop_caches\" dd if=./data of=/dev/null bs=1M count=200 write sh -c \"sync && echo 3 > /proc/sys/vm/drop_caches\" dd if=/dev/zero of=./data bs=1M count=200 dd if=/dev/sda of=/dev/null bs=1M count=100 write dd if=/dev/zero of=./data bs=1M count=200 dd if=/dev/zero of=/dev/sda bs=1M count=100 ext4load usb 0 10000000 onl-loader-fit.0.itb 12910620 bytes read in 348 ms (35.4 MiB/s) ip # show vlan number: ip -d link show ip -d link show tcpdump vlan id, tcpdump to capture VLAN 1000 or VLAN 501 tcpdump -vv -i eth1 '( vlan and ( ether[14:2] & 0xfff == 1000 or ether[14:2] & 0xfff == 501 ) ) and ( ip host 10.1.1.98 or ip host 10.1.1.99 )' tcpdump -i eth1-01 vlan 200 and tcp $ sudo tcpdump host x.x.x.x To filter by interface: $ sudo tcpdump -i eth0 To filter by source: $ sudo tcpdump src x.x.x.x To filter by destination: $ sudo tcpdump dst x.x.x.x To filter by protocol: $ sudo tcpdump icmp gdb # args\uff1a gdb --args prog argslist break break [ Function Name ] class:fun break [ File Name ]:[ Line Number ] break [ Line Number ]** break*[ Address ] break [ ... ] if [ Condition ] break [ ... ] thread [ Thread-id ] ccache # ccache \u662f\u4e00\u4e2a\u7f16\u8bd1\u5668\u7f13\u5b58\u5de5\u5177\uff0c\u4e3b\u8981\u7528\u4e8e\u52a0\u901f C/C++ \u7a0b\u5e8f\u7684\u7f16\u8bd1\u8fc7\u7a0b\u3002\u5b83\u901a\u8fc7\u7f13\u5b58\u7f16\u8bd1\u8fc7\u7684\u7ed3\u679c\uff0c\u907f\u514d\u91cd\u590d\u7f16\u8bd1\u76f8\u540c\u7684\u4ee3\u7801\uff0c\u4ece\u800c\u51cf\u5c11\u7f16\u8bd1\u65f6\u95f4\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5f53\u4f60\u7f16\u8bd1\u4e00\u4e2a\u9879\u76ee\u65f6\uff0cccache \u4f1a\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u7f16\u8bd1\u8fc7\u76f8\u540c\u7684\u6e90\u6587\u4ef6\uff0c\u5982\u679c\u6709\uff0c\u5b83\u4f1a\u76f4\u63a5\u4f7f\u7528\u7f13\u5b58\u4e2d\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u91cd\u65b0\u7f16\u8bd1\u3002 clean ccach ccache -C gpio # apt install libgpiod apt install libgpiod2 gpiodetect gpioinfo gpioset gpiochip3 9=1 gpioset 3 9=1 gpioset 3 9=0 gpioget gpiochip3 8 gpioget 3 8 echo 44 > /sys/class/gpio/export echo 44 > /sys/class/gpio/unexport echo in > /sys/class/gpio/gpio44/direction cat /sys/class/gpio/gpio44/value echo 0 > /sys/class/gpio/gpio44/value iperf # wget https://iperf.fr/download/source/iperf-3.1.3-source.tar.gz tar zxvf iperf-3.1.3-source.tar.gz cd iperf-3.1.3 ./configure make make install \u670d\u52a1\u7aef\uff1a\u6536\u5305\uff0c\u4f7f\u7528 -s \u53c2\u6570\u6307\u5b9a\uff0c iperf3 -s \u5ba2\u6237\u7aef\uff1a\u53d1\u5305\uff0c\u4f7f\u7528 -c xx.xx.xx.xx \u6765\u6307\u5b9a\u8981\u5f80\u54ea\u4e2a\u670d\u52a1\u7aef\u53d1\u5305\uff0c iperf3 -c 172.20.20.200 iperf3 \u8fd8\u6709\u66f4\u591a\u7684\u53c2\u6570\uff0c\u5176\u4e2d\u6709\u4e00\u4e9b\u662f\u5ba2\u6237\u7aef\u4e13\u7528\u7684\uff0c\u6709\u4e00\u4e9b\u662f\u670d\u52a1\u7aef\u4e13\u7528\u7684\uff0c\u4e5f\u6709\u4e00\u4e9b\u662f\u4e8c\u8005\u5171\u7528\u7684\u3002 \u5177\u4f53\u53ef\u4ee5\u524d\u5f80\u8fd9\u4e2a\u5730\u5740\uff0c\u8fdb\u884c\u67e5\u9605\uff1a https://www.cnblogs.com/yingsong/p/5682080.html \u5e38\u7528\u7684\u53c2\u6570\u6709 -u\uff1a\u53d1\u9001 UDP \u5305\uff0c\u4ec5\u5ba2\u6237\u7aef\u53ef\u7528\uff0c\u670d\u52a1\u7aef\u9ed8\u8ba4 tcp udp \u90fd\u53ef\u4ee5\u63a5\u6536 -b\uff1a\u6307\u5b9a\u53d1\u9001\u901f\u7387\uff08\u6bd4\u5982 100M\uff09\uff0c\u53d1\u9001\u7aef\u4e0d\u53d7\u9650\u901f\u5f71\u54cd\uff0c\u5982\u679c\u6709\u9650\u901f\uff0c\u4e5f\u53ea\u662f\u63a5\u6536\u7aef\u6709\u5f71\u54cd -p\uff1a\u540e\u63a5\u670d\u52a1\u7aef\u76d1\u542c\u7684\u7aef\u53e3 -i\uff1a\u8bbe\u7f6e\u5e26\u5bbd\u62a5\u544a\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u4e3a\u79d2 -t\uff1a\u8bbe\u7f6e\u6d4b\u8bd5\u7684\u65f6\u957f\uff0c\u5355\u4f4d\u4e3a\u79d2 -w\uff1a\u8bbe\u7f6etcp\u7a97\u53e3\u5927\u5c0f\uff0c\u4e00\u822c\u53ef\u4ee5\u4e0d\u7528\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u5373\u53ef -B\uff1a\u7ed1\u5b9a\u5ba2\u6237\u7aef\u7684ip\u5730\u5740 -4\uff1a\u6307\u5b9a ipv4 -n\uff1a\u6307\u5b9a\u4f20\u8f93\u7684\u5b57\u8282\u6570 -f\uff1a\u683c\u5f0f\u5316\u5e26\u5bbd\u6570\u8f93\u51fa\uff0c\u540e\u63a5\u5355\u4f4d\uff0c\u6bd4\u5982 K\uff0cM --get-server-output\uff1a\u5728\u5ba2\u6237\u7aef\u76f4\u63a5\u83b7\u53d6\u670d\u52a1\u7aef\u8f93\u51fa\u7684\u7ed3\u679c iperf3 \u7684\u8f93\u51fa\u7ed3\u679c\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b \u4e00\u7c7b\u662f\uff0c\u8be6\u7ec6\u7684\u5e26\u5bbd\u6570\u636e \u4e00\u7c7b\u662f\uff0c\u6700\u7ec8\u7684\u5e26\u5bbd\u6570\u636e \u5982\u679c\u4f60\u50cf\u6211\u4e00\u6837\u52a0\u4e0a --get-server-output \uff0c\u53ef\u4ee5\u770b\u5230\u670d\u52a1\u7aef\u8f93\u51fa\u7684\u62a5\u544a\u3002 \u63a5\u4e0b\u6765\u770b\u4e00\u4e0b\uff0c\u8f93\u51fa\u7684\u62a5\u544a\u6709\u54ea\u4e9b\u5185\u5bb9\u3002 \u7b2c\u4e00\u5217 Interval\uff1a\u6d4b\u8bd5\u7684\u65f6\u957f \u7b2c\u4e8c\u5217 Transfer\uff1a\u5728 Interval \u65f6\u957f\u91cc\uff0c\u4f20\u8f93\u7684\u6570\u636e\u91cf \u7b2c\u4e09\u5217 Bitrate\uff1a\u4f20\u8f93\u901f\u7387 \u7b2c\u56db\u5217 Jitter\uff1a\u7f51\u7edc\u6296\u52a8\uff0c\u8fde\u7eed\u53d1\u9001\u6570\u636e\u5305\u65f6\u5ef6\u5dee\u503c\u7684\u5e73\u5747\u503c\uff0c\u8d8a\u5c0f\u8bf4\u660e\u7f51\u7edc\u8d28\u91cf\u8d8a\u597d \u7b2c\u4e94\u5217 Lost/Total Datagrams\uff1a\u4e22\u5931\u7684\u6570\u636e\u5305\u4e0e\u53d1\u9001\u7684\u603b\u6570\u636e\u5305 screen # screen /dev/ttyS0 9600 ctrl+A i info ctrl+A k exit coredump # To enable core dumps, first check the maximum core dump size: $ ulimit -c If the result of this is zero (i.e. no core dump will be produced), set the limit to the maximum: $ ulimit -c unlimited A core dump will now be generated and placed in the location specified by /proc/sys/kernel/core_pattern. Check this location by running: $ cat /proc/sys/kernel/core_pattern On CSE systems (and many other systems), the default settings result in the output: core This means that any core dumps will be placed in the current directory in a file named core. You can change this location using: $ echo \"<desired-file-path>/<desired-file-name>\" > /proc/sys/kernel/core_pattern Start a GDB session with the program binary and coredump file $ gdb <binary-file> <core-dump-file> ulimit -c unlimited echo \"/root/coredump\" > /proc/sys/kernel/core_pattern ifconfig_mac # ifconfig eth1 hw ether 00:01:9f:ef:66:77 date # date -s \"20120523 01:01:01\" ntpdate -u cn.pool.ntp.org timedatectl set-timezone Asia/Shanghai dd # sudo dd if=/dev/mmcblk0 of=~/sd-card-copy.img bs=1M status=progress socket_port # sudo apt install iproute2 sudo ss -tulpn -t, --tcp: To see all TCP sockets -u, --udp: To see all UDP sockets -l, --listening: To see all listening sockets -p, processes: To see which processes are using sockets -n, --numeric: Use this option if you want to see a port number instead of service names sudo apt-get install net-tools sudo netstat \u2013tulnp -t, --tcp: To see all TCP sockets -u, --udp: To see all UDP sockets -l, --listening: To see all listening sockets -p, processes: To see which processes are using sockets -n, --numeric: Use this option if you want to see a port number instead of service names apt-get install lsof sudo lsof -nP -iTCP -sTCP:LISTEN Check open ports using the Nmap utility sudo apt install nmap sudo nmap \u2013sT \u2013p-65535 ip-address","title":"Linux misc cmds"},{"location":"wiki/linux_misc_cmds/#search-deb","text":"dpkg -l |grep busybox #### linux dev driver $ ls -l /dev/vda brw-rw---- 1 root disk 252 , 0 Jun 21 17 :06 /dev/vda $ readlink /sys/dev/block/252 \\: 0 /device/driver ../../../../bus/virtio/drivers/virtio_blk $ ls -l /sys/dev/*/*/device/driver lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/block/11:0/device/driver -> ../../../../../../../bus/scsi/drivers/sr lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/block/2:0/device/driver -> ../../../bus/platform/drivers/floppy lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/block/252:0/device/driver -> ../../../../bus/virtio/drivers/virtio_blk lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/char/21:0/device/driver -> ../../../../../../../bus/scsi/drivers/sr lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/char/226:0/device/driver -> ../../../bus/pci/drivers/virtio-pci lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/char/226:128/device/driver -> ../../../bus/pci/drivers/virtio-pci lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/char/240:0/device/driver -> ../../../../../../../bus/hid/drivers/hid-generic lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/char/243:0/device/driver -> ../../../../../../../bus/scsi/drivers/sr lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/char/248:0/device/driver -> ../../../bus/pnp/drivers/rtc_cmos lrwxrwxrwx 1 root root 0 Jun 21 17 :06 /sys/dev/char/29:0/device/driver -> ../../../bus/pci/drivers/virtio-pci ...","title":"search deb"},{"location":"wiki/linux_misc_cmds/#usb-speed","text":"usb2.0 speed read about 25M, write 35M read sh -c \"sync && echo 3 > /proc/sys/vm/drop_caches\" dd if=./data of=/dev/null bs=1M count=200 write sh -c \"sync && echo 3 > /proc/sys/vm/drop_caches\" dd if=/dev/zero of=./data bs=1M count=200 dd if=/dev/sda of=/dev/null bs=1M count=100 write dd if=/dev/zero of=./data bs=1M count=200 dd if=/dev/zero of=/dev/sda bs=1M count=100 ext4load usb 0 10000000 onl-loader-fit.0.itb 12910620 bytes read in 348 ms (35.4 MiB/s)","title":"usb speed"},{"location":"wiki/linux_misc_cmds/#ip","text":"show vlan number: ip -d link show ip -d link show tcpdump vlan id, tcpdump to capture VLAN 1000 or VLAN 501 tcpdump -vv -i eth1 '( vlan and ( ether[14:2] & 0xfff == 1000 or ether[14:2] & 0xfff == 501 ) ) and ( ip host 10.1.1.98 or ip host 10.1.1.99 )' tcpdump -i eth1-01 vlan 200 and tcp $ sudo tcpdump host x.x.x.x To filter by interface: $ sudo tcpdump -i eth0 To filter by source: $ sudo tcpdump src x.x.x.x To filter by destination: $ sudo tcpdump dst x.x.x.x To filter by protocol: $ sudo tcpdump icmp","title":"ip"},{"location":"wiki/linux_misc_cmds/#gdb","text":"args\uff1a gdb --args prog argslist break break [ Function Name ] class:fun break [ File Name ]:[ Line Number ] break [ Line Number ]** break*[ Address ] break [ ... ] if [ Condition ] break [ ... ] thread [ Thread-id ]","title":"gdb"},{"location":"wiki/linux_misc_cmds/#ccache","text":"ccache \u662f\u4e00\u4e2a\u7f16\u8bd1\u5668\u7f13\u5b58\u5de5\u5177\uff0c\u4e3b\u8981\u7528\u4e8e\u52a0\u901f C/C++ \u7a0b\u5e8f\u7684\u7f16\u8bd1\u8fc7\u7a0b\u3002\u5b83\u901a\u8fc7\u7f13\u5b58\u7f16\u8bd1\u8fc7\u7684\u7ed3\u679c\uff0c\u907f\u514d\u91cd\u590d\u7f16\u8bd1\u76f8\u540c\u7684\u4ee3\u7801\uff0c\u4ece\u800c\u51cf\u5c11\u7f16\u8bd1\u65f6\u95f4\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5f53\u4f60\u7f16\u8bd1\u4e00\u4e2a\u9879\u76ee\u65f6\uff0cccache \u4f1a\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u7f16\u8bd1\u8fc7\u76f8\u540c\u7684\u6e90\u6587\u4ef6\uff0c\u5982\u679c\u6709\uff0c\u5b83\u4f1a\u76f4\u63a5\u4f7f\u7528\u7f13\u5b58\u4e2d\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u91cd\u65b0\u7f16\u8bd1\u3002 clean ccach ccache -C","title":"ccache"},{"location":"wiki/linux_misc_cmds/#gpio","text":"apt install libgpiod apt install libgpiod2 gpiodetect gpioinfo gpioset gpiochip3 9=1 gpioset 3 9=1 gpioset 3 9=0 gpioget gpiochip3 8 gpioget 3 8 echo 44 > /sys/class/gpio/export echo 44 > /sys/class/gpio/unexport echo in > /sys/class/gpio/gpio44/direction cat /sys/class/gpio/gpio44/value echo 0 > /sys/class/gpio/gpio44/value","title":"gpio"},{"location":"wiki/linux_misc_cmds/#iperf","text":"wget https://iperf.fr/download/source/iperf-3.1.3-source.tar.gz tar zxvf iperf-3.1.3-source.tar.gz cd iperf-3.1.3 ./configure make make install \u670d\u52a1\u7aef\uff1a\u6536\u5305\uff0c\u4f7f\u7528 -s \u53c2\u6570\u6307\u5b9a\uff0c iperf3 -s \u5ba2\u6237\u7aef\uff1a\u53d1\u5305\uff0c\u4f7f\u7528 -c xx.xx.xx.xx \u6765\u6307\u5b9a\u8981\u5f80\u54ea\u4e2a\u670d\u52a1\u7aef\u53d1\u5305\uff0c iperf3 -c 172.20.20.200 iperf3 \u8fd8\u6709\u66f4\u591a\u7684\u53c2\u6570\uff0c\u5176\u4e2d\u6709\u4e00\u4e9b\u662f\u5ba2\u6237\u7aef\u4e13\u7528\u7684\uff0c\u6709\u4e00\u4e9b\u662f\u670d\u52a1\u7aef\u4e13\u7528\u7684\uff0c\u4e5f\u6709\u4e00\u4e9b\u662f\u4e8c\u8005\u5171\u7528\u7684\u3002 \u5177\u4f53\u53ef\u4ee5\u524d\u5f80\u8fd9\u4e2a\u5730\u5740\uff0c\u8fdb\u884c\u67e5\u9605\uff1a https://www.cnblogs.com/yingsong/p/5682080.html \u5e38\u7528\u7684\u53c2\u6570\u6709 -u\uff1a\u53d1\u9001 UDP \u5305\uff0c\u4ec5\u5ba2\u6237\u7aef\u53ef\u7528\uff0c\u670d\u52a1\u7aef\u9ed8\u8ba4 tcp udp \u90fd\u53ef\u4ee5\u63a5\u6536 -b\uff1a\u6307\u5b9a\u53d1\u9001\u901f\u7387\uff08\u6bd4\u5982 100M\uff09\uff0c\u53d1\u9001\u7aef\u4e0d\u53d7\u9650\u901f\u5f71\u54cd\uff0c\u5982\u679c\u6709\u9650\u901f\uff0c\u4e5f\u53ea\u662f\u63a5\u6536\u7aef\u6709\u5f71\u54cd -p\uff1a\u540e\u63a5\u670d\u52a1\u7aef\u76d1\u542c\u7684\u7aef\u53e3 -i\uff1a\u8bbe\u7f6e\u5e26\u5bbd\u62a5\u544a\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u4e3a\u79d2 -t\uff1a\u8bbe\u7f6e\u6d4b\u8bd5\u7684\u65f6\u957f\uff0c\u5355\u4f4d\u4e3a\u79d2 -w\uff1a\u8bbe\u7f6etcp\u7a97\u53e3\u5927\u5c0f\uff0c\u4e00\u822c\u53ef\u4ee5\u4e0d\u7528\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u5373\u53ef -B\uff1a\u7ed1\u5b9a\u5ba2\u6237\u7aef\u7684ip\u5730\u5740 -4\uff1a\u6307\u5b9a ipv4 -n\uff1a\u6307\u5b9a\u4f20\u8f93\u7684\u5b57\u8282\u6570 -f\uff1a\u683c\u5f0f\u5316\u5e26\u5bbd\u6570\u8f93\u51fa\uff0c\u540e\u63a5\u5355\u4f4d\uff0c\u6bd4\u5982 K\uff0cM --get-server-output\uff1a\u5728\u5ba2\u6237\u7aef\u76f4\u63a5\u83b7\u53d6\u670d\u52a1\u7aef\u8f93\u51fa\u7684\u7ed3\u679c iperf3 \u7684\u8f93\u51fa\u7ed3\u679c\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b \u4e00\u7c7b\u662f\uff0c\u8be6\u7ec6\u7684\u5e26\u5bbd\u6570\u636e \u4e00\u7c7b\u662f\uff0c\u6700\u7ec8\u7684\u5e26\u5bbd\u6570\u636e \u5982\u679c\u4f60\u50cf\u6211\u4e00\u6837\u52a0\u4e0a --get-server-output \uff0c\u53ef\u4ee5\u770b\u5230\u670d\u52a1\u7aef\u8f93\u51fa\u7684\u62a5\u544a\u3002 \u63a5\u4e0b\u6765\u770b\u4e00\u4e0b\uff0c\u8f93\u51fa\u7684\u62a5\u544a\u6709\u54ea\u4e9b\u5185\u5bb9\u3002 \u7b2c\u4e00\u5217 Interval\uff1a\u6d4b\u8bd5\u7684\u65f6\u957f \u7b2c\u4e8c\u5217 Transfer\uff1a\u5728 Interval \u65f6\u957f\u91cc\uff0c\u4f20\u8f93\u7684\u6570\u636e\u91cf \u7b2c\u4e09\u5217 Bitrate\uff1a\u4f20\u8f93\u901f\u7387 \u7b2c\u56db\u5217 Jitter\uff1a\u7f51\u7edc\u6296\u52a8\uff0c\u8fde\u7eed\u53d1\u9001\u6570\u636e\u5305\u65f6\u5ef6\u5dee\u503c\u7684\u5e73\u5747\u503c\uff0c\u8d8a\u5c0f\u8bf4\u660e\u7f51\u7edc\u8d28\u91cf\u8d8a\u597d \u7b2c\u4e94\u5217 Lost/Total Datagrams\uff1a\u4e22\u5931\u7684\u6570\u636e\u5305\u4e0e\u53d1\u9001\u7684\u603b\u6570\u636e\u5305","title":"iperf"},{"location":"wiki/linux_misc_cmds/#screen","text":"screen /dev/ttyS0 9600 ctrl+A i info ctrl+A k exit","title":"screen"},{"location":"wiki/linux_misc_cmds/#coredump","text":"To enable core dumps, first check the maximum core dump size: $ ulimit -c If the result of this is zero (i.e. no core dump will be produced), set the limit to the maximum: $ ulimit -c unlimited A core dump will now be generated and placed in the location specified by /proc/sys/kernel/core_pattern. Check this location by running: $ cat /proc/sys/kernel/core_pattern On CSE systems (and many other systems), the default settings result in the output: core This means that any core dumps will be placed in the current directory in a file named core. You can change this location using: $ echo \"<desired-file-path>/<desired-file-name>\" > /proc/sys/kernel/core_pattern Start a GDB session with the program binary and coredump file $ gdb <binary-file> <core-dump-file> ulimit -c unlimited echo \"/root/coredump\" > /proc/sys/kernel/core_pattern","title":"coredump"},{"location":"wiki/linux_misc_cmds/#ifconfig_mac","text":"ifconfig eth1 hw ether 00:01:9f:ef:66:77","title":"ifconfig_mac"},{"location":"wiki/linux_misc_cmds/#date","text":"date -s \"20120523 01:01:01\" ntpdate -u cn.pool.ntp.org timedatectl set-timezone Asia/Shanghai","title":"date"},{"location":"wiki/linux_misc_cmds/#dd","text":"sudo dd if=/dev/mmcblk0 of=~/sd-card-copy.img bs=1M status=progress","title":"dd"},{"location":"wiki/linux_misc_cmds/#socket_port","text":"sudo apt install iproute2 sudo ss -tulpn -t, --tcp: To see all TCP sockets -u, --udp: To see all UDP sockets -l, --listening: To see all listening sockets -p, processes: To see which processes are using sockets -n, --numeric: Use this option if you want to see a port number instead of service names sudo apt-get install net-tools sudo netstat \u2013tulnp -t, --tcp: To see all TCP sockets -u, --udp: To see all UDP sockets -l, --listening: To see all listening sockets -p, processes: To see which processes are using sockets -n, --numeric: Use this option if you want to see a port number instead of service names apt-get install lsof sudo lsof -nP -iTCP -sTCP:LISTEN Check open ports using the Nmap utility sudo apt install nmap sudo nmap \u2013sT \u2013p-65535 ip-address","title":"socket_port"},{"location":"wiki/ntp/","text":"1. \u4f7f\u7528 RTC \u4f5c\u4e3a\u65f6\u95f4\u6e90\uff08 ntpd \uff09 # # /etc/ntp.conf server 127.127.1.0 iburst # \u5173\u952e\uff1a\u4f7f\u7528\u672c\u5730\u65f6\u949f\u9a71\u52a8 fudge 127.127.1.0 stratum 8 # \u8bbe\u7f6e stratum \u907f\u514d\u88ab\u62d2\u7edd 2. \u9a8c\u8bc1\u662f\u5426\u751f\u6548 # ntpq -pn \u9884\u671f\u8f93\u51fa\uff1a Copy Download remote refid st t when poll reach delay offset jitter ============================================================================== *127.127.1.0 .LOCL. 8 l 12 64 377 0.000 0.000 0.000 * \u8868\u793a\u5f53\u524d\u540c\u6b65\u6e90\u3002 refid=.LOCL. \u8868\u793a\u672c\u5730\u65f6\u949f\u3002 st=8 \u8868\u793a stratum 8\uff08\u6709\u6548\u65f6\u95f4\u6e90\uff09\u3002 \u5ba2\u6237\u7aef\u5f3a\u5236\u540c\u6b65\uff08\u4e34\u65f6\u65b9\u6848\uff09 # \u5982\u679c\u6025\u9700\u540c\u6b65\uff0c\u53ef\u5728\u5ba2\u6237\u7aef\u5f3a\u5236\u6b65\u8fdb\u65f6\u95f4\uff1a ntpdate -u -b 10.10.30.10 # -u: \u7ed5\u8fc7\u7aef\u53e3\u9650\u5236 -b: \u5f3a\u5236\u6b65\u8fdb\u65f6\u95f4","title":"Ntp"},{"location":"wiki/ntp/#1-\u4f7f\u7528-rtc-\u4f5c\u4e3a\u65f6\u95f4\u6e90ntpd","text":"# /etc/ntp.conf server 127.127.1.0 iburst # \u5173\u952e\uff1a\u4f7f\u7528\u672c\u5730\u65f6\u949f\u9a71\u52a8 fudge 127.127.1.0 stratum 8 # \u8bbe\u7f6e stratum \u907f\u514d\u88ab\u62d2\u7edd","title":"1. \u4f7f\u7528 RTC \u4f5c\u4e3a\u65f6\u95f4\u6e90\uff08ntpd\uff09"},{"location":"wiki/ntp/#2-\u9a8c\u8bc1\u662f\u5426\u751f\u6548","text":"ntpq -pn \u9884\u671f\u8f93\u51fa\uff1a Copy Download remote refid st t when poll reach delay offset jitter ============================================================================== *127.127.1.0 .LOCL. 8 l 12 64 377 0.000 0.000 0.000 * \u8868\u793a\u5f53\u524d\u540c\u6b65\u6e90\u3002 refid=.LOCL. \u8868\u793a\u672c\u5730\u65f6\u949f\u3002 st=8 \u8868\u793a stratum 8\uff08\u6709\u6548\u65f6\u95f4\u6e90\uff09\u3002","title":"2. \u9a8c\u8bc1\u662f\u5426\u751f\u6548"},{"location":"wiki/ntp/#\u5ba2\u6237\u7aef\u5f3a\u5236\u540c\u6b65\u4e34\u65f6\u65b9\u6848","text":"\u5982\u679c\u6025\u9700\u540c\u6b65\uff0c\u53ef\u5728\u5ba2\u6237\u7aef\u5f3a\u5236\u6b65\u8fdb\u65f6\u95f4\uff1a ntpdate -u -b 10.10.30.10 # -u: \u7ed5\u8fc7\u7aef\u53e3\u9650\u5236 -b: \u5f3a\u5236\u6b65\u8fdb\u65f6\u95f4","title":"\u5ba2\u6237\u7aef\u5f3a\u5236\u540c\u6b65\uff08\u4e34\u65f6\u65b9\u6848\uff09"},{"location":"wiki/opengrok/","text":"- vim /etc/docker/daemon.json - { \"registry-mirrors\": [ \"https://mirror.ccs.tencentyun.com\" ] } - sudo systemctl restart docker - docker pull nagui/opengrok - docker run -d -p 8080:8080 -v /home/jcai/thanos/chassisx-g30/src:/src --name opengrok nagui/opengrok","title":"Opengrok"},{"location":"wiki/optical_module/","text":"ZR # 400G ZR sets a standard for transferring 400 Gigabit Ethernet over a single optical wavelength, utilizing technologies like DWDM (dense wavelength division multiplexing) and higher-order modulation such as 16 QAM. Developed by the Optical Interoperability Forum (OIF), this cost-effective solution establishes an interoperable interface for 400G data transmission, marking one of the initial standards in this domain. Open ROADM is a 400G pluggable solution that establishes interoperability standards for Reconfigurable Optical Add/Drop Multiplexers (ROADM) , responsible for managing and routing data traffic over high-capacity fiber-optic lines. Initially developed in response to the surge in wireless network traffic from 2007 to 2015, Open ROADM consists of key components including ROADM switches, transponders, and pluggable optics. These components are controllable via an open standards-based API accessed through an SDN Controller using the NETCONF protocol. The 400G ZR+ series offers a range of coherent pluggable solutions with line capacities reaching up to 400 Gb/s, surpassing the 120km limit of the 400ZR specification. OpenZR+ maintains the classic Ethernet-only host interface of 400ZR while enhancing features like extended point-to-point reach, reaching approximately 500km , and supporting OTN Ethernet. SFP_XFP # SFP\u6a21\u5757\u672a\u96c6\u6210CDR\uff0c\u4f46XFP\u6a21\u5757\u7684\u6536\u53d1\u65b9\u5411\u4e0a\u5747\u96c6\u6210\u4e86CDR\uff0c\u5bfc\u81f4\u540e\u8005\u5c3a\u5bf8\u548c\u529f\u8017\u90fd\u6bd4\u8f83\u5927\u3002 tp # GBE # xfp_sfp # SFP\u6a21\u5757\u672a\u96c6\u6210CDR\uff0c\u4f46XFP\u6a21\u5757\u7684\u6536\u53d1\u65b9\u5411\u4e0a\u5747\u96c6\u6210\u4e86CDR\uff0c\u5bfc\u81f4\u540e\u8005\u5c3a\u5bf8\u548c\u529f\u8017\u90fd\u6bd4\u8f83\u5927\u3002","title":"Optical module"},{"location":"wiki/optical_module/#zr","text":"400G ZR sets a standard for transferring 400 Gigabit Ethernet over a single optical wavelength, utilizing technologies like DWDM (dense wavelength division multiplexing) and higher-order modulation such as 16 QAM. Developed by the Optical Interoperability Forum (OIF), this cost-effective solution establishes an interoperable interface for 400G data transmission, marking one of the initial standards in this domain. Open ROADM is a 400G pluggable solution that establishes interoperability standards for Reconfigurable Optical Add/Drop Multiplexers (ROADM) , responsible for managing and routing data traffic over high-capacity fiber-optic lines. Initially developed in response to the surge in wireless network traffic from 2007 to 2015, Open ROADM consists of key components including ROADM switches, transponders, and pluggable optics. These components are controllable via an open standards-based API accessed through an SDN Controller using the NETCONF protocol. The 400G ZR+ series offers a range of coherent pluggable solutions with line capacities reaching up to 400 Gb/s, surpassing the 120km limit of the 400ZR specification. OpenZR+ maintains the classic Ethernet-only host interface of 400ZR while enhancing features like extended point-to-point reach, reaching approximately 500km , and supporting OTN Ethernet.","title":"ZR"},{"location":"wiki/optical_module/#sfp_xfp","text":"SFP\u6a21\u5757\u672a\u96c6\u6210CDR\uff0c\u4f46XFP\u6a21\u5757\u7684\u6536\u53d1\u65b9\u5411\u4e0a\u5747\u96c6\u6210\u4e86CDR\uff0c\u5bfc\u81f4\u540e\u8005\u5c3a\u5bf8\u548c\u529f\u8017\u90fd\u6bd4\u8f83\u5927\u3002","title":"SFP_XFP"},{"location":"wiki/optical_module/#tp","text":"","title":"tp"},{"location":"wiki/optical_module/#gbe","text":"","title":"GBE"},{"location":"wiki/optical_module/#xfp_sfp","text":"SFP\u6a21\u5757\u672a\u96c6\u6210CDR\uff0c\u4f46XFP\u6a21\u5757\u7684\u6536\u53d1\u65b9\u5411\u4e0a\u5747\u96c6\u6210\u4e86CDR\uff0c\u5bfc\u81f4\u540e\u8005\u5c3a\u5bf8\u548c\u529f\u8017\u90fd\u6bd4\u8f83\u5927\u3002","title":"xfp_sfp"},{"location":"wiki/optical_parameters/","text":"tx/rx-power frequency SNR Signal-to-Noise Ratio GSNR Gerneralized SNR SNRase: SNR from OSNR SNRnli: SNR computed using gaussian noise model SNRgawbs: Caused by guided acoustic wave Brillouin scattering\u5e03\u5c14\u5206\u5e03 ESNR, Estimated Signal-to-Noise Ratio \uff0c estimation of the SNR for a given signal. calculated by dividing the power of the desired signal by the estimated noise power . estimated noise power can be obtained through various methods, such as statistical analysis, adaptive filtering, or signal subspace projection. Optical Signal-to-Noise Ratio (OSNR) OSNR quantifies optical noise interference on optical signals. CD , chromatic dispersion the change in refractive index due to a change in wavelength. Dispersion is the phenomenon that causes light to be separated into various colors while passing through a prism. PDL , polarization dependent losses DGD , differential group delay So-DGD , pre/post FEC error ration, Q-Factor (Quality Factor) Q-factor characterizes the strength of damping in an oscillator or resonator. Higher Q-factor implies less damping and narrower line-width. laser bias current, ZR frame related ( BBE, Background Block Error the number of erroneous data blocks per million data blocks transmitted ES, Errored Seconds the number of seconds during which the received data contains one or more bit errors. SES, **Severely Errored Seconds the number of seconds during which the received data contains a high number of bit errors UAS Unavailable Seconds the number of seconds during which the network is unavailable. uncorrected word, corrected bytes BBE, ES, SES and UAS relation in OTN \u2013 MapYourTech","title":"Optical parameters"},{"location":"wiki/ptp/","text":"Grand Masters (GMs) The root timing reference Slave Clocks (SC) Time Of Day (TOD) Boundary Clock (BC) It has one or several Client ports where it can receive timing and one or several master ports where the BC delivers timing, Ordinary Clocks (OC) The Transparent Clock\uff08TC\uff09 timestamps the ingress 1588 PTP traffic, then it correlates for the time the 1588 PTP traffic spent inside the node on the egress. the clocks discover and configure each other using announce messages. Sync, Delay_Req and Delay_Resp messages are used to measure the time delay on backward and forward direction and to convey the time and phase information to the clients. The G.8275.1 Full Timing Support (FTS) profile runs over Untagged ethernet and is always supported by SyncE. The profile uses multicast traffic with the reserved multicast address(s) and Ethertype 88F7 .","title":"Ptp"},{"location":"wiki/qsfp/","text":"","title":"Qsfp"},{"location":"wiki/vrf/","text":"In IP-based computer networks, virtual routing and forwarding (VRF) is a technology that allows multiple instances of a routing table to co-exist within the same router at the same time. One or more logical or physical interfaces may have a VRF and these VRFs do not share routes therefore the packets are only forwarded between interfaces on the same VRF. VRFs are the TCP/IP layer 3 equivalent of a VLAN. Because the routing instances are independent, the same or overlapping IP addresses can be used without conflicting with each other. Network functionality is improved because network paths can be segmented without requiring multiple routers.[1] \u5728\u57fa\u4e8eIP\u7684\u8ba1\u7b97\u673a\u7f51\u7edc\u4e2d\uff0c\u865a\u62df\u8def\u7531\u548c\u8f6c\u53d1\uff08VRF\uff09\u662f\u4e00\u79cd\u6280\u672f\uff0c\u5b83\u5141\u8bb8\u4e00\u4e2a\u8def\u7531\u8868\u7684\u591a\u4e2a\u5b9e\u4f8b\u540c\u65f6\u5b58\u5728\u4e8e\u540c\u4e00\u53f0\u8def\u7531\u5668\u4e2d\u3002\u4e00\u4e2a\u6216\u591a\u4e2a\u903b\u8f91\u6216\u7269\u7406\u63a5\u53e3\u53ef\u4ee5\u6709\u4e00\u4e2aVRF\uff0c \u8fd9\u4e9bVRF\u4e0d\u5171\u4eab\u8def\u7531\uff0c\u56e0\u6b64\u6570\u636e\u5305\u53ea\u5728\u540c\u4e00VRF\u7684\u63a5\u53e3\u4e4b\u95f4\u8f6c\u53d1\u3002VRF\u662fTCP/IP\u7b2c\u4e09\u5c42\u7684VLAN\u7684\u7b49\u540c\u7269\u3002\u56e0\u4e3a\u8def\u7531\u5b9e\u4f8b\u662f\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u6216\u91cd\u53e0\u7684IP\u5730\u5740\uff0c \u800c\u4e0d\u4f1a\u76f8\u4e92\u51b2\u7a81\u3002\u7f51\u7edc\u529f\u80fd\u5f97\u5230\u4e86\u6539\u5584\uff0c\u56e0\u4e3a\u7f51\u7edc\u8def\u5f84\u53ef\u4ee5\u88ab\u5206\u5272\u800c\u4e0d\u9700\u8981\u591a\u4e2a\u8def\u7531\u5668[1]\u3002 VRF\uff1avirtual routing and forwording \u865a\u62df\u8def\u7531\u8f6c\u53d1\uff0c\u53c8\u79f0\u4e3aVPN instance \u5728\u7269\u7406\u8bbe\u5907\u4e0a\u521b\u5efa\u591a\u4e2aVPN\u5b9e\u4f8b\uff0c\u6bcf\u4e2aVPN\u5b9e\u4f8b\u62e5\u6709\u72ec\u7acb\u7684\u63a5\u53e3\uff0c\u8def\u7531\u8868\u548c\u8def\u7531\u534f\u8bae\u8fdb\u7a0b\u7b49\uff0c\u76f8\u5f53\u4e8e\u53c8\u865a\u62df\u51fa\u4e00\u53f0\u540c\u7b49\u5173\u7cfb\u7684\u8def\u7531\u5668\uff0c\u57fa\u672c\u4e0a\u5b8c\u5168\u72ec\u7acb \u53ef\u4ee5\u770b\u505a\u662f\u4e00\u53f0\u65b0\u7684\u8bbe\u5907\u6765\u4f7f\u7528\u3002\u8fd9\u79cd\u865a\u62df\u7c7b\u578b\u5c5e\u4e8e\u4e00\u865a\u591a\u3002 \u5e94\u7528\u573a\u666f \u516c\u53f8\u9700\u8981\u90e8\u7f72\u4e24\u53f0\u9632\u706b\u5899\uff0c\u4e00\u53f0\u5916\u7f51\u9632\u706b\u5899\u548c\u4e00\u53f0\u5185\u7f51\u9632\u706b\u5899\uff0c\u4e3a\u4e86\u8282\u7701\u6210\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u8d2d\u4e70\u4e00\u53f0\u7269\u7406\u9632\u706b\u5899\uff0c\u7136\u540e\u5c06\u5176\u865a\u62df\u6210\u4e24\u53f0\u3002 \u8fd0\u8425\u5546\u4e3a\u4e86\u4e0d\u540c\u7684\u5ba2\u6237\u7f51\u6bb5\u91cd\u53e0\u7684\u95ee\u9898\uff0c\u5728\u505aMPLS\u7684\u65f6\u5019\uff0c\u5355\u72ec\u4f7f\u7528\u4e00\u4e2aVRF\u7cfb\u7edf\u9488\u5bf9\u4e00\u4e2a\u5ba2\u6237\u3002 \u4f5c\u7528\uff1a\u901a\u8fc7\u4e00\u53f0\u4e09\u5c42\u8f6c\u53d1\u8bbe\u5907\u4e0a\u521b\u5efa\u591a\u5f20\u8def\u7531\u8868\u5b9e\u73b0\u4e1a\u52a1\u7684\u9694\u79bb\uff0c\u5e38\u7528\u4e8eMPLS VPN\u3001\u9632\u706b\u5899\u3002 sudo modprobe vrf ip link add red type vrf table 111 ip link add green type vrf table 2 ip link set dev red up ip link set dev green up ip -br link show type vrf ip -d link show type vrf ip link set ens37 master red ip link set ens37 master green ip link show vrf red ip addr show vrf red ip route show vrf red ip route get 10.2.1.40 vrf red ip route table show -a ip route show ip addr show ip addr show vrf MGMT ip link show type vrf","title":"Vrf"},{"location":"wiki/xilinx/","text":"gt # GTP < GPX < GTH < GTZ < GTY < GTM GTP\u6700\u9ad8\u53ef\u4ee5\u8fbe\u52306.6Gb/s\uff0cGTX\u6700\u9ad812.5Gb/s\uff0cGTH\u6700\u9ad813.1Gb/s\uff0cGTZ\u6700\u9ad828.05Gb/s, GTY\u6700\u9ad832.75Gb/s, GTM\u6700\u9ad8112Gb/s","title":"Xilinx"},{"location":"wiki/xilinx/#gt","text":"GTP < GPX < GTH < GTZ < GTY < GTM GTP\u6700\u9ad8\u53ef\u4ee5\u8fbe\u52306.6Gb/s\uff0cGTX\u6700\u9ad812.5Gb/s\uff0cGTH\u6700\u9ad813.1Gb/s\uff0cGTZ\u6700\u9ad828.05Gb/s, GTY\u6700\u9ad832.75Gb/s, GTM\u6700\u9ad8112Gb/s","title":"gt"},{"location":"wiki/zellij/","text":"wget https://github.com/zellij-org/zellij/releases/download/v0.41.1/zellij-x86_64-unknown-linux-musl.tar.gz mv zellij ~/.local/bin/ //new zellij s name zellij a name //key ctrl+p ctrl+t ctrl+","title":"Zellij"},{"location":"win/Quick_Key/","text":"win + v copy history vscode # control + / alt+shit+A","title":"Quick Key"},{"location":"win/Quick_Key/#vscode","text":"control + / alt+shit+A","title":"vscode"},{"location":"win/msys/","text":"\u8981\u5b89\u88c5MinGW\uff08Minimalist GNU for Windows\uff09\uff0c\u60a8\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a \u8bbf\u95ee MinGW-w64 \u5b98\u65b9\u4e0b\u8f7d\u9875\u9762\uff08\u63a8\u8350\u4f7f\u7528 MSYS2 \u65b9\u5f0f\u5b89\u88c5\uff09\uff1a \u76f4\u63a5\u4e0b\u8f7d\uff1a https://github.com/msys2/msys2-installer/releases/latest \u6216\u8bbf\u95ee\uff1a https://www.msys2.org/ Index of /msys2/distrib/x86_64/ | \u6e05\u534e\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9 | Tsinghua Open Source Mirror \u4e0b\u8f7d\u5e76\u8fd0\u884cMSYS2\u5b89\u88c5\u7a0b\u5e8f \u9009\u62e9\u5b89\u88c5\u8def\u5f84\uff08\u5efa\u8bae\u4f7f\u7528\u9ed8\u8ba4\u8def\u5f84\uff09 \u5b8c\u6210\u57fa\u7840\u5b89\u88c5 mirror sed -i \"s#https\\?://mirror.msys2.org/#https://mirrors.tuna.tsinghua.edu.cn/msys2/#g\" /etc/pacman.d/mirrorlist* \u6253\u5f00MSYS2\u7ec8\u7aef\uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a pacman -Syu # \u66f4\u65b0\u7cfb\u7edf\u5305 pacman -S mingw-w64-x86_64-gcc # \u5b89\u88c5GCC\u7f16\u8bd1\u5668 pacman -S mingw-w64-x86_64-make # \u5b89\u88c5Make\u5de5\u5177 ``` \u6dfb\u52a0\u73af\u5883\u53d8\u91cf\uff1a \u5c06 D:\\msys64\\mingw64\\bin \u6dfb\u52a0\u5230\u7cfb\u7edf\u7684 PATH \u73af\u5883\u53d8\u91cf\u4e2d \u91cd\u542f\u7ec8\u7aef\u6216\u8ba1\u7b97\u673a\u4f7f\u73af\u5883\u53d8\u91cf\u751f\u6548 \u6dfb\u52a0\u53d8\u91cf\u201cMSYS2_PATH_TYPE\", value \"inherit\" \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6253\u5f00\u547d\u4ee4\u63d0\u793a\u7b26\u5e76\u8f93\u5165 gcc --version \u9a8c\u8bc1\u5b89\u88c5\u662f\u5426\u6210\u529f\u3002 winterminal D:\\\\msys64\\\\msys2_shell.cmd -msys -defterm -no-start","title":"Msys"},{"location":"win/vscode/","text":"gen compile_json # apt install bear bear make generate compile_json clangd will use this json to route bear -- make TOOLS=\"ARM-GCC\" CPU=\"ARMv8p2-LE\"","title":"Vscode"},{"location":"win/vscode/#gen-compile_json","text":"apt install bear bear make generate compile_json clangd will use this json to route bear -- make TOOLS=\"ARM-GCC\" CPU=\"ARMv8p2-LE\"","title":"gen compile_json"},{"location":"win/wsl-arch/","text":"mirror # cp -a /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.bak \u627e\u5230\u7b2c\u4e00\u4e2a Server=... \u7684\u884c\u5728\u8be5\u884c\u4e0a\u4e00\u884c\u5199\u5165\u4ee5\u4e0b\u5185\u5bb9 Server = https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch # \u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\u5f00\u6e90\u955c\u50cf\u7ad9 Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch # \u6e05\u534e\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9 Server = https://repo.huaweicloud.com/archlinux/$repo/os/$arch # \u534e\u4e3a\u5f00\u6e90\u955c\u50cf\u7ad9 Server = http://mirror.lzu.edu.cn/archlinux/$repo/os/$arch # \u5170\u5dde\u5927\u5b66\u5f00\u6e90\u955c\u50cf\u7ad9 Server = http://mirrors.aliyun.com/archlinux/$repo/os/$arch # \u963f\u91cc\u4e91\u955c\u50cf\u7ad9 \u66f4\u65b0\u8f6f\u4ef6\u5305 pacman -Syy pacman # # 1.\u7cfb\u7edf\u66f4\u65b0 # \u5bf9\u6574\u4e2aarchLinux\u8fdb\u884c\u66f4\u65b0 pacman -Syu # \u5982\u679c\u4f60\u5df2\u7ecf\u4f7f\u7528 pacman -Sy \u5c06\u672c\u5730\u7684\u5305\u6570\u636e\u5e93\u4e0e\u8fdc\u7a0b\u7684\u4ed3\u5e93\u8fdb\u884c\u4e86\u540c\u6b65,\u4e5f\u53ef\u4ee5\u53ea\u6267\u884c: pacman -Su # \u5982\u63d0\u793a\u51b2\u7a81\uff0c\u53ef\u5f3a\u5236\u66f4\u65b0(dd\u8df3\u8fc7\u6240\u6709\u68c0\u67e5) pacman -Syudd # 2.\u5b89\u88c5\u5305 pacman -S \u5305\u540d # \u4f60\u4e5f\u53ef\u4ee5\u540c\u65f6\u5b89\u88c5\u591a\u4e2a\u5305, \u53ea\u9700\u4ee5\u7a7a\u683c\u5206\u9694\u5305\u540d\u5373\u53ef pacman -Sy \u5305\u540d # \u4e0e\u4e0a\u9762\u547d\u4ee4\u4e0d\u540c\u7684\u662f,\u8be5\u547d\u4ee4\u5c06\u5728\u540c\u6b65\u5305\u6570\u636e\u5e93\u540e\u518d\u6267\u884c\u5b89\u88c5 pacman -Sv \u5305\u540d # \u5728\u663e\u793a\u4e00\u4e9b\u64cd\u4f5c\u4fe1\u606f\u540e\u6267\u884c\u5b89\u88c5 pacman -U \u5305\u540d.tar.gz # \u5b89\u88c5\u672c\u5730\u5305,\u5176\u6269\u5c55\u540d\u4e3a pkg.tar.gz # 3.\u5220\u9664\u5305 pacman -R \u5305\u540d # \u8be5\u547d\u4ee4\u5c06\u53ea\u5220\u9664\u5305,\u4e0d\u5305\u542b\u8be5\u5305\u7684\u4f9d\u8d56 pacman -Rs \u5305\u540d # \u5728\u5220\u9664\u5305\u7684\u540c\u65f6,\u4e5f\u5c06\u5220\u9664\u5176\u4f9d\u8d56 pacman -Rd \u5305\u540d # \u5728\u5220\u9664\u5305\u65f6\u4e0d\u68c0\u67e5\u4f9d\u8d56 # 4.\u641c\u7d22\u5305 pacman -Ss \u5173\u952e\u5b57 # \u8fd9\u5c06\u641c\u7d22\u542b\u5173\u952e\u5b57\u7684\u5305 pacman -Qi \u5305\u540d # \u67e5\u770b\u6709\u5173\u5305\u7684\u4fe1\u606f pacman -Ql \u5305\u540d # \u5217\u51fa\u8be5\u5305\u7684\u6587\u4ef6 # 5.\u5176\u4ed6\u7528\u6cd5 sudo pacman -R $(pacman -Qdtq) # \u6e05\u9664\u7cfb\u7edf\u4e2d\u65e0\u7528\u7684\u5305 pacman -Sw \u5305\u540d # \u53ea\u4e0b\u8f7d\u5305,\u4e0d\u5b89\u88c5 pacman -Sc # Pacman\u4e0b\u8f7d\u7684\u5305\u6587\u4ef6\u4f4d\u4e8e /var/cache/pacman/pkg/ \u76ee\u5f55 # \u8be5\u547d\u4ee4\u5c06\u6e05\u7406\u672a\u5b89\u88c5\u7684\u5305\u6587\u4ef6 pacman -Scc # \u6e05\u7406\u6240\u6709\u7684\u7f13\u5b58\u6587\u4ef6 aur # \u5b98\u65b9\u4ed3\u5e93\u7684\u8f6f\u4ef6\u5b9e\u5728\u662f\u592a\u5c11\u4e86\uff0c AUR\uff08Arch \u7528\u6237\u8f6f\u4ef6\u4ed3\u5e93\uff0c\u5168\u79f0 Arch User Repository\uff09\u91cc\u6709\u8bb8\u591a\u8f6f\u4ef6\u3002AUR \u662f\u4e3a\u7528\u6237\u800c\u5efa\u3001\u7531\u7528\u6237\u4e3b\u5bfc\u7684 Arch \u8f6f\u4ef6\u4ed3\u5e93\u3002 sudo pacman -S yay # \u5b89\u88c5 AUR \u8f6f\u4ef6 yay -S \u5305\u540d # \u4f7f\u7528 yay \u5b89\u88c5\u4e0b\u9762\u8f6f\u4ef6\u4e4b\u524d\uff0c\u8bf7\u5148\u786e\u4fdd\u57fa\u7840\u6253\u5305\u5de5\u5177\uff08base-devel\uff09\u5df2\u7ecf\u5b89\u88c5 yay -S base-devel sudo pacman -S helix sudo pacman -S openssh sudo pacman -S iputils sudo pacman -S clang clangd clang-format git zsh curl weget ripgrep sudo pacman -S clang sudo pacman -S clangd sudo pacman -S zsh curl wget ripgrep helix --health sudo pacman -S ruff sh -c \"$(curl -fsSL https://install.ohmyz.sh)\"","title":"Wsl arch"},{"location":"win/wsl-arch/#mirror","text":"cp -a /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.bak \u627e\u5230\u7b2c\u4e00\u4e2a Server=... \u7684\u884c\u5728\u8be5\u884c\u4e0a\u4e00\u884c\u5199\u5165\u4ee5\u4e0b\u5185\u5bb9 Server = https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch # \u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\u5f00\u6e90\u955c\u50cf\u7ad9 Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch # \u6e05\u534e\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9 Server = https://repo.huaweicloud.com/archlinux/$repo/os/$arch # \u534e\u4e3a\u5f00\u6e90\u955c\u50cf\u7ad9 Server = http://mirror.lzu.edu.cn/archlinux/$repo/os/$arch # \u5170\u5dde\u5927\u5b66\u5f00\u6e90\u955c\u50cf\u7ad9 Server = http://mirrors.aliyun.com/archlinux/$repo/os/$arch # \u963f\u91cc\u4e91\u955c\u50cf\u7ad9 \u66f4\u65b0\u8f6f\u4ef6\u5305 pacman -Syy","title":"mirror"},{"location":"win/wsl-arch/#pacman","text":"# 1.\u7cfb\u7edf\u66f4\u65b0 # \u5bf9\u6574\u4e2aarchLinux\u8fdb\u884c\u66f4\u65b0 pacman -Syu # \u5982\u679c\u4f60\u5df2\u7ecf\u4f7f\u7528 pacman -Sy \u5c06\u672c\u5730\u7684\u5305\u6570\u636e\u5e93\u4e0e\u8fdc\u7a0b\u7684\u4ed3\u5e93\u8fdb\u884c\u4e86\u540c\u6b65,\u4e5f\u53ef\u4ee5\u53ea\u6267\u884c: pacman -Su # \u5982\u63d0\u793a\u51b2\u7a81\uff0c\u53ef\u5f3a\u5236\u66f4\u65b0(dd\u8df3\u8fc7\u6240\u6709\u68c0\u67e5) pacman -Syudd # 2.\u5b89\u88c5\u5305 pacman -S \u5305\u540d # \u4f60\u4e5f\u53ef\u4ee5\u540c\u65f6\u5b89\u88c5\u591a\u4e2a\u5305, \u53ea\u9700\u4ee5\u7a7a\u683c\u5206\u9694\u5305\u540d\u5373\u53ef pacman -Sy \u5305\u540d # \u4e0e\u4e0a\u9762\u547d\u4ee4\u4e0d\u540c\u7684\u662f,\u8be5\u547d\u4ee4\u5c06\u5728\u540c\u6b65\u5305\u6570\u636e\u5e93\u540e\u518d\u6267\u884c\u5b89\u88c5 pacman -Sv \u5305\u540d # \u5728\u663e\u793a\u4e00\u4e9b\u64cd\u4f5c\u4fe1\u606f\u540e\u6267\u884c\u5b89\u88c5 pacman -U \u5305\u540d.tar.gz # \u5b89\u88c5\u672c\u5730\u5305,\u5176\u6269\u5c55\u540d\u4e3a pkg.tar.gz # 3.\u5220\u9664\u5305 pacman -R \u5305\u540d # \u8be5\u547d\u4ee4\u5c06\u53ea\u5220\u9664\u5305,\u4e0d\u5305\u542b\u8be5\u5305\u7684\u4f9d\u8d56 pacman -Rs \u5305\u540d # \u5728\u5220\u9664\u5305\u7684\u540c\u65f6,\u4e5f\u5c06\u5220\u9664\u5176\u4f9d\u8d56 pacman -Rd \u5305\u540d # \u5728\u5220\u9664\u5305\u65f6\u4e0d\u68c0\u67e5\u4f9d\u8d56 # 4.\u641c\u7d22\u5305 pacman -Ss \u5173\u952e\u5b57 # \u8fd9\u5c06\u641c\u7d22\u542b\u5173\u952e\u5b57\u7684\u5305 pacman -Qi \u5305\u540d # \u67e5\u770b\u6709\u5173\u5305\u7684\u4fe1\u606f pacman -Ql \u5305\u540d # \u5217\u51fa\u8be5\u5305\u7684\u6587\u4ef6 # 5.\u5176\u4ed6\u7528\u6cd5 sudo pacman -R $(pacman -Qdtq) # \u6e05\u9664\u7cfb\u7edf\u4e2d\u65e0\u7528\u7684\u5305 pacman -Sw \u5305\u540d # \u53ea\u4e0b\u8f7d\u5305,\u4e0d\u5b89\u88c5 pacman -Sc # Pacman\u4e0b\u8f7d\u7684\u5305\u6587\u4ef6\u4f4d\u4e8e /var/cache/pacman/pkg/ \u76ee\u5f55 # \u8be5\u547d\u4ee4\u5c06\u6e05\u7406\u672a\u5b89\u88c5\u7684\u5305\u6587\u4ef6 pacman -Scc # \u6e05\u7406\u6240\u6709\u7684\u7f13\u5b58\u6587\u4ef6","title":"pacman"},{"location":"win/wsl-arch/#aur","text":"\u5b98\u65b9\u4ed3\u5e93\u7684\u8f6f\u4ef6\u5b9e\u5728\u662f\u592a\u5c11\u4e86\uff0c AUR\uff08Arch \u7528\u6237\u8f6f\u4ef6\u4ed3\u5e93\uff0c\u5168\u79f0 Arch User Repository\uff09\u91cc\u6709\u8bb8\u591a\u8f6f\u4ef6\u3002AUR \u662f\u4e3a\u7528\u6237\u800c\u5efa\u3001\u7531\u7528\u6237\u4e3b\u5bfc\u7684 Arch \u8f6f\u4ef6\u4ed3\u5e93\u3002 sudo pacman -S yay # \u5b89\u88c5 AUR \u8f6f\u4ef6 yay -S \u5305\u540d # \u4f7f\u7528 yay \u5b89\u88c5\u4e0b\u9762\u8f6f\u4ef6\u4e4b\u524d\uff0c\u8bf7\u5148\u786e\u4fdd\u57fa\u7840\u6253\u5305\u5de5\u5177\uff08base-devel\uff09\u5df2\u7ecf\u5b89\u88c5 yay -S base-devel sudo pacman -S helix sudo pacman -S openssh sudo pacman -S iputils sudo pacman -S clang clangd clang-format git zsh curl weget ripgrep sudo pacman -S clang sudo pacman -S clangd sudo pacman -S zsh curl wget ripgrep helix --health sudo pacman -S ruff sh -c \"$(curl -fsSL https://install.ohmyz.sh)\"","title":"aur"},{"location":"win/wsl-debian/","text":"basic # sudo sed -i 's/deb.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list sudo apt update sudo apt dist-upgrade sudo apt install build-essential sudo apt install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu cmake sudo apt install clang clangd clang-format sudo apt install openssh* sudo apt install git sudo apt install zsh curl wget ripgrep vim sh -c \"$(curl -fsSL https://install.ohmyz.sh)\" ZSH_THEME=\"ys\" git clone --depth=1 https://github.com/amix/vimrc.git ~/.vim_runtime sh ~/.vim_runtime/install_awesome_vimrc.sh ### key ssh-keygen -t ed25519 -C \"junote\" ### docker sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg \\ lsb-release curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \\ \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/docker-ce/linux/debian \\ $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null sudo apt-get update && sudo apt-get install docker-ce docker-ce-cli containerd.io sudo apt install iptables sudo touch /etc/fstab sudo update-alternatives --set iptables /usr/sbin/iptables-legacy sudo update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy sudo usermod -aG docker $USER && newgrp docker sudo mkdir /etc/docker/ MIRROR= https://dockerproxy.cn cat <<EOF | sudo tee /etc/docker/daemon.json { \"exec-opts\": [\"native.cgroupdriver=cgroupfs\"], \"log-driver\": \"json-file\", \"log-opts\": { \"max-size\": \"100m\" }, \"storage-driver\": \"overlay2\", \"registry-mirrors\": [\"$MIRROR\"] } EOF sudo /etc/init.d/docker start docker run hello-world #### debian 11 docker pull debian:11 docker run -it debian:11 sed -i 's/deb.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list apt-get update && apt-get install -y locales && rm -rf /var/lib/apt/lists/* \\ && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 apt install build-essential apt install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu cmake docker commit id mydebian11 [debian\u955c\u50cf_debian\u4e0b\u8f7d\u5730\u5740_debian\u5b89\u88c5\u6559\u7a0b-\u963f\u91cc\u5df4\u5df4\u5f00\u6e90\u955c\u50cf\u7ad9 (aliyun.com)](https://developer.aliyun.com/mirror/debian?spm=a2c6h.13651102.0.0.3e221b11Cdy4G0) ### vscode clangd # cmake>3.5 add set(CMAKE_EXPORT_COMPILE_COMMANDS) clang-format #.clang-format copy from spdlog clang-tidy #.clang-tidy copy from spdlog cmake cmake tools gitlens fiteen code ```","title":"Wsl debian"},{"location":"win/wsl-debian/#basic","text":"sudo sed -i 's/deb.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list sudo apt update sudo apt dist-upgrade sudo apt install build-essential sudo apt install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu cmake sudo apt install clang clangd clang-format sudo apt install openssh* sudo apt install git sudo apt install zsh curl wget ripgrep vim sh -c \"$(curl -fsSL https://install.ohmyz.sh)\" ZSH_THEME=\"ys\" git clone --depth=1 https://github.com/amix/vimrc.git ~/.vim_runtime sh ~/.vim_runtime/install_awesome_vimrc.sh ### key ssh-keygen -t ed25519 -C \"junote\" ### docker sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg \\ lsb-release curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \\ \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/docker-ce/linux/debian \\ $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null sudo apt-get update && sudo apt-get install docker-ce docker-ce-cli containerd.io sudo apt install iptables sudo touch /etc/fstab sudo update-alternatives --set iptables /usr/sbin/iptables-legacy sudo update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy sudo usermod -aG docker $USER && newgrp docker sudo mkdir /etc/docker/ MIRROR= https://dockerproxy.cn cat <<EOF | sudo tee /etc/docker/daemon.json { \"exec-opts\": [\"native.cgroupdriver=cgroupfs\"], \"log-driver\": \"json-file\", \"log-opts\": { \"max-size\": \"100m\" }, \"storage-driver\": \"overlay2\", \"registry-mirrors\": [\"$MIRROR\"] } EOF sudo /etc/init.d/docker start docker run hello-world #### debian 11 docker pull debian:11 docker run -it debian:11 sed -i 's/deb.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list apt-get update && apt-get install -y locales && rm -rf /var/lib/apt/lists/* \\ && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 apt install build-essential apt install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu cmake docker commit id mydebian11 [debian\u955c\u50cf_debian\u4e0b\u8f7d\u5730\u5740_debian\u5b89\u88c5\u6559\u7a0b-\u963f\u91cc\u5df4\u5df4\u5f00\u6e90\u955c\u50cf\u7ad9 (aliyun.com)](https://developer.aliyun.com/mirror/debian?spm=a2c6h.13651102.0.0.3e221b11Cdy4G0) ### vscode clangd # cmake>3.5 add set(CMAKE_EXPORT_COMPILE_COMMANDS) clang-format #.clang-format copy from spdlog clang-tidy #.clang-tidy copy from spdlog cmake cmake tools gitlens fiteen code ```","title":"basic"},{"location":"win/wsl-debian11/","text":"I looked for Debian images [here](https://hub.docker.com/_/debian/tags?page=1&name=bullse), and decided on bullseye-slim: `docker pull debian:bullseye-slim` Once `docker run debian:bullseye-slim` gets this image running its container ID can be found from a different terminal via `docker container ls` or `docker ps` (or, if you are scripting this step, via the command provided in the [Microsoft docu](https://learn.microsoft.com/en-us/windows/wsl/use-custom-distro#export-the-tar-from-a-container)). `docker export CURRENT_ID > debian11.tar` created a .tar file from the still running image. Now calling `wsl --import Debian11 .\\WSLStorage\\Debian11\\ .\\debian11.tar` from the Windows Powershell successfully imported it to the pre-existing folder `.\\WSLStorage\\Debian11\\`. [The top answer](https://askubuntu.com/a/966537/582404) (`ubuntu config --default-user root`) is currently correct for the default instance. But if you have [multiple instances](https://stackoverflow.com/a/60428590/1144854), you need to work slightly harder: Inside the instance, as root, create/edit `/etc/wsl.conf` and add these lines: [user] default=username Then close it, run `wsl --terminate <distro name>` in PowerShell, and restart it. sudo dpkg --add-architecture sudo apt update sudo apt install libgpiod-dev:arm64 reference # linux - How to install Debian 11 on WSL Manually ? I am trying to download it from from Microsoft store but by default it's downloading Debian 12 version - Stack Overflow How to change default user in WSL Ubuntu bash on Windows 10 - Ask Ubuntu","title":"Wsl debian11"},{"location":"win/wsl-debian11/#reference","text":"linux - How to install Debian 11 on WSL Manually ? I am trying to download it from from Microsoft store but by default it's downloading Debian 12 version - Stack Overflow How to change default user in WSL Ubuntu bash on Windows 10 - Ask Ubuntu","title":"reference"},{"location":"win/wsl-ubuntu/","text":"basic # ubuntu\u955c\u50cf_ubuntu\u4e0b\u8f7d\u5730\u5740_ubuntu\u5b89\u88c5\u6559\u7a0b-\u963f\u91cc\u5df4\u5df4\u5f00\u6e90\u955c\u50cf\u7ad9 (aliyun.com) sudo vi /etc/apt/sources.list sudo apt update sudo apt install build-essential sudo apt install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu cmake sudo apt install clang clangd clang-format sudo apt install openssh* sudo apt install git sudo apt install zsh curl wget ripgrep vim sh -c \"$(curl -fsSL https://install.ohmyz.sh)\" ZSH_THEME=\"ys\" key # ssh-keygen -t ed25519 -C \"junote\" docker # sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg \\ lsb-release curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \\ \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/docker-ce/linux/debian \\ $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null sudo apt-get update && sudo apt-get install docker-ce docker-ce-cli containerd.io sudo apt install iptables sudo touch /etc/fstab sudo update-alternatives --set iptables /usr/sbin/iptables-legacy sudo update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy sudo usermod -aG docker $USER && newgrp docker sudo mkdir /etc/docker/ MIRROR=https://dockerproxy.cn cat <<EOF | sudo tee /etc/docker/daemon.json { \"exec-opts\": [\"native.cgroupdriver=cgroupfs\"], \"log-driver\": \"json-file\", \"log-opts\": { \"max-size\": \"100m\" }, \"storage-driver\": \"overlay2\", \"registry-mirrors\": [\"$MIRROR\"] } EOF sudo /etc/init.d/docker start docker run hello-world vscode # clangd # cmake>3.5 add set(CMAKE_EXPORT_COMPILE_COMMANDS) clang-format #.clang-format copy from spdlog clang-tidy #.clang-tidy copy from spdlog cmake cmake tools gitlens fiteen code","title":"Wsl ubuntu"},{"location":"win/wsl-ubuntu/#basic","text":"ubuntu\u955c\u50cf_ubuntu\u4e0b\u8f7d\u5730\u5740_ubuntu\u5b89\u88c5\u6559\u7a0b-\u963f\u91cc\u5df4\u5df4\u5f00\u6e90\u955c\u50cf\u7ad9 (aliyun.com) sudo vi /etc/apt/sources.list sudo apt update sudo apt install build-essential sudo apt install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu cmake sudo apt install clang clangd clang-format sudo apt install openssh* sudo apt install git sudo apt install zsh curl wget ripgrep vim sh -c \"$(curl -fsSL https://install.ohmyz.sh)\" ZSH_THEME=\"ys\"","title":"basic"},{"location":"win/wsl-ubuntu/#key","text":"ssh-keygen -t ed25519 -C \"junote\"","title":"key"},{"location":"win/wsl-ubuntu/#docker","text":"sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg \\ lsb-release curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \\ \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/docker-ce/linux/debian \\ $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null sudo apt-get update && sudo apt-get install docker-ce docker-ce-cli containerd.io sudo apt install iptables sudo touch /etc/fstab sudo update-alternatives --set iptables /usr/sbin/iptables-legacy sudo update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy sudo usermod -aG docker $USER && newgrp docker sudo mkdir /etc/docker/ MIRROR=https://dockerproxy.cn cat <<EOF | sudo tee /etc/docker/daemon.json { \"exec-opts\": [\"native.cgroupdriver=cgroupfs\"], \"log-driver\": \"json-file\", \"log-opts\": { \"max-size\": \"100m\" }, \"storage-driver\": \"overlay2\", \"registry-mirrors\": [\"$MIRROR\"] } EOF sudo /etc/init.d/docker start docker run hello-world","title":"docker"},{"location":"win/wsl-ubuntu/#vscode","text":"clangd # cmake>3.5 add set(CMAKE_EXPORT_COMPILE_COMMANDS) clang-format #.clang-format copy from spdlog clang-tidy #.clang-tidy copy from spdlog cmake cmake tools gitlens fiteen code","title":"vscode"},{"location":"win/wsl/","text":"wsl --update wsl --install archlinux wsl --list wsl --terminate arch [experimental] autoMemoryReclaim=gradual networkingMode=mirrored dnsTunneling=true firewall=true autoProxy=true [wsl2] kernelCommandLine = cgroup_no_v1=all systemd.unified_cgroup_hierarchy=1 guiApplications = true","title":"Wsl"}]}